{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/yilia/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/coderwall.png","path":"img/coderwall.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/delicious.png","path":"img/delicious.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/douban.png","path":"img/douban.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/facebook.png","path":"img/facebook.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/github.png","path":"img/github.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/google.png","path":"img/google.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/img-err.png","path":"img/img-err.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/img-loading.png","path":"img/img-loading.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/linkedin.png","path":"img/linkedin.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/mail.png","path":"img/mail.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/pinboard.png","path":"img/pinboard.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/pinterest.png","path":"img/pinterest.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/rss.png","path":"img/rss.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/stackoverflow.png","path":"img/stackoverflow.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/twitter.png","path":"img/twitter.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/weibo.png","path":"img/weibo.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/zhihu.png","path":"img/zhihu.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/js/instagram.js","path":"js/instagram.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/js/jquery.lazyload.js","path":"js/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/js/mobile.js","path":"js/mobile.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/js/pc.js","path":"js/pc.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svgz","path":"css/fonts/fontawesome-webfont.svgz","modified":0,"renderable":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/js/insight.js","path":"js/insight.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/css/images/avatar.png","path":"css/images/avatar.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/css/images/logo.png","path":"css/images/logo.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/css/images/thumb-default-small.png","path":"css/images/thumb-default-small.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/blank.gif","path":"vendor/fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/fancybox_loading.gif","path":"vendor/fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/fancybox_loading@2x.gif","path":"vendor/fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/fancybox_overlay.png","path":"vendor/fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/fancybox_sprite.png","path":"vendor/fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/fancybox_sprite@2x.png","path":"vendor/fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/jquery.fancybox.css","path":"vendor/fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/jquery.fancybox.pack.js","path":"vendor/fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/jquery.fancybox.js","path":"vendor/fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/styles.css","path":"vendor/open-sans/styles.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/source-code-pro/styles.css","path":"vendor/source-code-pro/styles.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/helpers/fancybox_buttons.png","path":"vendor/fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/helpers/jquery.fancybox-buttons.js","path":"vendor/fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/helpers/jquery.fancybox-buttons.css","path":"vendor/fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/helpers/jquery.fancybox-media.js","path":"vendor/fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/helpers/jquery.fancybox-thumbs.css","path":"vendor/fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/helpers/jquery.fancybox-thumbs.js","path":"vendor/fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/font-awesome/css/font-awesome.min.css","path":"vendor/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/font-awesome/fonts/fontawesome-webfont.eot","path":"vendor/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendor/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","path":"vendor/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","path":"vendor/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","path":"vendor/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","path":"vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","path":"vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","path":"vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","path":"vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","path":"vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","path":"vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","path":"vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","path":"vendor/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","path":"vendor/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","path":"vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","path":"vendor/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","path":"vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","path":"vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","path":"vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","path":"vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","path":"vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","path":"vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","path":"vendor/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","path":"vendor/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","path":"vendor/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/font-awesome/fonts/FontAwesome.otf","path":"vendor/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendor/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/font-awesome/fonts/fontawesome-webfont.woff","path":"vendor/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/jquery/2.1.3/jquery.min.js","path":"vendor/jquery/2.1.3/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-master/source/vendor/font-awesome/fonts/fontawesome-webfont.svg","path":"vendor/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/yilia/.gitignore","hash":"0d5c2fdbdc974f10150baa12e1fc171a34960ed8","modified":1465211585359},{"_id":"themes/yilia/README.md","hash":"8648a81b3ae08a4accd6b0541533e662511e6400","modified":1465211585360},{"_id":"themes/yilia/_config.yml","hash":"25686e5e2fe48b89b1f8721c785097dd5c06e59c","modified":1469983455420},{"_id":"themes/yilia/package.json","hash":"0199dfb3d44cf520b67464817d13c44a7766b8d6","modified":1465211585401},{"_id":"source/_posts/3d_rotation.md","hash":"8ffb0506aa822b177268b377cb6695b762ec3881","modified":1470342017024},{"_id":"source/_posts/MergeGthubConflicts.md","hash":"7119828f50e043b188540fe2e8a44fb09cfa2f91","modified":1465758932589},{"_id":"source/_posts/Windows-10-Redesign-File-Explorer-589967814.md","hash":"ecb58dc23905f88658db4a7666e2b2826636a558","modified":1466311615982},{"_id":"source/_posts/VBdotNET_howto.md","hash":"178c809a72a2c7015e490ff9d629fb429cf564bf","modified":1465482781334},{"_id":"source/_posts/Zplay-Music.md","hash":"ad9a8f42cd3ad1c89a03846226b3e2ede4af3816","modified":1466513580419},{"_id":"source/_posts/action_interceptor_pattern.md","hash":"3d3c6cd137194489c1af9a795de0f594b04167bd","modified":1470230453525},{"_id":"source/_posts/circos.md","hash":"ac71c1ce5ae4a1e66e1a142d6e5c7951bf6dae5d","modified":1466248573869},{"_id":"source/_posts/markdown_syntax.md","hash":"50b9753e0ea52739a34ce09a23b023b2fca6d962","modified":1470230647827},{"_id":"source/_posts/net_canvas.md","hash":"5e4dbdaf62ee0bec8dd91f9a6b6009b8b446bb2b","modified":1470230626659},{"_id":"source/_posts/nodejs.md","hash":"dd80c4862da5487b8fbb6ea12f2c76cc3c7fbb02","modified":1470230595308},{"_id":"source/_posts/simple_svg.md","hash":"442684f00d88f095ae39897a75178c0ccedd5d16","modified":1465621200313},{"_id":"source/_posts/tricks_of_IsNullOrEmpty.md","hash":"60a9ae566d664fef7b8dd12ff6c9c0f0deda1d2e","modified":1466397303511},{"_id":"source/_posts/vb_codestyle.md","hash":"8b7986daa9e27b7e01bcc584da90a1b14449a346","modified":1470230532236},{"_id":"source/_posts/yaml.md","hash":"310e498f18cb279fd88fa36d3355fe5ff9c579e8","modified":1470336832184},{"_id":"source/about/index.md","hash":"7a453cb145960de1015adda3444bdfc546d704e5","modified":1470213202847},{"_id":"source/nuget/index.md","hash":"a632f9b9f2d4a2897ef137012cdc4dbf3539ac17","modified":1465550701607},{"_id":"themes/yilia/languages/de.yml","hash":"bc80f78f61c3d7af9652e6aa6fc3e4ff39b0c8d3","modified":1465211585364},{"_id":"themes/yilia/languages/default.yml","hash":"f0a7a032b31555c9ec05a711e1ac19bb07724708","modified":1465211585365},{"_id":"themes/yilia/languages/en.yml","hash":"a093e794aef63ec9e9e9ef490cf7e4474e45e59f","modified":1465211585366},{"_id":"themes/yilia/languages/fr-FR.yml","hash":"04b9a0d80d88d01e039e8077afe88f741e9620ba","modified":1465211585367},{"_id":"themes/yilia/languages/ru.yml","hash":"62f84ea82a696060c481fc22d4742e6201bb9bdc","modified":1465211585368},{"_id":"themes/yilia/languages/zh-Hans.yml","hash":"d2336578e14bb880d152266981c2b17523fc8742","modified":1465211585368},{"_id":"themes/yilia/languages/zh-hk.yml","hash":"e702fc43556e54c396917bdf7c869d528742e28b","modified":1465211585370},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"005559baa96b7bb34e1efe6b031829a95d58d5e0","modified":1465211585371},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1465211585393},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1465211585394},{"_id":"themes/yilia/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1465211585395},{"_id":"themes/yilia/layout/layout.ejs","hash":"3a4350f23a1286345f76c949466c97a7200dae8e","modified":1465211585396},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1465211585397},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1465211585399},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1465211585400},{"_id":"source/_posts/images/TwoLinq'.png","hash":"95ae67e0264477d1535bbbfb3a984d98cb6f1c89","modified":1466384952558},{"_id":"source/nuget/NCBI_localblast/NCBI_localblast.1.0.0.md","hash":"6b53a9ea74d51269ec4291894c682fff10873be1","modified":1465550710489},{"_id":"source/nuget/NCBI_localblast/NCBI_localblast.1.0.1.md","hash":"5d0dedbfe84dec875469f327e01ea3c42b75390f","modified":1465550711848},{"_id":"source/nuget/NCBI_localblast/NCBI_localblast.1.0.11.md","hash":"d2ab2d922f4a94b7526043d7da113461f02f0e27","modified":1465550712460},{"_id":"source/nuget/NCBI_localblast/NCBI_localblast.1.0.12.md","hash":"ce2937edcda4592975f3b33d90a10e33de5f8150","modified":1465550713474},{"_id":"source/nuget/VB.DBI/VisualBasic.DBI.1.0.0.md","hash":"4c56f1400a16efc101900764ca19250bcea620b1","modified":1465550718506},{"_id":"source/nuget/GCModeller.Core/GCModeller.Core.1.0.0.md","hash":"0a4500bb5cd728d6390c2972613c6427eb1a2c89","modified":1465550702405},{"_id":"source/nuget/GCModeller.Core/GCModeller.Core.1.0.1.md","hash":"9c1d2f20b32548d0e7fec82031ce36e6c8aefb9d","modified":1465550703389},{"_id":"source/nuget/GCModeller.Core/GCModeller.Core.1.0.11.md","hash":"36cc93a5d1df36cb04f4310a95b59c333cbc43b5","modified":1465550704434},{"_id":"source/nuget/GCModeller.Core/GCModeller.Core.1.0.12.md","hash":"d4cd5615d36064a9d78cec4ee6735deec8fb0a9b","modified":1465550705371},{"_id":"source/nuget/VB.WinForm/VisualBasic.WinForm.1.0.0.md","hash":"72a4aae138e9922b7b4ad46ba89aa4dfced4af6e","modified":1465550719446},{"_id":"source/nuget/VB.WinForm/VisualBasic.WinForm.1.0.1.md","hash":"7ed26a45b02a558e629b32ab60f622b96a217004","modified":1465550720601},{"_id":"source/nuget/VB.WinForm/VisualBasic.WinForm.1.0.13.md","hash":"58927e43383aa301b12974bfc3d47883d64daabb","modified":1465550721347},{"_id":"source/nuget/Notify-OSD/Notify-OSD.1.0.0.md","hash":"8d79145dbcf6d8d254ff3b0aa5a45602e4f9db86","modified":1465550714444},{"_id":"source/nuget/Notify-OSD/Notify-OSD.1.0.1.md","hash":"16b00120c6ed8a4f41ed1183895366868302d40a","modified":1465550715397},{"_id":"source/nuget/Notify-OSD/Notify-OSD.1.0.11.md","hash":"6c6dbe82e0b67f30369370bcd2cabc5dd1379494","modified":1465550716411},{"_id":"source/nuget/Notify-OSD/Notify-OSD.1.0.12.md","hash":"f5af2d7502ea07b75ed15ac0a9d5e3fb12e6bbc9","modified":1465550717501},{"_id":"source/nuget/VB_AppFramework/VB_AppFramework.1.0.0.md","hash":"e820f64c1226dfd19725e3db5d6690f2c0bfca18","modified":1465550722338},{"_id":"source/nuget/VB_AppFramework/VB_AppFramework.1.0.1.md","hash":"36529c101d548472f9324f739a04eafadec62be6","modified":1465550723358},{"_id":"source/nuget/VB_AppFramework/VB_AppFramework.1.0.2.md","hash":"9f3fe5cb93f45088c12258e9aa0a14cb6594cf29","modified":1465550724331},{"_id":"source/nuget/VB_AppFramework/VB_AppFramework.1.0.25.md","hash":"63ef426fb9a76a6ff351791088187273b7a335e8","modified":1465550725434},{"_id":"source/nuget/VB_AppFramework/VB_AppFramework.1.0.26.md","hash":"b9de9fd5283b38d986ffb158e188612f1b2f9fbd","modified":1465550726415},{"_id":"source/nuget/VB_AppFramework/VB_AppFramework.1.0.28.md","hash":"be11c3b4a0b92b98d1e78467fed2fc6a49d2dfb4","modified":1465550727419},{"_id":"source/nuget/VB_AppFramework/VB_AppFramework.1.0.3.md","hash":"6b3db854649500ad0cb7b1addfaab14df5193d0f","modified":1465550728399},{"_id":"source/nuget/VB_AppFramework/VB_AppFramework.1.0.30.md","hash":"c834a5c40d2af18f1c761295338cc065519d50f2","modified":1465550729347},{"_id":"source/nuget/VB_AppFramework/VB_AppFramework.1.0.35.md","hash":"fd41b5590f80ce210ddf127907e7f5709522437d","modified":1465550730370},{"_id":"source/nuget/VB_AppFramework/VB_AppFramework.1.0.40.md","hash":"19cf91ce23a663c77f4e6b5d3c928f1394aa30ea","modified":1465550731449},{"_id":"source/nuget/VB_AppFramework_40/VB_AppFramework_40.1.0.0.md","hash":"cf0cd27840449c21acfcfc0ce39e5e40a312bc4e","modified":1465550732631},{"_id":"source/nuget/VB_AppFramework_40/VB_AppFramework_40.1.0.1.md","hash":"7c0c3b88cab5252989448d0ec61d9a232fb79cac","modified":1465550733475},{"_id":"source/nuget/VB_AppFramework_40/VB_AppFramework_40.1.0.2.md","hash":"7eca4ee126708559b8e9ec68393aa1bdff05191d","modified":1465550734920},{"_id":"source/nuget/VB_AppFramework_40/VB_AppFramework_40.1.0.29.md","hash":"f2e49ae065ccc8ede9697ff8eaa6aaff83b9b1c6","modified":1465550735809},{"_id":"source/nuget/VB_AppFramework_40/VB_AppFramework_40.1.0.35.md","hash":"29f11daf5ddc7f52efd91f7df3c52fd53816af0c","modified":1465550736529},{"_id":"source/nuget/httpd/VB.httpd.1.0.0.md","hash":"feb001a951cbdff89bb595062813e1a084a3eb70","modified":1465550706589},{"_id":"source/nuget/httpd/VB.httpd.1.0.1.md","hash":"a4a61b5fc1e4d5788d4ae71d7df28cb91666099d","modified":1465550707466},{"_id":"source/nuget/httpd/VB.httpd.1.0.12.md","hash":"edac2e372bcec2dcfc1f37a71b9ad730d9f926ea","modified":1465550708991},{"_id":"source/nuget/httpd/VB.httpd.1.0.13.md","hash":"4513400dcc2a2135073a4bbf3f63139e3fc5c652","modified":1465550709579},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"3709af4e8f7e1196dbd1f9dea62fa440d4b47836","modified":1465211585373},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"5b29a383418cfdcf8d5c5719b4fc4608aaba6fe7","modified":1465211585374},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a4eacc2bc1278095a0ef99f904b0634c78f980eb","modified":1465211585375},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"420b94c78832456686ebd9831a5bfcb05365645a","modified":1465211585376},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"871f81cacd5d41cb2eb001cd56254217a857dc2f","modified":1465211585377},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1465211585378},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"2bbf5aad03f54055d9d7852e70ff7e6952a41f26","modified":1465211585379},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"b69855e07b65117769adc515cb64b803932068c9","modified":1465211585380},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"b03e8424b4798d4887801afdfae457fbf6027838","modified":1465211585381},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"7be03a92dabeb2f94bf0e731d12a1c1146d736dd","modified":1465211585382},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"6a7a2a4960dabf9d7cd523573da7869eebf4b02d","modified":1465211585383},{"_id":"themes/yilia/source/css/_extend.styl","hash":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1465211585404},{"_id":"themes/yilia/source/css/_variables.styl","hash":"8b63ea3c7199524b9a1541075c6f8fb2c0d0ea3d","modified":1465211585423},{"_id":"themes/yilia/source/css/style.styl","hash":"456e8cfe3b0b0371e81848ea9b0bc7ffd5360921","modified":1465211585434},{"_id":"themes/yilia/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1465211585436},{"_id":"themes/yilia/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1465211585437},{"_id":"themes/yilia/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1465211585439},{"_id":"themes/yilia/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1465211585439},{"_id":"themes/yilia/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1465211585441},{"_id":"themes/yilia/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1465211585442},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.css","hash":"96138eaddfbd305160ddcb98a5f08555ca6cb4ee","modified":1465211585450},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.js","hash":"004bb0812414554ab48067792f09e978603253b6","modified":1465211585452},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.pack.js","hash":"2da892a02778236b64076e5e8802ef0566e1d9e8","modified":1465211585454},{"_id":"themes/yilia/source/img/coderwall.png","hash":"fa84676c4d654e040e51fd34bfcd9f9348cd5331","modified":1465211585455},{"_id":"themes/yilia/source/img/delicious.png","hash":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd","modified":1465211585456},{"_id":"themes/yilia/source/img/douban.png","hash":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e","modified":1465211585458},{"_id":"themes/yilia/source/img/facebook.png","hash":"d19ad7a0903daf26817afd8753cd97e0cc714f54","modified":1465211585459},{"_id":"themes/yilia/source/img/github.png","hash":"b84d03b32fa388dcbf149296ebd16dce6223d48d","modified":1465211585460},{"_id":"themes/yilia/source/img/google.png","hash":"61a21fec7346fa3400b747ac9a201cf3d5bc013d","modified":1465211585461},{"_id":"themes/yilia/source/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1465211585462},{"_id":"themes/yilia/source/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1465211585463},{"_id":"themes/yilia/source/img/linkedin.png","hash":"e203138fb53c257cb214e97f4e30091b9c568d2c","modified":1465211585464},{"_id":"themes/yilia/source/img/mail.png","hash":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7","modified":1465211585465},{"_id":"themes/yilia/source/img/pinboard.png","hash":"0891fbb6d092fa012bf936019923383d84c6aeb0","modified":1465211585465},{"_id":"themes/yilia/source/img/pinterest.png","hash":"9c72917f8779c083157c6ce7a5d62ed4874f0630","modified":1465211585466},{"_id":"themes/yilia/source/img/rss.png","hash":"430fd47340e75214c081abd05cd7410cf7c71b86","modified":1465211585467},{"_id":"themes/yilia/source/img/stackoverflow.png","hash":"da5dfe9043055c95e479d49c78cd3b020de608f2","modified":1465211585469},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1465211585468},{"_id":"themes/yilia/source/img/twitter.png","hash":"14dbb8e62d056525253bc0de13acd1723da7a934","modified":1465211585470},{"_id":"themes/yilia/source/img/weibo.png","hash":"280dae3fd38086158b4a1b57edb94c06b1a5014b","modified":1465211585471},{"_id":"themes/yilia/source/img/zhihu.png","hash":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d","modified":1465211585472},{"_id":"themes/yilia/source/js/instagram.js","hash":"81e13cacf4947118ed1920e59b04ccf6beef6b86","modified":1465211585473},{"_id":"themes/yilia/source/js/jquery.lazyload.js","hash":"9c34c37b4dca82386648d364da913153d1db902e","modified":1465211585474},{"_id":"themes/yilia/source/js/main.js","hash":"e2633f282e377a4169649c9f17dc96036ad4fc64","modified":1465211585475},{"_id":"themes/yilia/source/js/mobile.js","hash":"387c047e661f04fbb5f5bfc4b2db617023e836ce","modified":1465211585476},{"_id":"themes/yilia/source/js/pc.js","hash":"a5397d34a04084ee089b4b1e26457ab46ecea63e","modified":1465211585477},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"06d8914b5aef73b5ec2cabb0105e275ff821b321","modified":1465211585386},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"27fab3e6ccc41c075dc4c5ba3ca9e7f3b6247945","modified":1465211585385},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"f6b4c4eaafb5ac386273354b5f64a26139b7a3b0","modified":1465211585387},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"c115c282eebfb6b18612d2d8733272c270b03066","modified":1465211585388},{"_id":"themes/yilia/layout/_partial/post/share_addthis.ejs","hash":"4ab6cab2a975a4df8419448b33dec4724279d85c","modified":1465211585389},{"_id":"themes/yilia/layout/_partial/post/share_jia.ejs","hash":"d50294bf9858e7942208c380e851a37ed37f1d6f","modified":1465211585390},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"acf1b9d79ccec172881f9f0080e96667f4178885","modified":1465211585391},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1465211585393},{"_id":"themes/yilia/source/css/_partial/archive.styl","hash":"8b349f1605024dcdae054e04f02d71a2e84957c2","modified":1465211585406},{"_id":"themes/yilia/source/css/_partial/header.styl","hash":"67e59feb18eee6026717cb440d86ab9551782628","modified":1465211585408},{"_id":"themes/yilia/source/css/_partial/article.styl","hash":"872fc4e63509fef885c939e5fd70e6ed439beced","modified":1465211585407},{"_id":"themes/yilia/source/css/_partial/footer.styl","hash":"7ca837a4cc34db1c35f01baec85eb10ccc64ea86","modified":1465211585407},{"_id":"themes/yilia/source/css/_partial/highlight.styl","hash":"e3774f8c78e08dfe5877ce939f68fed1b1d89950","modified":1465216296521},{"_id":"themes/yilia/source/css/_partial/instagram.styl","hash":"8a7b07bf5ea2d3588c0019f722c245bb1a8696af","modified":1465211585410},{"_id":"themes/yilia/source/css/_partial/main.styl","hash":"c368f1533053d4cffdf0ad982603271400b08e33","modified":1465211585412},{"_id":"themes/yilia/source/css/_partial/mobile-slider.styl","hash":"e19c7fae6968ad3ea6cfc110900a991f9b5fce31","modified":1465211585413},{"_id":"themes/yilia/source/css/_partial/mobile.styl","hash":"3a03b04ef8ac305aa5dbf7b9db99cd9377d07383","modified":1465211585414},{"_id":"themes/yilia/source/css/_partial/page.styl","hash":"720b5b169bc28ccba3794efce9b7cd39f243dec7","modified":1465211585415},{"_id":"themes/yilia/source/css/_partial/share.styl","hash":"22697b9a9877ab9f018364feb57aeea4a8313c9a","modified":1465211585417},{"_id":"themes/yilia/source/css/_partial/scroll.styl","hash":"5539a38f9acd603d453a0ea0d8ce10893cf83d22","modified":1465211585416},{"_id":"themes/yilia/source/css/_partial/tagcloud.styl","hash":"af0115de5c6455f899a2e09225b50224982c039d","modified":1465211585418},{"_id":"themes/yilia/source/css/_partial/wheelmenu.styl","hash":"9e57421eab562ea13d0ed2b2e1415eee79fa23d0","modified":1465211585420},{"_id":"themes/yilia/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1465211585421},{"_id":"themes/yilia/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1465211585422},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.eot","hash":"3ce87b82c7a4ffdf65e96765c2ffda10b1a283c6","modified":1465211585426},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svgz","hash":"4bfdd33ed702e32ae01399fcc2652377f78e7626","modified":1465211585430},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.ttf","hash":"1480b8101b02da9bc4c60341b5e185e63e585064","modified":1465211585432},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.woff","hash":"cafc4ac5761a0a252d33dce4ea3952cf9a38d832","modified":1465211585433},{"_id":"themes/yilia/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1465211585443},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1465211585444},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"4c9c395d705d22af7da06870d18f434e2a2eeaf9","modified":1465211585445},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-media.js","hash":"e14c32cc6823b81b2f758512f13ed8eb9ef2b454","modified":1465211585446},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1465211585447},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"83cdfea43632b613771691a11f56f99d85fb6dbd","modified":1465211585448},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svg","hash":"ba13657479b46daecb6336bfe376f84cef3ae58b","modified":1465211585429},{"_id":"public/nuget/index.html","hash":"efd7f99f43eedb425dbbfd5eee9c9df3edbc486c","modified":1470343258347},{"_id":"public/nuget/NCBI_localblast/NCBI_localblast.1.0.0.html","hash":"e430f264dadb839ccdd96baa1ba2a694b58976d5","modified":1470343258347},{"_id":"public/nuget/VB.DBI/VisualBasic.DBI.1.0.0.html","hash":"291ea213f0905f07d7aab6017da8f675a2531660","modified":1470343258348},{"_id":"public/nuget/GCModeller.Core/GCModeller.Core.1.0.0.html","hash":"cc593393fe61c3371fd342da1a7c3610482e5d10","modified":1470343258348},{"_id":"public/nuget/VB.WinForm/VisualBasic.WinForm.1.0.0.html","hash":"034c6031d0fa6972912954bf6a794b503e243cd1","modified":1470343258349},{"_id":"public/nuget/VB.WinForm/VisualBasic.WinForm.1.0.1.html","hash":"e2c17a879f99535e8aa44db8ea03c4eed6ef3820","modified":1470343258349},{"_id":"public/nuget/VB.WinForm/VisualBasic.WinForm.1.0.13.html","hash":"59e27a01c9e6027f2ed1f41efdc1c7c3d40a4467","modified":1470343258349},{"_id":"public/nuget/Notify-OSD/Notify-OSD.1.0.0.html","hash":"ae148ea3516b70f7e8f6196f118d1893cf084a11","modified":1470343258349},{"_id":"public/nuget/Notify-OSD/Notify-OSD.1.0.1.html","hash":"08690d89087abdd3509305e6c8770db145976293","modified":1470343258350},{"_id":"public/nuget/Notify-OSD/Notify-OSD.1.0.11.html","hash":"2d922cea44256c139829227cace47dcba4d0e5ad","modified":1470343258354},{"_id":"public/nuget/Notify-OSD/Notify-OSD.1.0.12.html","hash":"9e3a5f3d0db6a686a512e274dad03954679ef511","modified":1470343258355},{"_id":"public/nuget/VB_AppFramework/VB_AppFramework.1.0.0.html","hash":"7e6be58ff63a130ee4b0e5686758a93f4af56445","modified":1470343258355},{"_id":"public/nuget/VB_AppFramework/VB_AppFramework.1.0.1.html","hash":"9a832b212cb3e33955525e3e0ac072bafc6165b1","modified":1470343258356},{"_id":"public/nuget/VB_AppFramework_40/VB_AppFramework_40.1.0.0.html","hash":"ab310c6f3cc163ccd19d9ca09041e1e441cbf602","modified":1470343258363},{"_id":"public/nuget/VB_AppFramework_40/VB_AppFramework_40.1.0.1.html","hash":"7aceb80038656980e59178b2f569d958e416904b","modified":1470343258362},{"_id":"public/nuget/VB_AppFramework_40/VB_AppFramework_40.1.0.2.html","hash":"3a22467e7073429fb4777e4e8b817ec36cb97091","modified":1470343258363},{"_id":"public/nuget/VB_AppFramework_40/VB_AppFramework_40.1.0.29.html","hash":"60ba8748d64697ea12ba48e0ca7b0c1a962eb7bf","modified":1470343258363},{"_id":"public/nuget/VB_AppFramework_40/VB_AppFramework_40.1.0.35.html","hash":"2e4af0764b95607b13aff5f9dcdb7b6ba179372b","modified":1470343258363},{"_id":"public/nuget/httpd/VB.httpd.1.0.0.html","hash":"5c7a8b9bcb3c8ca4ef5907acf75eaaf71a285ce7","modified":1470343258363},{"_id":"public/nuget/httpd/VB.httpd.1.0.1.html","hash":"6df19f380b685aa375fb0c4c4fb702ec7b703f36","modified":1470343258363},{"_id":"public/nuget/httpd/VB.httpd.1.0.12.html","hash":"f8a59a5e230529f1d5844d9dd60405ca30d47658","modified":1470343258363},{"_id":"public/nuget/httpd/VB.httpd.1.0.13.html","hash":"2f5a94d38137e7a6f443a5643091e05362edcbd7","modified":1470343258364},{"_id":"public/2016/06/19/Zplay-Music/index.html","hash":"68f7ab7f80db1bebdf5fadda26b172a61795a720","modified":1470343258367},{"_id":"public/2016/06/19/Windows-10-Redesign-File-Explorer-589967814/index.html","hash":"554fb63d2742d9a1685a706a2f58c3ce8f04b863","modified":1470343258367},{"_id":"public/archives/page/2/index.html","hash":"968c0c23e7d06ce22895ff89e3d8e077d2a6f608","modified":1470343258371},{"_id":"public/archives/2016/page/2/index.html","hash":"5527507b8ad2e2d1d6d27ad8e522875e53b0178d","modified":1470343258373},{"_id":"public/archives/2016/06/page/2/index.html","hash":"0776e7dd74bba41fecd498be248ca4c2cc8043aa","modified":1470343258376},{"_id":"public/tags/repost/index.html","hash":"7c9cb73b955c2ba5cf325aba87340999287708cb","modified":1470343258377},{"_id":"public/tags/3d-graphics/index.html","hash":"a41aea5be5965721182941ac8ea95e61efe2777b","modified":1470343258334},{"_id":"public/tags/note/index.html","hash":"946ed656d4b4c7ddffd9067a6c042c17d57f078e","modified":1470343258377},{"_id":"public/tags/Desktop/index.html","hash":"e3503c535fb225c96ac3f210d218fdd9b80d4e0e","modified":1470343258334},{"_id":"public/tags/前端设计/index.html","hash":"bc51d9f47c2278d89f2fa5c5aa1d1913e08c42f3","modified":1470343258377},{"_id":"public/tags/github/index.html","hash":"52f3f6098e253a9ba35f5a0edd1ed7827e6e8faf","modified":1470343258335},{"_id":"public/tags/转载搬运/index.html","hash":"1da064a31a5f58ee29abb4caf4876c79c97a726b","modified":1470343258377},{"_id":"public/tags/libzplay/index.html","hash":"44f5bb9abfd4868058db42f4b71ea268c8ecbd6f","modified":1470343258335},{"_id":"public/tags/多媒体/index.html","hash":"e1e4386168ab0eb0ac662b1cd857f5ccd2799212","modified":1466440901269},{"_id":"public/tags/works/index.html","hash":"42f62994f68180a84dd5d0781d479e0ad1bc76e7","modified":1470343258335},{"_id":"public/tags/CodeProject/index.html","hash":"3fcfd1f8d4135189a021d7b32dc3a5ceea429db7","modified":1470343258378},{"_id":"public/tags/architecture/index.html","hash":"c435d3486792215205cd7a19b227fb127449760f","modified":1470343258335},{"_id":"public/tags/circos/index.html","hash":"fed1a7f4badfaec35ae5c0184e1d78bbd326c844","modified":1470343258335},{"_id":"public/tags/data-visualization/index.html","hash":"f71572659a59925933428d2060397379e8fb782d","modified":1470343258335},{"_id":"public/tags/GCModeller/index.html","hash":"561efd94cf8da23d65a6f2c47cbfb84b51e0de5f","modified":1470343258336},{"_id":"public/tags/perl/index.html","hash":"ed93f9f142d4fd202f451a2e03b5385612e4d3a9","modified":1470343258337},{"_id":"public/tags/Markdown/index.html","hash":"8b56f9aaf0ef5c492c0b8362824b1eaf7568007f","modified":1470343258338},{"_id":"public/tags/Syntax/index.html","hash":"096153dc8910b0308d8b7259fe8afa69b5f9f14e","modified":1470343258338},{"_id":"public/tags/d3js/index.html","hash":"36a1768d84a6940c4643f363903605b838573e1b","modified":1470343258339},{"_id":"public/tags/my-works/index.html","hash":"664272770680c2ba78d80e6a2af77e7c579f8598","modified":1470343258339},{"_id":"public/tags/前端/index.html","hash":"6b50adf58a5c9161c1be833f2c6f1b293504316e","modified":1470343258340},{"_id":"public/tags/nodejs/index.html","hash":"642fde0e0a39c98e9c184fa80b57a84116023bde","modified":1470343258340},{"_id":"public/tags/svg/index.html","hash":"8fbc108baaa7cec6f67209250cd76a0a7f1a69e7","modified":1470343258340},{"_id":"public/tags/document/index.html","hash":"08271c92513d3a81b8e10b1431a79c8675a190c2","modified":1470343258340},{"_id":"public/tags/tricks/index.html","hash":"e263ea309eaeb7b95a1c464378ccd1f605ac7a2e","modified":1470343258341},{"_id":"public/tags/Linq/index.html","hash":"8f20b3fde877f2b09b209caffb414294e1fb8378","modified":1470343258341},{"_id":"public/tags/SDK-document/index.html","hash":"654a814812a0370c82a3e43e35d64a785c1ffb88","modified":1470343258341},{"_id":"public/tags/YAML/index.html","hash":"e9bdec5d04b16524c98e3d72970bb375018a5db9","modified":1470343258341},{"_id":"public/about/index.html","hash":"7f79de3591976c5344f6f2e2ee421ccba064abec","modified":1470343258347},{"_id":"public/nuget/NCBI_localblast/NCBI_localblast.1.0.11.html","hash":"da6f5fe23c64c353378484d2e843afd1ac6d9014","modified":1470343258347},{"_id":"public/nuget/NCBI_localblast/NCBI_localblast.1.0.1.html","hash":"49f739fea9731eef20a354bdde18a09a678234f2","modified":1470343258347},{"_id":"public/nuget/NCBI_localblast/NCBI_localblast.1.0.12.html","hash":"7b6e090ddc184cd82600eef9612baf21097ed61d","modified":1470343258347},{"_id":"public/nuget/GCModeller.Core/GCModeller.Core.1.0.1.html","hash":"bf99f0be07ba3c8f93201108ec3f75b965a2bc8f","modified":1470343258348},{"_id":"public/nuget/GCModeller.Core/GCModeller.Core.1.0.12.html","hash":"f8e60f048e68d2b253e1fc4407fad1cf56f2a1e2","modified":1470343258348},{"_id":"public/nuget/GCModeller.Core/GCModeller.Core.1.0.11.html","hash":"04e3c928019a03f1692402d8f4866f7f559e345f","modified":1470343258349},{"_id":"public/nuget/VB_AppFramework/VB_AppFramework.1.0.2.html","hash":"64bc53a42a436e7ce6a1fa82be1634f536d955d7","modified":1470343258357},{"_id":"public/nuget/VB_AppFramework/VB_AppFramework.1.0.25.html","hash":"5b09a03a5b6c6655d6eccad2f1c0ffb800be7fce","modified":1470343258357},{"_id":"public/nuget/VB_AppFramework/VB_AppFramework.1.0.3.html","hash":"003e89162eca7cec1c06048f8b8f56863dc173c4","modified":1470343258357},{"_id":"public/nuget/VB_AppFramework/VB_AppFramework.1.0.28.html","hash":"2ac7c231f4541cecbacfe7eaef8b9a3eb8383194","modified":1470343258359},{"_id":"public/nuget/VB_AppFramework/VB_AppFramework.1.0.26.html","hash":"edb3d6b2e463d26f2338b57aaf39180bd22391e1","modified":1470343258359},{"_id":"public/nuget/VB_AppFramework/VB_AppFramework.1.0.30.html","hash":"383eed9110b8017298f36b3a78b1c8aae9c64782","modified":1470343258359},{"_id":"public/nuget/VB_AppFramework/VB_AppFramework.1.0.35.html","hash":"fa897459704ccc1b0b696a5d3333335cbf7d2a3e","modified":1470343258362},{"_id":"public/nuget/VB_AppFramework/VB_AppFramework.1.0.40.html","hash":"76a55d773c30c74fd654d6588fe3e68f68d994ea","modified":1470343258362},{"_id":"public/2016/06/20/tricks_of_IsNullOrEmpty/index.html","hash":"41773d40b7dd8dc9c8bebb07c59dd69bf5af3ed2","modified":1470343258367},{"_id":"public/2016/06/15/circos/index.html","hash":"1ec1d0f883e150828a64c025160a3608a8185e7c","modified":1470343258367},{"_id":"public/2016/06/11/simple_svg/index.html","hash":"0e338d6d360620d317dea78560044a5eead63fef","modified":1470343258367},{"_id":"public/2016/06/10/3d_rotation/index.html","hash":"c9fd63d0c7379fb44f2742117832d1dc1d5288b7","modified":1470343258367},{"_id":"public/2016/06/09/action_interceptor_pattern/index.html","hash":"0933d4270aa64da585fc110d202993951b149686","modified":1470343258367},{"_id":"public/2016/06/08/yaml/index.html","hash":"5971e658f538e7cf264f3cccbe27430526da19c7","modified":1470343258367},{"_id":"public/2016/06/07/MergeGthubConflicts/index.html","hash":"9f511af7436f890820fd60af1d9c61f9fad8fc26","modified":1470343258368},{"_id":"public/2016/06/07/markdown_syntax/index.html","hash":"73a8abdc4f98f7677bc62012539fb51dfc47f83b","modified":1470343258368},{"_id":"public/2016/06/06/net_canvas/index.html","hash":"4dba88874d31d24cb40717326f8c37aec52efc44","modified":1470343258368},{"_id":"public/2016/06/04/nodejs/index.html","hash":"759564cff1124381de76cdcc1ddc534a73cba2f2","modified":1470343258369},{"_id":"public/2016/06/04/VBdotNET_howto/index.html","hash":"6907248ee9b74d89c3ba4fd0509f05b9038169a1","modified":1470343258368},{"_id":"public/2016/06/04/vb_codestyle/index.html","hash":"cd78d16adbce94aa6dd1bdc3e55e38baf9efef71","modified":1470343258368},{"_id":"public/archives/index.html","hash":"79de7634f6758043fd3e79bfbeb390d2909017fc","modified":1470343258369},{"_id":"public/archives/2016/index.html","hash":"5788ac9a3afca68fcf15ebe947b07b9c4aedd3da","modified":1470343258373},{"_id":"public/archives/2016/06/index.html","hash":"daa7719de108cf2abe9cfd94aeeabb4b49a054d3","modified":1470343258374},{"_id":"public/index.html","hash":"119f08b2c9aa6a379dcaa427d5222cf7df8d972b","modified":1470343258376},{"_id":"public/page/2/index.html","hash":"1df921f04a6252fd8f885077967aa5f8fbaadb4d","modified":1470343258376},{"_id":"public/tags/vb-net/index.html","hash":"a6278c2d946609fa72784ad6d238a0b40fc0bfab","modified":1470343258377},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1470343258452},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1470343258453},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1470343258453},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1470343258453},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1470343258453},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1470343258454},{"_id":"public/img/coderwall.png","hash":"fa84676c4d654e040e51fd34bfcd9f9348cd5331","modified":1470343258454},{"_id":"public/img/delicious.png","hash":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd","modified":1470343258454},{"_id":"public/img/douban.png","hash":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e","modified":1470343258454},{"_id":"public/img/facebook.png","hash":"d19ad7a0903daf26817afd8753cd97e0cc714f54","modified":1470343258454},{"_id":"public/img/github.png","hash":"b84d03b32fa388dcbf149296ebd16dce6223d48d","modified":1470343258454},{"_id":"public/img/google.png","hash":"61a21fec7346fa3400b747ac9a201cf3d5bc013d","modified":1470343258454},{"_id":"public/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1470343258454},{"_id":"public/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1470343258454},{"_id":"public/img/linkedin.png","hash":"e203138fb53c257cb214e97f4e30091b9c568d2c","modified":1470343258455},{"_id":"public/img/mail.png","hash":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7","modified":1470343258455},{"_id":"public/img/pinboard.png","hash":"0891fbb6d092fa012bf936019923383d84c6aeb0","modified":1470343258455},{"_id":"public/img/pinterest.png","hash":"9c72917f8779c083157c6ce7a5d62ed4874f0630","modified":1470343258455},{"_id":"public/img/rss.png","hash":"430fd47340e75214c081abd05cd7410cf7c71b86","modified":1470343258455},{"_id":"public/img/stackoverflow.png","hash":"da5dfe9043055c95e479d49c78cd3b020de608f2","modified":1470343258455},{"_id":"public/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1470343258455},{"_id":"public/img/twitter.png","hash":"14dbb8e62d056525253bc0de13acd1723da7a934","modified":1470343258455},{"_id":"public/img/weibo.png","hash":"280dae3fd38086158b4a1b57edb94c06b1a5014b","modified":1470343258455},{"_id":"public/img/zhihu.png","hash":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d","modified":1470343258455},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"3ce87b82c7a4ffdf65e96765c2ffda10b1a283c6","modified":1470343258455},{"_id":"public/css/fonts/fontawesome-webfont.svgz","hash":"4bfdd33ed702e32ae01399fcc2652377f78e7626","modified":1470343258455},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"1480b8101b02da9bc4c60341b5e185e63e585064","modified":1470343258456},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"cafc4ac5761a0a252d33dce4ea3952cf9a38d832","modified":1470343258456},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1470343258456},{"_id":"public/github-card-lib/githubcard.js","hash":"fc013acad2465c07977975d8e3f9ec9efdeb62fb","modified":1470343258460},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"ba13657479b46daecb6336bfe376f84cef3ae58b","modified":1470343260969},{"_id":"public/fancybox/jquery.fancybox.css","hash":"b6aa6692c2e5f8bd74d96827b78570f0c5683c20","modified":1470343261014},{"_id":"public/js/instagram.js","hash":"f19adbcc0dac33536bc6660598059048ec901882","modified":1470343261014},{"_id":"public/js/jquery.lazyload.js","hash":"c11a2e7b330d16d06feabd0a8477099adf9d6799","modified":1470343261014},{"_id":"public/js/main.js","hash":"78310af1f302bfa1b1d704537ef40d868ead2dcf","modified":1470343261015},{"_id":"public/js/mobile.js","hash":"b68cc01d24e80973c48205f551da87f3f3427644","modified":1470343261015},{"_id":"public/js/pc.js","hash":"fdbc039fc9ffa70815b5fc4daaa587ae29693f10","modified":1470343261015},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1470343261015},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1470343261015},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1470343261015},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1470343261015},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1470343261015},{"_id":"public/css/style.css","hash":"49da90af54b70eb5762d5549405409a8fdd759dd","modified":1470343261016},{"_id":"public/fancybox/jquery.fancybox.js","hash":"a82597493d75ea989ca586e09173cff332efe41e","modified":1470343261016},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1470343261016},{"_id":"source/_posts/rm.md","hash":"d8c22b0aa2c58c740288356668c491447d6ab8c9","modified":1466394544214},{"_id":"source/_posts/rem.md","hash":"90c60134778ca4d00de638b073221806b6d1c8d8","modified":1470230580731},{"_id":"public/2016/06/20/rem/index.html","hash":"820526abc31d4e06cb88b27239a03f76ecab1ecf","modified":1470343258366},{"_id":"public/tags/re0/index.html","hash":"2de5f50c84514828d9d920c99834e2fe802765ae","modified":1470343258341},{"_id":"public/tags/rem/index.html","hash":"e000b9866e4c7d36611d1eba370a15d8121b3112","modified":1470343258341},{"_id":"source/_posts/WPF-XAML.md","hash":"57ed7410b97fd6fa17e2ccc0b521cf920a2e2083","modified":1466440852569},{"_id":"public/tags/XAML/index.html","hash":"a41e25f0e5f796add11b652257f023878b532c72","modified":1470343258342},{"_id":"public/tags/WPF/index.html","hash":"4872cd94b93bd743dd814f655eee5c599f28af7d","modified":1470343258342},{"_id":"public/tags/UI/index.html","hash":"b6d8cc4e8431bf0c586cbbc0e1515f0bc4de3e7b","modified":1470343258342},{"_id":"public/2016/06/01/WPF-XAML/index.html","hash":"fff2f61ed1eb955ecc59767d70bed815697cb9de","modified":1470343258369},{"_id":"source/_posts/New Text Document.md","hash":"db217ba89c0a1d19aca8ddd729d545a299e8f9d8","modified":1466509523436},{"_id":"source/_posts/暧昧ばんび~な.md","hash":"abb22c78af0a0806219bd51fb86a230c35935870","modified":1470340255692},{"_id":"public/2016/06/21/暧昧ばんび~な/index.html","hash":"c37c384a2903478e4c10c535f7e4e0c6bddf552b","modified":1470343258366},{"_id":"public/tags/music/index.html","hash":"8becd95aae6d36ff322b4589bea2191a90bd88e3","modified":1470343258378},{"_id":"source/_posts/extensions-property.md","hash":"ea8eabb890e070266e959d57a1b1fa9a34829256","modified":1466686820439},{"_id":"public/tags/vb-net/page/2/index.html","hash":"e2e26fd082d0f82fa2471fb3bfc462b54969ae48","modified":1470343258377},{"_id":"public/tags/language/index.html","hash":"faa7c1c0c7164b38dc218bc4592034f7c5f4b693","modified":1470343258342},{"_id":"public/tags/架构设计/index.html","hash":"b7681732eeae19f0890c53f7ddc9cdca7728217c","modified":1470343258343},{"_id":"public/2016/06/23/extensions-property/index.html","hash":"6d37fec9a077015a50af9a15c232acbecc2ea734","modified":1470343258366},{"_id":"source/_posts/my-win10.md","hash":"3c1332f15deb29181d5bc74e4182b818b7b5c910","modified":1466699245514},{"_id":"public/2016/06/14/my-win10/index.html","hash":"86b82540829c825295480f1bf6c5c971bda6909b","modified":1470343258367},{"_id":"public/tags/win10/index.html","hash":"8cb513cac4d96ce59719216f2faf99ebe3241747","modified":1470343258343},{"_id":"public/tags/desktop/index.html","hash":"c8f83bbdbfd655c93b3be4d7201cb64b06557920","modified":1470343258343},{"_id":"source/_posts/user-agent.md","hash":"e4d7f6d463710e794071a3b9fe3f3eca0b972e0b","modified":1470342848894},{"_id":"public/tags/web/index.html","hash":"7d5884836118d615ecb89e3e5a691cf1d029da03","modified":1470343258343},{"_id":"public/tags/user-agent/index.html","hash":"eeba259fd5969fe0f63c447154c7ebb96c1b4e81","modified":1470343258343},{"_id":"public/2016/06/24/user-agent/index.html","hash":"baca0c214eec6189ab3ce029f4335aa6fb8ac3ec","modified":1470343258366},{"_id":"source/_posts/DependencyInjection.md","hash":"0117b4cb687731d61aa24d2ed2f73fd96b05ab2b","modified":1470230699467},{"_id":"public/archives/page/3/index.html","hash":"b1d45f5f1d9e4956f5dfe6657216901af2469960","modified":1470343258372},{"_id":"public/archives/2016/page/3/index.html","hash":"bc542aaec8ed2399fed6068f673734e1ec1c0669","modified":1470343258374},{"_id":"public/archives/2016/06/page/3/index.html","hash":"7ce6abd4ce4d25707d76803951096efd1d3ad5ac","modified":1470343258334},{"_id":"public/page/3/index.html","hash":"6e422f56be785824d7cbb0ccf266498752beaebe","modified":1470343258376},{"_id":"public/tags/架构/index.html","hash":"9ab8da6e0016d07fdf1c193978212873eb34829a","modified":1470343258343},{"_id":"public/2016/06/25/DependencyInjection/index.html","hash":"4d9eea5843378475bdd51ac861254657080db2fa","modified":1470343258366},{"_id":"source/_posts/CLR_types.md","hash":"65189d3d3a28e6383f21bbdc79e4be28de1a2778","modified":1470336793784},{"_id":"public/tags/VisualStudio/index.html","hash":"e78e5d1ed647668441080742f116bc806dbce5b2","modified":1470343258344},{"_id":"public/tags/Compiler/index.html","hash":"b6124965ead8fad6a7fb5e84e5c2afa9d5b08c98","modified":1470343258344},{"_id":"public/2016/06/11/CLR_types/index.html","hash":"3bf2549447d3e1a52c197e162376e5644037c122","modified":1470343258367},{"_id":"source/_posts/china_guangxi_guilin_yangsuo_by_andyanansu-d43r04m.md","hash":"b88f389fc5986bec0132f4d3deca30805163021d","modified":1470230433251},{"_id":"source/_posts/take_screenshot_login_screen.md","hash":"dfdabddd697be1aafbda5d75c3d996db921be731","modified":1470342472878},{"_id":"public/2016/07/07/china_guangxi_guilin_yangsuo_by_andyanansu-d43r04m/index.html","hash":"2ea0ea8d7ed84899153c92bacd6088a8423d6220","modified":1470343258366},{"_id":"public/archives/2016/07/index.html","hash":"5e398f8a0250bc36ee4d172d41dc015a2d07f295","modified":1470343258376},{"_id":"public/tags/bash/index.html","hash":"83ee2c1556541a20a2e551c631a2460b7a6a763e","modified":1470343258344},{"_id":"public/tags/ubuntu/index.html","hash":"4b7695b94434642065babe7dfc9c0792d2749771","modified":1470343258344},{"_id":"public/tags/elementary-os/index.html","hash":"31ec7dca984d08a3e513c9a78a5c2482daed4e2a","modified":1470343258344},{"_id":"public/2016/07/26/take_screenshot_login_screen/index.html","hash":"f628737b2dba84cf63f5d43c34553f8163d09b5a","modified":1470343258366},{"_id":"source/_posts/6_reason_for_opensource.md","hash":"f083484eebff2120c60aff24bca37a6303eef300","modified":1470342400334},{"_id":"public/tags/搬运转载/index.html","hash":"ab77a68f9b49d4baaf49030d8ab7c69dc9fea144","modified":1470218510534},{"_id":"public/2016/07/31/6_reason_for_opensource/index.html","hash":"0f589a95fde70925a85645209535b2236b53cb90","modified":1469917299556},{"_id":"source/_posts/github_4000_contribution.md","hash":"206fcb253ea5a37222d6b92dfdae0d30a1683f24","modified":1470345477020},{"_id":"public/tags/check-point/index.html","hash":"fc2485b2bf4bbcbeab1d8a60e07f9ddcaa883db7","modified":1470343258344},{"_id":"public/2016/07/31/github_4000_contribution/index.html","hash":"71836f2b06f1614ce04f1a28a650299da2e882f5","modified":1470343258365},{"_id":"source/_posts/R_hypothesis_testing.md","hash":"8bb16de7200c7efc1f0027c3c105403f01abd930","modified":1470342326791},{"_id":"public/archives/2016/08/index.html","hash":"65c93d8b55c7fc4ae730997e9d910bacb487f96d","modified":1470343258376},{"_id":"public/tags/R/index.html","hash":"622acc10e1a4692c0613c1249b925b062b3ea507","modified":1470343258345},{"_id":"public/tags/statics/index.html","hash":"f4b8a42303ac0708a85bb75a7063731209e4699a","modified":1470343258345},{"_id":"public/tags/转载/index.html","hash":"71a36e9b379bc8dc8028336881cd9fe0bb54d737","modified":1470343258345},{"_id":"public/2016/08/01/R_hypothesis_testing/index.html","hash":"f5ae2e8e607c7a7f8da081d582d2b45cbb8388ea","modified":1470343258364},{"_id":"public/2016/07/30/6_reason_for_opensource/index.html","hash":"5ff946f6a34b93a57fa8ce4c6d9bbc8d314e8a19","modified":1470343258366},{"_id":"source/_posts/MCMXC, A.D..md","hash":"cd78371cb2296872754f5871851ce52a869a5ef5","modified":1470087562111},{"_id":"public/2016/08/02/MCMXC, A.D./index.html","hash":"028b4b9f3e7ced04213a6af8bb1bd0a74282d323","modified":1470087608294},{"_id":"source/_posts/MCMXC_A_D.md","hash":"9abc941e235d99681793e2a9db414e776dac9b43","modified":1470340225582},{"_id":"source/_posts/fst.md","hash":"53628af862a2ddffd5615f24b2f431a29a0b9f24","modified":1470342243134},{"_id":"public/2016/08/02/MCMXC_A_D/index.html","hash":"2b2b344b0a0ed9ec4d87ae69803a9a73e88c4fb5","modified":1470343258364},{"_id":"public/tags/genetics/index.html","hash":"5e4cd6b3abcadce296501c396fbea13213f36f18","modified":1470343258345},{"_id":"public/tags/algorithm/index.html","hash":"b1aadff9d90570a1c0eed3ce93d582d7c3ef9b9a","modified":1470343258346},{"_id":"public/2016/08/03/fst/index.html","hash":"f68b8d5418f8c530eabc47ed1a5417fd59e35efb","modified":1470343258364},{"_id":"themes/hexo-theme-icarus-master/.gitignore","hash":"542aaea07afe90211c6a45c90b7d6879a4503043","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/LICENSE","hash":"df00918fa95de563927fd92b26f14c7affdc3052","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/README.md","hash":"e37d76f54ca496a8ea3b8a74bdb68400bfa6bed0","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/_config.yml.example","hash":"f1cb69526f0651e97ff1135ac46f97bcd4e7cb24","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/package.json","hash":"1bc52ef10a33df23e56bd73c927f605019c87d41","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/.github/ISSUE_TEMPLATE.md","hash":"9393fd3dbc943f1544facb66af7fd8b7a5b9ddbb","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/languages/en.yml","hash":"ade241498b85503a8953a1deca963222f47067a7","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/languages/es.yml","hash":"d7432219be5bee4cb569331378ade61b749688e0","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/languages/fr.yml","hash":"cb3e597cbec7e8f458858c457bafd1f3a225083d","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/languages/id.yml","hash":"70ec9ab2ac04cf882e81377ca5ad15bf8adceca8","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/languages/ja.yml","hash":"ff972961e5f468a695d80d21b62c3e9032cdf561","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/languages/ko.yml","hash":"7c4ad4577dc0577ad2ca1c0410507f5e5fadf530","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/languages/pt-BR.yml","hash":"3c5d5293575593705b9a2dfa9d97b017eb4bc8c3","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/languages/zh-CN.yml","hash":"3dc8ec524805afd090438be717908750da439204","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/languages/ru.yml","hash":"d1aab2b0c939d0c6020f881d664b660a01ee7327","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/languages/zh-TW.yml","hash":"d8d96a0a17c20af11919ce036e87379a6b163db9","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/archive.ejs","hash":"c1ecf667f40f34d61ab33eed46bab143eb1af36d","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/categories.ejs","hash":"aa95629b770cff8cca9d663aeb6b17928f070de5","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/category.ejs","hash":"1d407f9176db84e83062c52ad4755aaea9e74401","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/index.ejs","hash":"43e971ebc35657b18e08a049559790348a16666f","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/layout.ejs","hash":"6f01b3d46d184a820297f9542497808b152bb09e","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/page.ejs","hash":"50170783bac99946ae8af483920568de9b2d9801","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/post.ejs","hash":"50170783bac99946ae8af483920568de9b2d9801","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/tag.ejs","hash":"f6c220d4e5c231028bc71ddc11aec97d7b5a9943","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/tags.ejs","hash":"b0fcea68d7c11e5899bf0375d80997685111653f","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/scripts/fancybox.js","hash":"c1b01a9c2d96474cdd7e09657e522e4a03579413","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/scripts/meta.js","hash":"1993754a2f3dffa283fa0538eb8f056385b69ad4","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/scripts/thumbnail.js","hash":"e667a611f9baac270281b765832020d50bf8fb7f","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/_source/about/index.md","hash":"309f1a70283035782c5338ec55ce2c5fe1b74e42","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/_source/categories/index.md","hash":"55bee2cb88da438a2e8b1f29b1d7e954c07a9e60","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/_source/tags/index.md","hash":"e999413d6392c34156b5c6e9273f9069f9e6d92d","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/comment/disqus.ejs","hash":"1b32a90f400dc580f4b8298de75b94429ca6de68","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/comment/counter.ejs","hash":"e109d3256b004b027d029bd5bd67feeb72dc5388","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/comment/duoshuo.ejs","hash":"ce46d7410a99b57704da32e9d09071cef6c9fa93","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/comment/index.ejs","hash":"d45635e78a3fc40e424a401e983f2c8eef6ebcfd","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/comment/youyan.ejs","hash":"6fe807992832939caf6c3e7651d052df9520d88e","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/comment/scripts.ejs","hash":"8a9a20f72ba0923afa776396fb67d8c5d446a666","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/common/article.ejs","hash":"32cbe951bbfde4d72243be69dca76652fc6d77b7","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/common/footer.ejs","hash":"cbfe560fcab445d42ceeb5d1beba5957d5be5eaa","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/common/head.ejs","hash":"cad8b2aec0ae4304bddd5c7c0f41f8d6e6dfa691","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/common/header.ejs","hash":"738c6a923b2a6de6a81c4892c8a47e03d8b34f88","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/common/profile.ejs","hash":"0d5a9622d490652599e3ba3e4077a7d6bb2eb38e","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/common/scripts.ejs","hash":"c0a1a9e53f89440c42c325d5bd8c7234652c8937","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/common/sidebar.ejs","hash":"6e80fa52d23c9c39bfa357a1e00c26fc8b851b82","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/common/thumbnail.ejs","hash":"1b70f8a98cd8650b159bda858dbee38dbdb7f0c5","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/common/timeline.ejs","hash":"6420e34e0332c9b6670011519f341340db989343","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/plugin/baidu-analytics.ejs","hash":"6a7bee18e666e627e62541a5e30906f87ba1bfe8","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/plugin/google-analytics.ejs","hash":"349f08b6521a16e79046b1f94f04317ac74f556e","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/plugin/scripts.ejs","hash":"b2fbe815e7eb7513fd3f96eec573f151e3dd09e1","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/search/index-mobile.ejs","hash":"50a727ac1dfe3073eb6fa6699ba01e66f4ac41c0","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/search/baidu.ejs","hash":"3e603a702d20c53fd3bcbeb570a16a86d54781ce","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/search/insight.ejs","hash":"130fe3d33ac71da0b50f7fee6a87979f30938a1b","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/search/index.ejs","hash":"24935e32e61d4706454b174ea3bed0726ae7fb34","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/search/swiftype.ejs","hash":"379e66d2c13526e72e4120c443f95fccf4edef71","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/share/addtoany.ejs","hash":"ac180c4c84b73a04d61b17e7dc18c257e20bf59f","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/share/bdshare.ejs","hash":"a1e772c5a6f174d585b0c1e574058f75dc8e2898","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/share/default.ejs","hash":"ebfb919dc525b3ed61a6a5ee05ee71410eedc541","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/share/index.ejs","hash":"2a2c0095b95b11e5692bd8ad6a2337aa644189a2","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/share/jiathis.ejs","hash":"21ebaa51e828cba2cefbeeaccb01514643565755","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/widget/links.ejs","hash":"aad118699718b62c0d3f3cfd6f17a181139a76af","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/widget/archive.ejs","hash":"d9ebbb7f6ce2f25df5ae25e4a1fef3c08f7054b9","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/widget/category.ejs","hash":"583bda80cf15b3ef11fefbd1b502897dfff40100","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/widget/recent_posts.ejs","hash":"2ca923465275fb38a7ac7d67211d6e94a977e957","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/widget/tag.ejs","hash":"3b8ae5953990436893da9d68f910ebe592005659","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/widget/tagcloud.ejs","hash":"ca8c7bf555fb6ce4904f2c59160548405c2c8a82","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_extend.styl","hash":"9a5c72663c0da1b32ecb6a75773a5ccfb8c467ca","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_variables.styl","hash":"d62af931be6612ec8c3a917836379a8cd92fbce1","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/style.styl","hash":"865de42ad496af928252d5bcfa0e0bbb534b0df5","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/js/insight.js","hash":"6ee84c42c2b230ff9e9bf605a444bd671d44f9e3","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/js/main.js","hash":"78310af1f302bfa1b1d704537ef40d868ead2dcf","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/common/post/banner.ejs","hash":"47ced3f03525698c79c6b1c07b48383fb6c496b2","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/common/post/category.ejs","hash":"75c9dda2e7ec041943855ca163a6b1c4c8b4f260","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/common/post/date.ejs","hash":"45cb0bcad461036cdd1fe2e3fbb5f2f19940025c","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/common/post/gallery.ejs","hash":"c563098229ca4f6c522e77e6e38f5381c21f0af8","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/common/post/nav.ejs","hash":"d7cd611e642327f33dff3963ef869c2b46824a11","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/common/post/tag.ejs","hash":"2e966216256321aa0c76fe1b9be689601c76ef31","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/layout/common/post/title.ejs","hash":"669ddb46fefa100856588351a7a2d30ad996b755","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/agate.styl","hash":"601eb70448a16b918df132f6fc41e891ae053653","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/androidstudio.styl","hash":"65d09f1b0e81c6a182f549fd3de51e59823c97ae","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/arduino-light.styl","hash":"15e8572585cd708221c513dea4bdd89d8fe56c10","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/ascetic.styl","hash":"32cff3bef6fac3760fe78f203096477052a90552","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/arta.styl","hash":"1a5accc115f41d1b669ed708ac6a29abac876599","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/atelier-cave-dark.styl","hash":"bc647b2c1d971d7cc947aa1ed66e9fd115261921","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/atelier-cave-light.styl","hash":"a5be0744a7ecf4a08f600ade4cfd555afc67bc15","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/atelier-dune-dark.styl","hash":"df50a85a4b14c7ca6e825d665594b91229d0e460","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/atelier-estuary-dark.styl","hash":"d84382bc8298f96730757391d3e761b7e640f406","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/atelier-dune-light.styl","hash":"931435fbc6f974e8ce9e32722680035d248a9dc1","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/atelier-estuary-light.styl","hash":"344276ca9b27e51d4c907f76afe5d13cf8e60bdf","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/atelier-forest-dark.styl","hash":"57c154c6045a038dc7df0a25927853e10bf48c4a","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/atelier-forest-light.styl","hash":"95228d9f2102fad425536aac44b80b2cba1f5950","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/atelier-heath-dark.styl","hash":"b0cf13b2233e7bc38342032d2d7296591a4c2bcf","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/atelier-heath-light.styl","hash":"8c8c2e445abef85273be966d59770e9ced6aac21","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/atelier-lakeside-dark.styl","hash":"bb0a8c4ad0dd8e3e7de7122ddf268fc42aa94acb","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/atelier-lakeside-light.styl","hash":"2c54cb9bdb259ae3b5b29f63ac2469ed34b08578","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/atelier-plateau-dark.styl","hash":"09c64f1a7052aec9070c36c0431df25216afaea1","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/atelier-plateau-light.styl","hash":"d1a05fdd1ededc9063d181ab25bad55a164aeb4a","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/atelier-savanna-dark.styl","hash":"a16c919a1ccf2f845488078fb341381bec46b1f3","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/atelier-savanna-light.styl","hash":"f8244c93711c7cb59dd79d2df966806b30d171ea","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/atelier-seaside-dark.styl","hash":"ce233a101daea7124cbfcd34add43ccfe2e1e1c7","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/atelier-seaside-light.styl","hash":"0597342da6e2d0c5bdcc7d42dabb07322b1a4177","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/atelier-sulphurpool-dark.styl","hash":"414b0cfc142f70afe359c16450b651e28bf7325a","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/brown-paper.styl","hash":"c2326ba20a5020a66ca7895258d18833327d4334","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/atelier-sulphurpool-light.styl","hash":"efa52713efc468abeeb2b9299704371583b857de","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/codepen-embed.styl","hash":"f4dcc84d8e39f9831a5efe80e51923fc3054feb0","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/color-brewer.styl","hash":"2a439d6214430e2f45dd4939b4dfe1fe1a20aa0f","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/dark.styl","hash":"71ce56d311cc2f3a605f6e2c495ccd7236878404","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/darkula.styl","hash":"ad0d5728d21645039c9f199e7a56814170ed3bab","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/docco.styl","hash":"b1c176378bb275f2e8caa759f36294e42d614bf1","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/far.styl","hash":"d9928010ffe71e80b97a5afcba1a4975efdd7372","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/foundation.styl","hash":"bf8ddc94b4ad995b8b8805b5a4cf95004553fdac","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/github-gist.styl","hash":"48211a03d33e7f7ada0b261162bea06676155a71","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/github.styl","hash":"3336aeba324c6d34a6fd41fef9b47bc598f7064c","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/googlecode.styl","hash":"bda816beee7b439814b514e6869dc678822be1bc","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/grayscale.styl","hash":"bf37d8b8d1e602126c51526f0cc28807440228ed","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/highlightjs.styl","hash":"0e198b7a59191c7a39b641a4ddd22c948edb9358","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/hopscotch.styl","hash":"b374c6550b89b4751aedc8fbc3cf98d95bd70ead","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/hybrid.styl","hash":"ea8d7ddc258b073308746385f5cb85aabb8bfb83","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/idea.styl","hash":"a02967cb51c16a34e0ee895d33ded2b823d35b21","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/index.styl","hash":"3b31a278b5c09d6808630b4555f1d0df2a9965b2","modified":1470216591512},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/ir-black.styl","hash":"693078bbd72a2091ed30f506cc55949600b717af","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/kimbie.dark.styl","hash":"45dbb168f22d739d0109745d2decd66b5f94e786","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/kimbie.light.styl","hash":"61f8baed25be05288c8604d5070afbcd9f183f49","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/magula.styl","hash":"16d323f989b1420a0f72ef989242ece9bf17a456","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/mono-blue.styl","hash":"4c89a6ae29de67c0700585af82a60607e85df928","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/monokai-sublime.styl","hash":"25aa2fc1dbe38593e7c7ebe525438a39574d9935","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/monokai.styl","hash":"5a4fe9f957fd7a368c21b62a818403db4270452f","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/obsidian.styl","hash":"55572bbcfee1de6c31ac54681bb00336f5ae826d","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/paraiso-dark.styl","hash":"f1537bd868579fa018ecdbfd2eb922dcf3ba2cac","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/paraiso-light.styl","hash":"d224d1df0eb3395d9eea1344cee945c228af2911","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/pojoaque.jpg","hash":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/pojoaque.styl","hash":"77dae9dc41945359d17fe84dbd317f1b40b2ee33","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/railscasts.styl","hash":"acd620f8bb7ff0e3fe5f9a22b4433ceef93a05e6","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/rainbow.styl","hash":"ce73b858fc0aba0e57ef9fb136c083082746bc1d","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/school-book.styl","hash":"d43560fe519a931ce6da7d57416d7aa148441b83","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/solarized-dark.styl","hash":"702b9299a48c90124e3ac1d45f1591042f2beccc","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/solarized-light.styl","hash":"aa0dd3fd25c464183b59c5575c9bee8756b397f2","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/sunburst.styl","hash":"a0b5b5129547a23865d400cfa562ea0ac1ee3958","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/tomorrow-night-blue.styl","hash":"8b3087d4422be6eb800935a22eb11e035341c4ba","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/tomorrow-night-bright.styl","hash":"0ac6af6ecb446b5b60d6226748e4a6532db34f57","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/tomorrow-night-eighties.styl","hash":"fa57b3bb7857a160fc856dbe319b31e30cc5d771","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/tomorrow-night.styl","hash":"19b3080d4b066b40d50d7e7f297472482b5801fd","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/tomorrow.styl","hash":"54c18f112237ee0b1077dd5f13027ab48511401f","modified":1470216257029},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/vs.styl","hash":"959a746f4b37aacb5d1d6ff1d57e0c045289d75d","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/xcode.styl","hash":"5e8532ae8366dcf6a4ef5e4813dc3d42ab3d0a50","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_highlight/zenburn.styl","hash":"fc5ec840435dad80964d04519d3f882ddc03746a","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_partial/archive.styl","hash":"dd8329d75a8312785611b5ec422bd49afc628c1c","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_partial/article.styl","hash":"8665162c0786cd051856ac3516b3341a720b076f","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_partial/comment.styl","hash":"784646796184d4f27918c22395288a2fafbf9554","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_partial/footer.styl","hash":"484776654e4c1691dc844e6e93786a08855c1c99","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_partial/header.styl","hash":"1e351f741144135871a3373fe7e969dc961b65e7","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_partial/insight.styl","hash":"19833cd127f26ad90b06c115f8a96a30e0c0e53b","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_partial/sidebar.styl","hash":"f528ca7064d9fcecd737b9b71c9c54601365d7d3","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_partial/timeline.styl","hash":"c813b98f4fc45b64d2e07e5d944745a654c8c943","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_partial/profile.styl","hash":"fb0170075dc2a41e01dd11bbfdbccbed544c479a","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_util/grid.styl","hash":"93fb6f1e2f40cd7d88ad0d56dd73d3f9a7bc853e","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/_util/mixin.styl","hash":"c8e1ddfc0fe9108bab592c7a73b73ce9344991fd","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/images/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/images/logo.png","hash":"e606a0584f98268b2fe92303f3254520862ef659","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/css/images/thumb-default-small.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/jquery.fancybox.css","hash":"9673e160d32c4811bb7e930ba1e20c36b2997fe1","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/styles.css","hash":"5ca6e111046232bde112d33201a60532aee7d3c4","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/source-code-pro/styles.css","hash":"93c308012738728f906cd4c5cfdb34189e0c712b","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/font-awesome/css/font-awesome.min.css","hash":"8c15c6bd82c71e9ef1bb11cf24e502fe07518ac5","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/font-awesome/fonts/fontawesome-webfont.eot","hash":"3e63fc9b3de4580f1f3bec0631436f755b80f167","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/font-awesome/fonts/fontawesome-webfont.woff2","hash":"1075231650f579955905bb2f6527148a8e2b4b16","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","hash":"c4248ea800bd5608344ce163f5658b57e7ef9410","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","hash":"e0350190d720a8fec0557ab47b318ec4e4486448","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","hash":"2c5b039b57f62625e88226a938679ec937431ad1","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","hash":"22413bb8bfb78608c1e25aa1ed5c1f38557df79f","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","hash":"63eb74ef040aade256f2274a7f31a914edddb0ea","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","hash":"328a22fe3eec71ad9e5ece4d67dd62e79dab6b7f","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","hash":"415eee05976ab8b2471602a5ddb78a6c58fc21aa","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","hash":"4dc6d7174ea6d89f4c45e43e1bfc3e03d8ffebaf","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","hash":"a0b0c389cf46d63c850e61fed572485ff0b68183","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","hash":"c5f29fed6632efe0aa83318369f0d8c4061b775b","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","hash":"be201d32a9aa5d186723ebb3c538be691aa8c53a","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","hash":"113978181dcac77baecef6115a9121d8f6e4fc3a","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","hash":"5067c81462c15422853c94d21a1726865a61634f","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","hash":"afc44700053c9a28f9ab26f6aec4862ac1d0795d","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","hash":"b366f2fda2e524eb5ef50058eefff249a3b96e6c","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","hash":"d22904914469be735490e3c8cb093c7862896dd5","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","hash":"ae80fb3cd16339aa7b5da280ab53975523dcaac2","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","hash":"b85efde42fa3a03c32b1d31c6cd74c622fc7916c","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","hash":"e75607ba1417181397c700775b84303d5a2957b9","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","hash":"d0b40a7848703556c6631f24e961a98ca5829255","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","hash":"be365eca44760ce3fc9b377c43d4634958479c69","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","hash":"942addaec4d3a60af33947a84a3d85f926015947","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","hash":"b0e0bb5ef78db8b15d430d0b9be9d4329289a310","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/font-awesome/fonts/FontAwesome.otf","hash":"cde9eb92c8a3ba23d648f76ea3931511f30813f4","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/font-awesome/fonts/fontawesome-webfont.ttf","hash":"9088143b19979779b2116cef38b661f72d982e19","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/font-awesome/fonts/fontawesome-webfont.woff","hash":"56ce13e71c2150d81bc972940584915181bd6081","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/jquery/2.1.3/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/source/vendor/font-awesome/fonts/fontawesome-webfont.svg","hash":"26bb1c5ef100a1cd71923f1d5dc29fc797ef4639","modified":1468699622000},{"_id":"themes/hexo-theme-icarus-master/_config.yml","hash":"34198b6f6c3af45be0ea2b9eb0c202b2e432b931","modified":1470342901972},{"_id":"public/css/images/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1470343258456},{"_id":"public/css/images/thumb-default-small.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1470343258456},{"_id":"public/css/images/logo.png","hash":"e606a0584f98268b2fe92303f3254520862ef659","modified":1470343258456},{"_id":"public/vendor/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1470343258456},{"_id":"public/vendor/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1470343258456},{"_id":"public/vendor/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1470343258456},{"_id":"public/vendor/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1470343258456},{"_id":"public/vendor/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1470343258457},{"_id":"public/vendor/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1470343258457},{"_id":"public/vendor/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1470343258457},{"_id":"public/vendor/font-awesome/fonts/fontawesome-webfont.eot","hash":"3e63fc9b3de4580f1f3bec0631436f755b80f167","modified":1470343258457},{"_id":"public/vendor/font-awesome/fonts/fontawesome-webfont.woff2","hash":"1075231650f579955905bb2f6527148a8e2b4b16","modified":1470343258457},{"_id":"public/vendor/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","hash":"c4248ea800bd5608344ce163f5658b57e7ef9410","modified":1470343258457},{"_id":"public/vendor/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","hash":"e0350190d720a8fec0557ab47b318ec4e4486448","modified":1470343258458},{"_id":"public/vendor/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","hash":"2c5b039b57f62625e88226a938679ec937431ad1","modified":1470343258457},{"_id":"public/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","hash":"22413bb8bfb78608c1e25aa1ed5c1f38557df79f","modified":1470343258457},{"_id":"public/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","hash":"63eb74ef040aade256f2274a7f31a914edddb0ea","modified":1470343258458},{"_id":"public/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","hash":"328a22fe3eec71ad9e5ece4d67dd62e79dab6b7f","modified":1470343258458},{"_id":"public/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","hash":"415eee05976ab8b2471602a5ddb78a6c58fc21aa","modified":1470343258458},{"_id":"public/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","hash":"4dc6d7174ea6d89f4c45e43e1bfc3e03d8ffebaf","modified":1470343258458},{"_id":"public/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","hash":"a0b0c389cf46d63c850e61fed572485ff0b68183","modified":1470343258458},{"_id":"public/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","hash":"c5f29fed6632efe0aa83318369f0d8c4061b775b","modified":1470343258458},{"_id":"public/vendor/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","hash":"be201d32a9aa5d186723ebb3c538be691aa8c53a","modified":1470343258459},{"_id":"public/vendor/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","hash":"113978181dcac77baecef6115a9121d8f6e4fc3a","modified":1470343258458},{"_id":"public/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","hash":"5067c81462c15422853c94d21a1726865a61634f","modified":1470343258459},{"_id":"public/vendor/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","hash":"afc44700053c9a28f9ab26f6aec4862ac1d0795d","modified":1470343258459},{"_id":"public/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","hash":"b366f2fda2e524eb5ef50058eefff249a3b96e6c","modified":1470343258459},{"_id":"public/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","hash":"d22904914469be735490e3c8cb093c7862896dd5","modified":1470343258459},{"_id":"public/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","hash":"ae80fb3cd16339aa7b5da280ab53975523dcaac2","modified":1470343258459},{"_id":"public/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","hash":"b85efde42fa3a03c32b1d31c6cd74c622fc7916c","modified":1470343258460},{"_id":"public/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","hash":"d0b40a7848703556c6631f24e961a98ca5829255","modified":1470343258460},{"_id":"public/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","hash":"e75607ba1417181397c700775b84303d5a2957b9","modified":1470343258460},{"_id":"public/vendor/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","hash":"be365eca44760ce3fc9b377c43d4634958479c69","modified":1470343258460},{"_id":"public/vendor/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","hash":"942addaec4d3a60af33947a84a3d85f926015947","modified":1470343258460},{"_id":"public/vendor/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","hash":"b0e0bb5ef78db8b15d430d0b9be9d4329289a310","modified":1470343258460},{"_id":"public/vendor/font-awesome/fonts/FontAwesome.otf","hash":"cde9eb92c8a3ba23d648f76ea3931511f30813f4","modified":1470343260973},{"_id":"public/vendor/font-awesome/fonts/fontawesome-webfont.ttf","hash":"9088143b19979779b2116cef38b661f72d982e19","modified":1470343260977},{"_id":"public/vendor/font-awesome/fonts/fontawesome-webfont.woff","hash":"56ce13e71c2150d81bc972940584915181bd6081","modified":1470343260978},{"_id":"public/js/insight.js","hash":"6ee84c42c2b230ff9e9bf605a444bd671d44f9e3","modified":1470343261015},{"_id":"public/vendor/fancybox/jquery.fancybox.css","hash":"9673e160d32c4811bb7e930ba1e20c36b2997fe1","modified":1470343261015},{"_id":"public/vendor/open-sans/styles.css","hash":"5ca6e111046232bde112d33201a60532aee7d3c4","modified":1470343261015},{"_id":"public/vendor/source-code-pro/styles.css","hash":"93c308012738728f906cd4c5cfdb34189e0c712b","modified":1470343261015},{"_id":"public/vendor/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1470343261015},{"_id":"public/vendor/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1470343261015},{"_id":"public/vendor/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1470343261016},{"_id":"public/vendor/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1470343261016},{"_id":"public/vendor/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1470343261016},{"_id":"public/vendor/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1470343261017},{"_id":"public/vendor/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1470343261017},{"_id":"public/vendor/font-awesome/css/font-awesome.min.css","hash":"8c15c6bd82c71e9ef1bb11cf24e502fe07518ac5","modified":1470343261017},{"_id":"public/vendor/jquery/2.1.3/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1470343261018},{"_id":"public/vendor/font-awesome/fonts/fontawesome-webfont.svg","hash":"26bb1c5ef100a1cd71923f1d5dc29fc797ef4639","modified":1470343261072},{"_id":"public/tags/math/index.html","hash":"41ec2698729e52bda119622d8dbfec9e9afe6b4a","modified":1470343258346},{"_id":"public/tags/open-source/index.html","hash":"ed2a3fed03286be23e7a9b4c0352a5e7875d57c0","modified":1470343258346},{"_id":"public/tags/MSDN/index.html","hash":"fd6a6cd23bd6bf06728d0cf4af763cf9a99e469b","modified":1470343258346},{"_id":"public/tags/interface/index.html","hash":"02b1a1dfe9f0a805545a9bb38e6c936751838a32","modified":1470343258346},{"_id":"public/tags/art-work/index.html","hash":"c23b9404c4f6143d2b1b9d8c82548740a100751d","modified":1470343258346},{"_id":"public/tags/javascript/index.html","hash":"2ab596d5adbb371d6a3eb31efa76ac29c8ded6fc","modified":1470343258346},{"_id":"public/tags/force-directed/index.html","hash":"bb9ec297c04cf233672f4917caa300932904fbc1","modified":1470343258346},{"_id":"public/tags/chrome/index.html","hash":"328f712a744bc954d5c4221e176a5ff8980d0f63","modified":1470343258346},{"_id":"public/tags/firefox/index.html","hash":"17234940062d0bcc30c11244b8ec90b0831b2a15","modified":1470343258346},{"_id":"public/tags/IE/index.html","hash":"4fd3e10fd9cefe128dc4a09ac46c21eeb341b4bb","modified":1470343258347},{"_id":"source/_posts/The_Screen_Behind_The_Mirror.md","hash":"f6cbc858fce99052f1405224a6ce9d344d8cd093","modified":1470340319702},{"_id":"public/tags/Enigma/index.html","hash":"ae046680530bd8c9397ee38ed7b750010ca64805","modified":1470343258347},{"_id":"public/2016/08/04/The_Screen_Behind_The_Mirror/index.html","hash":"1d5b838cdd54d3fd4655a1e09dde13004694db08","modified":1470343258364},{"_id":"source/_posts/New Text Document.txt","hash":"5effbd398e5eac1c7830141b73f715851c934c80","modified":1470335706003},{"_id":"source/_posts/Voyageur.md","hash":"105b2d248271281a46caa41ea9e3b87a0614ece9","modified":1470340168479},{"_id":"source/_posts/chinese_rural_dog.md","hash":"f64c9a05aa34198c00c5236703aeb3c29a9a0458","modified":1470339701225},{"_id":"public/archives/page/4/index.html","hash":"442dd9d4d96f37e05856182d0734ebd71b80eb78","modified":1470343258331},{"_id":"public/archives/2016/page/4/index.html","hash":"adc3faa1f680d061113c70979ca4f56503ccca5d","modified":1470343258333},{"_id":"public/tags/Chinese-rural-dog/index.html","hash":"ebd38392e448af96148ed6906b37ab0167f249f2","modified":1470343258347},{"_id":"public/tags/中華田園犬/index.html","hash":"1b46b5f7e7aa880ae2a1c9c9a37c38f2852ac4df","modified":1470343258347},{"_id":"public/tags/鹿乃/index.html","hash":"4a814971a3687f81e25cf40a0c2fee6e34beaf5d","modified":1470343258347},{"_id":"public/2016/08/05/chinese_rural_dog/index.html","hash":"9a56152b7b70298dba97ead2cd561bf8514422d5","modified":1470343258364},{"_id":"public/2016/08/05/Voyageur/index.html","hash":"7ee4f8f755595323f256527005b8ffb91afcfd6c","modified":1470343258364},{"_id":"public/page/4/index.html","hash":"4904f4818f379d4ab9fba53a47c57a01761205a0","modified":1470343258377},{"_id":"source/_posts/network_canvas_3d.md","hash":"471991b85f09cbd35b0bd0966ec8a18743363e02","modified":1470561180678},{"_id":"source/_posts/pdb_mol_viewer.md","hash":"bdfd523d31a82a55cee1be56b6844f1f33241194","modified":1470464338445},{"_id":"source/_posts/javascript_async_loading.md","hash":"858c71bd466e505e70d2d5604476dbf607af9fbd","modified":1470671894736},{"_id":"source/_posts/mysql_analysis.md","hash":"0e7614a8cdbb8ef07cade7f59dbe09663f854118","modified":1470600038662}],"Category":[],"Data":[],"Page":[{"title":"谢桂纲的个人简历","date":"1989-10-01T18:43:32.000Z","_content":"\n```vbnet\nPublic Function xieguigang() As String\n    Return \"Hey, there. Hello world!!\"\nEnd Function\n```\n\n## 联系方式\n+ 个人邮箱:  [xie.guigang@gmail.com](mailto://xie.guigang@gmail.com)\n+ 工作邮箱:\n   + [xie.guigang@gcmodeller.org](mailto://xie.guigang@gcmodeller.org)\n   + [admin-master@gcmodeller.org](mailto://admin-master@gcmodeller.org)\n+ 手机: +86 13807837047\n\n## 我的github名片\n\n> {% githubCard xieguigang %}  \n\n\n他自称是一名全栈开发人员，但是其实主要精通的是进行服务器后端的开发工作，对于前端的html5开发也略微精通。其从2011年开始学习编程，从2013年开始算起到现在已经有3年的服务器后端的开发经验了。他在位于美国的西雅图微软公司的雷德蒙德研究院有过为期1个月的学习实习经历。\n\n**他是一名开源项目的狂热份子，热衷于开源项目的开发。其目前主要活跃于国外的github社区以及作为codeproject社区的文章审稿人活跃于当前的最大的.NET开源社区之上。**目前正在学习d3js和html5，正在进行GCModeller项目的在线服务平台的前端开发工作。\n\n## 主要使用的开发语言和环境\n+ VisualBasic.NET, R, Perl, Bash, ShoalShell(自己开发的用于调试GCModeller计算引擎的脚本语言)\n+ 数据分析： Bioconductor, GCModeller\n+ 数据可视化: d3js, Circos\n\n>![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/create_svg.png)\n> VB.NET+d3js SVG canvas html5混合编程\n\n## **私人科研项目**\n### 1. GCModeller开放计算平台 (VB.NET)\n> **开发时间**\t2013.08 - 至今\n> **项目主页**\thttp://gcmodeller.org\n> **在线服务**\thttp://services.gcmodeller.org/\n> **API 文档**  http://docs.gcmodeller.org/\n\nGCModeller主要提供了一系列的免费开源工具用于进行原核生物的全基因组的生物网络系统模块的注释建模以及计算数据分析。目前GCModeller主要为国内外的大学以及生物测序公司提供收费的服务支持和数据分析服务。\n\n当前已经开发完成的比较成熟的分析功能模块有：\n> 1.\t基于序列特征模式以及比较基因组学的全基因组的基因表达调控网络的构建工具；\n> 2.\tRNA-Seq数据分析套件；本工具主要应用于差异表达基因的功能富集注释以及TSSs转录起始位点注释\n> 3.\tFBA细胞表型分析套件；在这个模块之中除了常规的FBA分析功能，还建立了一个自有的结合转录组测序数据以及代谢网络模型的遗传约束FBA计算模型\n> 4.\t细胞网络可视化套件与基因组可视化组件；\n> 5.\t大规模序列比对LocalBLAST/Clustal分析套件；\n> 6.\t生物数据挖掘分析组件。\n> 7.    基因组序列特性位点的注释工具套件，这个工具套件主要用来分析酶切位点，转录因子结合位点，SNP位点\n\n以及一些通用化的生物信息学数据库的读写模块，这些生物信息学数据库主要包括有NCBI genbank数据库（\\*.gb, \\*.gff, \\*.ptt），对KEGG数据库的DBGET REST API的封装，桑格尔研究所的Xfam家族的Pfam， Rfam， iPfam等数据库的读取，MetaCyc生物模型数据库，对RegPrecise数据库的REST API的封装，等\n\nGCModeller项目目前正在申请**美国微软公司Microsoft .NET Foundation开源基金会**资助项目，GCModeller项目目前是继微软的西雅图雷德蒙德研究院MBF项目之后的.NET平台上面的第二大生物信息学分析项目。\n\n\n**这里列出了基于GCModeller的数据分析服务的SCI论文列表：**\n>1. *__Niu XN etc__. Complete sequence and detailed analysis of the first indigenous plasmid from Xanthomonas oryzae pv. Oryzicola* (**doi:** [10.1186/s12866-015-0562-x](http://bmcmicrobiol.biomedcentral.com/articles/10.1186/s12866-015-0562-x))\n\n### 2. GCModeller分布式计算服务器集群环境 (VB.NET)\n> **开发时间**\t2016.03 - 至今\n> **项目主页**  https://github.com/xieguigang/Microsoft.VisualBasic.Parallel\n> **CodeProject知识库文章** [\"Easy Distribution Computing in VisualBasic\"](http://www.codeproject.com/Articles/1076209/Easy-Distribution-Computing-in-VisualBasic)\n\n本分布式计算环境是GCModeller计算系统的在线服务模块的组件之一，目标是构建一个高性能的在线分析计算平台。\n+ 在本项目之中，个人尝试构建了一个面向编程透明的分布式文件系统，以及在远程主机上面执行本地函数指针的运行时环境。\n+ 基于Linq表达式的面型对象的数据查询语言Linq脚本\n+ 基于Linq脚本的RQL数据源查询系统，RQL语言项目是[http://linq.gcmodeller.org](http://linq.gcmodeller.org)平台的数据源驱动程序\n\n\n### 3. R语言混合编程API\n> **开发时间**   2016.01 - 2016.03\n> **项目主页**   https://github.com/SMRUCC/R.Bioinformatics\n> **CodeProject文章**   [\"R Statics Language API to VB.NET Language\"](http://www.codeproject.com/Articles/1083875/R-Statics-Language-API-to-VB-NET-Language)\n\n本混合编程环境是基于[R.NET](https://rdotnet.codeplex.com/)项目建立的R语言包函数对.NET语言的封装，其目的是为了更加方便快速的进行.NET语言对R语言的混合编程，从而极大的根据现有的R功能包来拓展.NET对数据进行计算分析以及可视化绘图的数据处理能力。GCModeller项目之中的相当一部分的RNA-seq转录组测序数据分析工具都是基于本混合编程的API环境而编写完成的。\n\n## 个人编程框架环境\n### Microsoft VisualBasic App运行时环境\n> **开发时间**   2015.11 - 至今\n> **Github项目**  https://github.com/xieguigang/VisualBasic_AppFramework\n> **API 文档库**  http://framework-docs.xieguigang.me/\n\n**NuGet包安装**\n>```\nPM> Install-Package VB_AppFramework\nPM> Install-Package VB_AppFramework_40\n```\n\n本编程框架主要是针对VisualBasic语言在服务器端应用进行的拓展，本框架环境极大的拓展了VisualBasic语言的编程语法以及数据处理能力。本编程框架同时也是GCModeller分析套件的基础运行时环境。在本框架之中主要包括了一个完整的.NET程序的调试器系统，命令行解释器系统，大型计算任务多任务进程并行化拓展，SDK API文档自动编译系统，面向大型数据集合的数据框架以及数据挖掘分析套件。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/m.gif)\n\n## 个人娱乐项目\n### Zplay-Music\n> **开发时间**   2016.05\n> **Github项目**   https://github.com/xieguigang/Zplay-Music\n\n一个个人进行多媒体编程以及UI编程练习的小项目，基于[libzplay](http://libzplay.sourceforge.net/)播放器核心。主要模仿了QQ音乐网页版UI的本地音乐播放器，支持无损音乐的播放以及与Ubuntu系统相似的notify-osd消息通知\n\n--------------------------------------------------\n### **谢桂纲的CodeProject社区文章列表**\n\n<iframe src=\"http://www.codeproject.com/members/flair/10137048?show=RepDesignation,MemberTypes,ArticleCount,MessageCount,AvgArtRating,Reputation\" height=\"150\" width=\"270\" scrolling=\"no\" frameborder=\"no\"></iframe>\n\n1. [R Statics Language API to VB.NET Language](http://www.codeproject.com/Articles/1083875/R-Statics-Language-API-to-VB-NET-Language)\n2. [Venn Diagram in VisualBasic](http://www.codeproject.com/Articles/1090178/Venn-Diagram-in-VisualBasic)\n3. [R language S4Object Serialization to .NET Object](http://www.codeproject.com/Articles/890099/R-language-S-Object-Serialization-to-NET-Object)\n4. [Code style guidelines for Microsoft VisualBasic](http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic)\n5. [Easy Document in VisualBasic](http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic)\n6. [Guide line of integrated ShellScript with R Hybrid programming](http://www.codeproject.com/Articles/832975/Guide-line-of-integrated-ShellScript-with-R-Hybrid)\n7. [Auto-Generated visual basic source code from SQL](http://www.codeproject.com/Articles/989264/Auto-Generated-visual-basic-source-code-from-SQL)\n8. [Visual Basic Using Reflection to Map DataTable in MySQL Database](http://www.codeproject.com/Articles/638976/Visual-Basic-Using-Reflection-to-Map-DataTable-in)\n9. [LINQ Script: A Universal Object-Oriented Database Query Language](http://www.codeproject.com/Articles/721827/LINQ-Script-A-Universal-Object-Oriented-Database-Q)\n10. [A complex Mathematics expression evaluation module in Visual Basic](http://www.codeproject.com/Articles/646391/A-complex-Mathematics-expression-evaluation-module)\n11. [VisualBasic Machine Learning, Step 1: The Q-Learning](http://www.codeproject.com/Articles/1088282/VisualBasic-Machine-Learning-Step-The-Q-Learning)\n12. [Modeling the Biochemical System Using VB](http://www.codeproject.com/Articles/664153/Modeling-the-Biochemical-System-Using-VB)\n13. [Powerful ShellScript for bioinformatics researchers](http://www.codeproject.com/Articles/820854/Powerful-ShellScript-for-bioinformatics-researcher)\n14. [Draw sequence logo](http://www.codeproject.com/Articles/1095279/Draw-sequence-logo)\n15. [Easy Distribution Computing in VisualBasic](http://www.codeproject.com/Articles/1076209/Easy-Distribution-Computing-in-VisualBasic)\n16. [Simple HTTP Server in VisualBasic](http://www.codeproject.com/Articles/1068466/Simple-HTTP-Server-in-VisualBasic)\n17. [A powerful CSV document wrapper library](http://www.codeproject.com/Articles/788006/A-powerful-CSV-document-wrapper-library)\n18. [Develop a Plugin extension for your VisualBasic application](http://www.codeproject.com/Articles/703590/Develop-a-Plugin-extension-for-your-VisualBasic-ap)\n19. [Levenshtein Edit Distance [Technical Blog]](http://www.codeproject.com/Articles/1055849/Levenshtein-Edit-Distance)\n20. [Generate Color Mappings on Circos plot for prokaryote comparative genomics [Technical Blog]](http://www.codeproject.com/Articles/1055851/Generate-Color-Mappings-on-Circos-plot-for-prokary)\n\n------------------------------------------------------------------------------------------------------------------------------------------------------\n>![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/my/CIMG0452.JPG)","source":"about/index.md","raw":"---\ntitle: 谢桂纲的个人简历\ndate: 1989-10-02 02:43:32\n---\n\n```vbnet\nPublic Function xieguigang() As String\n    Return \"Hey, there. Hello world!!\"\nEnd Function\n```\n\n## 联系方式\n+ 个人邮箱:  [xie.guigang@gmail.com](mailto://xie.guigang@gmail.com)\n+ 工作邮箱:\n   + [xie.guigang@gcmodeller.org](mailto://xie.guigang@gcmodeller.org)\n   + [admin-master@gcmodeller.org](mailto://admin-master@gcmodeller.org)\n+ 手机: +86 13807837047\n\n## 我的github名片\n\n> {% githubCard xieguigang %}  \n\n\n他自称是一名全栈开发人员，但是其实主要精通的是进行服务器后端的开发工作，对于前端的html5开发也略微精通。其从2011年开始学习编程，从2013年开始算起到现在已经有3年的服务器后端的开发经验了。他在位于美国的西雅图微软公司的雷德蒙德研究院有过为期1个月的学习实习经历。\n\n**他是一名开源项目的狂热份子，热衷于开源项目的开发。其目前主要活跃于国外的github社区以及作为codeproject社区的文章审稿人活跃于当前的最大的.NET开源社区之上。**目前正在学习d3js和html5，正在进行GCModeller项目的在线服务平台的前端开发工作。\n\n## 主要使用的开发语言和环境\n+ VisualBasic.NET, R, Perl, Bash, ShoalShell(自己开发的用于调试GCModeller计算引擎的脚本语言)\n+ 数据分析： Bioconductor, GCModeller\n+ 数据可视化: d3js, Circos\n\n>![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/create_svg.png)\n> VB.NET+d3js SVG canvas html5混合编程\n\n## **私人科研项目**\n### 1. GCModeller开放计算平台 (VB.NET)\n> **开发时间**\t2013.08 - 至今\n> **项目主页**\thttp://gcmodeller.org\n> **在线服务**\thttp://services.gcmodeller.org/\n> **API 文档**  http://docs.gcmodeller.org/\n\nGCModeller主要提供了一系列的免费开源工具用于进行原核生物的全基因组的生物网络系统模块的注释建模以及计算数据分析。目前GCModeller主要为国内外的大学以及生物测序公司提供收费的服务支持和数据分析服务。\n\n当前已经开发完成的比较成熟的分析功能模块有：\n> 1.\t基于序列特征模式以及比较基因组学的全基因组的基因表达调控网络的构建工具；\n> 2.\tRNA-Seq数据分析套件；本工具主要应用于差异表达基因的功能富集注释以及TSSs转录起始位点注释\n> 3.\tFBA细胞表型分析套件；在这个模块之中除了常规的FBA分析功能，还建立了一个自有的结合转录组测序数据以及代谢网络模型的遗传约束FBA计算模型\n> 4.\t细胞网络可视化套件与基因组可视化组件；\n> 5.\t大规模序列比对LocalBLAST/Clustal分析套件；\n> 6.\t生物数据挖掘分析组件。\n> 7.    基因组序列特性位点的注释工具套件，这个工具套件主要用来分析酶切位点，转录因子结合位点，SNP位点\n\n以及一些通用化的生物信息学数据库的读写模块，这些生物信息学数据库主要包括有NCBI genbank数据库（\\*.gb, \\*.gff, \\*.ptt），对KEGG数据库的DBGET REST API的封装，桑格尔研究所的Xfam家族的Pfam， Rfam， iPfam等数据库的读取，MetaCyc生物模型数据库，对RegPrecise数据库的REST API的封装，等\n\nGCModeller项目目前正在申请**美国微软公司Microsoft .NET Foundation开源基金会**资助项目，GCModeller项目目前是继微软的西雅图雷德蒙德研究院MBF项目之后的.NET平台上面的第二大生物信息学分析项目。\n\n\n**这里列出了基于GCModeller的数据分析服务的SCI论文列表：**\n>1. *__Niu XN etc__. Complete sequence and detailed analysis of the first indigenous plasmid from Xanthomonas oryzae pv. Oryzicola* (**doi:** [10.1186/s12866-015-0562-x](http://bmcmicrobiol.biomedcentral.com/articles/10.1186/s12866-015-0562-x))\n\n### 2. GCModeller分布式计算服务器集群环境 (VB.NET)\n> **开发时间**\t2016.03 - 至今\n> **项目主页**  https://github.com/xieguigang/Microsoft.VisualBasic.Parallel\n> **CodeProject知识库文章** [\"Easy Distribution Computing in VisualBasic\"](http://www.codeproject.com/Articles/1076209/Easy-Distribution-Computing-in-VisualBasic)\n\n本分布式计算环境是GCModeller计算系统的在线服务模块的组件之一，目标是构建一个高性能的在线分析计算平台。\n+ 在本项目之中，个人尝试构建了一个面向编程透明的分布式文件系统，以及在远程主机上面执行本地函数指针的运行时环境。\n+ 基于Linq表达式的面型对象的数据查询语言Linq脚本\n+ 基于Linq脚本的RQL数据源查询系统，RQL语言项目是[http://linq.gcmodeller.org](http://linq.gcmodeller.org)平台的数据源驱动程序\n\n\n### 3. R语言混合编程API\n> **开发时间**   2016.01 - 2016.03\n> **项目主页**   https://github.com/SMRUCC/R.Bioinformatics\n> **CodeProject文章**   [\"R Statics Language API to VB.NET Language\"](http://www.codeproject.com/Articles/1083875/R-Statics-Language-API-to-VB-NET-Language)\n\n本混合编程环境是基于[R.NET](https://rdotnet.codeplex.com/)项目建立的R语言包函数对.NET语言的封装，其目的是为了更加方便快速的进行.NET语言对R语言的混合编程，从而极大的根据现有的R功能包来拓展.NET对数据进行计算分析以及可视化绘图的数据处理能力。GCModeller项目之中的相当一部分的RNA-seq转录组测序数据分析工具都是基于本混合编程的API环境而编写完成的。\n\n## 个人编程框架环境\n### Microsoft VisualBasic App运行时环境\n> **开发时间**   2015.11 - 至今\n> **Github项目**  https://github.com/xieguigang/VisualBasic_AppFramework\n> **API 文档库**  http://framework-docs.xieguigang.me/\n\n**NuGet包安装**\n>```\nPM> Install-Package VB_AppFramework\nPM> Install-Package VB_AppFramework_40\n```\n\n本编程框架主要是针对VisualBasic语言在服务器端应用进行的拓展，本框架环境极大的拓展了VisualBasic语言的编程语法以及数据处理能力。本编程框架同时也是GCModeller分析套件的基础运行时环境。在本框架之中主要包括了一个完整的.NET程序的调试器系统，命令行解释器系统，大型计算任务多任务进程并行化拓展，SDK API文档自动编译系统，面向大型数据集合的数据框架以及数据挖掘分析套件。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/m.gif)\n\n## 个人娱乐项目\n### Zplay-Music\n> **开发时间**   2016.05\n> **Github项目**   https://github.com/xieguigang/Zplay-Music\n\n一个个人进行多媒体编程以及UI编程练习的小项目，基于[libzplay](http://libzplay.sourceforge.net/)播放器核心。主要模仿了QQ音乐网页版UI的本地音乐播放器，支持无损音乐的播放以及与Ubuntu系统相似的notify-osd消息通知\n\n--------------------------------------------------\n### **谢桂纲的CodeProject社区文章列表**\n\n<iframe src=\"http://www.codeproject.com/members/flair/10137048?show=RepDesignation,MemberTypes,ArticleCount,MessageCount,AvgArtRating,Reputation\" height=\"150\" width=\"270\" scrolling=\"no\" frameborder=\"no\"></iframe>\n\n1. [R Statics Language API to VB.NET Language](http://www.codeproject.com/Articles/1083875/R-Statics-Language-API-to-VB-NET-Language)\n2. [Venn Diagram in VisualBasic](http://www.codeproject.com/Articles/1090178/Venn-Diagram-in-VisualBasic)\n3. [R language S4Object Serialization to .NET Object](http://www.codeproject.com/Articles/890099/R-language-S-Object-Serialization-to-NET-Object)\n4. [Code style guidelines for Microsoft VisualBasic](http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic)\n5. [Easy Document in VisualBasic](http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic)\n6. [Guide line of integrated ShellScript with R Hybrid programming](http://www.codeproject.com/Articles/832975/Guide-line-of-integrated-ShellScript-with-R-Hybrid)\n7. [Auto-Generated visual basic source code from SQL](http://www.codeproject.com/Articles/989264/Auto-Generated-visual-basic-source-code-from-SQL)\n8. [Visual Basic Using Reflection to Map DataTable in MySQL Database](http://www.codeproject.com/Articles/638976/Visual-Basic-Using-Reflection-to-Map-DataTable-in)\n9. [LINQ Script: A Universal Object-Oriented Database Query Language](http://www.codeproject.com/Articles/721827/LINQ-Script-A-Universal-Object-Oriented-Database-Q)\n10. [A complex Mathematics expression evaluation module in Visual Basic](http://www.codeproject.com/Articles/646391/A-complex-Mathematics-expression-evaluation-module)\n11. [VisualBasic Machine Learning, Step 1: The Q-Learning](http://www.codeproject.com/Articles/1088282/VisualBasic-Machine-Learning-Step-The-Q-Learning)\n12. [Modeling the Biochemical System Using VB](http://www.codeproject.com/Articles/664153/Modeling-the-Biochemical-System-Using-VB)\n13. [Powerful ShellScript for bioinformatics researchers](http://www.codeproject.com/Articles/820854/Powerful-ShellScript-for-bioinformatics-researcher)\n14. [Draw sequence logo](http://www.codeproject.com/Articles/1095279/Draw-sequence-logo)\n15. [Easy Distribution Computing in VisualBasic](http://www.codeproject.com/Articles/1076209/Easy-Distribution-Computing-in-VisualBasic)\n16. [Simple HTTP Server in VisualBasic](http://www.codeproject.com/Articles/1068466/Simple-HTTP-Server-in-VisualBasic)\n17. [A powerful CSV document wrapper library](http://www.codeproject.com/Articles/788006/A-powerful-CSV-document-wrapper-library)\n18. [Develop a Plugin extension for your VisualBasic application](http://www.codeproject.com/Articles/703590/Develop-a-Plugin-extension-for-your-VisualBasic-ap)\n19. [Levenshtein Edit Distance [Technical Blog]](http://www.codeproject.com/Articles/1055849/Levenshtein-Edit-Distance)\n20. [Generate Color Mappings on Circos plot for prokaryote comparative genomics [Technical Blog]](http://www.codeproject.com/Articles/1055851/Generate-Color-Mappings-on-Circos-plot-for-prokary)\n\n------------------------------------------------------------------------------------------------------------------------------------------------------\n>![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/my/CIMG0452.JPG)","updated":"2016-08-03T08:33:22.847Z","path":"about/index.html","_id":"cipnbu3cd00018gv4e5bg941y","comments":1,"layout":"page","content":"<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> xieguigang() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">    <span class=\"keyword\">Return</span> <span class=\"string\">\"Hey, there. Hello world!!\"</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h2><ul>\n<li>个人邮箱:  <a href=\"mailto://xie.guigang@gmail.com\" target=\"_blank\" rel=\"external\">xie.guigang@gmail.com</a></li>\n<li>工作邮箱:<ul>\n<li><a href=\"mailto://xie.guigang@gcmodeller.org\" target=\"_blank\" rel=\"external\">xie.guigang@gcmodeller.org</a></li>\n<li><a href=\"mailto://admin-master@gcmodeller.org\" target=\"_blank\" rel=\"external\">admin-master@gcmodeller.org</a></li>\n</ul>\n</li>\n<li>手机: +86 13807837047</li>\n</ul>\n<h2 id=\"我的github名片\"><a href=\"#我的github名片\" class=\"headerlink\" title=\"我的github名片\"></a>我的github名片</h2><blockquote>\n<div style=\"text-align:center\">\n  <div class=\"github-card\" data-user=\"xieguigang\" data-repo=\"\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n  \n</blockquote>\n<p>他自称是一名全栈开发人员，但是其实主要精通的是进行服务器后端的开发工作，对于前端的html5开发也略微精通。其从2011年开始学习编程，从2013年开始算起到现在已经有3年的服务器后端的开发经验了。他在位于美国的西雅图微软公司的雷德蒙德研究院有过为期1个月的学习实习经历。</p>\n<p><strong>他是一名开源项目的狂热份子，热衷于开源项目的开发。其目前主要活跃于国外的github社区以及作为codeproject社区的文章审稿人活跃于当前的最大的.NET开源社区之上。</strong>目前正在学习d3js和html5，正在进行GCModeller项目的在线服务平台的前端开发工作。</p>\n<h2 id=\"主要使用的开发语言和环境\"><a href=\"#主要使用的开发语言和环境\" class=\"headerlink\" title=\"主要使用的开发语言和环境\"></a>主要使用的开发语言和环境</h2><ul>\n<li>VisualBasic.NET, R, Perl, Bash, ShoalShell(自己开发的用于调试GCModeller计算引擎的脚本语言)</li>\n<li>数据分析： Bioconductor, GCModeller</li>\n<li>数据可视化: d3js, Circos</li>\n</ul>\n<blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/create_svg.png\" alt=\"\"><br>VB.NET+d3js SVG canvas html5混合编程</p>\n</blockquote>\n<h2 id=\"私人科研项目\"><a href=\"#私人科研项目\" class=\"headerlink\" title=\"私人科研项目\"></a><strong>私人科研项目</strong></h2><h3 id=\"1-GCModeller开放计算平台-VB-NET\"><a href=\"#1-GCModeller开放计算平台-VB-NET\" class=\"headerlink\" title=\"1. GCModeller开放计算平台 (VB.NET)\"></a>1. GCModeller开放计算平台 (VB.NET)</h3><blockquote>\n<p><strong>开发时间</strong>    2013.08 - 至今<br><strong>项目主页</strong>    <a href=\"http://gcmodeller.org\" target=\"_blank\" rel=\"external\">http://gcmodeller.org</a><br><strong>在线服务</strong>    <a href=\"http://services.gcmodeller.org/\" target=\"_blank\" rel=\"external\">http://services.gcmodeller.org/</a><br><strong>API 文档</strong>  <a href=\"http://docs.gcmodeller.org/\" target=\"_blank\" rel=\"external\">http://docs.gcmodeller.org/</a></p>\n</blockquote>\n<p>GCModeller主要提供了一系列的免费开源工具用于进行原核生物的全基因组的生物网络系统模块的注释建模以及计算数据分析。目前GCModeller主要为国内外的大学以及生物测序公司提供收费的服务支持和数据分析服务。</p>\n<p>当前已经开发完成的比较成熟的分析功能模块有：</p>\n<blockquote>\n<ol>\n<li>基于序列特征模式以及比较基因组学的全基因组的基因表达调控网络的构建工具；</li>\n<li>RNA-Seq数据分析套件；本工具主要应用于差异表达基因的功能富集注释以及TSSs转录起始位点注释</li>\n<li>FBA细胞表型分析套件；在这个模块之中除了常规的FBA分析功能，还建立了一个自有的结合转录组测序数据以及代谢网络模型的遗传约束FBA计算模型</li>\n<li>细胞网络可视化套件与基因组可视化组件；</li>\n<li>大规模序列比对LocalBLAST/Clustal分析套件；</li>\n<li>生物数据挖掘分析组件。</li>\n<li>基因组序列特性位点的注释工具套件，这个工具套件主要用来分析酶切位点，转录因子结合位点，SNP位点</li>\n</ol>\n</blockquote>\n<p>以及一些通用化的生物信息学数据库的读写模块，这些生物信息学数据库主要包括有NCBI genbank数据库（*.gb, *.gff, *.ptt），对KEGG数据库的DBGET REST API的封装，桑格尔研究所的Xfam家族的Pfam， Rfam， iPfam等数据库的读取，MetaCyc生物模型数据库，对RegPrecise数据库的REST API的封装，等</p>\n<p>GCModeller项目目前正在申请<strong>美国微软公司Microsoft .NET Foundation开源基金会</strong>资助项目，GCModeller项目目前是继微软的西雅图雷德蒙德研究院MBF项目之后的.NET平台上面的第二大生物信息学分析项目。</p>\n<p><strong>这里列出了基于GCModeller的数据分析服务的SCI论文列表：</strong></p>\n<blockquote>\n<ol>\n<li><em><strong>Niu XN etc</strong>. Complete sequence and detailed analysis of the first indigenous plasmid from Xanthomonas oryzae pv. Oryzicola</em> (<strong>doi:</strong> <a href=\"http://bmcmicrobiol.biomedcentral.com/articles/10.1186/s12866-015-0562-x\" target=\"_blank\" rel=\"external\">10.1186/s12866-015-0562-x</a>)</li>\n</ol>\n</blockquote>\n<h3 id=\"2-GCModeller分布式计算服务器集群环境-VB-NET\"><a href=\"#2-GCModeller分布式计算服务器集群环境-VB-NET\" class=\"headerlink\" title=\"2. GCModeller分布式计算服务器集群环境 (VB.NET)\"></a>2. GCModeller分布式计算服务器集群环境 (VB.NET)</h3><blockquote>\n<p><strong>开发时间</strong>    2016.03 - 至今<br><strong>项目主页</strong>  <a href=\"https://github.com/xieguigang/Microsoft.VisualBasic.Parallel\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/Microsoft.VisualBasic.Parallel</a><br><strong>CodeProject知识库文章</strong> <a href=\"http://www.codeproject.com/Articles/1076209/Easy-Distribution-Computing-in-VisualBasic\" target=\"_blank\" rel=\"external\">“Easy Distribution Computing in VisualBasic”</a></p>\n</blockquote>\n<p>本分布式计算环境是GCModeller计算系统的在线服务模块的组件之一，目标是构建一个高性能的在线分析计算平台。</p>\n<ul>\n<li>在本项目之中，个人尝试构建了一个面向编程透明的分布式文件系统，以及在远程主机上面执行本地函数指针的运行时环境。</li>\n<li>基于Linq表达式的面型对象的数据查询语言Linq脚本</li>\n<li>基于Linq脚本的RQL数据源查询系统，RQL语言项目是<a href=\"http://linq.gcmodeller.org\" target=\"_blank\" rel=\"external\">http://linq.gcmodeller.org</a>平台的数据源驱动程序</li>\n</ul>\n<h3 id=\"3-R语言混合编程API\"><a href=\"#3-R语言混合编程API\" class=\"headerlink\" title=\"3. R语言混合编程API\"></a>3. R语言混合编程API</h3><blockquote>\n<p><strong>开发时间</strong>   2016.01 - 2016.03<br><strong>项目主页</strong>   <a href=\"https://github.com/SMRUCC/R.Bioinformatics\" target=\"_blank\" rel=\"external\">https://github.com/SMRUCC/R.Bioinformatics</a><br><strong>CodeProject文章</strong>   <a href=\"http://www.codeproject.com/Articles/1083875/R-Statics-Language-API-to-VB-NET-Language\" target=\"_blank\" rel=\"external\">“R Statics Language API to VB.NET Language”</a></p>\n</blockquote>\n<p>本混合编程环境是基于<a href=\"https://rdotnet.codeplex.com/\" target=\"_blank\" rel=\"external\">R.NET</a>项目建立的R语言包函数对.NET语言的封装，其目的是为了更加方便快速的进行.NET语言对R语言的混合编程，从而极大的根据现有的R功能包来拓展.NET对数据进行计算分析以及可视化绘图的数据处理能力。GCModeller项目之中的相当一部分的RNA-seq转录组测序数据分析工具都是基于本混合编程的API环境而编写完成的。</p>\n<h2 id=\"个人编程框架环境\"><a href=\"#个人编程框架环境\" class=\"headerlink\" title=\"个人编程框架环境\"></a>个人编程框架环境</h2><h3 id=\"Microsoft-VisualBasic-App运行时环境\"><a href=\"#Microsoft-VisualBasic-App运行时环境\" class=\"headerlink\" title=\"Microsoft VisualBasic App运行时环境\"></a>Microsoft VisualBasic App运行时环境</h3><blockquote>\n<p><strong>开发时间</strong>   2015.11 - 至今<br><strong>Github项目</strong>  <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a><br><strong>API 文档库</strong>  <a href=\"http://framework-docs.xieguigang.me/\" target=\"_blank\" rel=\"external\">http://framework-docs.xieguigang.me/</a></p>\n</blockquote>\n<p><strong>NuGet包安装</strong></p>\n<blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PM&gt; Install-Package VB_AppFramework</span><br><span class=\"line\">PM&gt; Install-Package VB_AppFramework_40</span><br></pre></td></tr></table></figure>\n</blockquote>\n<p>本编程框架主要是针对VisualBasic语言在服务器端应用进行的拓展，本框架环境极大的拓展了VisualBasic语言的编程语法以及数据处理能力。本编程框架同时也是GCModeller分析套件的基础运行时环境。在本框架之中主要包括了一个完整的.NET程序的调试器系统，命令行解释器系统，大型计算任务多任务进程并行化拓展，SDK API文档自动编译系统，面向大型数据集合的数据框架以及数据挖掘分析套件。</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/m.gif\" alt=\"\"></p>\n<h2 id=\"个人娱乐项目\"><a href=\"#个人娱乐项目\" class=\"headerlink\" title=\"个人娱乐项目\"></a>个人娱乐项目</h2><h3 id=\"Zplay-Music\"><a href=\"#Zplay-Music\" class=\"headerlink\" title=\"Zplay-Music\"></a>Zplay-Music</h3><blockquote>\n<p><strong>开发时间</strong>   2016.05<br><strong>Github项目</strong>   <a href=\"https://github.com/xieguigang/Zplay-Music\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/Zplay-Music</a></p>\n</blockquote>\n<p>一个个人进行多媒体编程以及UI编程练习的小项目，基于<a href=\"http://libzplay.sourceforge.net/\" target=\"_blank\" rel=\"external\">libzplay</a>播放器核心。主要模仿了QQ音乐网页版UI的本地音乐播放器，支持无损音乐的播放以及与Ubuntu系统相似的notify-osd消息通知</p>\n<hr>\n<h3 id=\"谢桂纲的CodeProject社区文章列表\"><a href=\"#谢桂纲的CodeProject社区文章列表\" class=\"headerlink\" title=\"谢桂纲的CodeProject社区文章列表\"></a><strong>谢桂纲的CodeProject社区文章列表</strong></h3><iframe src=\"http://www.codeproject.com/members/flair/10137048?show=RepDesignation,MemberTypes,ArticleCount,MessageCount,AvgArtRating,Reputation\" height=\"150\" width=\"270\" scrolling=\"no\" frameborder=\"no\"></iframe>\n\n<ol>\n<li><a href=\"http://www.codeproject.com/Articles/1083875/R-Statics-Language-API-to-VB-NET-Language\" target=\"_blank\" rel=\"external\">R Statics Language API to VB.NET Language</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/1090178/Venn-Diagram-in-VisualBasic\" target=\"_blank\" rel=\"external\">Venn Diagram in VisualBasic</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/890099/R-language-S-Object-Serialization-to-NET-Object\" target=\"_blank\" rel=\"external\">R language S4Object Serialization to .NET Object</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\" target=\"_blank\" rel=\"external\">Code style guidelines for Microsoft VisualBasic</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\" target=\"_blank\" rel=\"external\">Easy Document in VisualBasic</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/832975/Guide-line-of-integrated-ShellScript-with-R-Hybrid\" target=\"_blank\" rel=\"external\">Guide line of integrated ShellScript with R Hybrid programming</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/989264/Auto-Generated-visual-basic-source-code-from-SQL\" target=\"_blank\" rel=\"external\">Auto-Generated visual basic source code from SQL</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/638976/Visual-Basic-Using-Reflection-to-Map-DataTable-in\" target=\"_blank\" rel=\"external\">Visual Basic Using Reflection to Map DataTable in MySQL Database</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/721827/LINQ-Script-A-Universal-Object-Oriented-Database-Q\" target=\"_blank\" rel=\"external\">LINQ Script: A Universal Object-Oriented Database Query Language</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/646391/A-complex-Mathematics-expression-evaluation-module\" target=\"_blank\" rel=\"external\">A complex Mathematics expression evaluation module in Visual Basic</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/1088282/VisualBasic-Machine-Learning-Step-The-Q-Learning\" target=\"_blank\" rel=\"external\">VisualBasic Machine Learning, Step 1: The Q-Learning</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/664153/Modeling-the-Biochemical-System-Using-VB\" target=\"_blank\" rel=\"external\">Modeling the Biochemical System Using VB</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/820854/Powerful-ShellScript-for-bioinformatics-researcher\" target=\"_blank\" rel=\"external\">Powerful ShellScript for bioinformatics researchers</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/1095279/Draw-sequence-logo\" target=\"_blank\" rel=\"external\">Draw sequence logo</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/1076209/Easy-Distribution-Computing-in-VisualBasic\" target=\"_blank\" rel=\"external\">Easy Distribution Computing in VisualBasic</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/1068466/Simple-HTTP-Server-in-VisualBasic\" target=\"_blank\" rel=\"external\">Simple HTTP Server in VisualBasic</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/788006/A-powerful-CSV-document-wrapper-library\" target=\"_blank\" rel=\"external\">A powerful CSV document wrapper library</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/703590/Develop-a-Plugin-extension-for-your-VisualBasic-ap\" target=\"_blank\" rel=\"external\">Develop a Plugin extension for your VisualBasic application</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/1055849/Levenshtein-Edit-Distance\" target=\"_blank\" rel=\"external\">Levenshtein Edit Distance [Technical Blog]</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/1055851/Generate-Color-Mappings-on-Circos-plot-for-prokary\" target=\"_blank\" rel=\"external\">Generate Color Mappings on Circos plot for prokaryote comparative genomics [Technical Blog]</a></li>\n</ol>\n<hr>\n<blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/my/CIMG0452.JPG\" alt=\"\"></p>\n</blockquote>\n","excerpt":"","more":"<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> xieguigang() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">    <span class=\"keyword\">Return</span> <span class=\"string\">\"Hey, there. Hello world!!\"</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h2><ul>\n<li>个人邮箱:  <a href=\"mailto://xie.guigang@gmail.com\">xie.guigang@gmail.com</a></li>\n<li>工作邮箱:<ul>\n<li><a href=\"mailto://xie.guigang@gcmodeller.org\">xie.guigang@gcmodeller.org</a></li>\n<li><a href=\"mailto://admin-master@gcmodeller.org\">admin-master@gcmodeller.org</a></li>\n</ul>\n</li>\n<li>手机: +86 13807837047</li>\n</ul>\n<h2 id=\"我的github名片\"><a href=\"#我的github名片\" class=\"headerlink\" title=\"我的github名片\"></a>我的github名片</h2><blockquote>\n<div style=\"text-align:center\">\n  <div class=\"github-card\"\n    data-user=\"xieguigang\"\n    data-repo=\"\"\n    data-width=\"400\"\n    data-theme=\"default\"\n    data-target=\"\"\n    data-client-id=\"\"\n    data-client-secret=\"\"\n  ></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n  \n</blockquote>\n<p>他自称是一名全栈开发人员，但是其实主要精通的是进行服务器后端的开发工作，对于前端的html5开发也略微精通。其从2011年开始学习编程，从2013年开始算起到现在已经有3年的服务器后端的开发经验了。他在位于美国的西雅图微软公司的雷德蒙德研究院有过为期1个月的学习实习经历。</p>\n<p><strong>他是一名开源项目的狂热份子，热衷于开源项目的开发。其目前主要活跃于国外的github社区以及作为codeproject社区的文章审稿人活跃于当前的最大的.NET开源社区之上。</strong>目前正在学习d3js和html5，正在进行GCModeller项目的在线服务平台的前端开发工作。</p>\n<h2 id=\"主要使用的开发语言和环境\"><a href=\"#主要使用的开发语言和环境\" class=\"headerlink\" title=\"主要使用的开发语言和环境\"></a>主要使用的开发语言和环境</h2><ul>\n<li>VisualBasic.NET, R, Perl, Bash, ShoalShell(自己开发的用于调试GCModeller计算引擎的脚本语言)</li>\n<li>数据分析： Bioconductor, GCModeller</li>\n<li>数据可视化: d3js, Circos</li>\n</ul>\n<blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/create_svg.png\" alt=\"\"><br>VB.NET+d3js SVG canvas html5混合编程</p>\n</blockquote>\n<h2 id=\"私人科研项目\"><a href=\"#私人科研项目\" class=\"headerlink\" title=\"私人科研项目\"></a><strong>私人科研项目</strong></h2><h3 id=\"1-GCModeller开放计算平台-VB-NET\"><a href=\"#1-GCModeller开放计算平台-VB-NET\" class=\"headerlink\" title=\"1. GCModeller开放计算平台 (VB.NET)\"></a>1. GCModeller开放计算平台 (VB.NET)</h3><blockquote>\n<p><strong>开发时间</strong>    2013.08 - 至今<br><strong>项目主页</strong>    <a href=\"http://gcmodeller.org\">http://gcmodeller.org</a><br><strong>在线服务</strong>    <a href=\"http://services.gcmodeller.org/\">http://services.gcmodeller.org/</a><br><strong>API 文档</strong>  <a href=\"http://docs.gcmodeller.org/\">http://docs.gcmodeller.org/</a></p>\n</blockquote>\n<p>GCModeller主要提供了一系列的免费开源工具用于进行原核生物的全基因组的生物网络系统模块的注释建模以及计算数据分析。目前GCModeller主要为国内外的大学以及生物测序公司提供收费的服务支持和数据分析服务。</p>\n<p>当前已经开发完成的比较成熟的分析功能模块有：</p>\n<blockquote>\n<ol>\n<li>基于序列特征模式以及比较基因组学的全基因组的基因表达调控网络的构建工具；</li>\n<li>RNA-Seq数据分析套件；本工具主要应用于差异表达基因的功能富集注释以及TSSs转录起始位点注释</li>\n<li>FBA细胞表型分析套件；在这个模块之中除了常规的FBA分析功能，还建立了一个自有的结合转录组测序数据以及代谢网络模型的遗传约束FBA计算模型</li>\n<li>细胞网络可视化套件与基因组可视化组件；</li>\n<li>大规模序列比对LocalBLAST/Clustal分析套件；</li>\n<li>生物数据挖掘分析组件。</li>\n<li>基因组序列特性位点的注释工具套件，这个工具套件主要用来分析酶切位点，转录因子结合位点，SNP位点</li>\n</ol>\n</blockquote>\n<p>以及一些通用化的生物信息学数据库的读写模块，这些生物信息学数据库主要包括有NCBI genbank数据库（*.gb, *.gff, *.ptt），对KEGG数据库的DBGET REST API的封装，桑格尔研究所的Xfam家族的Pfam， Rfam， iPfam等数据库的读取，MetaCyc生物模型数据库，对RegPrecise数据库的REST API的封装，等</p>\n<p>GCModeller项目目前正在申请<strong>美国微软公司Microsoft .NET Foundation开源基金会</strong>资助项目，GCModeller项目目前是继微软的西雅图雷德蒙德研究院MBF项目之后的.NET平台上面的第二大生物信息学分析项目。</p>\n<p><strong>这里列出了基于GCModeller的数据分析服务的SCI论文列表：</strong></p>\n<blockquote>\n<ol>\n<li><em><strong>Niu XN etc</strong>. Complete sequence and detailed analysis of the first indigenous plasmid from Xanthomonas oryzae pv. Oryzicola</em> (<strong>doi:</strong> <a href=\"http://bmcmicrobiol.biomedcentral.com/articles/10.1186/s12866-015-0562-x\">10.1186/s12866-015-0562-x</a>)</li>\n</ol>\n</blockquote>\n<h3 id=\"2-GCModeller分布式计算服务器集群环境-VB-NET\"><a href=\"#2-GCModeller分布式计算服务器集群环境-VB-NET\" class=\"headerlink\" title=\"2. GCModeller分布式计算服务器集群环境 (VB.NET)\"></a>2. GCModeller分布式计算服务器集群环境 (VB.NET)</h3><blockquote>\n<p><strong>开发时间</strong>    2016.03 - 至今<br><strong>项目主页</strong>  <a href=\"https://github.com/xieguigang/Microsoft.VisualBasic.Parallel\">https://github.com/xieguigang/Microsoft.VisualBasic.Parallel</a><br><strong>CodeProject知识库文章</strong> <a href=\"http://www.codeproject.com/Articles/1076209/Easy-Distribution-Computing-in-VisualBasic\">“Easy Distribution Computing in VisualBasic”</a></p>\n</blockquote>\n<p>本分布式计算环境是GCModeller计算系统的在线服务模块的组件之一，目标是构建一个高性能的在线分析计算平台。</p>\n<ul>\n<li>在本项目之中，个人尝试构建了一个面向编程透明的分布式文件系统，以及在远程主机上面执行本地函数指针的运行时环境。</li>\n<li>基于Linq表达式的面型对象的数据查询语言Linq脚本</li>\n<li>基于Linq脚本的RQL数据源查询系统，RQL语言项目是<a href=\"http://linq.gcmodeller.org\">http://linq.gcmodeller.org</a>平台的数据源驱动程序</li>\n</ul>\n<h3 id=\"3-R语言混合编程API\"><a href=\"#3-R语言混合编程API\" class=\"headerlink\" title=\"3. R语言混合编程API\"></a>3. R语言混合编程API</h3><blockquote>\n<p><strong>开发时间</strong>   2016.01 - 2016.03<br><strong>项目主页</strong>   <a href=\"https://github.com/SMRUCC/R.Bioinformatics\">https://github.com/SMRUCC/R.Bioinformatics</a><br><strong>CodeProject文章</strong>   <a href=\"http://www.codeproject.com/Articles/1083875/R-Statics-Language-API-to-VB-NET-Language\">“R Statics Language API to VB.NET Language”</a></p>\n</blockquote>\n<p>本混合编程环境是基于<a href=\"https://rdotnet.codeplex.com/\">R.NET</a>项目建立的R语言包函数对.NET语言的封装，其目的是为了更加方便快速的进行.NET语言对R语言的混合编程，从而极大的根据现有的R功能包来拓展.NET对数据进行计算分析以及可视化绘图的数据处理能力。GCModeller项目之中的相当一部分的RNA-seq转录组测序数据分析工具都是基于本混合编程的API环境而编写完成的。</p>\n<h2 id=\"个人编程框架环境\"><a href=\"#个人编程框架环境\" class=\"headerlink\" title=\"个人编程框架环境\"></a>个人编程框架环境</h2><h3 id=\"Microsoft-VisualBasic-App运行时环境\"><a href=\"#Microsoft-VisualBasic-App运行时环境\" class=\"headerlink\" title=\"Microsoft VisualBasic App运行时环境\"></a>Microsoft VisualBasic App运行时环境</h3><blockquote>\n<p><strong>开发时间</strong>   2015.11 - 至今<br><strong>Github项目</strong>  <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a><br><strong>API 文档库</strong>  <a href=\"http://framework-docs.xieguigang.me/\">http://framework-docs.xieguigang.me/</a></p>\n</blockquote>\n<p><strong>NuGet包安装</strong></p>\n<blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PM&gt; Install-Package VB_AppFramework</span><br><span class=\"line\">PM&gt; Install-Package VB_AppFramework_40</span><br></pre></td></tr></table></figure>\n</blockquote>\n<p>本编程框架主要是针对VisualBasic语言在服务器端应用进行的拓展，本框架环境极大的拓展了VisualBasic语言的编程语法以及数据处理能力。本编程框架同时也是GCModeller分析套件的基础运行时环境。在本框架之中主要包括了一个完整的.NET程序的调试器系统，命令行解释器系统，大型计算任务多任务进程并行化拓展，SDK API文档自动编译系统，面向大型数据集合的数据框架以及数据挖掘分析套件。</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/m.gif\" alt=\"\"></p>\n<h2 id=\"个人娱乐项目\"><a href=\"#个人娱乐项目\" class=\"headerlink\" title=\"个人娱乐项目\"></a>个人娱乐项目</h2><h3 id=\"Zplay-Music\"><a href=\"#Zplay-Music\" class=\"headerlink\" title=\"Zplay-Music\"></a>Zplay-Music</h3><blockquote>\n<p><strong>开发时间</strong>   2016.05<br><strong>Github项目</strong>   <a href=\"https://github.com/xieguigang/Zplay-Music\">https://github.com/xieguigang/Zplay-Music</a></p>\n</blockquote>\n<p>一个个人进行多媒体编程以及UI编程练习的小项目，基于<a href=\"http://libzplay.sourceforge.net/\">libzplay</a>播放器核心。主要模仿了QQ音乐网页版UI的本地音乐播放器，支持无损音乐的播放以及与Ubuntu系统相似的notify-osd消息通知</p>\n<hr>\n<h3 id=\"谢桂纲的CodeProject社区文章列表\"><a href=\"#谢桂纲的CodeProject社区文章列表\" class=\"headerlink\" title=\"谢桂纲的CodeProject社区文章列表\"></a><strong>谢桂纲的CodeProject社区文章列表</strong></h3><iframe src=\"http://www.codeproject.com/members/flair/10137048?show=RepDesignation,MemberTypes,ArticleCount,MessageCount,AvgArtRating,Reputation\" height=\"150\" width=\"270\" scrolling=\"no\" frameborder=\"no\"></iframe>\n\n<ol>\n<li><a href=\"http://www.codeproject.com/Articles/1083875/R-Statics-Language-API-to-VB-NET-Language\">R Statics Language API to VB.NET Language</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/1090178/Venn-Diagram-in-VisualBasic\">Venn Diagram in VisualBasic</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/890099/R-language-S-Object-Serialization-to-NET-Object\">R language S4Object Serialization to .NET Object</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\">Code style guidelines for Microsoft VisualBasic</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\">Easy Document in VisualBasic</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/832975/Guide-line-of-integrated-ShellScript-with-R-Hybrid\">Guide line of integrated ShellScript with R Hybrid programming</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/989264/Auto-Generated-visual-basic-source-code-from-SQL\">Auto-Generated visual basic source code from SQL</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/638976/Visual-Basic-Using-Reflection-to-Map-DataTable-in\">Visual Basic Using Reflection to Map DataTable in MySQL Database</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/721827/LINQ-Script-A-Universal-Object-Oriented-Database-Q\">LINQ Script: A Universal Object-Oriented Database Query Language</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/646391/A-complex-Mathematics-expression-evaluation-module\">A complex Mathematics expression evaluation module in Visual Basic</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/1088282/VisualBasic-Machine-Learning-Step-The-Q-Learning\">VisualBasic Machine Learning, Step 1: The Q-Learning</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/664153/Modeling-the-Biochemical-System-Using-VB\">Modeling the Biochemical System Using VB</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/820854/Powerful-ShellScript-for-bioinformatics-researcher\">Powerful ShellScript for bioinformatics researchers</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/1095279/Draw-sequence-logo\">Draw sequence logo</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/1076209/Easy-Distribution-Computing-in-VisualBasic\">Easy Distribution Computing in VisualBasic</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/1068466/Simple-HTTP-Server-in-VisualBasic\">Simple HTTP Server in VisualBasic</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/788006/A-powerful-CSV-document-wrapper-library\">A powerful CSV document wrapper library</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/703590/Develop-a-Plugin-extension-for-your-VisualBasic-ap\">Develop a Plugin extension for your VisualBasic application</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/1055849/Levenshtein-Edit-Distance\">Levenshtein Edit Distance [Technical Blog]</a></li>\n<li><a href=\"http://www.codeproject.com/Articles/1055851/Generate-Color-Mappings-on-Circos-plot-for-prokary\">Generate Color Mappings on Circos plot for prokaryote comparative genomics [Technical Blog]</a></li>\n</ol>\n<hr>\n<blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/my/CIMG0452.JPG\" alt=\"\"></p>\n</blockquote>\n"},{"title":"My nuget packages","date":"2016-06-10T09:25:01.000Z","_content":"\nMy published nuget packages were indexed at here:\n# __--==Index==--__\n## GCModeller.Core\n+ [GCModeller.Core.1.0.0](GCModeller.Core/GCModeller.Core.1.0.0.html)<br />\n+ [GCModeller.Core.1.0.1](GCModeller.Core/GCModeller.Core.1.0.1.html)<br />\n+ [GCModeller.Core.1.0.11](GCModeller.Core/GCModeller.Core.1.0.11.html)<br />\n+ [GCModeller.Core.1.0.12](GCModeller.Core/GCModeller.Core.1.0.12.html)<br />\n\n## httpd\n+ [VB.httpd.1.0.0](httpd/VB.httpd.1.0.0.html)<br />\n+ [VB.httpd.1.0.1](httpd/VB.httpd.1.0.1.html)<br />\n+ [VB.httpd.1.0.12](httpd/VB.httpd.1.0.12.html)<br />\n+ [VB.httpd.1.0.13](httpd/VB.httpd.1.0.13.html)<br />\n\n## NCBI_localblast\n+ [NCBI_localblast.1.0.0](NCBI_localblast/NCBI_localblast.1.0.0.html)<br />\n+ [NCBI_localblast.1.0.1](NCBI_localblast/NCBI_localblast.1.0.1.html)<br />\n+ [NCBI_localblast.1.0.11](NCBI_localblast/NCBI_localblast.1.0.11.html)<br />\n+ [NCBI_localblast.1.0.12](NCBI_localblast/NCBI_localblast.1.0.12.html)<br />\n\n## Notify-OSD\n+ [Notify-OSD.1.0.0](Notify-OSD/Notify-OSD.1.0.0.html)<br />\n+ [Notify-OSD.1.0.1](Notify-OSD/Notify-OSD.1.0.1.html)<br />\n+ [Notify-OSD.1.0.11](Notify-OSD/Notify-OSD.1.0.11.html)<br />\n+ [Notify-OSD.1.0.12](Notify-OSD/Notify-OSD.1.0.12.html)<br />\n\n## VB.DBI\n+ [VisualBasic.DBI.1.0.0](VB.DBI/VisualBasic.DBI.1.0.0.html)<br />\n\n## VB.WinForm\n+ [VisualBasic.WinForm.1.0.0](VB.WinForm/VisualBasic.WinForm.1.0.0.html)<br />\n+ [VisualBasic.WinForm.1.0.1](VB.WinForm/VisualBasic.WinForm.1.0.1.html)<br />\n+ [VisualBasic.WinForm.1.0.13](VB.WinForm/VisualBasic.WinForm.1.0.13.html)<br />\n\n## VB_AppFramework\n+ [VB_AppFramework.1.0.0](VB_AppFramework/VB_AppFramework.1.0.0.html)<br />\n+ [VB_AppFramework.1.0.1](VB_AppFramework/VB_AppFramework.1.0.1.html)<br />\n+ [VB_AppFramework.1.0.2](VB_AppFramework/VB_AppFramework.1.0.2.html)<br />\n+ [VB_AppFramework.1.0.25](VB_AppFramework/VB_AppFramework.1.0.25.html)<br />\n+ [VB_AppFramework.1.0.26](VB_AppFramework/VB_AppFramework.1.0.26.html)<br />\n+ [VB_AppFramework.1.0.28](VB_AppFramework/VB_AppFramework.1.0.28.html)<br />\n+ [VB_AppFramework.1.0.3](VB_AppFramework/VB_AppFramework.1.0.3.html)<br />\n+ [VB_AppFramework.1.0.30](VB_AppFramework/VB_AppFramework.1.0.30.html)<br />\n+ [VB_AppFramework.1.0.35](VB_AppFramework/VB_AppFramework.1.0.35.html)<br />\n+ [VB_AppFramework.1.0.40](VB_AppFramework/VB_AppFramework.1.0.40.html)<br />\n\n## VB_AppFramework_40\n+ [VB_AppFramework_40.1.0.0](VB_AppFramework_40/VB_AppFramework_40.1.0.0.html)<br />\n+ [VB_AppFramework_40.1.0.1](VB_AppFramework_40/VB_AppFramework_40.1.0.1.html)<br />\n+ [VB_AppFramework_40.1.0.2](VB_AppFramework_40/VB_AppFramework_40.1.0.2.html)<br />\n+ [VB_AppFramework_40.1.0.29](VB_AppFramework_40/VB_AppFramework_40.1.0.29.html)<br />\n+ [VB_AppFramework_40.1.0.35](VB_AppFramework_40/VB_AppFramework_40.1.0.35.html)<br />\n\n","source":"nuget/index.md","raw":"---\ntitle: My nuget packages\ndate: 6/10/2016 5:25:01 PM\n---\n\nMy published nuget packages were indexed at here:\n# __--==Index==--__\n## GCModeller.Core\n+ [GCModeller.Core.1.0.0](GCModeller.Core/GCModeller.Core.1.0.0.html)<br />\n+ [GCModeller.Core.1.0.1](GCModeller.Core/GCModeller.Core.1.0.1.html)<br />\n+ [GCModeller.Core.1.0.11](GCModeller.Core/GCModeller.Core.1.0.11.html)<br />\n+ [GCModeller.Core.1.0.12](GCModeller.Core/GCModeller.Core.1.0.12.html)<br />\n\n## httpd\n+ [VB.httpd.1.0.0](httpd/VB.httpd.1.0.0.html)<br />\n+ [VB.httpd.1.0.1](httpd/VB.httpd.1.0.1.html)<br />\n+ [VB.httpd.1.0.12](httpd/VB.httpd.1.0.12.html)<br />\n+ [VB.httpd.1.0.13](httpd/VB.httpd.1.0.13.html)<br />\n\n## NCBI_localblast\n+ [NCBI_localblast.1.0.0](NCBI_localblast/NCBI_localblast.1.0.0.html)<br />\n+ [NCBI_localblast.1.0.1](NCBI_localblast/NCBI_localblast.1.0.1.html)<br />\n+ [NCBI_localblast.1.0.11](NCBI_localblast/NCBI_localblast.1.0.11.html)<br />\n+ [NCBI_localblast.1.0.12](NCBI_localblast/NCBI_localblast.1.0.12.html)<br />\n\n## Notify-OSD\n+ [Notify-OSD.1.0.0](Notify-OSD/Notify-OSD.1.0.0.html)<br />\n+ [Notify-OSD.1.0.1](Notify-OSD/Notify-OSD.1.0.1.html)<br />\n+ [Notify-OSD.1.0.11](Notify-OSD/Notify-OSD.1.0.11.html)<br />\n+ [Notify-OSD.1.0.12](Notify-OSD/Notify-OSD.1.0.12.html)<br />\n\n## VB.DBI\n+ [VisualBasic.DBI.1.0.0](VB.DBI/VisualBasic.DBI.1.0.0.html)<br />\n\n## VB.WinForm\n+ [VisualBasic.WinForm.1.0.0](VB.WinForm/VisualBasic.WinForm.1.0.0.html)<br />\n+ [VisualBasic.WinForm.1.0.1](VB.WinForm/VisualBasic.WinForm.1.0.1.html)<br />\n+ [VisualBasic.WinForm.1.0.13](VB.WinForm/VisualBasic.WinForm.1.0.13.html)<br />\n\n## VB_AppFramework\n+ [VB_AppFramework.1.0.0](VB_AppFramework/VB_AppFramework.1.0.0.html)<br />\n+ [VB_AppFramework.1.0.1](VB_AppFramework/VB_AppFramework.1.0.1.html)<br />\n+ [VB_AppFramework.1.0.2](VB_AppFramework/VB_AppFramework.1.0.2.html)<br />\n+ [VB_AppFramework.1.0.25](VB_AppFramework/VB_AppFramework.1.0.25.html)<br />\n+ [VB_AppFramework.1.0.26](VB_AppFramework/VB_AppFramework.1.0.26.html)<br />\n+ [VB_AppFramework.1.0.28](VB_AppFramework/VB_AppFramework.1.0.28.html)<br />\n+ [VB_AppFramework.1.0.3](VB_AppFramework/VB_AppFramework.1.0.3.html)<br />\n+ [VB_AppFramework.1.0.30](VB_AppFramework/VB_AppFramework.1.0.30.html)<br />\n+ [VB_AppFramework.1.0.35](VB_AppFramework/VB_AppFramework.1.0.35.html)<br />\n+ [VB_AppFramework.1.0.40](VB_AppFramework/VB_AppFramework.1.0.40.html)<br />\n\n## VB_AppFramework_40\n+ [VB_AppFramework_40.1.0.0](VB_AppFramework_40/VB_AppFramework_40.1.0.0.html)<br />\n+ [VB_AppFramework_40.1.0.1](VB_AppFramework_40/VB_AppFramework_40.1.0.1.html)<br />\n+ [VB_AppFramework_40.1.0.2](VB_AppFramework_40/VB_AppFramework_40.1.0.2.html)<br />\n+ [VB_AppFramework_40.1.0.29](VB_AppFramework_40/VB_AppFramework_40.1.0.29.html)<br />\n+ [VB_AppFramework_40.1.0.35](VB_AppFramework_40/VB_AppFramework_40.1.0.35.html)<br />\n\n","updated":"2016-06-10T09:25:01.607Z","path":"nuget/index.html","comments":1,"layout":"page","_id":"cipnbu3cm00038gv4zp6ari4s","content":"<p>My published nuget packages were indexed at here:</p>\n<h1 id=\"–-Index-–\"><a href=\"#–-Index-–\" class=\"headerlink\" title=\"–==Index==–\"></a><strong>–==Index==–</strong></h1><h2 id=\"GCModeller-Core\"><a href=\"#GCModeller-Core\" class=\"headerlink\" title=\"GCModeller.Core\"></a>GCModeller.Core</h2><ul>\n<li><a href=\"GCModeller.Core/GCModeller.Core.1.0.0.html\">GCModeller.Core.1.0.0</a><br></li>\n<li><a href=\"GCModeller.Core/GCModeller.Core.1.0.1.html\">GCModeller.Core.1.0.1</a><br></li>\n<li><a href=\"GCModeller.Core/GCModeller.Core.1.0.11.html\">GCModeller.Core.1.0.11</a><br></li>\n<li><a href=\"GCModeller.Core/GCModeller.Core.1.0.12.html\">GCModeller.Core.1.0.12</a><br></li>\n</ul>\n<h2 id=\"httpd\"><a href=\"#httpd\" class=\"headerlink\" title=\"httpd\"></a>httpd</h2><ul>\n<li><a href=\"httpd/VB.httpd.1.0.0.html\">VB.httpd.1.0.0</a><br></li>\n<li><a href=\"httpd/VB.httpd.1.0.1.html\">VB.httpd.1.0.1</a><br></li>\n<li><a href=\"httpd/VB.httpd.1.0.12.html\">VB.httpd.1.0.12</a><br></li>\n<li><a href=\"httpd/VB.httpd.1.0.13.html\">VB.httpd.1.0.13</a><br></li>\n</ul>\n<h2 id=\"NCBI-localblast\"><a href=\"#NCBI-localblast\" class=\"headerlink\" title=\"NCBI_localblast\"></a>NCBI_localblast</h2><ul>\n<li><a href=\"NCBI_localblast/NCBI_localblast.1.0.0.html\">NCBI_localblast.1.0.0</a><br></li>\n<li><a href=\"NCBI_localblast/NCBI_localblast.1.0.1.html\">NCBI_localblast.1.0.1</a><br></li>\n<li><a href=\"NCBI_localblast/NCBI_localblast.1.0.11.html\">NCBI_localblast.1.0.11</a><br></li>\n<li><a href=\"NCBI_localblast/NCBI_localblast.1.0.12.html\">NCBI_localblast.1.0.12</a><br></li>\n</ul>\n<h2 id=\"Notify-OSD\"><a href=\"#Notify-OSD\" class=\"headerlink\" title=\"Notify-OSD\"></a>Notify-OSD</h2><ul>\n<li><a href=\"Notify-OSD/Notify-OSD.1.0.0.html\">Notify-OSD.1.0.0</a><br></li>\n<li><a href=\"Notify-OSD/Notify-OSD.1.0.1.html\">Notify-OSD.1.0.1</a><br></li>\n<li><a href=\"Notify-OSD/Notify-OSD.1.0.11.html\">Notify-OSD.1.0.11</a><br></li>\n<li><a href=\"Notify-OSD/Notify-OSD.1.0.12.html\">Notify-OSD.1.0.12</a><br></li>\n</ul>\n<h2 id=\"VB-DBI\"><a href=\"#VB-DBI\" class=\"headerlink\" title=\"VB.DBI\"></a>VB.DBI</h2><ul>\n<li><a href=\"VB.DBI/VisualBasic.DBI.1.0.0.html\">VisualBasic.DBI.1.0.0</a><br></li>\n</ul>\n<h2 id=\"VB-WinForm\"><a href=\"#VB-WinForm\" class=\"headerlink\" title=\"VB.WinForm\"></a>VB.WinForm</h2><ul>\n<li><a href=\"VB.WinForm/VisualBasic.WinForm.1.0.0.html\">VisualBasic.WinForm.1.0.0</a><br></li>\n<li><a href=\"VB.WinForm/VisualBasic.WinForm.1.0.1.html\">VisualBasic.WinForm.1.0.1</a><br></li>\n<li><a href=\"VB.WinForm/VisualBasic.WinForm.1.0.13.html\">VisualBasic.WinForm.1.0.13</a><br></li>\n</ul>\n<h2 id=\"VB-AppFramework\"><a href=\"#VB-AppFramework\" class=\"headerlink\" title=\"VB_AppFramework\"></a>VB_AppFramework</h2><ul>\n<li><a href=\"VB_AppFramework/VB_AppFramework.1.0.0.html\">VB_AppFramework.1.0.0</a><br></li>\n<li><a href=\"VB_AppFramework/VB_AppFramework.1.0.1.html\">VB_AppFramework.1.0.1</a><br></li>\n<li><a href=\"VB_AppFramework/VB_AppFramework.1.0.2.html\">VB_AppFramework.1.0.2</a><br></li>\n<li><a href=\"VB_AppFramework/VB_AppFramework.1.0.25.html\">VB_AppFramework.1.0.25</a><br></li>\n<li><a href=\"VB_AppFramework/VB_AppFramework.1.0.26.html\">VB_AppFramework.1.0.26</a><br></li>\n<li><a href=\"VB_AppFramework/VB_AppFramework.1.0.28.html\">VB_AppFramework.1.0.28</a><br></li>\n<li><a href=\"VB_AppFramework/VB_AppFramework.1.0.3.html\">VB_AppFramework.1.0.3</a><br></li>\n<li><a href=\"VB_AppFramework/VB_AppFramework.1.0.30.html\">VB_AppFramework.1.0.30</a><br></li>\n<li><a href=\"VB_AppFramework/VB_AppFramework.1.0.35.html\">VB_AppFramework.1.0.35</a><br></li>\n<li><a href=\"VB_AppFramework/VB_AppFramework.1.0.40.html\">VB_AppFramework.1.0.40</a><br></li>\n</ul>\n<h2 id=\"VB-AppFramework-40\"><a href=\"#VB-AppFramework-40\" class=\"headerlink\" title=\"VB_AppFramework_40\"></a>VB_AppFramework_40</h2><ul>\n<li><a href=\"VB_AppFramework_40/VB_AppFramework_40.1.0.0.html\">VB_AppFramework_40.1.0.0</a><br></li>\n<li><a href=\"VB_AppFramework_40/VB_AppFramework_40.1.0.1.html\">VB_AppFramework_40.1.0.1</a><br></li>\n<li><a href=\"VB_AppFramework_40/VB_AppFramework_40.1.0.2.html\">VB_AppFramework_40.1.0.2</a><br></li>\n<li><a href=\"VB_AppFramework_40/VB_AppFramework_40.1.0.29.html\">VB_AppFramework_40.1.0.29</a><br></li>\n<li><a href=\"VB_AppFramework_40/VB_AppFramework_40.1.0.35.html\">VB_AppFramework_40.1.0.35</a><br></li>\n</ul>\n","excerpt":"","more":"<p>My published nuget packages were indexed at here:</p>\n<h1 id=\"–-Index-–\"><a href=\"#–-Index-–\" class=\"headerlink\" title=\"–==Index==–\"></a><strong>–==Index==–</strong></h1><h2 id=\"GCModeller-Core\"><a href=\"#GCModeller-Core\" class=\"headerlink\" title=\"GCModeller.Core\"></a>GCModeller.Core</h2><ul>\n<li><a href=\"GCModeller.Core/GCModeller.Core.1.0.0.html\">GCModeller.Core.1.0.0</a><br /></li>\n<li><a href=\"GCModeller.Core/GCModeller.Core.1.0.1.html\">GCModeller.Core.1.0.1</a><br /></li>\n<li><a href=\"GCModeller.Core/GCModeller.Core.1.0.11.html\">GCModeller.Core.1.0.11</a><br /></li>\n<li><a href=\"GCModeller.Core/GCModeller.Core.1.0.12.html\">GCModeller.Core.1.0.12</a><br /></li>\n</ul>\n<h2 id=\"httpd\"><a href=\"#httpd\" class=\"headerlink\" title=\"httpd\"></a>httpd</h2><ul>\n<li><a href=\"httpd/VB.httpd.1.0.0.html\">VB.httpd.1.0.0</a><br /></li>\n<li><a href=\"httpd/VB.httpd.1.0.1.html\">VB.httpd.1.0.1</a><br /></li>\n<li><a href=\"httpd/VB.httpd.1.0.12.html\">VB.httpd.1.0.12</a><br /></li>\n<li><a href=\"httpd/VB.httpd.1.0.13.html\">VB.httpd.1.0.13</a><br /></li>\n</ul>\n<h2 id=\"NCBI-localblast\"><a href=\"#NCBI-localblast\" class=\"headerlink\" title=\"NCBI_localblast\"></a>NCBI_localblast</h2><ul>\n<li><a href=\"NCBI_localblast/NCBI_localblast.1.0.0.html\">NCBI_localblast.1.0.0</a><br /></li>\n<li><a href=\"NCBI_localblast/NCBI_localblast.1.0.1.html\">NCBI_localblast.1.0.1</a><br /></li>\n<li><a href=\"NCBI_localblast/NCBI_localblast.1.0.11.html\">NCBI_localblast.1.0.11</a><br /></li>\n<li><a href=\"NCBI_localblast/NCBI_localblast.1.0.12.html\">NCBI_localblast.1.0.12</a><br /></li>\n</ul>\n<h2 id=\"Notify-OSD\"><a href=\"#Notify-OSD\" class=\"headerlink\" title=\"Notify-OSD\"></a>Notify-OSD</h2><ul>\n<li><a href=\"Notify-OSD/Notify-OSD.1.0.0.html\">Notify-OSD.1.0.0</a><br /></li>\n<li><a href=\"Notify-OSD/Notify-OSD.1.0.1.html\">Notify-OSD.1.0.1</a><br /></li>\n<li><a href=\"Notify-OSD/Notify-OSD.1.0.11.html\">Notify-OSD.1.0.11</a><br /></li>\n<li><a href=\"Notify-OSD/Notify-OSD.1.0.12.html\">Notify-OSD.1.0.12</a><br /></li>\n</ul>\n<h2 id=\"VB-DBI\"><a href=\"#VB-DBI\" class=\"headerlink\" title=\"VB.DBI\"></a>VB.DBI</h2><ul>\n<li><a href=\"VB.DBI/VisualBasic.DBI.1.0.0.html\">VisualBasic.DBI.1.0.0</a><br /></li>\n</ul>\n<h2 id=\"VB-WinForm\"><a href=\"#VB-WinForm\" class=\"headerlink\" title=\"VB.WinForm\"></a>VB.WinForm</h2><ul>\n<li><a href=\"VB.WinForm/VisualBasic.WinForm.1.0.0.html\">VisualBasic.WinForm.1.0.0</a><br /></li>\n<li><a href=\"VB.WinForm/VisualBasic.WinForm.1.0.1.html\">VisualBasic.WinForm.1.0.1</a><br /></li>\n<li><a href=\"VB.WinForm/VisualBasic.WinForm.1.0.13.html\">VisualBasic.WinForm.1.0.13</a><br /></li>\n</ul>\n<h2 id=\"VB-AppFramework\"><a href=\"#VB-AppFramework\" class=\"headerlink\" title=\"VB_AppFramework\"></a>VB_AppFramework</h2><ul>\n<li><a href=\"VB_AppFramework/VB_AppFramework.1.0.0.html\">VB_AppFramework.1.0.0</a><br /></li>\n<li><a href=\"VB_AppFramework/VB_AppFramework.1.0.1.html\">VB_AppFramework.1.0.1</a><br /></li>\n<li><a href=\"VB_AppFramework/VB_AppFramework.1.0.2.html\">VB_AppFramework.1.0.2</a><br /></li>\n<li><a href=\"VB_AppFramework/VB_AppFramework.1.0.25.html\">VB_AppFramework.1.0.25</a><br /></li>\n<li><a href=\"VB_AppFramework/VB_AppFramework.1.0.26.html\">VB_AppFramework.1.0.26</a><br /></li>\n<li><a href=\"VB_AppFramework/VB_AppFramework.1.0.28.html\">VB_AppFramework.1.0.28</a><br /></li>\n<li><a href=\"VB_AppFramework/VB_AppFramework.1.0.3.html\">VB_AppFramework.1.0.3</a><br /></li>\n<li><a href=\"VB_AppFramework/VB_AppFramework.1.0.30.html\">VB_AppFramework.1.0.30</a><br /></li>\n<li><a href=\"VB_AppFramework/VB_AppFramework.1.0.35.html\">VB_AppFramework.1.0.35</a><br /></li>\n<li><a href=\"VB_AppFramework/VB_AppFramework.1.0.40.html\">VB_AppFramework.1.0.40</a><br /></li>\n</ul>\n<h2 id=\"VB-AppFramework-40\"><a href=\"#VB-AppFramework-40\" class=\"headerlink\" title=\"VB_AppFramework_40\"></a>VB_AppFramework_40</h2><ul>\n<li><a href=\"VB_AppFramework_40/VB_AppFramework_40.1.0.0.html\">VB_AppFramework_40.1.0.0</a><br /></li>\n<li><a href=\"VB_AppFramework_40/VB_AppFramework_40.1.0.1.html\">VB_AppFramework_40.1.0.1</a><br /></li>\n<li><a href=\"VB_AppFramework_40/VB_AppFramework_40.1.0.2.html\">VB_AppFramework_40.1.0.2</a><br /></li>\n<li><a href=\"VB_AppFramework_40/VB_AppFramework_40.1.0.29.html\">VB_AppFramework_40.1.0.29</a><br /></li>\n<li><a href=\"VB_AppFramework_40/VB_AppFramework_40.1.0.35.html\">VB_AppFramework_40.1.0.35</a><br /></li>\n</ul>\n"},{"title":"NCBI localblast wrapper library","date":"2016-06-10T09:25:10.000Z","_content":"\n[<< Back to Index](../index.html)\n# NCBI localblast wrapper library\n\nVersion: **1.0.0**\n\nProject URL: https://github.com/SMRUCC/ncbi-localblast\n\nLicense: http://www.gnu.org/licenses/gpl.html\n\nTo install **[NCBI localblast wrapper library](https://www.nuget.org/packages/NCBI_localblast/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package NCBI_localblast**\n\n\n## Summary\nThis library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis for .NET language\n\nThis library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis\nproject source code can be download from github:\nhttps://github.com/SMRUCC/ncbi-localblast\n## Release Notes\nx64\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET4.6](https://www.nuget.org/packages?q=Tags%3A\".NET4.6\") [x64](https://www.nuget.org/packages?q=Tags%3A\"x64\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.dll<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.pdb<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.xml<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.NCBI.Extensions.dll<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.NCBI.Extensions.pdb<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.NCBI.Extensions.xml<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.exe<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.exe.config<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.pdb<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.vshost.exe<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.vshost.exe.config<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.vshost.exe.manifest<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.xml<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n\n","source":"nuget/NCBI_localblast/NCBI_localblast.1.0.0.md","raw":"---\ntitle: NCBI localblast wrapper library\ndate: 6/10/2016 5:25:10 PM\n---\n\n[<< Back to Index](../index.html)\n# NCBI localblast wrapper library\n\nVersion: **1.0.0**\n\nProject URL: https://github.com/SMRUCC/ncbi-localblast\n\nLicense: http://www.gnu.org/licenses/gpl.html\n\nTo install **[NCBI localblast wrapper library](https://www.nuget.org/packages/NCBI_localblast/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package NCBI_localblast**\n\n\n## Summary\nThis library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis for .NET language\n\nThis library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis\nproject source code can be download from github:\nhttps://github.com/SMRUCC/ncbi-localblast\n## Release Notes\nx64\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET4.6](https://www.nuget.org/packages?q=Tags%3A\".NET4.6\") [x64](https://www.nuget.org/packages?q=Tags%3A\"x64\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.dll<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.pdb<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.xml<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.NCBI.Extensions.dll<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.NCBI.Extensions.pdb<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.NCBI.Extensions.xml<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.exe<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.exe.config<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.pdb<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.vshost.exe<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.vshost.exe.config<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.vshost.exe.manifest<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.xml<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ ..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n\n","updated":"2016-06-10T09:25:10.489Z","path":"nuget/NCBI_localblast/NCBI_localblast.1.0.0.html","comments":1,"layout":"page","_id":"cipnbu3io00328gv4d6et7tz4","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"NCBI-localblast-wrapper-library\"><a href=\"#NCBI-localblast-wrapper-library\" class=\"headerlink\" title=\"NCBI localblast wrapper library\"></a>NCBI localblast wrapper library</h1><p>Version: <strong>1.0.0</strong></p>\n<p>Project URL: <a href=\"https://github.com/SMRUCC/ncbi-localblast\" target=\"_blank\" rel=\"external\">https://github.com/SMRUCC/ncbi-localblast</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/NCBI_localblast/\" target=\"_blank\" rel=\"external\">NCBI localblast wrapper library</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package NCBI_localblast</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>This library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis for .NET language</p>\n<p>This library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis<br>project source code can be download from github:<br><a href=\"https://github.com/SMRUCC/ncbi-localblast\" target=\"_blank\" rel=\"external\">https://github.com/SMRUCC/ncbi-localblast</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>x64</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\" target=\"_blank\" rel=\"external\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET4.6&quot;\" target=\"_blank\" rel=\"external\">.NET4.6</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;x64&quot;\" target=\"_blank\" rel=\"external\">x64</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.dll<br></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.pdb<br></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.xml<br></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.NCBI.Extensions.dll<br></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.NCBI.Extensions.pdb<br></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.NCBI.Extensions.xml<br></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.exe<br></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.exe.config<br></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.pdb<br></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.vshost.exe<br></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.vshost.exe.config<br></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.vshost.exe.manifest<br></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.xml<br></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"NCBI-localblast-wrapper-library\"><a href=\"#NCBI-localblast-wrapper-library\" class=\"headerlink\" title=\"NCBI localblast wrapper library\"></a>NCBI localblast wrapper library</h1><p>Version: <strong>1.0.0</strong></p>\n<p>Project URL: <a href=\"https://github.com/SMRUCC/ncbi-localblast\">https://github.com/SMRUCC/ncbi-localblast</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl.html\">http://www.gnu.org/licenses/gpl.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/NCBI_localblast/\">NCBI localblast wrapper library</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package NCBI_localblast</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>This library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis for .NET language</p>\n<p>This library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis<br>project source code can be download from github:<br><a href=\"https://github.com/SMRUCC/ncbi-localblast\">https://github.com/SMRUCC/ncbi-localblast</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>x64</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET4.6&quot;\">.NET4.6</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;x64&quot;\">x64</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br /></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br /></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br /></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.dll<br /></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.pdb<br /></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.xml<br /></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.NCBI.Extensions.dll<br /></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.NCBI.Extensions.pdb<br /></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.NCBI.Extensions.xml<br /></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.exe<br /></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.exe.config<br /></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.pdb<br /></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.vshost.exe<br /></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.vshost.exe.config<br /></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.vshost.exe.manifest<br /></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.xml<br /></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n</ul>\n"},{"title":"NCBI localblast tool library for .NET","date":"2016-06-10T09:25:12.000Z","_content":"\n[<< Back to Index](../index.html)\n# NCBI localblast tool library for .NET\n\nVersion: **1.0.11**\n\nProject URL: https://github.com/SMRUCC/ncbi-localblast\n\nLicense: http://www.gnu.org/licenses/gpl.html\n\nTo install **[NCBI localblast tool library for .NET](https://www.nuget.org/packages/NCBI_localblast/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package NCBI_localblast**\n\n\n## Summary\nThis library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis for .NET language. Required of .NET 4.6 and x64 platform\n\nThis library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis.\nThis package also provides a batch schedule extension for the large scale localblast alignment parallel task in multiple localblast process.\nproject source code can be download from github:\nhttps://github.com/SMRUCC/ncbi-localblast\n## Release Notes\nupdate vb.net app framework\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET4.6](https://www.nuget.org/packages?q=Tags%3A\".NET4.6\") [x64](https://www.nuget.org/packages?q=Tags%3A\"x64\") [GCModeller](https://www.nuget.org/packages?q=Tags%3A\"GCModeller\") [bioinformatics](https://www.nuget.org/packages?q=Tags%3A\"bioinformatics\") [NCBI](https://www.nuget.org/packages?q=Tags%3A\"NCBI\") [blast+](https://www.nuget.org/packages?q=Tags%3A\"blast+\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Data\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ x64\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.dll<br />\n+ x64\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.pdb<br />\n+ x64\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.xml<br />\n+ x64\\LANS.SystemsBiology.NCBI.Extensions.dll<br />\n+ x64\\LANS.SystemsBiology.NCBI.Extensions.pdb<br />\n+ x64\\LANS.SystemsBiology.NCBI.Extensions.xml<br />\n+ x64\\localblast.exe<br />\n+ x64\\localblast.exe.config<br />\n+ x64\\localblast.pdb<br />\n+ x64\\localblast.xml<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ x86\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.dll<br />\n+ x86\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.pdb<br />\n+ x86\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.xml<br />\n+ x86\\LANS.SystemsBiology.NCBI.Extensions.dll<br />\n+ x86\\LANS.SystemsBiology.NCBI.Extensions.pdb<br />\n+ x86\\LANS.SystemsBiology.NCBI.Extensions.xml<br />\n+ x86\\localblast.exe<br />\n+ x86\\localblast.exe.config<br />\n+ x86\\localblast.pdb<br />\n+ x86\\localblast.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n\n","source":"nuget/NCBI_localblast/NCBI_localblast.1.0.11.md","raw":"---\ntitle: NCBI localblast tool library for .NET\ndate: 6/10/2016 5:25:12 PM\n---\n\n[<< Back to Index](../index.html)\n# NCBI localblast tool library for .NET\n\nVersion: **1.0.11**\n\nProject URL: https://github.com/SMRUCC/ncbi-localblast\n\nLicense: http://www.gnu.org/licenses/gpl.html\n\nTo install **[NCBI localblast tool library for .NET](https://www.nuget.org/packages/NCBI_localblast/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package NCBI_localblast**\n\n\n## Summary\nThis library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis for .NET language. Required of .NET 4.6 and x64 platform\n\nThis library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis.\nThis package also provides a batch schedule extension for the large scale localblast alignment parallel task in multiple localblast process.\nproject source code can be download from github:\nhttps://github.com/SMRUCC/ncbi-localblast\n## Release Notes\nupdate vb.net app framework\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET4.6](https://www.nuget.org/packages?q=Tags%3A\".NET4.6\") [x64](https://www.nuget.org/packages?q=Tags%3A\"x64\") [GCModeller](https://www.nuget.org/packages?q=Tags%3A\"GCModeller\") [bioinformatics](https://www.nuget.org/packages?q=Tags%3A\"bioinformatics\") [NCBI](https://www.nuget.org/packages?q=Tags%3A\"NCBI\") [blast+](https://www.nuget.org/packages?q=Tags%3A\"blast+\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Data\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ x64\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.dll<br />\n+ x64\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.pdb<br />\n+ x64\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.xml<br />\n+ x64\\LANS.SystemsBiology.NCBI.Extensions.dll<br />\n+ x64\\LANS.SystemsBiology.NCBI.Extensions.pdb<br />\n+ x64\\LANS.SystemsBiology.NCBI.Extensions.xml<br />\n+ x64\\localblast.exe<br />\n+ x64\\localblast.exe.config<br />\n+ x64\\localblast.pdb<br />\n+ x64\\localblast.xml<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ x86\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.dll<br />\n+ x86\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.pdb<br />\n+ x86\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.xml<br />\n+ x86\\LANS.SystemsBiology.NCBI.Extensions.dll<br />\n+ x86\\LANS.SystemsBiology.NCBI.Extensions.pdb<br />\n+ x86\\LANS.SystemsBiology.NCBI.Extensions.xml<br />\n+ x86\\localblast.exe<br />\n+ x86\\localblast.exe.config<br />\n+ x86\\localblast.pdb<br />\n+ x86\\localblast.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n\n","updated":"2016-06-10T09:25:12.460Z","path":"nuget/NCBI_localblast/NCBI_localblast.1.0.11.html","comments":1,"layout":"page","_id":"cipnbu3iq00338gv4sfv11g1s","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"NCBI-localblast-tool-library-for-NET\"><a href=\"#NCBI-localblast-tool-library-for-NET\" class=\"headerlink\" title=\"NCBI localblast tool library for .NET\"></a>NCBI localblast tool library for .NET</h1><p>Version: <strong>1.0.11</strong></p>\n<p>Project URL: <a href=\"https://github.com/SMRUCC/ncbi-localblast\" target=\"_blank\" rel=\"external\">https://github.com/SMRUCC/ncbi-localblast</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/NCBI_localblast/\" target=\"_blank\" rel=\"external\">NCBI localblast tool library for .NET</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package NCBI_localblast</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>This library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis for .NET language. Required of .NET 4.6 and x64 platform</p>\n<p>This library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis.<br>This package also provides a batch schedule extension for the large scale localblast alignment parallel task in multiple localblast process.<br>project source code can be download from github:<br><a href=\"https://github.com/SMRUCC/ncbi-localblast\" target=\"_blank\" rel=\"external\">https://github.com/SMRUCC/ncbi-localblast</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>update vb.net app framework</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\" target=\"_blank\" rel=\"external\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET4.6&quot;\" target=\"_blank\" rel=\"external\">.NET4.6</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;x64&quot;\" target=\"_blank\" rel=\"external\">x64</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;GCModeller&quot;\" target=\"_blank\" rel=\"external\">GCModeller</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;bioinformatics&quot;\" target=\"_blank\" rel=\"external\">bioinformatics</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;NCBI&quot;\" target=\"_blank\" rel=\"external\">NCBI</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;blast+&quot;\" target=\"_blank\" rel=\"external\">blast+</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Data\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br></li>\n<li>x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br></li>\n<li>x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br></li>\n<li>x64\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.dll<br></li>\n<li>x64\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.pdb<br></li>\n<li>x64\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.xml<br></li>\n<li>x64\\LANS.SystemsBiology.NCBI.Extensions.dll<br></li>\n<li>x64\\LANS.SystemsBiology.NCBI.Extensions.pdb<br></li>\n<li>x64\\LANS.SystemsBiology.NCBI.Extensions.xml<br></li>\n<li>x64\\localblast.exe<br></li>\n<li>x64\\localblast.exe.config<br></li>\n<li>x64\\localblast.pdb<br></li>\n<li>x64\\localblast.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n<li>x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br></li>\n<li>x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br></li>\n<li>x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br></li>\n<li>x86\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.dll<br></li>\n<li>x86\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.pdb<br></li>\n<li>x86\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.xml<br></li>\n<li>x86\\LANS.SystemsBiology.NCBI.Extensions.dll<br></li>\n<li>x86\\LANS.SystemsBiology.NCBI.Extensions.pdb<br></li>\n<li>x86\\LANS.SystemsBiology.NCBI.Extensions.xml<br></li>\n<li>x86\\localblast.exe<br></li>\n<li>x86\\localblast.exe.config<br></li>\n<li>x86\\localblast.pdb<br></li>\n<li>x86\\localblast.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"NCBI-localblast-tool-library-for-NET\"><a href=\"#NCBI-localblast-tool-library-for-NET\" class=\"headerlink\" title=\"NCBI localblast tool library for .NET\"></a>NCBI localblast tool library for .NET</h1><p>Version: <strong>1.0.11</strong></p>\n<p>Project URL: <a href=\"https://github.com/SMRUCC/ncbi-localblast\">https://github.com/SMRUCC/ncbi-localblast</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl.html\">http://www.gnu.org/licenses/gpl.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/NCBI_localblast/\">NCBI localblast tool library for .NET</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package NCBI_localblast</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>This library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis for .NET language. Required of .NET 4.6 and x64 platform</p>\n<p>This library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis.<br>This package also provides a batch schedule extension for the large scale localblast alignment parallel task in multiple localblast process.<br>project source code can be download from github:<br><a href=\"https://github.com/SMRUCC/ncbi-localblast\">https://github.com/SMRUCC/ncbi-localblast</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>update vb.net app framework</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET4.6&quot;\">.NET4.6</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;x64&quot;\">x64</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;GCModeller&quot;\">GCModeller</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;bioinformatics&quot;\">bioinformatics</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;NCBI&quot;\">NCBI</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;blast+&quot;\">blast+</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Data\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br /></li>\n<li>x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br /></li>\n<li>x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br /></li>\n<li>x64\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.dll<br /></li>\n<li>x64\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.pdb<br /></li>\n<li>x64\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.xml<br /></li>\n<li>x64\\LANS.SystemsBiology.NCBI.Extensions.dll<br /></li>\n<li>x64\\LANS.SystemsBiology.NCBI.Extensions.pdb<br /></li>\n<li>x64\\LANS.SystemsBiology.NCBI.Extensions.xml<br /></li>\n<li>x64\\localblast.exe<br /></li>\n<li>x64\\localblast.exe.config<br /></li>\n<li>x64\\localblast.pdb<br /></li>\n<li>x64\\localblast.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n<li>x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br /></li>\n<li>x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br /></li>\n<li>x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br /></li>\n<li>x86\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.dll<br /></li>\n<li>x86\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.pdb<br /></li>\n<li>x86\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.xml<br /></li>\n<li>x86\\LANS.SystemsBiology.NCBI.Extensions.dll<br /></li>\n<li>x86\\LANS.SystemsBiology.NCBI.Extensions.pdb<br /></li>\n<li>x86\\LANS.SystemsBiology.NCBI.Extensions.xml<br /></li>\n<li>x86\\localblast.exe<br /></li>\n<li>x86\\localblast.exe.config<br /></li>\n<li>x86\\localblast.pdb<br /></li>\n<li>x86\\localblast.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n</ul>\n"},{"title":"NCBI localblast tool library for .NET","date":"2016-06-10T09:25:11.000Z","_content":"\n[<< Back to Index](../index.html)\n# NCBI localblast tool library for .NET\n\nVersion: **1.0.1**\n\nProject URL: https://github.com/SMRUCC/ncbi-localblast\n\nLicense: http://www.gnu.org/licenses/gpl.html\n\nTo install **[NCBI localblast tool library for .NET](https://www.nuget.org/packages/NCBI_localblast/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package NCBI_localblast**\n\n\n## Summary\nThis library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis for .NET language. Required of .NET 4.6 and x64 platform\n\nThis library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis.\nThis package also provides a batch schedule extension for the large scale localblast alignment parallel task in multiple localblast process.\nproject source code can be download from github:\nhttps://github.com/SMRUCC/ncbi-localblast\n## Release Notes\nx64\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET4.6](https://www.nuget.org/packages?q=Tags%3A\".NET4.6\") [x64](https://www.nuget.org/packages?q=Tags%3A\"x64\") [GCModeller](https://www.nuget.org/packages?q=Tags%3A\"GCModeller\") [bioinformatics](https://www.nuget.org/packages?q=Tags%3A\"bioinformatics\") [NCBI](https://www.nuget.org/packages?q=Tags%3A\"NCBI\") [blast+](https://www.nuget.org/packages?q=Tags%3A\"blast+\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Data\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.dll<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.pdb<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.xml<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.NCBI.Extensions.dll<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.NCBI.Extensions.pdb<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.NCBI.Extensions.xml<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.exe<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.exe.config<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.pdb<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.vshost.exe<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.vshost.exe.config<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.vshost.exe.manifest<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.xml<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n\n","source":"nuget/NCBI_localblast/NCBI_localblast.1.0.1.md","raw":"---\ntitle: NCBI localblast tool library for .NET\ndate: 6/10/2016 5:25:11 PM\n---\n\n[<< Back to Index](../index.html)\n# NCBI localblast tool library for .NET\n\nVersion: **1.0.1**\n\nProject URL: https://github.com/SMRUCC/ncbi-localblast\n\nLicense: http://www.gnu.org/licenses/gpl.html\n\nTo install **[NCBI localblast tool library for .NET](https://www.nuget.org/packages/NCBI_localblast/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package NCBI_localblast**\n\n\n## Summary\nThis library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis for .NET language. Required of .NET 4.6 and x64 platform\n\nThis library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis.\nThis package also provides a batch schedule extension for the large scale localblast alignment parallel task in multiple localblast process.\nproject source code can be download from github:\nhttps://github.com/SMRUCC/ncbi-localblast\n## Release Notes\nx64\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET4.6](https://www.nuget.org/packages?q=Tags%3A\".NET4.6\") [x64](https://www.nuget.org/packages?q=Tags%3A\"x64\") [GCModeller](https://www.nuget.org/packages?q=Tags%3A\"GCModeller\") [bioinformatics](https://www.nuget.org/packages?q=Tags%3A\"bioinformatics\") [NCBI](https://www.nuget.org/packages?q=Tags%3A\"NCBI\") [blast+](https://www.nuget.org/packages?q=Tags%3A\"blast+\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Data\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.dll<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.pdb<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.xml<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.NCBI.Extensions.dll<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.NCBI.Extensions.pdb<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.NCBI.Extensions.xml<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.exe<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.exe.config<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.pdb<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.vshost.exe<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.vshost.exe.config<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.vshost.exe.manifest<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\localblast.xml<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ ..\\..\\..\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n\n","updated":"2016-06-10T09:25:11.848Z","path":"nuget/NCBI_localblast/NCBI_localblast.1.0.1.html","comments":1,"layout":"page","_id":"cipnbu3iv00348gv49h29tjyw","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"NCBI-localblast-tool-library-for-NET\"><a href=\"#NCBI-localblast-tool-library-for-NET\" class=\"headerlink\" title=\"NCBI localblast tool library for .NET\"></a>NCBI localblast tool library for .NET</h1><p>Version: <strong>1.0.1</strong></p>\n<p>Project URL: <a href=\"https://github.com/SMRUCC/ncbi-localblast\" target=\"_blank\" rel=\"external\">https://github.com/SMRUCC/ncbi-localblast</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/NCBI_localblast/\" target=\"_blank\" rel=\"external\">NCBI localblast tool library for .NET</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package NCBI_localblast</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>This library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis for .NET language. Required of .NET 4.6 and x64 platform</p>\n<p>This library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis.<br>This package also provides a batch schedule extension for the large scale localblast alignment parallel task in multiple localblast process.<br>project source code can be download from github:<br><a href=\"https://github.com/SMRUCC/ncbi-localblast\" target=\"_blank\" rel=\"external\">https://github.com/SMRUCC/ncbi-localblast</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>x64</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\" target=\"_blank\" rel=\"external\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET4.6&quot;\" target=\"_blank\" rel=\"external\">.NET4.6</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;x64&quot;\" target=\"_blank\" rel=\"external\">x64</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;GCModeller&quot;\" target=\"_blank\" rel=\"external\">GCModeller</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;bioinformatics&quot;\" target=\"_blank\" rel=\"external\">bioinformatics</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;NCBI&quot;\" target=\"_blank\" rel=\"external\">NCBI</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;blast+&quot;\" target=\"_blank\" rel=\"external\">blast+</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Data\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.dll<br></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.pdb<br></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.xml<br></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.NCBI.Extensions.dll<br></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.NCBI.Extensions.pdb<br></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.NCBI.Extensions.xml<br></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\localblast.exe<br></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\localblast.exe.config<br></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\localblast.pdb<br></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\localblast.vshost.exe<br></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\localblast.vshost.exe.config<br></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\localblast.vshost.exe.manifest<br></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\localblast.xml<br></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"NCBI-localblast-tool-library-for-NET\"><a href=\"#NCBI-localblast-tool-library-for-NET\" class=\"headerlink\" title=\"NCBI localblast tool library for .NET\"></a>NCBI localblast tool library for .NET</h1><p>Version: <strong>1.0.1</strong></p>\n<p>Project URL: <a href=\"https://github.com/SMRUCC/ncbi-localblast\">https://github.com/SMRUCC/ncbi-localblast</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl.html\">http://www.gnu.org/licenses/gpl.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/NCBI_localblast/\">NCBI localblast tool library for .NET</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package NCBI_localblast</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>This library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis for .NET language. Required of .NET 4.6 and x64 platform</p>\n<p>This library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis.<br>This package also provides a batch schedule extension for the large scale localblast alignment parallel task in multiple localblast process.<br>project source code can be download from github:<br><a href=\"https://github.com/SMRUCC/ncbi-localblast\">https://github.com/SMRUCC/ncbi-localblast</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>x64</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET4.6&quot;\">.NET4.6</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;x64&quot;\">x64</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;GCModeller&quot;\">GCModeller</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;bioinformatics&quot;\">bioinformatics</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;NCBI&quot;\">NCBI</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;blast+&quot;\">blast+</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Data\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br /></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br /></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br /></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.dll<br /></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.pdb<br /></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.xml<br /></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.NCBI.Extensions.dll<br /></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.NCBI.Extensions.pdb<br /></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\LANS.SystemsBiology.NCBI.Extensions.xml<br /></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\localblast.exe<br /></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\localblast.exe.config<br /></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\localblast.pdb<br /></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\localblast.vshost.exe<br /></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\localblast.vshost.exe.config<br /></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\localblast.vshost.exe.manifest<br /></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\localblast.xml<br /></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>......\\localblast\\Tools\\bin\\x64\\Publish\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n</ul>\n"},{"title":"NCBI localblast tool library for .NET","date":"2016-06-10T09:25:13.000Z","_content":"\n[<< Back to Index](../index.html)\n# NCBI localblast tool library for .NET\n\nVersion: **1.0.12**\n\nProject URL: https://github.com/SMRUCC/ncbi-localblast\n\nLicense: http://www.gnu.org/licenses/gpl.html\n\nTo install **[NCBI localblast tool library for .NET](https://www.nuget.org/packages/NCBI_localblast/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package NCBI_localblast**\n\n\n## Summary\nThis library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis for .NET language. Required of .NET 4.6 and x64 platform\n\nThis library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis.\nThis package also provides a batch schedule extension for the large scale localblast alignment parallel task in multiple localblast process.\nproject source code can be download from github:\nhttps://github.com/SMRUCC/ncbi-localblast\n## Release Notes\nImprovements on the thread model of the batch task\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET4.6](https://www.nuget.org/packages?q=Tags%3A\".NET4.6\") [x64](https://www.nuget.org/packages?q=Tags%3A\"x64\") [GCModeller](https://www.nuget.org/packages?q=Tags%3A\"GCModeller\") [bioinformatics](https://www.nuget.org/packages?q=Tags%3A\"bioinformatics\") [NCBI](https://www.nuget.org/packages?q=Tags%3A\"NCBI\") [blast+](https://www.nuget.org/packages?q=Tags%3A\"blast+\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Data\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ x64\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.dll<br />\n+ x64\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.pdb<br />\n+ x64\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.xml<br />\n+ x64\\LANS.SystemsBiology.NCBI.Extensions.dll<br />\n+ x64\\LANS.SystemsBiology.NCBI.Extensions.pdb<br />\n+ x64\\LANS.SystemsBiology.NCBI.Extensions.xml<br />\n+ x64\\localblast.exe<br />\n+ x64\\localblast.exe.config<br />\n+ x64\\localblast.pdb<br />\n+ x64\\localblast.xml<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ x86\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.dll<br />\n+ x86\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.pdb<br />\n+ x86\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.xml<br />\n+ x86\\LANS.SystemsBiology.NCBI.Extensions.dll<br />\n+ x86\\LANS.SystemsBiology.NCBI.Extensions.pdb<br />\n+ x86\\LANS.SystemsBiology.NCBI.Extensions.xml<br />\n+ x86\\localblast.exe<br />\n+ x86\\localblast.exe.config<br />\n+ x86\\localblast.pdb<br />\n+ x86\\localblast.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n\n","source":"nuget/NCBI_localblast/NCBI_localblast.1.0.12.md","raw":"---\ntitle: NCBI localblast tool library for .NET\ndate: 6/10/2016 5:25:13 PM\n---\n\n[<< Back to Index](../index.html)\n# NCBI localblast tool library for .NET\n\nVersion: **1.0.12**\n\nProject URL: https://github.com/SMRUCC/ncbi-localblast\n\nLicense: http://www.gnu.org/licenses/gpl.html\n\nTo install **[NCBI localblast tool library for .NET](https://www.nuget.org/packages/NCBI_localblast/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package NCBI_localblast**\n\n\n## Summary\nThis library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis for .NET language. Required of .NET 4.6 and x64 platform\n\nThis library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis.\nThis package also provides a batch schedule extension for the large scale localblast alignment parallel task in multiple localblast process.\nproject source code can be download from github:\nhttps://github.com/SMRUCC/ncbi-localblast\n## Release Notes\nImprovements on the thread model of the batch task\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET4.6](https://www.nuget.org/packages?q=Tags%3A\".NET4.6\") [x64](https://www.nuget.org/packages?q=Tags%3A\"x64\") [GCModeller](https://www.nuget.org/packages?q=Tags%3A\"GCModeller\") [bioinformatics](https://www.nuget.org/packages?q=Tags%3A\"bioinformatics\") [NCBI](https://www.nuget.org/packages?q=Tags%3A\"NCBI\") [blast+](https://www.nuget.org/packages?q=Tags%3A\"blast+\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Data\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ x64\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.dll<br />\n+ x64\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.pdb<br />\n+ x64\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.xml<br />\n+ x64\\LANS.SystemsBiology.NCBI.Extensions.dll<br />\n+ x64\\LANS.SystemsBiology.NCBI.Extensions.pdb<br />\n+ x64\\LANS.SystemsBiology.NCBI.Extensions.xml<br />\n+ x64\\localblast.exe<br />\n+ x64\\localblast.exe.config<br />\n+ x64\\localblast.pdb<br />\n+ x64\\localblast.xml<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ x86\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.dll<br />\n+ x86\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.pdb<br />\n+ x86\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.xml<br />\n+ x86\\LANS.SystemsBiology.NCBI.Extensions.dll<br />\n+ x86\\LANS.SystemsBiology.NCBI.Extensions.pdb<br />\n+ x86\\LANS.SystemsBiology.NCBI.Extensions.xml<br />\n+ x86\\localblast.exe<br />\n+ x86\\localblast.exe.config<br />\n+ x86\\localblast.pdb<br />\n+ x86\\localblast.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n\n","updated":"2016-06-10T09:25:13.474Z","path":"nuget/NCBI_localblast/NCBI_localblast.1.0.12.html","comments":1,"layout":"page","_id":"cipnbu3ix00358gv4pktggvzt","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"NCBI-localblast-tool-library-for-NET\"><a href=\"#NCBI-localblast-tool-library-for-NET\" class=\"headerlink\" title=\"NCBI localblast tool library for .NET\"></a>NCBI localblast tool library for .NET</h1><p>Version: <strong>1.0.12</strong></p>\n<p>Project URL: <a href=\"https://github.com/SMRUCC/ncbi-localblast\" target=\"_blank\" rel=\"external\">https://github.com/SMRUCC/ncbi-localblast</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/NCBI_localblast/\" target=\"_blank\" rel=\"external\">NCBI localblast tool library for .NET</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package NCBI_localblast</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>This library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis for .NET language. Required of .NET 4.6 and x64 platform</p>\n<p>This library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis.<br>This package also provides a batch schedule extension for the large scale localblast alignment parallel task in multiple localblast process.<br>project source code can be download from github:<br><a href=\"https://github.com/SMRUCC/ncbi-localblast\" target=\"_blank\" rel=\"external\">https://github.com/SMRUCC/ncbi-localblast</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>Improvements on the thread model of the batch task</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\" target=\"_blank\" rel=\"external\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET4.6&quot;\" target=\"_blank\" rel=\"external\">.NET4.6</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;x64&quot;\" target=\"_blank\" rel=\"external\">x64</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;GCModeller&quot;\" target=\"_blank\" rel=\"external\">GCModeller</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;bioinformatics&quot;\" target=\"_blank\" rel=\"external\">bioinformatics</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;NCBI&quot;\" target=\"_blank\" rel=\"external\">NCBI</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;blast+&quot;\" target=\"_blank\" rel=\"external\">blast+</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Data\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br></li>\n<li>x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br></li>\n<li>x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br></li>\n<li>x64\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.dll<br></li>\n<li>x64\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.pdb<br></li>\n<li>x64\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.xml<br></li>\n<li>x64\\LANS.SystemsBiology.NCBI.Extensions.dll<br></li>\n<li>x64\\LANS.SystemsBiology.NCBI.Extensions.pdb<br></li>\n<li>x64\\LANS.SystemsBiology.NCBI.Extensions.xml<br></li>\n<li>x64\\localblast.exe<br></li>\n<li>x64\\localblast.exe.config<br></li>\n<li>x64\\localblast.pdb<br></li>\n<li>x64\\localblast.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n<li>x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br></li>\n<li>x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br></li>\n<li>x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br></li>\n<li>x86\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.dll<br></li>\n<li>x86\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.pdb<br></li>\n<li>x86\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.xml<br></li>\n<li>x86\\LANS.SystemsBiology.NCBI.Extensions.dll<br></li>\n<li>x86\\LANS.SystemsBiology.NCBI.Extensions.pdb<br></li>\n<li>x86\\LANS.SystemsBiology.NCBI.Extensions.xml<br></li>\n<li>x86\\localblast.exe<br></li>\n<li>x86\\localblast.exe.config<br></li>\n<li>x86\\localblast.pdb<br></li>\n<li>x86\\localblast.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"NCBI-localblast-tool-library-for-NET\"><a href=\"#NCBI-localblast-tool-library-for-NET\" class=\"headerlink\" title=\"NCBI localblast tool library for .NET\"></a>NCBI localblast tool library for .NET</h1><p>Version: <strong>1.0.12</strong></p>\n<p>Project URL: <a href=\"https://github.com/SMRUCC/ncbi-localblast\">https://github.com/SMRUCC/ncbi-localblast</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl.html\">http://www.gnu.org/licenses/gpl.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/NCBI_localblast/\">NCBI localblast tool library for .NET</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package NCBI_localblast</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>This library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis for .NET language. Required of .NET 4.6 and x64 platform</p>\n<p>This library provides the NCBI blast+ output parser and some data analysis API, like SBH, BBH, venn diagram analysis.<br>This package also provides a batch schedule extension for the large scale localblast alignment parallel task in multiple localblast process.<br>project source code can be download from github:<br><a href=\"https://github.com/SMRUCC/ncbi-localblast\">https://github.com/SMRUCC/ncbi-localblast</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>Improvements on the thread model of the batch task</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET4.6&quot;\">.NET4.6</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;x64&quot;\">x64</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;GCModeller&quot;\">GCModeller</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;bioinformatics&quot;\">bioinformatics</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;NCBI&quot;\">NCBI</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;blast+&quot;\">blast+</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Data\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br /></li>\n<li>x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br /></li>\n<li>x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br /></li>\n<li>x64\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.dll<br /></li>\n<li>x64\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.pdb<br /></li>\n<li>x64\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.xml<br /></li>\n<li>x64\\LANS.SystemsBiology.NCBI.Extensions.dll<br /></li>\n<li>x64\\LANS.SystemsBiology.NCBI.Extensions.pdb<br /></li>\n<li>x64\\LANS.SystemsBiology.NCBI.Extensions.xml<br /></li>\n<li>x64\\localblast.exe<br /></li>\n<li>x64\\localblast.exe.config<br /></li>\n<li>x64\\localblast.pdb<br /></li>\n<li>x64\\localblast.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n<li>x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br /></li>\n<li>x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br /></li>\n<li>x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br /></li>\n<li>x86\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.dll<br /></li>\n<li>x86\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.pdb<br /></li>\n<li>x86\\LANS.SystemsBiology.Localblast.Extensions.VennDiagram.xml<br /></li>\n<li>x86\\LANS.SystemsBiology.NCBI.Extensions.dll<br /></li>\n<li>x86\\LANS.SystemsBiology.NCBI.Extensions.pdb<br /></li>\n<li>x86\\LANS.SystemsBiology.NCBI.Extensions.xml<br /></li>\n<li>x86\\localblast.exe<br /></li>\n<li>x86\\localblast.exe.config<br /></li>\n<li>x86\\localblast.pdb<br /></li>\n<li>x86\\localblast.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n</ul>\n"},{"title":"VisualBasic Database Interface","date":"2016-06-10T09:25:18.000Z","_content":"\n[<< Back to Index](../index.html)\n# VisualBasic Database Interface\n\nVersion: **1.0.0**\n\nProject URL: https://github.com/xieguigang/VisualBasic.DBI\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic Database Interface](https://www.nuget.org/packages/VisualBasic.DBI/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VisualBasic.DBI**\n\n\n## Summary\nMySQL and SQLite Database data entity mapping interface for VisualBasic\n\nMySQL and SQLite Database data entity mapping interface for VisualBasic\n## Release Notes\nAnyCPU\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nGPL3\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [Mapping](https://www.nuget.org/packages?q=Tags%3A\"Mapping\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\") [MySQL](https://www.nuget.org/packages?q=Tags%3A\"MySQL\") [SQLite](https://www.nuget.org/packages?q=Tags%3A\"SQLite\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Data.Linq\",\"targetFramework\":\".NETFramework0.0, Version=v4.6\"}]\n```\n\n\n## File includes\n+ x64\\SQLite.Interop.dll<br />\n+ x86\\SQLite.Interop.dll<br />\n+ EntityFramework.dll<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ MySql.Data.dll<br />\n+ MySql.Data.Entity.EF5.dll<br />\n+ MySql.Data.Entity.EF6.dll<br />\n+ Oracle.LinuxCompatibility.LibMySQL.dll<br />\n+ Oracle.LinuxCompatibility.LibMySQL.dll.config<br />\n+ Oracle.LinuxCompatibility.LibMySQL.pdb<br />\n+ Oracle.LinuxCompatibility.LibMySQL.xml<br />\n+ System.Data.SQLite.dll<br />\n+ System.Data.SQLite.EF6.dll<br />\n+ System.Data.SQLite.EF6.pdb<br />\n+ System.Data.SQLite.Linq.DataMapping.Interface.dll<br />\n+ System.Data.SQLite.Linq.DataMapping.Interface.dll.config<br />\n+ System.Data.SQLite.Linq.DataMapping.Interface.pdb<br />\n+ System.Data.SQLite.Linq.DataMapping.Interface.xml<br />\n+ System.Data.SQLite.Linq.dll<br />\n+ System.Data.SQLite.Linq.pdb<br />\n+ System.Data.SQLite.pdb<br />\n\n","source":"nuget/VB.DBI/VisualBasic.DBI.1.0.0.md","raw":"---\ntitle: VisualBasic Database Interface\ndate: 6/10/2016 5:25:18 PM\n---\n\n[<< Back to Index](../index.html)\n# VisualBasic Database Interface\n\nVersion: **1.0.0**\n\nProject URL: https://github.com/xieguigang/VisualBasic.DBI\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic Database Interface](https://www.nuget.org/packages/VisualBasic.DBI/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VisualBasic.DBI**\n\n\n## Summary\nMySQL and SQLite Database data entity mapping interface for VisualBasic\n\nMySQL and SQLite Database data entity mapping interface for VisualBasic\n## Release Notes\nAnyCPU\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nGPL3\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [Mapping](https://www.nuget.org/packages?q=Tags%3A\"Mapping\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\") [MySQL](https://www.nuget.org/packages?q=Tags%3A\"MySQL\") [SQLite](https://www.nuget.org/packages?q=Tags%3A\"SQLite\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Data.Linq\",\"targetFramework\":\".NETFramework0.0, Version=v4.6\"}]\n```\n\n\n## File includes\n+ x64\\SQLite.Interop.dll<br />\n+ x86\\SQLite.Interop.dll<br />\n+ EntityFramework.dll<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ MySql.Data.dll<br />\n+ MySql.Data.Entity.EF5.dll<br />\n+ MySql.Data.Entity.EF6.dll<br />\n+ Oracle.LinuxCompatibility.LibMySQL.dll<br />\n+ Oracle.LinuxCompatibility.LibMySQL.dll.config<br />\n+ Oracle.LinuxCompatibility.LibMySQL.pdb<br />\n+ Oracle.LinuxCompatibility.LibMySQL.xml<br />\n+ System.Data.SQLite.dll<br />\n+ System.Data.SQLite.EF6.dll<br />\n+ System.Data.SQLite.EF6.pdb<br />\n+ System.Data.SQLite.Linq.DataMapping.Interface.dll<br />\n+ System.Data.SQLite.Linq.DataMapping.Interface.dll.config<br />\n+ System.Data.SQLite.Linq.DataMapping.Interface.pdb<br />\n+ System.Data.SQLite.Linq.DataMapping.Interface.xml<br />\n+ System.Data.SQLite.Linq.dll<br />\n+ System.Data.SQLite.Linq.pdb<br />\n+ System.Data.SQLite.pdb<br />\n\n","updated":"2016-06-10T09:25:18.506Z","path":"nuget/VB.DBI/VisualBasic.DBI.1.0.0.html","comments":1,"layout":"page","_id":"cipnbu3iy00368gv4lrkhorna","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-Database-Interface\"><a href=\"#VisualBasic-Database-Interface\" class=\"headerlink\" title=\"VisualBasic Database Interface\"></a>VisualBasic Database Interface</h1><p>Version: <strong>1.0.0</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic.DBI\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic.DBI</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VisualBasic.DBI/\" target=\"_blank\" rel=\"external\">VisualBasic Database Interface</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VisualBasic.DBI</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>MySQL and SQLite Database data entity mapping interface for VisualBasic</p>\n<p>MySQL and SQLite Database data entity mapping interface for VisualBasic</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>AnyCPU</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>GPL3</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\" target=\"_blank\" rel=\"external\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;Mapping&quot;\" target=\"_blank\" rel=\"external\">Mapping</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\" target=\"_blank\" rel=\"external\">.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;MySQL&quot;\" target=\"_blank\" rel=\"external\">MySQL</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;SQLite&quot;\" target=\"_blank\" rel=\"external\">SQLite</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Data.Linq\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework0.0, Version=v4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\SQLite.Interop.dll<br></li>\n<li>x86\\SQLite.Interop.dll<br></li>\n<li>EntityFramework.dll<br></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>MySql.Data.dll<br></li>\n<li>MySql.Data.Entity.EF5.dll<br></li>\n<li>MySql.Data.Entity.EF6.dll<br></li>\n<li>Oracle.LinuxCompatibility.LibMySQL.dll<br></li>\n<li>Oracle.LinuxCompatibility.LibMySQL.dll.config<br></li>\n<li>Oracle.LinuxCompatibility.LibMySQL.pdb<br></li>\n<li>Oracle.LinuxCompatibility.LibMySQL.xml<br></li>\n<li>System.Data.SQLite.dll<br></li>\n<li>System.Data.SQLite.EF6.dll<br></li>\n<li>System.Data.SQLite.EF6.pdb<br></li>\n<li>System.Data.SQLite.Linq.DataMapping.Interface.dll<br></li>\n<li>System.Data.SQLite.Linq.DataMapping.Interface.dll.config<br></li>\n<li>System.Data.SQLite.Linq.DataMapping.Interface.pdb<br></li>\n<li>System.Data.SQLite.Linq.DataMapping.Interface.xml<br></li>\n<li>System.Data.SQLite.Linq.dll<br></li>\n<li>System.Data.SQLite.Linq.pdb<br></li>\n<li>System.Data.SQLite.pdb<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-Database-Interface\"><a href=\"#VisualBasic-Database-Interface\" class=\"headerlink\" title=\"VisualBasic Database Interface\"></a>VisualBasic Database Interface</h1><p>Version: <strong>1.0.0</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic.DBI\">https://github.com/xieguigang/VisualBasic.DBI</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VisualBasic.DBI/\">VisualBasic Database Interface</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VisualBasic.DBI</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>MySQL and SQLite Database data entity mapping interface for VisualBasic</p>\n<p>MySQL and SQLite Database data entity mapping interface for VisualBasic</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>AnyCPU</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>GPL3</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;Mapping&quot;\">Mapping</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\">.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;MySQL&quot;\">MySQL</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;SQLite&quot;\">SQLite</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Data.Linq\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework0.0, Version=v4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\SQLite.Interop.dll<br /></li>\n<li>x86\\SQLite.Interop.dll<br /></li>\n<li>EntityFramework.dll<br /></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>MySql.Data.dll<br /></li>\n<li>MySql.Data.Entity.EF5.dll<br /></li>\n<li>MySql.Data.Entity.EF6.dll<br /></li>\n<li>Oracle.LinuxCompatibility.LibMySQL.dll<br /></li>\n<li>Oracle.LinuxCompatibility.LibMySQL.dll.config<br /></li>\n<li>Oracle.LinuxCompatibility.LibMySQL.pdb<br /></li>\n<li>Oracle.LinuxCompatibility.LibMySQL.xml<br /></li>\n<li>System.Data.SQLite.dll<br /></li>\n<li>System.Data.SQLite.EF6.dll<br /></li>\n<li>System.Data.SQLite.EF6.pdb<br /></li>\n<li>System.Data.SQLite.Linq.DataMapping.Interface.dll<br /></li>\n<li>System.Data.SQLite.Linq.DataMapping.Interface.dll.config<br /></li>\n<li>System.Data.SQLite.Linq.DataMapping.Interface.pdb<br /></li>\n<li>System.Data.SQLite.Linq.DataMapping.Interface.xml<br /></li>\n<li>System.Data.SQLite.Linq.dll<br /></li>\n<li>System.Data.SQLite.Linq.pdb<br /></li>\n<li>System.Data.SQLite.pdb<br /></li>\n</ul>\n"},{"title":"GCModeller base core modules","date":"2016-06-10T09:25:02.000Z","_content":"\n[<< Back to Index](../index.html)\n# GCModeller base core modules\n\nVersion: **1.0.0**\n\nProject URL: https://github.com/SMRUCC/GCModeller.Core\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[GCModeller base core modules](https://www.nuget.org/packages/GCModeller.Core/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package GCModeller.Core**\n\n\n## Summary\nThis library contains some common object model in the bioinformatics and database reader.\n\nThe common database reader includes:\nNCBI genbank reader\nNCBI gff/PTT feature sites document reader\nKEGG DBGET/LinkDB/BriteText/SSDB rest API\nMetaCyc database parser\nCommon Fasta sequence database I/O\nDOOR database reader\netc.\n## Release Notes\n\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n\n","source":"nuget/GCModeller.Core/GCModeller.Core.1.0.0.md","raw":"---\ntitle: GCModeller base core modules\ndate: 6/10/2016 5:25:02 PM\n---\n\n[<< Back to Index](../index.html)\n# GCModeller base core modules\n\nVersion: **1.0.0**\n\nProject URL: https://github.com/SMRUCC/GCModeller.Core\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[GCModeller base core modules](https://www.nuget.org/packages/GCModeller.Core/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package GCModeller.Core**\n\n\n## Summary\nThis library contains some common object model in the bioinformatics and database reader.\n\nThe common database reader includes:\nNCBI genbank reader\nNCBI gff/PTT feature sites document reader\nKEGG DBGET/LinkDB/BriteText/SSDB rest API\nMetaCyc database parser\nCommon Fasta sequence database I/O\nDOOR database reader\netc.\n## Release Notes\n\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n\n","updated":"2016-06-10T09:25:02.405Z","path":"nuget/GCModeller.Core/GCModeller.Core.1.0.0.html","comments":1,"layout":"page","_id":"cipnbu3j200378gv42o3js01a","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"GCModeller-base-core-modules\"><a href=\"#GCModeller-base-core-modules\" class=\"headerlink\" title=\"GCModeller base core modules\"></a>GCModeller base core modules</h1><p>Version: <strong>1.0.0</strong></p>\n<p>Project URL: <a href=\"https://github.com/SMRUCC/GCModeller.Core\" target=\"_blank\" rel=\"external\">https://github.com/SMRUCC/GCModeller.Core</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/GCModeller.Core/\" target=\"_blank\" rel=\"external\">GCModeller base core modules</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package GCModeller.Core</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>This library contains some common object model in the bioinformatics and database reader.</p>\n<p>The common database reader includes:<br>NCBI genbank reader<br>NCBI gff/PTT feature sites document reader<br>KEGG DBGET/LinkDB/BriteText/SSDB rest API<br>MetaCyc database parser<br>Common Fasta sequence database I/O<br>DOOR database reader<br>etc.</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\" target=\"_blank\" rel=\"external\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\" target=\"_blank\" rel=\"external\">.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br></li>\n<li>LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br></li>\n<li>LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"GCModeller-base-core-modules\"><a href=\"#GCModeller-base-core-modules\" class=\"headerlink\" title=\"GCModeller base core modules\"></a>GCModeller base core modules</h1><p>Version: <strong>1.0.0</strong></p>\n<p>Project URL: <a href=\"https://github.com/SMRUCC/GCModeller.Core\">https://github.com/SMRUCC/GCModeller.Core</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/GCModeller.Core/\">GCModeller base core modules</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package GCModeller.Core</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>This library contains some common object model in the bioinformatics and database reader.</p>\n<p>The common database reader includes:<br>NCBI genbank reader<br>NCBI gff/PTT feature sites document reader<br>KEGG DBGET/LinkDB/BriteText/SSDB rest API<br>MetaCyc database parser<br>Common Fasta sequence database I/O<br>DOOR database reader<br>etc.</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\">.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br /></li>\n<li>LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br /></li>\n<li>LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br /></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n</ul>\n"},{"title":"GCModeller base core modules","date":"2016-06-10T09:25:03.000Z","_content":"\n[<< Back to Index](../index.html)\n# GCModeller base core modules\n\nVersion: **1.0.1**\n\nProject URL: https://github.com/SMRUCC/GCModeller.Core\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[GCModeller base core modules](https://www.nuget.org/packages/GCModeller.Core/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package GCModeller.Core**\n\n\n## Summary\nThis library contains some common object model in the bioinformatics and database reader.\nRequired of .NET 4.6, and provides both x86 and x64 released\n\nThe common database reader includes:\nNCBI genbank reader\nNCBI gff/PTT feature sites document reader\nKEGG DBGET/LinkDB/BriteText/SSDB rest API\nMetaCyc database parser\nCommon Fasta sequence database I/O\nDOOR database reader\netc.\n## Release Notes\nReorganize of some genomics context model namespace\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\") [Bioinformatics](https://www.nuget.org/packages?q=Tags%3A\"Bioinformatics\") [GCModeller](https://www.nuget.org/packages?q=Tags%3A\"GCModeller\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Web.Extensions\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml.Linq\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n\n","source":"nuget/GCModeller.Core/GCModeller.Core.1.0.1.md","raw":"---\ntitle: GCModeller base core modules\ndate: 6/10/2016 5:25:03 PM\n---\n\n[<< Back to Index](../index.html)\n# GCModeller base core modules\n\nVersion: **1.0.1**\n\nProject URL: https://github.com/SMRUCC/GCModeller.Core\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[GCModeller base core modules](https://www.nuget.org/packages/GCModeller.Core/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package GCModeller.Core**\n\n\n## Summary\nThis library contains some common object model in the bioinformatics and database reader.\nRequired of .NET 4.6, and provides both x86 and x64 released\n\nThe common database reader includes:\nNCBI genbank reader\nNCBI gff/PTT feature sites document reader\nKEGG DBGET/LinkDB/BriteText/SSDB rest API\nMetaCyc database parser\nCommon Fasta sequence database I/O\nDOOR database reader\netc.\n## Release Notes\nReorganize of some genomics context model namespace\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\") [Bioinformatics](https://www.nuget.org/packages?q=Tags%3A\"Bioinformatics\") [GCModeller](https://www.nuget.org/packages?q=Tags%3A\"GCModeller\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Web.Extensions\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml.Linq\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ ..\\..\\..\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n\n","updated":"2016-06-10T09:25:03.389Z","path":"nuget/GCModeller.Core/GCModeller.Core.1.0.1.html","comments":1,"layout":"page","_id":"cipnbu3j400388gv4f4xb3o2a","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"GCModeller-base-core-modules\"><a href=\"#GCModeller-base-core-modules\" class=\"headerlink\" title=\"GCModeller base core modules\"></a>GCModeller base core modules</h1><p>Version: <strong>1.0.1</strong></p>\n<p>Project URL: <a href=\"https://github.com/SMRUCC/GCModeller.Core\" target=\"_blank\" rel=\"external\">https://github.com/SMRUCC/GCModeller.Core</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/GCModeller.Core/\" target=\"_blank\" rel=\"external\">GCModeller base core modules</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package GCModeller.Core</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>This library contains some common object model in the bioinformatics and database reader.<br>Required of .NET 4.6, and provides both x86 and x64 released</p>\n<p>The common database reader includes:<br>NCBI genbank reader<br>NCBI gff/PTT feature sites document reader<br>KEGG DBGET/LinkDB/BriteText/SSDB rest API<br>MetaCyc database parser<br>Common Fasta sequence database I/O<br>DOOR database reader<br>etc.</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>Reorganize of some genomics context model namespace</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\" target=\"_blank\" rel=\"external\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\" target=\"_blank\" rel=\"external\">.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;Bioinformatics&quot;\" target=\"_blank\" rel=\"external\">Bioinformatics</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;GCModeller&quot;\" target=\"_blank\" rel=\"external\">GCModeller</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Web.Extensions\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml.Linq\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"GCModeller-base-core-modules\"><a href=\"#GCModeller-base-core-modules\" class=\"headerlink\" title=\"GCModeller base core modules\"></a>GCModeller base core modules</h1><p>Version: <strong>1.0.1</strong></p>\n<p>Project URL: <a href=\"https://github.com/SMRUCC/GCModeller.Core\">https://github.com/SMRUCC/GCModeller.Core</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/GCModeller.Core/\">GCModeller base core modules</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package GCModeller.Core</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>This library contains some common object model in the bioinformatics and database reader.<br>Required of .NET 4.6, and provides both x86 and x64 released</p>\n<p>The common database reader includes:<br>NCBI genbank reader<br>NCBI gff/PTT feature sites document reader<br>KEGG DBGET/LinkDB/BriteText/SSDB rest API<br>MetaCyc database parser<br>Common Fasta sequence database I/O<br>DOOR database reader<br>etc.</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>Reorganize of some genomics context model namespace</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\">.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;Bioinformatics&quot;\">Bioinformatics</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;GCModeller&quot;\">GCModeller</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Web.Extensions\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml.Linq\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br /></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br /></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br /></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br /></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br /></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br /></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x64\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br /></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br /></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br /></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br /></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br /></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br /></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>......\\GCModeller.Core\\Bio.Assembly\\bin\\x86\\Publish\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n</ul>\n"},{"title":"GCModeller base core modules","date":"2016-06-10T09:25:05.000Z","_content":"\n[<< Back to Index](../index.html)\n# GCModeller base core modules\n\nVersion: **1.0.12**\n\nProject URL: https://github.com/SMRUCC/GCModeller.Core\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[GCModeller base core modules](https://www.nuget.org/packages/GCModeller.Core/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package GCModeller.Core**\n\n\n## Summary\nThis library contains some common object model in the bioinformatics and database reader.\nRequired of .NET 4.6, and provides both x86 and x64 released\n\nThe common database reader includes:\nNCBI genbank reader\nNCBI gff/PTT feature sites document reader\nKEGG DBGET/LinkDB/BriteText/SSDB rest API\nMetaCyc database parser\nCommon Fasta sequence database I/O\nDOOR database reader\netc.\n## Release Notes\nImprovements on the genomics context model\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\") [Bioinformatics](https://www.nuget.org/packages?q=Tags%3A\"Bioinformatics\") [GCModeller](https://www.nuget.org/packages?q=Tags%3A\"GCModeller\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Web.Extensions\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml.Linq\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x64\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ x64\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ x64\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ x64\\LANS.SystemsBiology.Repository.dll<br />\n+ x64\\LANS.SystemsBiology.Repository.pdb<br />\n+ x64\\LANS.SystemsBiology.Repository.xml<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x86\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ x86\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ x86\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ x86\\LANS.SystemsBiology.Repository.dll<br />\n+ x86\\LANS.SystemsBiology.Repository.pdb<br />\n+ x86\\LANS.SystemsBiology.Repository.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n\n","source":"nuget/GCModeller.Core/GCModeller.Core.1.0.12.md","raw":"---\ntitle: GCModeller base core modules\ndate: 6/10/2016 5:25:05 PM\n---\n\n[<< Back to Index](../index.html)\n# GCModeller base core modules\n\nVersion: **1.0.12**\n\nProject URL: https://github.com/SMRUCC/GCModeller.Core\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[GCModeller base core modules](https://www.nuget.org/packages/GCModeller.Core/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package GCModeller.Core**\n\n\n## Summary\nThis library contains some common object model in the bioinformatics and database reader.\nRequired of .NET 4.6, and provides both x86 and x64 released\n\nThe common database reader includes:\nNCBI genbank reader\nNCBI gff/PTT feature sites document reader\nKEGG DBGET/LinkDB/BriteText/SSDB rest API\nMetaCyc database parser\nCommon Fasta sequence database I/O\nDOOR database reader\netc.\n## Release Notes\nImprovements on the genomics context model\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\") [Bioinformatics](https://www.nuget.org/packages?q=Tags%3A\"Bioinformatics\") [GCModeller](https://www.nuget.org/packages?q=Tags%3A\"GCModeller\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Web.Extensions\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml.Linq\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x64\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ x64\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ x64\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ x64\\LANS.SystemsBiology.Repository.dll<br />\n+ x64\\LANS.SystemsBiology.Repository.pdb<br />\n+ x64\\LANS.SystemsBiology.Repository.xml<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x86\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ x86\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ x86\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ x86\\LANS.SystemsBiology.Repository.dll<br />\n+ x86\\LANS.SystemsBiology.Repository.pdb<br />\n+ x86\\LANS.SystemsBiology.Repository.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n\n","updated":"2016-06-10T09:25:05.371Z","path":"nuget/GCModeller.Core/GCModeller.Core.1.0.12.html","comments":1,"layout":"page","_id":"cipnbu3j600398gv42nhyotzy","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"GCModeller-base-core-modules\"><a href=\"#GCModeller-base-core-modules\" class=\"headerlink\" title=\"GCModeller base core modules\"></a>GCModeller base core modules</h1><p>Version: <strong>1.0.12</strong></p>\n<p>Project URL: <a href=\"https://github.com/SMRUCC/GCModeller.Core\" target=\"_blank\" rel=\"external\">https://github.com/SMRUCC/GCModeller.Core</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/GCModeller.Core/\" target=\"_blank\" rel=\"external\">GCModeller base core modules</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package GCModeller.Core</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>This library contains some common object model in the bioinformatics and database reader.<br>Required of .NET 4.6, and provides both x86 and x64 released</p>\n<p>The common database reader includes:<br>NCBI genbank reader<br>NCBI gff/PTT feature sites document reader<br>KEGG DBGET/LinkDB/BriteText/SSDB rest API<br>MetaCyc database parser<br>Common Fasta sequence database I/O<br>DOOR database reader<br>etc.</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>Improvements on the genomics context model</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\" target=\"_blank\" rel=\"external\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\" target=\"_blank\" rel=\"external\">.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;Bioinformatics&quot;\" target=\"_blank\" rel=\"external\">Bioinformatics</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;GCModeller&quot;\" target=\"_blank\" rel=\"external\">GCModeller</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Web.Extensions\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml.Linq\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br></li>\n<li>x64\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br></li>\n<li>x64\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br></li>\n<li>x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br></li>\n<li>x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br></li>\n<li>x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br></li>\n<li>x64\\LANS.SystemsBiology.Repository.dll<br></li>\n<li>x64\\LANS.SystemsBiology.Repository.pdb<br></li>\n<li>x64\\LANS.SystemsBiology.Repository.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n<li>x86\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br></li>\n<li>x86\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br></li>\n<li>x86\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br></li>\n<li>x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br></li>\n<li>x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br></li>\n<li>x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br></li>\n<li>x86\\LANS.SystemsBiology.Repository.dll<br></li>\n<li>x86\\LANS.SystemsBiology.Repository.pdb<br></li>\n<li>x86\\LANS.SystemsBiology.Repository.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"GCModeller-base-core-modules\"><a href=\"#GCModeller-base-core-modules\" class=\"headerlink\" title=\"GCModeller base core modules\"></a>GCModeller base core modules</h1><p>Version: <strong>1.0.12</strong></p>\n<p>Project URL: <a href=\"https://github.com/SMRUCC/GCModeller.Core\">https://github.com/SMRUCC/GCModeller.Core</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/GCModeller.Core/\">GCModeller base core modules</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package GCModeller.Core</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>This library contains some common object model in the bioinformatics and database reader.<br>Required of .NET 4.6, and provides both x86 and x64 released</p>\n<p>The common database reader includes:<br>NCBI genbank reader<br>NCBI gff/PTT feature sites document reader<br>KEGG DBGET/LinkDB/BriteText/SSDB rest API<br>MetaCyc database parser<br>Common Fasta sequence database I/O<br>DOOR database reader<br>etc.</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>Improvements on the genomics context model</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\">.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;Bioinformatics&quot;\">Bioinformatics</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;GCModeller&quot;\">GCModeller</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Web.Extensions\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml.Linq\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br /></li>\n<li>x64\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br /></li>\n<li>x64\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br /></li>\n<li>x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br /></li>\n<li>x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br /></li>\n<li>x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br /></li>\n<li>x64\\LANS.SystemsBiology.Repository.dll<br /></li>\n<li>x64\\LANS.SystemsBiology.Repository.pdb<br /></li>\n<li>x64\\LANS.SystemsBiology.Repository.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n<li>x86\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br /></li>\n<li>x86\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br /></li>\n<li>x86\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br /></li>\n<li>x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br /></li>\n<li>x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br /></li>\n<li>x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br /></li>\n<li>x86\\LANS.SystemsBiology.Repository.dll<br /></li>\n<li>x86\\LANS.SystemsBiology.Repository.pdb<br /></li>\n<li>x86\\LANS.SystemsBiology.Repository.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n</ul>\n"},{"title":"GCModeller base core modules","date":"2016-06-10T09:25:04.000Z","_content":"\n[<< Back to Index](../index.html)\n# GCModeller base core modules\n\nVersion: **1.0.11**\n\nProject URL: https://github.com/SMRUCC/GCModeller.Core\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[GCModeller base core modules](https://www.nuget.org/packages/GCModeller.Core/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package GCModeller.Core**\n\n\n## Summary\nThis library contains some common object model in the bioinformatics and database reader.\nRequired of .NET 4.6, and provides both x86 and x64 released\n\nThe common database reader includes:\nNCBI genbank reader\nNCBI gff/PTT feature sites document reader\nKEGG DBGET/LinkDB/BriteText/SSDB rest API\nMetaCyc database parser\nCommon Fasta sequence database I/O\nDOOR database reader\netc.\n## Release Notes\nupdate app framework\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\") [Bioinformatics](https://www.nuget.org/packages?q=Tags%3A\"Bioinformatics\") [GCModeller](https://www.nuget.org/packages?q=Tags%3A\"GCModeller\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Web.Extensions\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml.Linq\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x64\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ x64\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ x64\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ x86\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ x86\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n\n","source":"nuget/GCModeller.Core/GCModeller.Core.1.0.11.md","raw":"---\ntitle: GCModeller base core modules\ndate: 6/10/2016 5:25:04 PM\n---\n\n[<< Back to Index](../index.html)\n# GCModeller base core modules\n\nVersion: **1.0.11**\n\nProject URL: https://github.com/SMRUCC/GCModeller.Core\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[GCModeller base core modules](https://www.nuget.org/packages/GCModeller.Core/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package GCModeller.Core**\n\n\n## Summary\nThis library contains some common object model in the bioinformatics and database reader.\nRequired of .NET 4.6, and provides both x86 and x64 released\n\nThe common database reader includes:\nNCBI genbank reader\nNCBI gff/PTT feature sites document reader\nKEGG DBGET/LinkDB/BriteText/SSDB rest API\nMetaCyc database parser\nCommon Fasta sequence database I/O\nDOOR database reader\netc.\n## Release Notes\nupdate app framework\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\") [Bioinformatics](https://www.nuget.org/packages?q=Tags%3A\"Bioinformatics\") [GCModeller](https://www.nuget.org/packages?q=Tags%3A\"GCModeller\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Web.Extensions\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml.Linq\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x64\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ x64\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ x64\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ x86\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ x86\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br />\n+ x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br />\n+ x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n\n","updated":"2016-06-10T09:25:04.434Z","path":"nuget/GCModeller.Core/GCModeller.Core.1.0.11.html","comments":1,"layout":"page","_id":"cipnbu3ji003a8gv4qh3isoje","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"GCModeller-base-core-modules\"><a href=\"#GCModeller-base-core-modules\" class=\"headerlink\" title=\"GCModeller base core modules\"></a>GCModeller base core modules</h1><p>Version: <strong>1.0.11</strong></p>\n<p>Project URL: <a href=\"https://github.com/SMRUCC/GCModeller.Core\" target=\"_blank\" rel=\"external\">https://github.com/SMRUCC/GCModeller.Core</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/GCModeller.Core/\" target=\"_blank\" rel=\"external\">GCModeller base core modules</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package GCModeller.Core</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>This library contains some common object model in the bioinformatics and database reader.<br>Required of .NET 4.6, and provides both x86 and x64 released</p>\n<p>The common database reader includes:<br>NCBI genbank reader<br>NCBI gff/PTT feature sites document reader<br>KEGG DBGET/LinkDB/BriteText/SSDB rest API<br>MetaCyc database parser<br>Common Fasta sequence database I/O<br>DOOR database reader<br>etc.</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>update app framework</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\" target=\"_blank\" rel=\"external\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\" target=\"_blank\" rel=\"external\">.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;Bioinformatics&quot;\" target=\"_blank\" rel=\"external\">Bioinformatics</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;GCModeller&quot;\" target=\"_blank\" rel=\"external\">GCModeller</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Web.Extensions\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml.Linq\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br></li>\n<li>x64\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br></li>\n<li>x64\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br></li>\n<li>x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br></li>\n<li>x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br></li>\n<li>x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x86\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br></li>\n<li>x86\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br></li>\n<li>x86\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br></li>\n<li>x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br></li>\n<li>x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br></li>\n<li>x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"GCModeller-base-core-modules\"><a href=\"#GCModeller-base-core-modules\" class=\"headerlink\" title=\"GCModeller base core modules\"></a>GCModeller base core modules</h1><p>Version: <strong>1.0.11</strong></p>\n<p>Project URL: <a href=\"https://github.com/SMRUCC/GCModeller.Core\">https://github.com/SMRUCC/GCModeller.Core</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/GCModeller.Core/\">GCModeller base core modules</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package GCModeller.Core</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>This library contains some common object model in the bioinformatics and database reader.<br>Required of .NET 4.6, and provides both x86 and x64 released</p>\n<p>The common database reader includes:<br>NCBI genbank reader<br>NCBI gff/PTT feature sites document reader<br>KEGG DBGET/LinkDB/BriteText/SSDB rest API<br>MetaCyc database parser<br>Common Fasta sequence database I/O<br>DOOR database reader<br>etc.</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>update app framework</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\">.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;Bioinformatics&quot;\">Bioinformatics</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;GCModeller&quot;\">GCModeller</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Web.Extensions\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml.Linq\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br /></li>\n<li>x64\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br /></li>\n<li>x64\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br /></li>\n<li>x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br /></li>\n<li>x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br /></li>\n<li>x64\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x86\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br /></li>\n<li>x86\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br /></li>\n<li>x86\\Resources\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br /></li>\n<li>x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.dll<br /></li>\n<li>x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.pdb<br /></li>\n<li>x86\\LANS.SystemsBiology.Assembly.Components_v2.0_33.0.0.0__89845dcd8080cc91.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n</ul>\n"},{"title":"VisualBasic WinForm Feature API","date":"2016-06-10T09:25:19.000Z","_content":"\n[<< Back to Index](../index.html)\n# VisualBasic WinForm Feature API\n\nVersion: **1.0.0**\n\nProject URL: https://github.com/xieguigang/Microsoft.VisualBasic.Windows.Forms\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic WinForm Feature API](https://www.nuget.org/packages/VisualBasic.WinForm/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VisualBasic.WinForm**\n\n\n## Summary\n\n\nThis library provides windows shell extension feature API, example as the taskbar API, etc\n## Release Notes\nx86\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\ngpl3\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\") [Windows](https://www.nuget.org/packages?q=Tags%3A\"Windows\") [FeatureAPI](https://www.nuget.org/packages?q=Tags%3A\"FeatureAPI\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ Microsoft.VisualBasic.Windows.Forms.dll<br />\n+ Microsoft.VisualBasic.Windows.Forms.dll.config<br />\n+ Microsoft.VisualBasic.Windows.Forms.pdb<br />\n+ Microsoft.VisualBasic.Windows.Forms.xml<br />\n+ Microsoft.Windows.FeatureAPI.dll<br />\n+ Microsoft.Windows.FeatureAPI.pdb<br />\n+ Microsoft.Windows.FeatureAPI.xml<br />\n\n","source":"nuget/VB.WinForm/VisualBasic.WinForm.1.0.0.md","raw":"---\ntitle: VisualBasic WinForm Feature API\ndate: 6/10/2016 5:25:19 PM\n---\n\n[<< Back to Index](../index.html)\n# VisualBasic WinForm Feature API\n\nVersion: **1.0.0**\n\nProject URL: https://github.com/xieguigang/Microsoft.VisualBasic.Windows.Forms\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic WinForm Feature API](https://www.nuget.org/packages/VisualBasic.WinForm/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VisualBasic.WinForm**\n\n\n## Summary\n\n\nThis library provides windows shell extension feature API, example as the taskbar API, etc\n## Release Notes\nx86\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\ngpl3\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\") [Windows](https://www.nuget.org/packages?q=Tags%3A\"Windows\") [FeatureAPI](https://www.nuget.org/packages?q=Tags%3A\"FeatureAPI\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ Microsoft.VisualBasic.Windows.Forms.dll<br />\n+ Microsoft.VisualBasic.Windows.Forms.dll.config<br />\n+ Microsoft.VisualBasic.Windows.Forms.pdb<br />\n+ Microsoft.VisualBasic.Windows.Forms.xml<br />\n+ Microsoft.Windows.FeatureAPI.dll<br />\n+ Microsoft.Windows.FeatureAPI.pdb<br />\n+ Microsoft.Windows.FeatureAPI.xml<br />\n\n","updated":"2016-06-10T09:25:19.446Z","path":"nuget/VB.WinForm/VisualBasic.WinForm.1.0.0.html","comments":1,"layout":"page","_id":"cipnbu3jk003b8gv4znr8xnjg","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-WinForm-Feature-API\"><a href=\"#VisualBasic-WinForm-Feature-API\" class=\"headerlink\" title=\"VisualBasic WinForm Feature API\"></a>VisualBasic WinForm Feature API</h1><p>Version: <strong>1.0.0</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/Microsoft.VisualBasic.Windows.Forms\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/Microsoft.VisualBasic.Windows.Forms</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VisualBasic.WinForm/\" target=\"_blank\" rel=\"external\">VisualBasic WinForm Feature API</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VisualBasic.WinForm</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>This library provides windows shell extension feature API, example as the taskbar API, etc</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>x86</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>gpl3</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\" target=\"_blank\" rel=\"external\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\" target=\"_blank\" rel=\"external\">.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;Windows&quot;\" target=\"_blank\" rel=\"external\">Windows</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;FeatureAPI&quot;\" target=\"_blank\" rel=\"external\">FeatureAPI</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>Microsoft.VisualBasic.Windows.Forms.dll<br></li>\n<li>Microsoft.VisualBasic.Windows.Forms.dll.config<br></li>\n<li>Microsoft.VisualBasic.Windows.Forms.pdb<br></li>\n<li>Microsoft.VisualBasic.Windows.Forms.xml<br></li>\n<li>Microsoft.Windows.FeatureAPI.dll<br></li>\n<li>Microsoft.Windows.FeatureAPI.pdb<br></li>\n<li>Microsoft.Windows.FeatureAPI.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-WinForm-Feature-API\"><a href=\"#VisualBasic-WinForm-Feature-API\" class=\"headerlink\" title=\"VisualBasic WinForm Feature API\"></a>VisualBasic WinForm Feature API</h1><p>Version: <strong>1.0.0</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/Microsoft.VisualBasic.Windows.Forms\">https://github.com/xieguigang/Microsoft.VisualBasic.Windows.Forms</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VisualBasic.WinForm/\">VisualBasic WinForm Feature API</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VisualBasic.WinForm</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>This library provides windows shell extension feature API, example as the taskbar API, etc</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>x86</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>gpl3</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\">.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;Windows&quot;\">Windows</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;FeatureAPI&quot;\">FeatureAPI</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br /></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>Microsoft.VisualBasic.Windows.Forms.dll<br /></li>\n<li>Microsoft.VisualBasic.Windows.Forms.dll.config<br /></li>\n<li>Microsoft.VisualBasic.Windows.Forms.pdb<br /></li>\n<li>Microsoft.VisualBasic.Windows.Forms.xml<br /></li>\n<li>Microsoft.Windows.FeatureAPI.dll<br /></li>\n<li>Microsoft.Windows.FeatureAPI.pdb<br /></li>\n<li>Microsoft.Windows.FeatureAPI.xml<br /></li>\n</ul>\n"},{"title":"VisualBasic WinForm Feature API","date":"2016-06-10T09:25:20.000Z","_content":"\n[<< Back to Index](../index.html)\n# VisualBasic WinForm Feature API\n\nVersion: **1.0.1**\n\nProject URL: https://github.com/xieguigang/Microsoft.VisualBasic.Windows.Forms\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic WinForm Feature API](https://www.nuget.org/packages/VisualBasic.WinForm/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VisualBasic.WinForm**\n\n\n## Summary\n\n\nThis library provides windows shell extension feature API, example as the taskbar API, etc\n## Release Notes\nx86\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\ngpl3\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\") [Windows](https://www.nuget.org/packages?q=Tags%3A\"Windows\") [FeatureAPI](https://www.nuget.org/packages?q=Tags%3A\"FeatureAPI\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.Windows.Forms.dll<br />\n+ x86\\Microsoft.VisualBasic.Windows.Forms.dll.config<br />\n+ x86\\Microsoft.VisualBasic.Windows.Forms.pdb<br />\n+ x86\\Microsoft.VisualBasic.Windows.Forms.xml<br />\n+ x86\\Microsoft.Windows.FeatureAPI.dll<br />\n+ x86\\Microsoft.Windows.FeatureAPI.pdb<br />\n+ x86\\Microsoft.Windows.FeatureAPI.xml<br />\n\n","source":"nuget/VB.WinForm/VisualBasic.WinForm.1.0.1.md","raw":"---\ntitle: VisualBasic WinForm Feature API\ndate: 6/10/2016 5:25:20 PM\n---\n\n[<< Back to Index](../index.html)\n# VisualBasic WinForm Feature API\n\nVersion: **1.0.1**\n\nProject URL: https://github.com/xieguigang/Microsoft.VisualBasic.Windows.Forms\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic WinForm Feature API](https://www.nuget.org/packages/VisualBasic.WinForm/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VisualBasic.WinForm**\n\n\n## Summary\n\n\nThis library provides windows shell extension feature API, example as the taskbar API, etc\n## Release Notes\nx86\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\ngpl3\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\") [Windows](https://www.nuget.org/packages?q=Tags%3A\"Windows\") [FeatureAPI](https://www.nuget.org/packages?q=Tags%3A\"FeatureAPI\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.Windows.Forms.dll<br />\n+ x86\\Microsoft.VisualBasic.Windows.Forms.dll.config<br />\n+ x86\\Microsoft.VisualBasic.Windows.Forms.pdb<br />\n+ x86\\Microsoft.VisualBasic.Windows.Forms.xml<br />\n+ x86\\Microsoft.Windows.FeatureAPI.dll<br />\n+ x86\\Microsoft.Windows.FeatureAPI.pdb<br />\n+ x86\\Microsoft.Windows.FeatureAPI.xml<br />\n\n","updated":"2016-06-10T09:25:20.601Z","path":"nuget/VB.WinForm/VisualBasic.WinForm.1.0.1.html","comments":1,"layout":"page","_id":"cipnbu3jm003c8gv46dhekxtj","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-WinForm-Feature-API\"><a href=\"#VisualBasic-WinForm-Feature-API\" class=\"headerlink\" title=\"VisualBasic WinForm Feature API\"></a>VisualBasic WinForm Feature API</h1><p>Version: <strong>1.0.1</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/Microsoft.VisualBasic.Windows.Forms\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/Microsoft.VisualBasic.Windows.Forms</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VisualBasic.WinForm/\" target=\"_blank\" rel=\"external\">VisualBasic WinForm Feature API</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VisualBasic.WinForm</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>This library provides windows shell extension feature API, example as the taskbar API, etc</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>x86</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>gpl3</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\" target=\"_blank\" rel=\"external\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\" target=\"_blank\" rel=\"external\">.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;Windows&quot;\" target=\"_blank\" rel=\"external\">Windows</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;FeatureAPI&quot;\" target=\"_blank\" rel=\"external\">FeatureAPI</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.Windows.Forms.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.Windows.Forms.dll.config<br></li>\n<li>x86\\Microsoft.VisualBasic.Windows.Forms.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.Windows.Forms.xml<br></li>\n<li>x86\\Microsoft.Windows.FeatureAPI.dll<br></li>\n<li>x86\\Microsoft.Windows.FeatureAPI.pdb<br></li>\n<li>x86\\Microsoft.Windows.FeatureAPI.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-WinForm-Feature-API\"><a href=\"#VisualBasic-WinForm-Feature-API\" class=\"headerlink\" title=\"VisualBasic WinForm Feature API\"></a>VisualBasic WinForm Feature API</h1><p>Version: <strong>1.0.1</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/Microsoft.VisualBasic.Windows.Forms\">https://github.com/xieguigang/Microsoft.VisualBasic.Windows.Forms</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VisualBasic.WinForm/\">VisualBasic WinForm Feature API</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VisualBasic.WinForm</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>This library provides windows shell extension feature API, example as the taskbar API, etc</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>x86</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>gpl3</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\">.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;Windows&quot;\">Windows</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;FeatureAPI&quot;\">FeatureAPI</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.Windows.Forms.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.Windows.Forms.dll.config<br /></li>\n<li>x86\\Microsoft.VisualBasic.Windows.Forms.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.Windows.Forms.xml<br /></li>\n<li>x86\\Microsoft.Windows.FeatureAPI.dll<br /></li>\n<li>x86\\Microsoft.Windows.FeatureAPI.pdb<br /></li>\n<li>x86\\Microsoft.Windows.FeatureAPI.xml<br /></li>\n</ul>\n"},{"title":"VisualBasic WinForm Feature API","date":"2016-06-10T09:25:21.000Z","_content":"\n[<< Back to Index](../index.html)\n# VisualBasic WinForm Feature API\n\nVersion: **1.0.13**\n\nProject URL: https://github.com/xieguigang/Microsoft.VisualBasic.Windows.Forms\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic WinForm Feature API](https://www.nuget.org/packages/VisualBasic.WinForm/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VisualBasic.WinForm**\n\n\n## Summary\n\n\nThis library provides windows shell extension feature API, example as the taskbar API, etc\n## Release Notes\nx86\n\nUpdate the vb app framework to v1.0.35\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\ngpl3\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\") [Windows](https://www.nuget.org/packages?q=Tags%3A\"Windows\") [FeatureAPI](https://www.nuget.org/packages?q=Tags%3A\"FeatureAPI\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.Windows.Forms.dll<br />\n+ x86\\Microsoft.VisualBasic.Windows.Forms.dll.config<br />\n+ x86\\Microsoft.VisualBasic.Windows.Forms.pdb<br />\n+ x86\\Microsoft.VisualBasic.Windows.Forms.xml<br />\n+ x86\\Microsoft.Windows.FeatureAPI.dll<br />\n+ x86\\Microsoft.Windows.FeatureAPI.pdb<br />\n+ x86\\Microsoft.Windows.FeatureAPI.xml<br />\n\n","source":"nuget/VB.WinForm/VisualBasic.WinForm.1.0.13.md","raw":"---\ntitle: VisualBasic WinForm Feature API\ndate: 6/10/2016 5:25:21 PM\n---\n\n[<< Back to Index](../index.html)\n# VisualBasic WinForm Feature API\n\nVersion: **1.0.13**\n\nProject URL: https://github.com/xieguigang/Microsoft.VisualBasic.Windows.Forms\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic WinForm Feature API](https://www.nuget.org/packages/VisualBasic.WinForm/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VisualBasic.WinForm**\n\n\n## Summary\n\n\nThis library provides windows shell extension feature API, example as the taskbar API, etc\n## Release Notes\nx86\n\nUpdate the vb app framework to v1.0.35\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\ngpl3\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\") [Windows](https://www.nuget.org/packages?q=Tags%3A\"Windows\") [FeatureAPI](https://www.nuget.org/packages?q=Tags%3A\"FeatureAPI\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.Windows.Forms.dll<br />\n+ x86\\Microsoft.VisualBasic.Windows.Forms.dll.config<br />\n+ x86\\Microsoft.VisualBasic.Windows.Forms.pdb<br />\n+ x86\\Microsoft.VisualBasic.Windows.Forms.xml<br />\n+ x86\\Microsoft.Windows.FeatureAPI.dll<br />\n+ x86\\Microsoft.Windows.FeatureAPI.pdb<br />\n+ x86\\Microsoft.Windows.FeatureAPI.xml<br />\n\n","updated":"2016-06-10T09:25:21.347Z","path":"nuget/VB.WinForm/VisualBasic.WinForm.1.0.13.html","comments":1,"layout":"page","_id":"cipnbu3jo003d8gv42zkzregp","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-WinForm-Feature-API\"><a href=\"#VisualBasic-WinForm-Feature-API\" class=\"headerlink\" title=\"VisualBasic WinForm Feature API\"></a>VisualBasic WinForm Feature API</h1><p>Version: <strong>1.0.13</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/Microsoft.VisualBasic.Windows.Forms\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/Microsoft.VisualBasic.Windows.Forms</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VisualBasic.WinForm/\" target=\"_blank\" rel=\"external\">VisualBasic WinForm Feature API</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VisualBasic.WinForm</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>This library provides windows shell extension feature API, example as the taskbar API, etc</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>x86</p>\n<p>Update the vb app framework to v1.0.35</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>gpl3</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\" target=\"_blank\" rel=\"external\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\" target=\"_blank\" rel=\"external\">.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;Windows&quot;\" target=\"_blank\" rel=\"external\">Windows</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;FeatureAPI&quot;\" target=\"_blank\" rel=\"external\">FeatureAPI</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.Windows.Forms.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.Windows.Forms.dll.config<br></li>\n<li>x86\\Microsoft.VisualBasic.Windows.Forms.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.Windows.Forms.xml<br></li>\n<li>x86\\Microsoft.Windows.FeatureAPI.dll<br></li>\n<li>x86\\Microsoft.Windows.FeatureAPI.pdb<br></li>\n<li>x86\\Microsoft.Windows.FeatureAPI.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-WinForm-Feature-API\"><a href=\"#VisualBasic-WinForm-Feature-API\" class=\"headerlink\" title=\"VisualBasic WinForm Feature API\"></a>VisualBasic WinForm Feature API</h1><p>Version: <strong>1.0.13</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/Microsoft.VisualBasic.Windows.Forms\">https://github.com/xieguigang/Microsoft.VisualBasic.Windows.Forms</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VisualBasic.WinForm/\">VisualBasic WinForm Feature API</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VisualBasic.WinForm</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>This library provides windows shell extension feature API, example as the taskbar API, etc</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>x86</p>\n<p>Update the vb app framework to v1.0.35</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>gpl3</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\">.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;Windows&quot;\">Windows</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;FeatureAPI&quot;\">FeatureAPI</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.Windows.Forms.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.Windows.Forms.dll.config<br /></li>\n<li>x86\\Microsoft.VisualBasic.Windows.Forms.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.Windows.Forms.xml<br /></li>\n<li>x86\\Microsoft.Windows.FeatureAPI.dll<br /></li>\n<li>x86\\Microsoft.Windows.FeatureAPI.pdb<br /></li>\n<li>x86\\Microsoft.Windows.FeatureAPI.xml<br /></li>\n</ul>\n"},{"title":"Ubuntu like on screen notifications","date":"2016-06-10T09:25:14.000Z","_content":"\n[<< Back to Index](../index.html)\n# Ubuntu like on screen notifications\n\nVersion: **1.0.0**\n\nProject URL: https://github.com/xieguigang/Notify_OSD\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[Ubuntu like on screen notifications](https://www.nuget.org/packages/Notify-OSD/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package Notify-OSD**\n\n\n## Summary\nUbuntu like on screen notifications for .NET winform\n\nManual and source code can be download from github:\nhttps://github.com/xieguigang/Notify_OSD\n\nUbuntu like on screen notifications for .NET winform\n## Release Notes\nx86\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\ngpl3\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.exe<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.exe.config<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.pdb<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.xml<br />\n\n","source":"nuget/Notify-OSD/Notify-OSD.1.0.0.md","raw":"---\ntitle: Ubuntu like on screen notifications\ndate: 6/10/2016 5:25:14 PM\n---\n\n[<< Back to Index](../index.html)\n# Ubuntu like on screen notifications\n\nVersion: **1.0.0**\n\nProject URL: https://github.com/xieguigang/Notify_OSD\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[Ubuntu like on screen notifications](https://www.nuget.org/packages/Notify-OSD/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package Notify-OSD**\n\n\n## Summary\nUbuntu like on screen notifications for .NET winform\n\nManual and source code can be download from github:\nhttps://github.com/xieguigang/Notify_OSD\n\nUbuntu like on screen notifications for .NET winform\n## Release Notes\nx86\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\ngpl3\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.exe<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.exe.config<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.pdb<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.xml<br />\n\n","updated":"2016-06-10T09:25:14.444Z","path":"nuget/Notify-OSD/Notify-OSD.1.0.0.html","comments":1,"layout":"page","_id":"cipnbu3jr003e8gv40tbasdm0","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"Ubuntu-like-on-screen-notifications\"><a href=\"#Ubuntu-like-on-screen-notifications\" class=\"headerlink\" title=\"Ubuntu like on screen notifications\"></a>Ubuntu like on screen notifications</h1><p>Version: <strong>1.0.0</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/Notify_OSD\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/Notify_OSD</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/Notify-OSD/\" target=\"_blank\" rel=\"external\">Ubuntu like on screen notifications</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package Notify-OSD</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Ubuntu like on screen notifications for .NET winform</p>\n<p>Manual and source code can be download from github:<br><a href=\"https://github.com/xieguigang/Notify_OSD\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/Notify_OSD</a></p>\n<p>Ubuntu like on screen notifications for .NET winform</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>x86</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>gpl3</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\" target=\"_blank\" rel=\"external\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\" target=\"_blank\" rel=\"external\">.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.exe<br></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.exe.config<br></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.pdb<br></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"Ubuntu-like-on-screen-notifications\"><a href=\"#Ubuntu-like-on-screen-notifications\" class=\"headerlink\" title=\"Ubuntu like on screen notifications\"></a>Ubuntu like on screen notifications</h1><p>Version: <strong>1.0.0</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/Notify_OSD\">https://github.com/xieguigang/Notify_OSD</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/Notify-OSD/\">Ubuntu like on screen notifications</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package Notify-OSD</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Ubuntu like on screen notifications for .NET winform</p>\n<p>Manual and source code can be download from github:<br><a href=\"https://github.com/xieguigang/Notify_OSD\">https://github.com/xieguigang/Notify_OSD</a></p>\n<p>Ubuntu like on screen notifications for .NET winform</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>x86</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>gpl3</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\">.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.exe<br /></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.exe.config<br /></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.pdb<br /></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.xml<br /></li>\n</ul>\n"},{"title":"Ubuntu like on screen notifications","date":"2016-06-10T09:25:15.000Z","_content":"\n[<< Back to Index](../index.html)\n# Ubuntu like on screen notifications\n\nVersion: **1.0.1**\n\nProject URL: https://github.com/xieguigang/Notify_OSD\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[Ubuntu like on screen notifications](https://www.nuget.org/packages/Notify-OSD/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package Notify-OSD**\n\n\n## Summary\nUbuntu like on screen notifications for .NET winform\n\nManual and source code can be download from github:\nhttps://github.com/xieguigang/Notify_OSD\n\nUbuntu like on screen notifications for .NET winform\n## Release Notes\nx86\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\ngpl3\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.exe<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.exe.config<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.pdb<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.xml<br />\n\n","source":"nuget/Notify-OSD/Notify-OSD.1.0.1.md","raw":"---\ntitle: Ubuntu like on screen notifications\ndate: 6/10/2016 5:25:15 PM\n---\n\n[<< Back to Index](../index.html)\n# Ubuntu like on screen notifications\n\nVersion: **1.0.1**\n\nProject URL: https://github.com/xieguigang/Notify_OSD\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[Ubuntu like on screen notifications](https://www.nuget.org/packages/Notify-OSD/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package Notify-OSD**\n\n\n## Summary\nUbuntu like on screen notifications for .NET winform\n\nManual and source code can be download from github:\nhttps://github.com/xieguigang/Notify_OSD\n\nUbuntu like on screen notifications for .NET winform\n## Release Notes\nx86\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\ngpl3\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.exe<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.exe.config<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.pdb<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.xml<br />\n\n","updated":"2016-06-10T09:25:15.397Z","path":"nuget/Notify-OSD/Notify-OSD.1.0.1.html","comments":1,"layout":"page","_id":"cipnbu3jt003f8gv4pufo3w3m","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"Ubuntu-like-on-screen-notifications\"><a href=\"#Ubuntu-like-on-screen-notifications\" class=\"headerlink\" title=\"Ubuntu like on screen notifications\"></a>Ubuntu like on screen notifications</h1><p>Version: <strong>1.0.1</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/Notify_OSD\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/Notify_OSD</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/Notify-OSD/\" target=\"_blank\" rel=\"external\">Ubuntu like on screen notifications</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package Notify-OSD</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Ubuntu like on screen notifications for .NET winform</p>\n<p>Manual and source code can be download from github:<br><a href=\"https://github.com/xieguigang/Notify_OSD\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/Notify_OSD</a></p>\n<p>Ubuntu like on screen notifications for .NET winform</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>x86</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>gpl3</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\" target=\"_blank\" rel=\"external\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\" target=\"_blank\" rel=\"external\">.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.exe<br></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.exe.config<br></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.pdb<br></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"Ubuntu-like-on-screen-notifications\"><a href=\"#Ubuntu-like-on-screen-notifications\" class=\"headerlink\" title=\"Ubuntu like on screen notifications\"></a>Ubuntu like on screen notifications</h1><p>Version: <strong>1.0.1</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/Notify_OSD\">https://github.com/xieguigang/Notify_OSD</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/Notify-OSD/\">Ubuntu like on screen notifications</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package Notify-OSD</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Ubuntu like on screen notifications for .NET winform</p>\n<p>Manual and source code can be download from github:<br><a href=\"https://github.com/xieguigang/Notify_OSD\">https://github.com/xieguigang/Notify_OSD</a></p>\n<p>Ubuntu like on screen notifications for .NET winform</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>x86</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>gpl3</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\">.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.exe<br /></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.exe.config<br /></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.pdb<br /></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.xml<br /></li>\n</ul>\n"},{"title":"Ubuntu like on screen display notification","date":"2016-06-10T09:25:16.000Z","_content":"\n[<< Back to Index](../index.html)\n# Ubuntu like on screen display notification\n\nVersion: **1.0.11**\n\nProject URL: https://github.com/xieguigang/Notify_OSD\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[Ubuntu like on screen display notification](https://www.nuget.org/packages/Notify-OSD/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package Notify-OSD**\n\n\n## Summary\nUbuntu like on screen notifications component for .NET winform\n\nManual and source code can be download from github:\nhttps://github.com/xieguigang/Notify_OSD\n\nUbuntu like on screen notifications component for .NET winform\n## Release Notes\nAdd a limit of min size of message bubble size:\nubuntu notify-osd is limit to (352,73)\n\nnotify message bubble will not get focus and disturb your current work\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\ngpl3\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Drawing\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.exe<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.exe.config<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.pdb<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.xml<br />\n\n","source":"nuget/Notify-OSD/Notify-OSD.1.0.11.md","raw":"---\ntitle: Ubuntu like on screen display notification\ndate: 6/10/2016 5:25:16 PM\n---\n\n[<< Back to Index](../index.html)\n# Ubuntu like on screen display notification\n\nVersion: **1.0.11**\n\nProject URL: https://github.com/xieguigang/Notify_OSD\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[Ubuntu like on screen display notification](https://www.nuget.org/packages/Notify-OSD/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package Notify-OSD**\n\n\n## Summary\nUbuntu like on screen notifications component for .NET winform\n\nManual and source code can be download from github:\nhttps://github.com/xieguigang/Notify_OSD\n\nUbuntu like on screen notifications component for .NET winform\n## Release Notes\nAdd a limit of min size of message bubble size:\nubuntu notify-osd is limit to (352,73)\n\nnotify message bubble will not get focus and disturb your current work\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\ngpl3\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Drawing\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.exe<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.exe.config<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.pdb<br />\n+ C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.xml<br />\n\n","updated":"2016-06-10T09:25:16.411Z","path":"nuget/Notify-OSD/Notify-OSD.1.0.11.html","comments":1,"layout":"page","_id":"cipnbu3jv003g8gv4dhtm7620","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"Ubuntu-like-on-screen-display-notification\"><a href=\"#Ubuntu-like-on-screen-display-notification\" class=\"headerlink\" title=\"Ubuntu like on screen display notification\"></a>Ubuntu like on screen display notification</h1><p>Version: <strong>1.0.11</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/Notify_OSD\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/Notify_OSD</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/Notify-OSD/\" target=\"_blank\" rel=\"external\">Ubuntu like on screen display notification</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package Notify-OSD</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Ubuntu like on screen notifications component for .NET winform</p>\n<p>Manual and source code can be download from github:<br><a href=\"https://github.com/xieguigang/Notify_OSD\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/Notify_OSD</a></p>\n<p>Ubuntu like on screen notifications component for .NET winform</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>Add a limit of min size of message bubble size:<br>ubuntu notify-osd is limit to (352,73)</p>\n<p>notify message bubble will not get focus and disturb your current work</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>gpl3</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\" target=\"_blank\" rel=\"external\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\" target=\"_blank\" rel=\"external\">.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Drawing\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.exe<br></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.exe.config<br></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.pdb<br></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"Ubuntu-like-on-screen-display-notification\"><a href=\"#Ubuntu-like-on-screen-display-notification\" class=\"headerlink\" title=\"Ubuntu like on screen display notification\"></a>Ubuntu like on screen display notification</h1><p>Version: <strong>1.0.11</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/Notify_OSD\">https://github.com/xieguigang/Notify_OSD</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/Notify-OSD/\">Ubuntu like on screen display notification</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package Notify-OSD</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Ubuntu like on screen notifications component for .NET winform</p>\n<p>Manual and source code can be download from github:<br><a href=\"https://github.com/xieguigang/Notify_OSD\">https://github.com/xieguigang/Notify_OSD</a></p>\n<p>Ubuntu like on screen notifications component for .NET winform</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>Add a limit of min size of message bubble size:<br>ubuntu notify-osd is limit to (352,73)</p>\n<p>notify message bubble will not get focus and disturb your current work</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>gpl3</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\">.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Drawing\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.exe<br /></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.exe.config<br /></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.pdb<br /></li>\n<li>C:\\Users\\xieguigang\\Source\\Repos\\Notify_OSD\\bin\\x86\\Release\\notify_osd.xml<br /></li>\n</ul>\n"},{"title":"Ubuntu like on screen display notification","date":"2016-06-10T09:25:17.000Z","_content":"\n[<< Back to Index](../index.html)\n# Ubuntu like on screen display notification\n\nVersion: **1.0.12**\n\nProject URL: https://github.com/xieguigang/Notify_OSD\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[Ubuntu like on screen display notification](https://www.nuget.org/packages/Notify-OSD/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package Notify-OSD**\n\n\n## Summary\nUbuntu like on screen notifications component for .NET winform\n\nManual and source code can be download from github:\nhttps://github.com/xieguigang/Notify_OSD\n\nUbuntu like on screen notifications component for .NET winform\n## Release Notes\nupdate vb.net app framework to version 1.0.35\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\ngpl3\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Drawing\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\notify_osd.exe<br />\n+ x86\\notify_osd.exe.config<br />\n+ x86\\notify_osd.pdb<br />\n+ x86\\notify_osd.xml<br />\n\n","source":"nuget/Notify-OSD/Notify-OSD.1.0.12.md","raw":"---\ntitle: Ubuntu like on screen display notification\ndate: 6/10/2016 5:25:17 PM\n---\n\n[<< Back to Index](../index.html)\n# Ubuntu like on screen display notification\n\nVersion: **1.0.12**\n\nProject URL: https://github.com/xieguigang/Notify_OSD\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[Ubuntu like on screen display notification](https://www.nuget.org/packages/Notify-OSD/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package Notify-OSD**\n\n\n## Summary\nUbuntu like on screen notifications component for .NET winform\n\nManual and source code can be download from github:\nhttps://github.com/xieguigang/Notify_OSD\n\nUbuntu like on screen notifications component for .NET winform\n## Release Notes\nupdate vb.net app framework to version 1.0.35\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\ngpl3\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Drawing\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\notify_osd.exe<br />\n+ x86\\notify_osd.exe.config<br />\n+ x86\\notify_osd.pdb<br />\n+ x86\\notify_osd.xml<br />\n\n","updated":"2016-06-10T09:25:17.501Z","path":"nuget/Notify-OSD/Notify-OSD.1.0.12.html","comments":1,"layout":"page","_id":"cipnbu3jy003h8gv4j2w2huy7","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"Ubuntu-like-on-screen-display-notification\"><a href=\"#Ubuntu-like-on-screen-display-notification\" class=\"headerlink\" title=\"Ubuntu like on screen display notification\"></a>Ubuntu like on screen display notification</h1><p>Version: <strong>1.0.12</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/Notify_OSD\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/Notify_OSD</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/Notify-OSD/\" target=\"_blank\" rel=\"external\">Ubuntu like on screen display notification</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package Notify-OSD</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Ubuntu like on screen notifications component for .NET winform</p>\n<p>Manual and source code can be download from github:<br><a href=\"https://github.com/xieguigang/Notify_OSD\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/Notify_OSD</a></p>\n<p>Ubuntu like on screen notifications component for .NET winform</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>update vb.net app framework to version 1.0.35</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>gpl3</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\" target=\"_blank\" rel=\"external\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\" target=\"_blank\" rel=\"external\">.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Drawing\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x86\\notify_osd.exe<br></li>\n<li>x86\\notify_osd.exe.config<br></li>\n<li>x86\\notify_osd.pdb<br></li>\n<li>x86\\notify_osd.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"Ubuntu-like-on-screen-display-notification\"><a href=\"#Ubuntu-like-on-screen-display-notification\" class=\"headerlink\" title=\"Ubuntu like on screen display notification\"></a>Ubuntu like on screen display notification</h1><p>Version: <strong>1.0.12</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/Notify_OSD\">https://github.com/xieguigang/Notify_OSD</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/Notify-OSD/\">Ubuntu like on screen display notification</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package Notify-OSD</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Ubuntu like on screen notifications component for .NET winform</p>\n<p>Manual and source code can be download from github:<br><a href=\"https://github.com/xieguigang/Notify_OSD\">https://github.com/xieguigang/Notify_OSD</a></p>\n<p>Ubuntu like on screen notifications component for .NET winform</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>update vb.net app framework to version 1.0.35</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>gpl3</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\">.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Drawing\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x86\\notify_osd.exe<br /></li>\n<li>x86\\notify_osd.exe.config<br /></li>\n<li>x86\\notify_osd.pdb<br /></li>\n<li>x86\\notify_osd.xml<br /></li>\n</ul>\n"},{"title":"VisualBasic App Framework","date":"2016-06-10T09:25:22.000Z","_content":"\n[<< Back to Index](../index.html)\n# VisualBasic App Framework\n\nVersion: **1.0.0**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework](https://www.nuget.org/packages/VB_AppFramework/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework**\n\n\n## Summary\nRequired of .NET framework 4.6. and x64 program.\nThis package library enrichment the programming capability and language features of VisualBasic language\n\nSource code can be download from github.com:\nhttps://github.com/xieguigang/VisualBasic_AppFramework\n## Release Notes\n\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n\n","source":"nuget/VB_AppFramework/VB_AppFramework.1.0.0.md","raw":"---\ntitle: VisualBasic App Framework\ndate: 6/10/2016 5:25:22 PM\n---\n\n[<< Back to Index](../index.html)\n# VisualBasic App Framework\n\nVersion: **1.0.0**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework](https://www.nuget.org/packages/VB_AppFramework/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework**\n\n\n## Summary\nRequired of .NET framework 4.6. and x64 program.\nThis package library enrichment the programming capability and language features of VisualBasic language\n\nSource code can be download from github.com:\nhttps://github.com/xieguigang/VisualBasic_AppFramework\n## Release Notes\n\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n\n","updated":"2016-06-10T09:25:22.338Z","path":"nuget/VB_AppFramework/VB_AppFramework.1.0.0.html","comments":1,"layout":"page","_id":"cipnbu3k5003i8gv4til5t8gc","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework\"><a href=\"#VisualBasic-App-Framework\" class=\"headerlink\" title=\"VisualBasic App Framework\"></a>VisualBasic App Framework</h1><p>Version: <strong>1.0.0</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework/\" target=\"_blank\" rel=\"external\">VisualBasic App Framework</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Required of .NET framework 4.6. and x64 program.<br>This package library enrichment the programming capability and language features of VisualBasic language</p>\n<p>Source code can be download from github.com:<br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\" target=\"_blank\" rel=\"external\">VB.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework\"><a href=\"#VisualBasic-App-Framework\" class=\"headerlink\" title=\"VisualBasic App Framework\"></a>VisualBasic App Framework</h1><p>Version: <strong>1.0.0</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework/\">VisualBasic App Framework</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Required of .NET framework 4.6. and x64 program.<br>This package library enrichment the programming capability and language features of VisualBasic language</p>\n<p>Source code can be download from github.com:<br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\">VB.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n</ul>\n"},{"title":"VisualBasic App Framework","date":"2016-06-10T09:25:23.000Z","_content":"\n[<< Back to Index](../index.html)\n# VisualBasic App Framework\n\nVersion: **1.0.1**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework](https://www.nuget.org/packages/VB_AppFramework/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework**\n\n\n## Summary\nRequired of .NET framework 4.6. and x64 program.\nThis package library enrichment the programming capability and language features of VisualBasic language\n\nSource code can be download from github.com:\nhttps://github.com/xieguigang/VisualBasic_AppFramework\n## Release Notes\nsome module is not ready yet, not recommended this version\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ Microsoft.VisualBasic.Mathematical.dll<br />\n+ Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ Microsoft.VisualBasic.Mathematical.pdb<br />\n+ Microsoft.VisualBasic.Mathematical.xml<br />\n\n","source":"nuget/VB_AppFramework/VB_AppFramework.1.0.1.md","raw":"---\ntitle: VisualBasic App Framework\ndate: 6/10/2016 5:25:23 PM\n---\n\n[<< Back to Index](../index.html)\n# VisualBasic App Framework\n\nVersion: **1.0.1**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework](https://www.nuget.org/packages/VB_AppFramework/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework**\n\n\n## Summary\nRequired of .NET framework 4.6. and x64 program.\nThis package library enrichment the programming capability and language features of VisualBasic language\n\nSource code can be download from github.com:\nhttps://github.com/xieguigang/VisualBasic_AppFramework\n## Release Notes\nsome module is not ready yet, not recommended this version\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ Microsoft.VisualBasic.Mathematical.dll<br />\n+ Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ Microsoft.VisualBasic.Mathematical.pdb<br />\n+ Microsoft.VisualBasic.Mathematical.xml<br />\n\n","updated":"2016-06-10T09:25:23.358Z","path":"nuget/VB_AppFramework/VB_AppFramework.1.0.1.html","comments":1,"layout":"page","_id":"cipnbu3ka003j8gv46x76jss4","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework\"><a href=\"#VisualBasic-App-Framework\" class=\"headerlink\" title=\"VisualBasic App Framework\"></a>VisualBasic App Framework</h1><p>Version: <strong>1.0.1</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework/\" target=\"_blank\" rel=\"external\">VisualBasic App Framework</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Required of .NET framework 4.6. and x64 program.<br>This package library enrichment the programming capability and language features of VisualBasic language</p>\n<p>Source code can be download from github.com:<br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>some module is not ready yet, not recommended this version</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\" target=\"_blank\" rel=\"external\">VB.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>Microsoft.VisualBasic.DataMining.Framework.dll<br></li>\n<li>Microsoft.VisualBasic.DataMining.Framework.pdb<br></li>\n<li>Microsoft.VisualBasic.DataMining.Framework.xml<br></li>\n<li>Microsoft.VisualBasic.DataVisualization.Network.dll<br></li>\n<li>Microsoft.VisualBasic.DataVisualization.Network.pdb<br></li>\n<li>Microsoft.VisualBasic.DataVisualization.Network.xml<br></li>\n<li>Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n<li>Microsoft.VisualBasic.Mathematical.dll<br></li>\n<li>Microsoft.VisualBasic.Mathematical.dll.config<br></li>\n<li>Microsoft.VisualBasic.Mathematical.pdb<br></li>\n<li>Microsoft.VisualBasic.Mathematical.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework\"><a href=\"#VisualBasic-App-Framework\" class=\"headerlink\" title=\"VisualBasic App Framework\"></a>VisualBasic App Framework</h1><p>Version: <strong>1.0.1</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework/\">VisualBasic App Framework</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Required of .NET framework 4.6. and x64 program.<br>This package library enrichment the programming capability and language features of VisualBasic language</p>\n<p>Source code can be download from github.com:<br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>some module is not ready yet, not recommended this version</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\">VB.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>Microsoft.VisualBasic.DataMining.Framework.dll<br /></li>\n<li>Microsoft.VisualBasic.DataMining.Framework.pdb<br /></li>\n<li>Microsoft.VisualBasic.DataMining.Framework.xml<br /></li>\n<li>Microsoft.VisualBasic.DataVisualization.Network.dll<br /></li>\n<li>Microsoft.VisualBasic.DataVisualization.Network.pdb<br /></li>\n<li>Microsoft.VisualBasic.DataVisualization.Network.xml<br /></li>\n<li>Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n<li>Microsoft.VisualBasic.Mathematical.dll<br /></li>\n<li>Microsoft.VisualBasic.Mathematical.dll.config<br /></li>\n<li>Microsoft.VisualBasic.Mathematical.pdb<br /></li>\n<li>Microsoft.VisualBasic.Mathematical.xml<br /></li>\n</ul>\n"},{"title":"VisualBasic App Framework","date":"2016-06-10T09:25:24.000Z","_content":"\n[<< Back to Index](../index.html)\n# VisualBasic App Framework\n\nVersion: **1.0.2**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework](https://www.nuget.org/packages/VB_AppFramework/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework**\n\n\n## Summary\nRequired of the latest .NET Framework 4.6.\nThis package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.\n\nSource code can be download from github.com:\nhttps://github.com/xieguigang/VisualBasic_AppFramework\nCode style guideline for VisualBasic of this runtime library at codeproject article: http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\n## Release Notes\nOrganized of some API namespace and makes some common data document like Xml, json, Csv, dat files read/write more easily. Article about manipulate these document at codeproject: http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET,](https://www.nuget.org/packages?q=Tags%3A\"VB.NET,\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Web.Extensions\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml.Linq\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.dll<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.pdb<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.dll<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.pdb<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.xml<br />\n\n","source":"nuget/VB_AppFramework/VB_AppFramework.1.0.2.md","raw":"---\ntitle: VisualBasic App Framework\ndate: 6/10/2016 5:25:24 PM\n---\n\n[<< Back to Index](../index.html)\n# VisualBasic App Framework\n\nVersion: **1.0.2**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework](https://www.nuget.org/packages/VB_AppFramework/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework**\n\n\n## Summary\nRequired of the latest .NET Framework 4.6.\nThis package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.\n\nSource code can be download from github.com:\nhttps://github.com/xieguigang/VisualBasic_AppFramework\nCode style guideline for VisualBasic of this runtime library at codeproject article: http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\n## Release Notes\nOrganized of some API namespace and makes some common data document like Xml, json, Csv, dat files read/write more easily. Article about manipulate these document at codeproject: http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET,](https://www.nuget.org/packages?q=Tags%3A\"VB.NET,\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Web.Extensions\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml.Linq\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.dll<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.pdb<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.dll<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.pdb<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.xml<br />\n\n","updated":"2016-06-10T09:25:24.331Z","path":"nuget/VB_AppFramework/VB_AppFramework.1.0.2.html","comments":1,"layout":"page","_id":"cipnbu3kb003k8gv4py81hzqy","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework\"><a href=\"#VisualBasic-App-Framework\" class=\"headerlink\" title=\"VisualBasic App Framework\"></a>VisualBasic App Framework</h1><p>Version: <strong>1.0.2</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework/\" target=\"_blank\" rel=\"external\">VisualBasic App Framework</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Required of the latest .NET Framework 4.6.<br>This package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.</p>\n<p>Source code can be download from github.com:<br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a><br>Code style guideline for VisualBasic of this runtime library at codeproject article: <a href=\"http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\" target=\"_blank\" rel=\"external\">http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>Organized of some API namespace and makes some common data document like Xml, json, Csv, dat files read/write more easily. Article about manipulate these document at codeproject: <a href=\"http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\" target=\"_blank\" rel=\"external\">http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic</a></p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET,&quot;\" target=\"_blank\" rel=\"external\">VB.NET,</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\" target=\"_blank\" rel=\"external\">.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Web.Extensions\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml.Linq\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.dll.config<br></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.dll.config<br></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework\"><a href=\"#VisualBasic-App-Framework\" class=\"headerlink\" title=\"VisualBasic App Framework\"></a>VisualBasic App Framework</h1><p>Version: <strong>1.0.2</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework/\">VisualBasic App Framework</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Required of the latest .NET Framework 4.6.<br>This package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.</p>\n<p>Source code can be download from github.com:<br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a><br>Code style guideline for VisualBasic of this runtime library at codeproject article: <a href=\"http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\">http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>Organized of some API namespace and makes some common data document like Xml, json, Csv, dat files read/write more easily. Article about manipulate these document at codeproject: <a href=\"http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\">http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic</a></p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET,&quot;\">VB.NET,</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\">.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Web.Extensions\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml.Linq\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.dll.config<br /></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.dll.config<br /></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.xml<br /></li>\n</ul>\n"},{"title":"VisualBasic App Framework","date":"2016-06-10T09:25:25.000Z","_content":"\n[<< Back to Index](../index.html)\n# VisualBasic App Framework\n\nVersion: **1.0.25**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework](https://www.nuget.org/packages/VB_AppFramework/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework**\n\n\n## Summary\nRequired of the latest .NET Framework 4.6.\nThis package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.\n\nSource code can be download from github.com:\nhttps://github.com/xieguigang/VisualBasic_AppFramework\nCode style guideline for VisualBasic of this runtime library at codeproject article: http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\n\nArticle about manipulate these document at codeproject: http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\n## Release Notes\nfix a bugs in the math expression variable hash table\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET,](https://www.nuget.org/packages?q=Tags%3A\"VB.NET,\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Web.Extensions\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml.Linq\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.dll<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.pdb<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.dll<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.pdb<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.xml<br />\n\n","source":"nuget/VB_AppFramework/VB_AppFramework.1.0.25.md","raw":"---\ntitle: VisualBasic App Framework\ndate: 6/10/2016 5:25:25 PM\n---\n\n[<< Back to Index](../index.html)\n# VisualBasic App Framework\n\nVersion: **1.0.25**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework](https://www.nuget.org/packages/VB_AppFramework/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework**\n\n\n## Summary\nRequired of the latest .NET Framework 4.6.\nThis package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.\n\nSource code can be download from github.com:\nhttps://github.com/xieguigang/VisualBasic_AppFramework\nCode style guideline for VisualBasic of this runtime library at codeproject article: http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\n\nArticle about manipulate these document at codeproject: http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\n## Release Notes\nfix a bugs in the math expression variable hash table\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET,](https://www.nuget.org/packages?q=Tags%3A\"VB.NET,\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Web.Extensions\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml.Linq\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.dll<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.pdb<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.dll<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.pdb<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.xml<br />\n\n","updated":"2016-06-10T09:25:25.434Z","path":"nuget/VB_AppFramework/VB_AppFramework.1.0.25.html","comments":1,"layout":"page","_id":"cipnbu3kh003l8gv4dn705jf3","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework\"><a href=\"#VisualBasic-App-Framework\" class=\"headerlink\" title=\"VisualBasic App Framework\"></a>VisualBasic App Framework</h1><p>Version: <strong>1.0.25</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework/\" target=\"_blank\" rel=\"external\">VisualBasic App Framework</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Required of the latest .NET Framework 4.6.<br>This package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.</p>\n<p>Source code can be download from github.com:<br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a><br>Code style guideline for VisualBasic of this runtime library at codeproject article: <a href=\"http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\" target=\"_blank\" rel=\"external\">http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic</a></p>\n<p>Article about manipulate these document at codeproject: <a href=\"http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\" target=\"_blank\" rel=\"external\">http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>fix a bugs in the math expression variable hash table</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET,&quot;\" target=\"_blank\" rel=\"external\">VB.NET,</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\" target=\"_blank\" rel=\"external\">.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Web.Extensions\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml.Linq\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.dll.config<br></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.dll.config<br></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework\"><a href=\"#VisualBasic-App-Framework\" class=\"headerlink\" title=\"VisualBasic App Framework\"></a>VisualBasic App Framework</h1><p>Version: <strong>1.0.25</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework/\">VisualBasic App Framework</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Required of the latest .NET Framework 4.6.<br>This package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.</p>\n<p>Source code can be download from github.com:<br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a><br>Code style guideline for VisualBasic of this runtime library at codeproject article: <a href=\"http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\">http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic</a></p>\n<p>Article about manipulate these document at codeproject: <a href=\"http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\">http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>fix a bugs in the math expression variable hash table</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET,&quot;\">VB.NET,</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\">.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Web.Extensions\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml.Linq\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.dll.config<br /></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.dll.config<br /></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.xml<br /></li>\n</ul>\n"},{"title":"VisualBasic App Framework","date":"2016-06-10T09:25:28.000Z","_content":"\n[<< Back to Index](../index.html)\n# VisualBasic App Framework\n\nVersion: **1.0.3**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework](https://www.nuget.org/packages/VB_AppFramework/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework**\n\n\n## Summary\nRequired of the latest .NET Framework 4.6.\nThis package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.\n\nSource code can be download from github.com:\nhttps://github.com/xieguigang/VisualBasic_AppFramework\nCode style guideline for VisualBasic of this runtime library at codeproject article: http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\n\nArticle about manipulate these document at codeproject: http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\n## Release Notes\nreconstruct the data source schema extension at namespace: Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps\n\nimprovements md5hash tolong function based on google cityhash algorithm: \nhttps://github.com/xieguigang/VisualBasic_AppFramework/commit/20e33c136f949c35d347e27e83035629bf0226ee\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET,](https://www.nuget.org/packages?q=Tags%3A\"VB.NET,\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Web.Extensions\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml.Linq\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.dll<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.pdb<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.dll<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.pdb<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.xml<br />\n\n","source":"nuget/VB_AppFramework/VB_AppFramework.1.0.3.md","raw":"---\ntitle: VisualBasic App Framework\ndate: 6/10/2016 5:25:28 PM\n---\n\n[<< Back to Index](../index.html)\n# VisualBasic App Framework\n\nVersion: **1.0.3**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework](https://www.nuget.org/packages/VB_AppFramework/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework**\n\n\n## Summary\nRequired of the latest .NET Framework 4.6.\nThis package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.\n\nSource code can be download from github.com:\nhttps://github.com/xieguigang/VisualBasic_AppFramework\nCode style guideline for VisualBasic of this runtime library at codeproject article: http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\n\nArticle about manipulate these document at codeproject: http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\n## Release Notes\nreconstruct the data source schema extension at namespace: Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps\n\nimprovements md5hash tolong function based on google cityhash algorithm: \nhttps://github.com/xieguigang/VisualBasic_AppFramework/commit/20e33c136f949c35d347e27e83035629bf0226ee\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET,](https://www.nuget.org/packages?q=Tags%3A\"VB.NET,\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Web.Extensions\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml.Linq\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.dll<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.pdb<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.dll<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.pdb<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.xml<br />\n\n","updated":"2016-06-10T09:25:28.399Z","path":"nuget/VB_AppFramework/VB_AppFramework.1.0.3.html","comments":1,"layout":"page","_id":"cipnbu3kj003m8gv4olvt8hpj","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework\"><a href=\"#VisualBasic-App-Framework\" class=\"headerlink\" title=\"VisualBasic App Framework\"></a>VisualBasic App Framework</h1><p>Version: <strong>1.0.3</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework/\" target=\"_blank\" rel=\"external\">VisualBasic App Framework</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Required of the latest .NET Framework 4.6.<br>This package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.</p>\n<p>Source code can be download from github.com:<br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a><br>Code style guideline for VisualBasic of this runtime library at codeproject article: <a href=\"http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\" target=\"_blank\" rel=\"external\">http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic</a></p>\n<p>Article about manipulate these document at codeproject: <a href=\"http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\" target=\"_blank\" rel=\"external\">http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>reconstruct the data source schema extension at namespace: Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps</p>\n<p>improvements md5hash tolong function based on google cityhash algorithm:<br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/commit/20e33c136f949c35d347e27e83035629bf0226ee\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework/commit/20e33c136f949c35d347e27e83035629bf0226ee</a></p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET,&quot;\" target=\"_blank\" rel=\"external\">VB.NET,</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\" target=\"_blank\" rel=\"external\">.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Web.Extensions\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml.Linq\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.dll.config<br></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.dll.config<br></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework\"><a href=\"#VisualBasic-App-Framework\" class=\"headerlink\" title=\"VisualBasic App Framework\"></a>VisualBasic App Framework</h1><p>Version: <strong>1.0.3</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework/\">VisualBasic App Framework</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Required of the latest .NET Framework 4.6.<br>This package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.</p>\n<p>Source code can be download from github.com:<br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a><br>Code style guideline for VisualBasic of this runtime library at codeproject article: <a href=\"http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\">http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic</a></p>\n<p>Article about manipulate these document at codeproject: <a href=\"http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\">http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>reconstruct the data source schema extension at namespace: Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps</p>\n<p>improvements md5hash tolong function based on google cityhash algorithm:<br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/commit/20e33c136f949c35d347e27e83035629bf0226ee\">https://github.com/xieguigang/VisualBasic_AppFramework/commit/20e33c136f949c35d347e27e83035629bf0226ee</a></p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET,&quot;\">VB.NET,</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\">.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Web.Extensions\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml.Linq\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.dll.config<br /></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.dll.config<br /></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.xml<br /></li>\n</ul>\n"},{"title":"VisualBasic App Framework","date":"2016-06-10T09:25:27.000Z","_content":"\n[<< Back to Index](../index.html)\n# VisualBasic App Framework\n\nVersion: **1.0.28**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework](https://www.nuget.org/packages/VB_AppFramework/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework**\n\n\n## Summary\nRequired of the latest .NET Framework 4.6.\nThis package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.\n\nSource code can be download from github.com:\nhttps://github.com/xieguigang/VisualBasic_AppFramework\nCode style guideline for VisualBasic of this runtime library at codeproject article: http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\n\nArticle about manipulate these document at codeproject: http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\n## Release Notes\nimprovements on the xmlns model in namespace Microsoft.VisualBasic.Text.Xml\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET,](https://www.nuget.org/packages?q=Tags%3A\"VB.NET,\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Web.Extensions\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml.Linq\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.dll<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.pdb<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.dll<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.pdb<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.xml<br />\n\n","source":"nuget/VB_AppFramework/VB_AppFramework.1.0.28.md","raw":"---\ntitle: VisualBasic App Framework\ndate: 6/10/2016 5:25:27 PM\n---\n\n[<< Back to Index](../index.html)\n# VisualBasic App Framework\n\nVersion: **1.0.28**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework](https://www.nuget.org/packages/VB_AppFramework/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework**\n\n\n## Summary\nRequired of the latest .NET Framework 4.6.\nThis package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.\n\nSource code can be download from github.com:\nhttps://github.com/xieguigang/VisualBasic_AppFramework\nCode style guideline for VisualBasic of this runtime library at codeproject article: http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\n\nArticle about manipulate these document at codeproject: http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\n## Release Notes\nimprovements on the xmlns model in namespace Microsoft.VisualBasic.Text.Xml\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET,](https://www.nuget.org/packages?q=Tags%3A\"VB.NET,\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Web.Extensions\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml.Linq\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.dll<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.pdb<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.dll<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.pdb<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.xml<br />\n\n","updated":"2016-06-10T09:25:27.419Z","path":"nuget/VB_AppFramework/VB_AppFramework.1.0.28.html","comments":1,"layout":"page","_id":"cipnbu3km003n8gv4aoo946ne","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework\"><a href=\"#VisualBasic-App-Framework\" class=\"headerlink\" title=\"VisualBasic App Framework\"></a>VisualBasic App Framework</h1><p>Version: <strong>1.0.28</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework/\" target=\"_blank\" rel=\"external\">VisualBasic App Framework</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Required of the latest .NET Framework 4.6.<br>This package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.</p>\n<p>Source code can be download from github.com:<br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a><br>Code style guideline for VisualBasic of this runtime library at codeproject article: <a href=\"http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\" target=\"_blank\" rel=\"external\">http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic</a></p>\n<p>Article about manipulate these document at codeproject: <a href=\"http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\" target=\"_blank\" rel=\"external\">http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>improvements on the xmlns model in namespace Microsoft.VisualBasic.Text.Xml</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET,&quot;\" target=\"_blank\" rel=\"external\">VB.NET,</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\" target=\"_blank\" rel=\"external\">.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Web.Extensions\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml.Linq\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.dll.config<br></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.dll.config<br></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework\"><a href=\"#VisualBasic-App-Framework\" class=\"headerlink\" title=\"VisualBasic App Framework\"></a>VisualBasic App Framework</h1><p>Version: <strong>1.0.28</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework/\">VisualBasic App Framework</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Required of the latest .NET Framework 4.6.<br>This package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.</p>\n<p>Source code can be download from github.com:<br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a><br>Code style guideline for VisualBasic of this runtime library at codeproject article: <a href=\"http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\">http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic</a></p>\n<p>Article about manipulate these document at codeproject: <a href=\"http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\">http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>improvements on the xmlns model in namespace Microsoft.VisualBasic.Text.Xml</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET,&quot;\">VB.NET,</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\">.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Web.Extensions\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml.Linq\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.dll.config<br /></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.dll.config<br /></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.xml<br /></li>\n</ul>\n"},{"title":"VisualBasic App Framework","date":"2016-06-10T09:25:26.000Z","_content":"\n[<< Back to Index](../index.html)\n# VisualBasic App Framework\n\nVersion: **1.0.26**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework](https://www.nuget.org/packages/VB_AppFramework/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework**\n\n\n## Summary\nRequired of the latest .NET Framework 4.6.\nThis package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.\n\nSource code can be download from github.com:\nhttps://github.com/xieguigang/VisualBasic_AppFramework\nCode style guideline for VisualBasic of this runtime library at codeproject article: http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\n\nArticle about manipulate these document at codeproject: http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\n## Release Notes\nfix a bugs on the colorful console output for the debugger on multiple threads\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET,](https://www.nuget.org/packages?q=Tags%3A\"VB.NET,\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Web.Extensions\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml.Linq\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.dll<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.pdb<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.dll<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.pdb<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.xml<br />\n\n","source":"nuget/VB_AppFramework/VB_AppFramework.1.0.26.md","raw":"---\ntitle: VisualBasic App Framework\ndate: 6/10/2016 5:25:26 PM\n---\n\n[<< Back to Index](../index.html)\n# VisualBasic App Framework\n\nVersion: **1.0.26**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework](https://www.nuget.org/packages/VB_AppFramework/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework**\n\n\n## Summary\nRequired of the latest .NET Framework 4.6.\nThis package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.\n\nSource code can be download from github.com:\nhttps://github.com/xieguigang/VisualBasic_AppFramework\nCode style guideline for VisualBasic of this runtime library at codeproject article: http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\n\nArticle about manipulate these document at codeproject: http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\n## Release Notes\nfix a bugs on the colorful console output for the debugger on multiple threads\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET,](https://www.nuget.org/packages?q=Tags%3A\"VB.NET,\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Web.Extensions\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml.Linq\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.dll<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.pdb<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.dll<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.pdb<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.xml<br />\n\n","updated":"2016-06-10T09:25:26.415Z","path":"nuget/VB_AppFramework/VB_AppFramework.1.0.26.html","comments":1,"layout":"page","_id":"cipnbu3ko003o8gv4fcne0a3m","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework\"><a href=\"#VisualBasic-App-Framework\" class=\"headerlink\" title=\"VisualBasic App Framework\"></a>VisualBasic App Framework</h1><p>Version: <strong>1.0.26</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework/\" target=\"_blank\" rel=\"external\">VisualBasic App Framework</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Required of the latest .NET Framework 4.6.<br>This package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.</p>\n<p>Source code can be download from github.com:<br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a><br>Code style guideline for VisualBasic of this runtime library at codeproject article: <a href=\"http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\" target=\"_blank\" rel=\"external\">http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic</a></p>\n<p>Article about manipulate these document at codeproject: <a href=\"http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\" target=\"_blank\" rel=\"external\">http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>fix a bugs on the colorful console output for the debugger on multiple threads</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET,&quot;\" target=\"_blank\" rel=\"external\">VB.NET,</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\" target=\"_blank\" rel=\"external\">.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Web.Extensions\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml.Linq\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.dll.config<br></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.dll.config<br></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework\"><a href=\"#VisualBasic-App-Framework\" class=\"headerlink\" title=\"VisualBasic App Framework\"></a>VisualBasic App Framework</h1><p>Version: <strong>1.0.26</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework/\">VisualBasic App Framework</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Required of the latest .NET Framework 4.6.<br>This package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.</p>\n<p>Source code can be download from github.com:<br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a><br>Code style guideline for VisualBasic of this runtime library at codeproject article: <a href=\"http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\">http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic</a></p>\n<p>Article about manipulate these document at codeproject: <a href=\"http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\">http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>fix a bugs on the colorful console output for the debugger on multiple threads</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET,&quot;\">VB.NET,</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\">.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Web.Extensions\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml.Linq\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.dll.config<br /></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.dll.config<br /></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.xml<br /></li>\n</ul>\n"},{"title":"VisualBasic App Framework","date":"2016-06-10T09:25:29.000Z","_content":"\n[<< Back to Index](../index.html)\n# VisualBasic App Framework\n\nVersion: **1.0.30**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework](https://www.nuget.org/packages/VB_AppFramework/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework**\n\n\n## Summary\nRequired of the latest .NET Framework 4.6.\nThis package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.\n\nSource code can be download from github.com:\nhttps://github.com/xieguigang/VisualBasic_AppFramework\nCode style guideline for VisualBasic of this runtime library at codeproject article: http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\n\nArticle about manipulate these document at codeproject: http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\n## Release Notes\nreconstruct the data source schema extension at namespace: Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps\n\nimprovements md5hash tolong function based on google cityhash algorithm: \nhttps://github.com/xieguigang/VisualBasic_AppFramework/commit/20e33c136f949c35d347e27e83035629bf0226ee\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET,](https://www.nuget.org/packages?q=Tags%3A\"VB.NET,\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Web.Extensions\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml.Linq\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.dll<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.pdb<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.dll<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.pdb<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.xml<br />\n\n","source":"nuget/VB_AppFramework/VB_AppFramework.1.0.30.md","raw":"---\ntitle: VisualBasic App Framework\ndate: 6/10/2016 5:25:29 PM\n---\n\n[<< Back to Index](../index.html)\n# VisualBasic App Framework\n\nVersion: **1.0.30**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework](https://www.nuget.org/packages/VB_AppFramework/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework**\n\n\n## Summary\nRequired of the latest .NET Framework 4.6.\nThis package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.\n\nSource code can be download from github.com:\nhttps://github.com/xieguigang/VisualBasic_AppFramework\nCode style guideline for VisualBasic of this runtime library at codeproject article: http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\n\nArticle about manipulate these document at codeproject: http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\n## Release Notes\nreconstruct the data source schema extension at namespace: Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps\n\nimprovements md5hash tolong function based on google cityhash algorithm: \nhttps://github.com/xieguigang/VisualBasic_AppFramework/commit/20e33c136f949c35d347e27e83035629bf0226ee\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET,](https://www.nuget.org/packages?q=Tags%3A\"VB.NET,\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Web.Extensions\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml.Linq\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.dll<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.pdb<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.dll<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.pdb<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.xml<br />\n\n","updated":"2016-06-10T09:25:29.347Z","path":"nuget/VB_AppFramework/VB_AppFramework.1.0.30.html","comments":1,"layout":"page","_id":"cipnbu3kq003p8gv4qhkrptya","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework\"><a href=\"#VisualBasic-App-Framework\" class=\"headerlink\" title=\"VisualBasic App Framework\"></a>VisualBasic App Framework</h1><p>Version: <strong>1.0.30</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework/\" target=\"_blank\" rel=\"external\">VisualBasic App Framework</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Required of the latest .NET Framework 4.6.<br>This package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.</p>\n<p>Source code can be download from github.com:<br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a><br>Code style guideline for VisualBasic of this runtime library at codeproject article: <a href=\"http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\" target=\"_blank\" rel=\"external\">http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic</a></p>\n<p>Article about manipulate these document at codeproject: <a href=\"http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\" target=\"_blank\" rel=\"external\">http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>reconstruct the data source schema extension at namespace: Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps</p>\n<p>improvements md5hash tolong function based on google cityhash algorithm:<br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/commit/20e33c136f949c35d347e27e83035629bf0226ee\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework/commit/20e33c136f949c35d347e27e83035629bf0226ee</a></p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET,&quot;\" target=\"_blank\" rel=\"external\">VB.NET,</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\" target=\"_blank\" rel=\"external\">.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Web.Extensions\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml.Linq\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.dll.config<br></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.dll.config<br></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework\"><a href=\"#VisualBasic-App-Framework\" class=\"headerlink\" title=\"VisualBasic App Framework\"></a>VisualBasic App Framework</h1><p>Version: <strong>1.0.30</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework/\">VisualBasic App Framework</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Required of the latest .NET Framework 4.6.<br>This package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.</p>\n<p>Source code can be download from github.com:<br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a><br>Code style guideline for VisualBasic of this runtime library at codeproject article: <a href=\"http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\">http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic</a></p>\n<p>Article about manipulate these document at codeproject: <a href=\"http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\">http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>reconstruct the data source schema extension at namespace: Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps</p>\n<p>improvements md5hash tolong function based on google cityhash algorithm:<br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/commit/20e33c136f949c35d347e27e83035629bf0226ee\">https://github.com/xieguigang/VisualBasic_AppFramework/commit/20e33c136f949c35d347e27e83035629bf0226ee</a></p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET,&quot;\">VB.NET,</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\">.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Web.Extensions\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml.Linq\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.dll.config<br /></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.dll.config<br /></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.xml<br /></li>\n</ul>\n"},{"title":"VisualBasic App Framework","date":"2016-06-10T09:25:30.000Z","_content":"\n[<< Back to Index](../index.html)\n# VisualBasic App Framework\n\nVersion: **1.0.35**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework](https://www.nuget.org/packages/VB_AppFramework/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework**\n\n\n## Summary\nRequired of the latest .NET Framework 4.6.\nThis package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.\n\nSource code can be download from github.com:\nhttps://github.com/xieguigang/VisualBasic_AppFramework\nCode style guideline for VisualBasic of this runtime library at codeproject article: http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\n\nArticle about manipulate these document at codeproject: http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\n## Release Notes\nImprovements on the Multiple Process batch task parallel and multiple thread parallel API\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET,](https://www.nuget.org/packages?q=Tags%3A\"VB.NET,\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Web.Extensions\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml.Linq\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.dll<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.pdb<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.dll<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.pdb<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.xml<br />\n\n","source":"nuget/VB_AppFramework/VB_AppFramework.1.0.35.md","raw":"---\ntitle: VisualBasic App Framework\ndate: 6/10/2016 5:25:30 PM\n---\n\n[<< Back to Index](../index.html)\n# VisualBasic App Framework\n\nVersion: **1.0.35**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework](https://www.nuget.org/packages/VB_AppFramework/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework**\n\n\n## Summary\nRequired of the latest .NET Framework 4.6.\nThis package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.\n\nSource code can be download from github.com:\nhttps://github.com/xieguigang/VisualBasic_AppFramework\nCode style guideline for VisualBasic of this runtime library at codeproject article: http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\n\nArticle about manipulate these document at codeproject: http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\n## Release Notes\nImprovements on the Multiple Process batch task parallel and multiple thread parallel API\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET,](https://www.nuget.org/packages?q=Tags%3A\"VB.NET,\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Web.Extensions\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml.Linq\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.dll<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.pdb<br />\n+ x64\\Microsoft.VisualBasic.Mathematical.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.dll<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.dll.config<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.pdb<br />\n+ x86\\Microsoft.VisualBasic.Mathematical.xml<br />\n\n","updated":"2016-06-10T09:25:30.370Z","path":"nuget/VB_AppFramework/VB_AppFramework.1.0.35.html","comments":1,"layout":"page","_id":"cipnbu3ks003q8gv4a6ivjkvl","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework\"><a href=\"#VisualBasic-App-Framework\" class=\"headerlink\" title=\"VisualBasic App Framework\"></a>VisualBasic App Framework</h1><p>Version: <strong>1.0.35</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework/\" target=\"_blank\" rel=\"external\">VisualBasic App Framework</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Required of the latest .NET Framework 4.6.<br>This package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.</p>\n<p>Source code can be download from github.com:<br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a><br>Code style guideline for VisualBasic of this runtime library at codeproject article: <a href=\"http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\" target=\"_blank\" rel=\"external\">http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic</a></p>\n<p>Article about manipulate these document at codeproject: <a href=\"http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\" target=\"_blank\" rel=\"external\">http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>Improvements on the Multiple Process batch task parallel and multiple thread parallel API</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET,&quot;\" target=\"_blank\" rel=\"external\">VB.NET,</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\" target=\"_blank\" rel=\"external\">.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Web.Extensions\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml.Linq\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.dll.config<br></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.dll.config<br></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework\"><a href=\"#VisualBasic-App-Framework\" class=\"headerlink\" title=\"VisualBasic App Framework\"></a>VisualBasic App Framework</h1><p>Version: <strong>1.0.35</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework/\">VisualBasic App Framework</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Required of the latest .NET Framework 4.6.<br>This package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.</p>\n<p>Source code can be download from github.com:<br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a><br>Code style guideline for VisualBasic of this runtime library at codeproject article: <a href=\"http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\">http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic</a></p>\n<p>Article about manipulate these document at codeproject: <a href=\"http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\">http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>Improvements on the Multiple Process batch task parallel and multiple thread parallel API</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET,&quot;\">VB.NET,</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\">.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Web.Extensions\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml.Linq\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.dll.config<br /></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.Mathematical.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.dll.config<br /></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.Mathematical.xml<br /></li>\n</ul>\n"},{"title":"VisualBasic App Framework","date":"2016-06-10T09:25:31.000Z","_content":"\n[<< Back to Index](../index.html)\n# VisualBasic App Framework\n\nVersion: **1.0.40**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework](https://www.nuget.org/packages/VB_AppFramework/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework**\n\n\n## Summary\nRequired of the latest .NET Framework 4.6.\nThis package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.\n\nSource code can be download from github.com:\nhttps://github.com/xieguigang/VisualBasic_AppFramework\nCode style guideline for VisualBasic of this runtime library at codeproject article: http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\n\nArticle about manipulate these document at codeproject: http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\n## Release Notes\nAdd a canvas object for the network visualization and export svg image\n\ncodeproject article about this canvas object:\nhttp://www.codeproject.com/Articles/1104741/NET-Canvas-for-Network-visualization\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET,](https://www.nuget.org/packages?q=Tags%3A\"VB.NET,\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Web.Extensions\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml.Linq\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.DynamicProgramming.dll<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.Canvas.dll<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.Canvas.dll.config<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.Canvas.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.Canvas.xml<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x64\\Microsoft.VisualBasic.Imaging.dll<br />\n+ x64\\Microsoft.VisualBasic.Imaging.pdb<br />\n+ x64\\Microsoft.VisualBasic.Imaging.xml<br />\n+ x64\\Microsoft.VisualBasic.MarkupLanguage.dll<br />\n+ x64\\Microsoft.VisualBasic.MarkupLanguage.pdb<br />\n+ x64\\Microsoft.VisualBasic.MarkupLanguage.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.DynamicProgramming.dll<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.Canvas.dll<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.Canvas.dll.config<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x86\\Microsoft.VisualBasic.Imaging.dll<br />\n+ x86\\Microsoft.VisualBasic.Imaging.pdb<br />\n+ x86\\Microsoft.VisualBasic.Imaging.xml<br />\n+ x86\\Microsoft.VisualBasic.MarkupLanguage.dll<br />\n+ x86\\Microsoft.VisualBasic.MarkupLanguage.pdb<br />\n+ x86\\Microsoft.VisualBasic.MarkupLanguage.xml<br />\n\n","source":"nuget/VB_AppFramework/VB_AppFramework.1.0.40.md","raw":"---\ntitle: VisualBasic App Framework\ndate: 6/10/2016 5:25:31 PM\n---\n\n[<< Back to Index](../index.html)\n# VisualBasic App Framework\n\nVersion: **1.0.40**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework](https://www.nuget.org/packages/VB_AppFramework/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework**\n\n\n## Summary\nRequired of the latest .NET Framework 4.6.\nThis package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.\n\nSource code can be download from github.com:\nhttps://github.com/xieguigang/VisualBasic_AppFramework\nCode style guideline for VisualBasic of this runtime library at codeproject article: http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\n\nArticle about manipulate these document at codeproject: http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\n## Release Notes\nAdd a canvas object for the network visualization and export svg image\n\ncodeproject article about this canvas object:\nhttp://www.codeproject.com/Articles/1104741/NET-Canvas-for-Network-visualization\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET,](https://www.nuget.org/packages?q=Tags%3A\"VB.NET,\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Web.Extensions\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml\",\"targetFramework\":\".NETFramework4.6\"},{\"assemblyName\":\"System.Xml.Linq\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.DynamicProgramming.dll<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.Canvas.dll<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.Canvas.dll.config<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.Canvas.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.Canvas.xml<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x64\\Microsoft.VisualBasic.Imaging.dll<br />\n+ x64\\Microsoft.VisualBasic.Imaging.pdb<br />\n+ x64\\Microsoft.VisualBasic.Imaging.xml<br />\n+ x64\\Microsoft.VisualBasic.MarkupLanguage.dll<br />\n+ x64\\Microsoft.VisualBasic.MarkupLanguage.pdb<br />\n+ x64\\Microsoft.VisualBasic.MarkupLanguage.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.DynamicProgramming.dll<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.Canvas.dll<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.Canvas.dll.config<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br />\n+ x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x86\\Microsoft.VisualBasic.Imaging.dll<br />\n+ x86\\Microsoft.VisualBasic.Imaging.pdb<br />\n+ x86\\Microsoft.VisualBasic.Imaging.xml<br />\n+ x86\\Microsoft.VisualBasic.MarkupLanguage.dll<br />\n+ x86\\Microsoft.VisualBasic.MarkupLanguage.pdb<br />\n+ x86\\Microsoft.VisualBasic.MarkupLanguage.xml<br />\n\n","updated":"2016-06-10T09:25:31.449Z","path":"nuget/VB_AppFramework/VB_AppFramework.1.0.40.html","comments":1,"layout":"page","_id":"cipnbu3kt003r8gv4vmqp6fnj","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework\"><a href=\"#VisualBasic-App-Framework\" class=\"headerlink\" title=\"VisualBasic App Framework\"></a>VisualBasic App Framework</h1><p>Version: <strong>1.0.40</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework/\" target=\"_blank\" rel=\"external\">VisualBasic App Framework</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Required of the latest .NET Framework 4.6.<br>This package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.</p>\n<p>Source code can be download from github.com:<br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a><br>Code style guideline for VisualBasic of this runtime library at codeproject article: <a href=\"http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\" target=\"_blank\" rel=\"external\">http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic</a></p>\n<p>Article about manipulate these document at codeproject: <a href=\"http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\" target=\"_blank\" rel=\"external\">http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>Add a canvas object for the network visualization and export svg image</p>\n<p>codeproject article about this canvas object:<br><a href=\"http://www.codeproject.com/Articles/1104741/NET-Canvas-for-Network-visualization\" target=\"_blank\" rel=\"external\">http://www.codeproject.com/Articles/1104741/NET-Canvas-for-Network-visualization</a></p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET,&quot;\" target=\"_blank\" rel=\"external\">VB.NET,</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\" target=\"_blank\" rel=\"external\">.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Web.Extensions\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml.Linq\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.DynamicProgramming.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.Canvas.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.Canvas.dll.config<br></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.Canvas.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.Canvas.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.Imaging.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.Imaging.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.Imaging.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.MarkupLanguage.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.MarkupLanguage.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.MarkupLanguage.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.DynamicProgramming.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.Canvas.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.Canvas.dll.config<br></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.Imaging.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.Imaging.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.Imaging.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.MarkupLanguage.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.MarkupLanguage.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.MarkupLanguage.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework\"><a href=\"#VisualBasic-App-Framework\" class=\"headerlink\" title=\"VisualBasic App Framework\"></a>VisualBasic App Framework</h1><p>Version: <strong>1.0.40</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework/\">VisualBasic App Framework</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Required of the latest .NET Framework 4.6.<br>This package library enrich the programming capability and language syntax features of VisualBasic language. This package provides x86/x64 library release.</p>\n<p>Source code can be download from github.com:<br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a><br>Code style guideline for VisualBasic of this runtime library at codeproject article: <a href=\"http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\">http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic</a></p>\n<p>Article about manipulate these document at codeproject: <a href=\"http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\">http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>Add a canvas object for the network visualization and export svg image</p>\n<p>codeproject article about this canvas object:<br><a href=\"http://www.codeproject.com/Articles/1104741/NET-Canvas-for-Network-visualization\">http://www.codeproject.com/Articles/1104741/NET-Canvas-for-Network-visualization</a></p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET,&quot;\">VB.NET,</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\">.NET</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Web.Extensions\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;,&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"System.Xml.Linq\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.DynamicProgramming.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataMining.Framework.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.Canvas.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.Canvas.dll.config<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.Canvas.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.Canvas.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DataVisualization.Network.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.Imaging.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.Imaging.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.Imaging.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.MarkupLanguage.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.MarkupLanguage.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.MarkupLanguage.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.DynamicProgramming.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataMining.Framework.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.Canvas.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.Canvas.dll.config<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DataVisualization.Network.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.Imaging.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.Imaging.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.Imaging.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.MarkupLanguage.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.MarkupLanguage.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.MarkupLanguage.xml<br /></li>\n</ul>\n"},{"title":"VisualBasic App Framework for .NET 4.0","date":"2016-06-10T09:25:32.000Z","_content":"\n[<< Back to Index](../index.html)\n# VisualBasic App Framework for .NET 4.0\n\nVersion: **1.0.0**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework for .NET 4.0](https://www.nuget.org/packages/VB_AppFramework_40/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework_40**\n\n\n## Summary\nSource code can be download from github.com:\n\nhttps://github.com/xieguigang/VisualBasic_AppFramework\n\nThis library enriched the language features of VisualBasic.NET programming\n## Release Notes\nx64\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET4.0](https://www.nuget.org/packages?q=Tags%3A\".NET4.0\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.0\"}]\n```\n\n\n## File includes\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n\n","source":"nuget/VB_AppFramework_40/VB_AppFramework_40.1.0.0.md","raw":"---\ntitle: VisualBasic App Framework for .NET 4.0\ndate: 6/10/2016 5:25:32 PM\n---\n\n[<< Back to Index](../index.html)\n# VisualBasic App Framework for .NET 4.0\n\nVersion: **1.0.0**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework for .NET 4.0](https://www.nuget.org/packages/VB_AppFramework_40/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework_40**\n\n\n## Summary\nSource code can be download from github.com:\n\nhttps://github.com/xieguigang/VisualBasic_AppFramework\n\nThis library enriched the language features of VisualBasic.NET programming\n## Release Notes\nx64\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET4.0](https://www.nuget.org/packages?q=Tags%3A\".NET4.0\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.0\"}]\n```\n\n\n## File includes\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n\n","updated":"2016-06-10T09:25:32.631Z","path":"nuget/VB_AppFramework_40/VB_AppFramework_40.1.0.0.html","comments":1,"layout":"page","_id":"cipnbu3kw003s8gv4025xpbxy","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework-for-NET-4-0\"><a href=\"#VisualBasic-App-Framework-for-NET-4-0\" class=\"headerlink\" title=\"VisualBasic App Framework for .NET 4.0\"></a>VisualBasic App Framework for .NET 4.0</h1><p>Version: <strong>1.0.0</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework_40/\" target=\"_blank\" rel=\"external\">VisualBasic App Framework for .NET 4.0</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework_40</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Source code can be download from github.com:</p>\n<p><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>This library enriched the language features of VisualBasic.NET programming</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>x64</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\" target=\"_blank\" rel=\"external\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET4.0&quot;\" target=\"_blank\" rel=\"external\">.NET4.0</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.0\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework-for-NET-4-0\"><a href=\"#VisualBasic-App-Framework-for-NET-4-0\" class=\"headerlink\" title=\"VisualBasic App Framework for .NET 4.0\"></a>VisualBasic App Framework for .NET 4.0</h1><p>Version: <strong>1.0.0</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework_40/\">VisualBasic App Framework for .NET 4.0</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework_40</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Source code can be download from github.com:</p>\n<p><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>This library enriched the language features of VisualBasic.NET programming</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>x64</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET4.0&quot;\">.NET4.0</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.0\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n</ul>\n"},{"title":"VisualBasic App Framework for .NET 4.0","date":"2016-06-10T09:25:33.000Z","_content":"\n[<< Back to Index](../index.html)\n# VisualBasic App Framework for .NET 4.0\n\nVersion: **1.0.1**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework for .NET 4.0](https://www.nuget.org/packages/VB_AppFramework_40/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework_40**\n\n\n## Summary\nSource code can be download from github.com:\n\nhttps://github.com/xieguigang/VisualBasic_AppFramework\n\nThis library enriched the language features of VisualBasic.NET programming.\nEasily create and read some common document in VisualBasic: http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\n## Release Notes\nx64, AnyCPU\nCode style for this runtime library is on Codeproject article: http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET4.0](https://www.nuget.org/packages?q=Tags%3A\".NET4.0\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.0\"}]\n```\n\n\n## File includes\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n\n","source":"nuget/VB_AppFramework_40/VB_AppFramework_40.1.0.1.md","raw":"---\ntitle: VisualBasic App Framework for .NET 4.0\ndate: 6/10/2016 5:25:33 PM\n---\n\n[<< Back to Index](../index.html)\n# VisualBasic App Framework for .NET 4.0\n\nVersion: **1.0.1**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework for .NET 4.0](https://www.nuget.org/packages/VB_AppFramework_40/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework_40**\n\n\n## Summary\nSource code can be download from github.com:\n\nhttps://github.com/xieguigang/VisualBasic_AppFramework\n\nThis library enriched the language features of VisualBasic.NET programming.\nEasily create and read some common document in VisualBasic: http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\n## Release Notes\nx64, AnyCPU\nCode style for this runtime library is on Codeproject article: http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET4.0](https://www.nuget.org/packages?q=Tags%3A\".NET4.0\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.0\"}]\n```\n\n\n## File includes\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n\n","updated":"2016-06-10T09:25:33.475Z","path":"nuget/VB_AppFramework_40/VB_AppFramework_40.1.0.1.html","comments":1,"layout":"page","_id":"cipnbu3l2003t8gv46gur9uhf","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework-for-NET-4-0\"><a href=\"#VisualBasic-App-Framework-for-NET-4-0\" class=\"headerlink\" title=\"VisualBasic App Framework for .NET 4.0\"></a>VisualBasic App Framework for .NET 4.0</h1><p>Version: <strong>1.0.1</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework_40/\" target=\"_blank\" rel=\"external\">VisualBasic App Framework for .NET 4.0</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework_40</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Source code can be download from github.com:</p>\n<p><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>This library enriched the language features of VisualBasic.NET programming.<br>Easily create and read some common document in VisualBasic: <a href=\"http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\" target=\"_blank\" rel=\"external\">http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>x64, AnyCPU<br>Code style for this runtime library is on Codeproject article: <a href=\"http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\" target=\"_blank\" rel=\"external\">http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic</a></p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\" target=\"_blank\" rel=\"external\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET4.0&quot;\" target=\"_blank\" rel=\"external\">.NET4.0</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.0\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework-for-NET-4-0\"><a href=\"#VisualBasic-App-Framework-for-NET-4-0\" class=\"headerlink\" title=\"VisualBasic App Framework for .NET 4.0\"></a>VisualBasic App Framework for .NET 4.0</h1><p>Version: <strong>1.0.1</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework_40/\">VisualBasic App Framework for .NET 4.0</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework_40</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Source code can be download from github.com:</p>\n<p><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>This library enriched the language features of VisualBasic.NET programming.<br>Easily create and read some common document in VisualBasic: <a href=\"http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\">http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>x64, AnyCPU<br>Code style for this runtime library is on Codeproject article: <a href=\"http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\">http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic</a></p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET4.0&quot;\">.NET4.0</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.0\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n</ul>\n"},{"title":"VisualBasic App Framework for .NET 4.0","date":"2016-06-10T09:25:34.000Z","_content":"\n[<< Back to Index](../index.html)\n# VisualBasic App Framework for .NET 4.0\n\nVersion: **1.0.2**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework for .NET 4.0](https://www.nuget.org/packages/VB_AppFramework_40/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework_40**\n\n\n## Summary\nSource code can be download from github.com:\n\nhttps://github.com/xieguigang/VisualBasic_AppFramework\n\nThis library enriched the language features of VisualBasic.NET programming.\nEasily create and read some common document in VisualBasic: http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\n## Release Notes\nfix a colorful console output thread problem.\n\nCode style for this runtime library is on Codeproject article: http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET4.0](https://www.nuget.org/packages?q=Tags%3A\".NET4.0\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.0\"}]\n```\n\n\n## File includes\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n\n","source":"nuget/VB_AppFramework_40/VB_AppFramework_40.1.0.2.md","raw":"---\ntitle: VisualBasic App Framework for .NET 4.0\ndate: 6/10/2016 5:25:34 PM\n---\n\n[<< Back to Index](../index.html)\n# VisualBasic App Framework for .NET 4.0\n\nVersion: **1.0.2**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework for .NET 4.0](https://www.nuget.org/packages/VB_AppFramework_40/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework_40**\n\n\n## Summary\nSource code can be download from github.com:\n\nhttps://github.com/xieguigang/VisualBasic_AppFramework\n\nThis library enriched the language features of VisualBasic.NET programming.\nEasily create and read some common document in VisualBasic: http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\n## Release Notes\nfix a colorful console output thread problem.\n\nCode style for this runtime library is on Codeproject article: http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET4.0](https://www.nuget.org/packages?q=Tags%3A\".NET4.0\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.0\"}]\n```\n\n\n## File includes\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n\n","updated":"2016-06-10T09:25:34.920Z","path":"nuget/VB_AppFramework_40/VB_AppFramework_40.1.0.2.html","comments":1,"layout":"page","_id":"cipnbu3l8003u8gv4blt7inmx","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework-for-NET-4-0\"><a href=\"#VisualBasic-App-Framework-for-NET-4-0\" class=\"headerlink\" title=\"VisualBasic App Framework for .NET 4.0\"></a>VisualBasic App Framework for .NET 4.0</h1><p>Version: <strong>1.0.2</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework_40/\" target=\"_blank\" rel=\"external\">VisualBasic App Framework for .NET 4.0</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework_40</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Source code can be download from github.com:</p>\n<p><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>This library enriched the language features of VisualBasic.NET programming.<br>Easily create and read some common document in VisualBasic: <a href=\"http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\" target=\"_blank\" rel=\"external\">http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>fix a colorful console output thread problem.</p>\n<p>Code style for this runtime library is on Codeproject article: <a href=\"http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\" target=\"_blank\" rel=\"external\">http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic</a></p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\" target=\"_blank\" rel=\"external\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET4.0&quot;\" target=\"_blank\" rel=\"external\">.NET4.0</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.0\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework-for-NET-4-0\"><a href=\"#VisualBasic-App-Framework-for-NET-4-0\" class=\"headerlink\" title=\"VisualBasic App Framework for .NET 4.0\"></a>VisualBasic App Framework for .NET 4.0</h1><p>Version: <strong>1.0.2</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework_40/\">VisualBasic App Framework for .NET 4.0</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework_40</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Source code can be download from github.com:</p>\n<p><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>This library enriched the language features of VisualBasic.NET programming.<br>Easily create and read some common document in VisualBasic: <a href=\"http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\">http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>fix a colorful console output thread problem.</p>\n<p>Code style for this runtime library is on Codeproject article: <a href=\"http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\">http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic</a></p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET4.0&quot;\">.NET4.0</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.0\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n</ul>\n"},{"title":"VisualBasic App Framework for .NET 4.0","date":"2016-06-10T09:25:35.000Z","_content":"\n[<< Back to Index](../index.html)\n# VisualBasic App Framework for .NET 4.0\n\nVersion: **1.0.29**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework for .NET 4.0](https://www.nuget.org/packages/VB_AppFramework_40/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework_40**\n\n\n## Summary\nSource code can be download from github.com:\n\nhttps://github.com/xieguigang/VisualBasic_AppFramework\n\nThis library enriched the language features of VisualBasic.NET programming.\nEasily create and read some common document in VisualBasic: http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\n## Release Notes\nreconstruct the data source schema extension at namespace: Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps\n\nimprovements md5hash tolong function based on google cityhash algorithm: \nhttps://github.com/xieguigang/VisualBasic_AppFramework/commit/20e33c136f949c35d347e27e83035629bf0226ee\n\nCode style for this runtime library is on Codeproject article: http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET4.0](https://www.nuget.org/packages?q=Tags%3A\".NET4.0\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.0\"}]\n```\n\n\n## File includes\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n\n","source":"nuget/VB_AppFramework_40/VB_AppFramework_40.1.0.29.md","raw":"---\ntitle: VisualBasic App Framework for .NET 4.0\ndate: 6/10/2016 5:25:35 PM\n---\n\n[<< Back to Index](../index.html)\n# VisualBasic App Framework for .NET 4.0\n\nVersion: **1.0.29**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework for .NET 4.0](https://www.nuget.org/packages/VB_AppFramework_40/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework_40**\n\n\n## Summary\nSource code can be download from github.com:\n\nhttps://github.com/xieguigang/VisualBasic_AppFramework\n\nThis library enriched the language features of VisualBasic.NET programming.\nEasily create and read some common document in VisualBasic: http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\n## Release Notes\nreconstruct the data source schema extension at namespace: Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps\n\nimprovements md5hash tolong function based on google cityhash algorithm: \nhttps://github.com/xieguigang/VisualBasic_AppFramework/commit/20e33c136f949c35d347e27e83035629bf0226ee\n\nCode style for this runtime library is on Codeproject article: http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET4.0](https://www.nuget.org/packages?q=Tags%3A\".NET4.0\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.0\"}]\n```\n\n\n## File includes\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n\n","updated":"2016-06-10T09:25:35.809Z","path":"nuget/VB_AppFramework_40/VB_AppFramework_40.1.0.29.html","comments":1,"layout":"page","_id":"cipnbu3l9003v8gv4u7cs8hyi","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework-for-NET-4-0\"><a href=\"#VisualBasic-App-Framework-for-NET-4-0\" class=\"headerlink\" title=\"VisualBasic App Framework for .NET 4.0\"></a>VisualBasic App Framework for .NET 4.0</h1><p>Version: <strong>1.0.29</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework_40/\" target=\"_blank\" rel=\"external\">VisualBasic App Framework for .NET 4.0</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework_40</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Source code can be download from github.com:</p>\n<p><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>This library enriched the language features of VisualBasic.NET programming.<br>Easily create and read some common document in VisualBasic: <a href=\"http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\" target=\"_blank\" rel=\"external\">http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>reconstruct the data source schema extension at namespace: Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps</p>\n<p>improvements md5hash tolong function based on google cityhash algorithm:<br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/commit/20e33c136f949c35d347e27e83035629bf0226ee\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework/commit/20e33c136f949c35d347e27e83035629bf0226ee</a></p>\n<p>Code style for this runtime library is on Codeproject article: <a href=\"http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\" target=\"_blank\" rel=\"external\">http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic</a></p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\" target=\"_blank\" rel=\"external\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET4.0&quot;\" target=\"_blank\" rel=\"external\">.NET4.0</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.0\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework-for-NET-4-0\"><a href=\"#VisualBasic-App-Framework-for-NET-4-0\" class=\"headerlink\" title=\"VisualBasic App Framework for .NET 4.0\"></a>VisualBasic App Framework for .NET 4.0</h1><p>Version: <strong>1.0.29</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework_40/\">VisualBasic App Framework for .NET 4.0</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework_40</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Source code can be download from github.com:</p>\n<p><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>This library enriched the language features of VisualBasic.NET programming.<br>Easily create and read some common document in VisualBasic: <a href=\"http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\">http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>reconstruct the data source schema extension at namespace: Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps</p>\n<p>improvements md5hash tolong function based on google cityhash algorithm:<br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/commit/20e33c136f949c35d347e27e83035629bf0226ee\">https://github.com/xieguigang/VisualBasic_AppFramework/commit/20e33c136f949c35d347e27e83035629bf0226ee</a></p>\n<p>Code style for this runtime library is on Codeproject article: <a href=\"http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic\">http://www.codeproject.com/Articles/1101608/Code-style-guidelines-for-Microsoft-VisualBasic</a></p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET4.0&quot;\">.NET4.0</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.0\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll.config<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n</ul>\n"},{"title":"VisualBasic App Framework for .NET 4.0","date":"2016-06-10T09:25:36.000Z","_content":"\n[<< Back to Index](../index.html)\n# VisualBasic App Framework for .NET 4.0\n\nVersion: **1.0.35**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework for .NET 4.0](https://www.nuget.org/packages/VB_AppFramework_40/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework_40**\n\n\n## Summary\nSource code can be download from github.com:\n\nhttps://github.com/xieguigang/VisualBasic_AppFramework\n\nThis library enriched the language features of VisualBasic.NET programming.\nEasily create and read some common document in VisualBasic: http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\n## Release Notes\nImprovements on the multiple process batch task model and multiple thread batch task model\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET4.0](https://www.nuget.org/packages?q=Tags%3A\".NET4.0\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.0\"}]\n```\n\n\n## File includes\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n\n","source":"nuget/VB_AppFramework_40/VB_AppFramework_40.1.0.35.md","raw":"---\ntitle: VisualBasic App Framework for .NET 4.0\ndate: 6/10/2016 5:25:36 PM\n---\n\n[<< Back to Index](../index.html)\n# VisualBasic App Framework for .NET 4.0\n\nVersion: **1.0.35**\n\nProject URL: https://github.com/xieguigang/VisualBasic_AppFramework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic App Framework for .NET 4.0](https://www.nuget.org/packages/VB_AppFramework_40/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB_AppFramework_40**\n\n\n## Summary\nSource code can be download from github.com:\n\nhttps://github.com/xieguigang/VisualBasic_AppFramework\n\nThis library enriched the language features of VisualBasic.NET programming.\nEasily create and read some common document in VisualBasic: http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\n## Release Notes\nImprovements on the multiple process batch task model and multiple thread batch task model\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [.NET4.0](https://www.nuget.org/packages?q=Tags%3A\".NET4.0\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.0\"}]\n```\n\n\n## File includes\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br />\n+ x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br />\n\n","updated":"2016-06-10T09:25:36.529Z","path":"nuget/VB_AppFramework_40/VB_AppFramework_40.1.0.35.html","comments":1,"layout":"page","_id":"cipnbu3lb003w8gv490bbfcfw","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework-for-NET-4-0\"><a href=\"#VisualBasic-App-Framework-for-NET-4-0\" class=\"headerlink\" title=\"VisualBasic App Framework for .NET 4.0\"></a>VisualBasic App Framework for .NET 4.0</h1><p>Version: <strong>1.0.35</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework_40/\" target=\"_blank\" rel=\"external\">VisualBasic App Framework for .NET 4.0</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework_40</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Source code can be download from github.com:</p>\n<p><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>This library enriched the language features of VisualBasic.NET programming.<br>Easily create and read some common document in VisualBasic: <a href=\"http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\" target=\"_blank\" rel=\"external\">http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>Improvements on the multiple process batch task model and multiple thread batch task model</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\" target=\"_blank\" rel=\"external\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET4.0&quot;\" target=\"_blank\" rel=\"external\">.NET4.0</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.0\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-App-Framework-for-NET-4-0\"><a href=\"#VisualBasic-App-Framework-for-NET-4-0\" class=\"headerlink\" title=\"VisualBasic App Framework for .NET 4.0\"></a>VisualBasic App Framework for .NET 4.0</h1><p>Version: <strong>1.0.35</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB_AppFramework_40/\">VisualBasic App Framework for .NET 4.0</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB_AppFramework_40</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>Source code can be download from github.com:</p>\n<p><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework\">https://github.com/xieguigang/VisualBasic_AppFramework</a></p>\n<p>This library enriched the language features of VisualBasic.NET programming.<br>Easily create and read some common document in VisualBasic: <a href=\"http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic\">http://www.codeproject.com/Articles/1099296/Easy-Document-in-VisualBasic</a></p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>Improvements on the multiple process batch task model and multiple thread batch task model</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET4.0&quot;\">.NET4.0</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.0\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.DocumentFormat.Csv.xml<br /></li>\n</ul>\n"},{"title":"VisualBasic light http server library","date":"2016-06-10T09:25:06.000Z","_content":"\n[<< Back to Index](../index.html)\n# VisualBasic light http server library\n\nVersion: **1.0.0**\n\nProject URL: https://github.com/SMRUCC/REST_Framework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic light http server library](https://www.nuget.org/packages/VB.httpd/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB.httpd**\n\n\n## Summary\nA lite version of http server, currently not support https\nsource code can be download from github:\nhttps://github.com/SMRUCC/REST_Framework\n\nPlatform:  Win32/Linux  .NET 4.6/mono x64\n\nA lite version of http server, currently not support https\n\nfor commandline usage, type in terminal:\nhttpd ?\n## Release Notes\ncan running on linux, but some file path case sensitive could case problem of file not found\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [mono](https://www.nuget.org/packages?q=Tags%3A\"mono\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\") [x64](https://www.nuget.org/packages?q=Tags%3A\"x64\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ D:\\httpd\\httpd<br />\n+ D:\\httpd\\httpd.exe<br />\n+ D:\\httpd\\httpd.exe.config<br />\n+ D:\\httpd\\httpd.json<br />\n+ D:\\httpd\\httpd.pdb<br />\n+ D:\\httpd\\httpd.txt<br />\n+ D:\\httpd\\httpd.vshost.exe<br />\n+ D:\\httpd\\httpd.vshost.exe.config<br />\n+ D:\\httpd\\httpd.vshost.exe.manifest<br />\n+ D:\\httpd\\httpd.xml<br />\n+ D:\\httpd\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ D:\\httpd\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ D:\\httpd\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ D:\\httpd\\Microsoft.VisualBasic.dll<br />\n+ D:\\httpd\\readme.txt<br />\n+ D:\\httpd\\SMRUCC.HTTPInternal.dll<br />\n+ D:\\httpd\\SMRUCC.HTTPInternal.pdb<br />\n+ D:\\httpd\\SMRUCC.HTTPInternal.xml<br />\n\n","source":"nuget/httpd/VB.httpd.1.0.0.md","raw":"---\ntitle: VisualBasic light http server library\ndate: 6/10/2016 5:25:06 PM\n---\n\n[<< Back to Index](../index.html)\n# VisualBasic light http server library\n\nVersion: **1.0.0**\n\nProject URL: https://github.com/SMRUCC/REST_Framework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic light http server library](https://www.nuget.org/packages/VB.httpd/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB.httpd**\n\n\n## Summary\nA lite version of http server, currently not support https\nsource code can be download from github:\nhttps://github.com/SMRUCC/REST_Framework\n\nPlatform:  Win32/Linux  .NET 4.6/mono x64\n\nA lite version of http server, currently not support https\n\nfor commandline usage, type in terminal:\nhttpd ?\n## Release Notes\ncan running on linux, but some file path case sensitive could case problem of file not found\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [mono](https://www.nuget.org/packages?q=Tags%3A\"mono\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\") [x64](https://www.nuget.org/packages?q=Tags%3A\"x64\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ D:\\httpd\\httpd<br />\n+ D:\\httpd\\httpd.exe<br />\n+ D:\\httpd\\httpd.exe.config<br />\n+ D:\\httpd\\httpd.json<br />\n+ D:\\httpd\\httpd.pdb<br />\n+ D:\\httpd\\httpd.txt<br />\n+ D:\\httpd\\httpd.vshost.exe<br />\n+ D:\\httpd\\httpd.vshost.exe.config<br />\n+ D:\\httpd\\httpd.vshost.exe.manifest<br />\n+ D:\\httpd\\httpd.xml<br />\n+ D:\\httpd\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ D:\\httpd\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ D:\\httpd\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ D:\\httpd\\Microsoft.VisualBasic.dll<br />\n+ D:\\httpd\\readme.txt<br />\n+ D:\\httpd\\SMRUCC.HTTPInternal.dll<br />\n+ D:\\httpd\\SMRUCC.HTTPInternal.pdb<br />\n+ D:\\httpd\\SMRUCC.HTTPInternal.xml<br />\n\n","updated":"2016-06-10T09:25:06.589Z","path":"nuget/httpd/VB.httpd.1.0.0.html","comments":1,"layout":"page","_id":"cipnbu3lc003x8gv4m546v2ph","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-light-http-server-library\"><a href=\"#VisualBasic-light-http-server-library\" class=\"headerlink\" title=\"VisualBasic light http server library\"></a>VisualBasic light http server library</h1><p>Version: <strong>1.0.0</strong></p>\n<p>Project URL: <a href=\"https://github.com/SMRUCC/REST_Framework\" target=\"_blank\" rel=\"external\">https://github.com/SMRUCC/REST_Framework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB.httpd/\" target=\"_blank\" rel=\"external\">VisualBasic light http server library</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB.httpd</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>A lite version of http server, currently not support https<br>source code can be download from github:<br><a href=\"https://github.com/SMRUCC/REST_Framework\" target=\"_blank\" rel=\"external\">https://github.com/SMRUCC/REST_Framework</a></p>\n<p>Platform:  Win32/Linux  .NET 4.6/mono x64</p>\n<p>A lite version of http server, currently not support https</p>\n<p>for commandline usage, type in terminal:<br>httpd ?</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>can running on linux, but some file path case sensitive could case problem of file not found</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\" target=\"_blank\" rel=\"external\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;mono&quot;\" target=\"_blank\" rel=\"external\">mono</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\" target=\"_blank\" rel=\"external\">.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;x64&quot;\" target=\"_blank\" rel=\"external\">x64</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>D:\\httpd\\httpd<br></li>\n<li>D:\\httpd\\httpd.exe<br></li>\n<li>D:\\httpd\\httpd.exe.config<br></li>\n<li>D:\\httpd\\httpd.json<br></li>\n<li>D:\\httpd\\httpd.pdb<br></li>\n<li>D:\\httpd\\httpd.txt<br></li>\n<li>D:\\httpd\\httpd.vshost.exe<br></li>\n<li>D:\\httpd\\httpd.vshost.exe.config<br></li>\n<li>D:\\httpd\\httpd.vshost.exe.manifest<br></li>\n<li>D:\\httpd\\httpd.xml<br></li>\n<li>D:\\httpd\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>D:\\httpd\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>D:\\httpd\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>D:\\httpd\\Microsoft.VisualBasic.dll<br></li>\n<li>D:\\httpd\\readme.txt<br></li>\n<li>D:\\httpd\\SMRUCC.HTTPInternal.dll<br></li>\n<li>D:\\httpd\\SMRUCC.HTTPInternal.pdb<br></li>\n<li>D:\\httpd\\SMRUCC.HTTPInternal.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-light-http-server-library\"><a href=\"#VisualBasic-light-http-server-library\" class=\"headerlink\" title=\"VisualBasic light http server library\"></a>VisualBasic light http server library</h1><p>Version: <strong>1.0.0</strong></p>\n<p>Project URL: <a href=\"https://github.com/SMRUCC/REST_Framework\">https://github.com/SMRUCC/REST_Framework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB.httpd/\">VisualBasic light http server library</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB.httpd</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>A lite version of http server, currently not support https<br>source code can be download from github:<br><a href=\"https://github.com/SMRUCC/REST_Framework\">https://github.com/SMRUCC/REST_Framework</a></p>\n<p>Platform:  Win32/Linux  .NET 4.6/mono x64</p>\n<p>A lite version of http server, currently not support https</p>\n<p>for commandline usage, type in terminal:<br>httpd ?</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>can running on linux, but some file path case sensitive could case problem of file not found</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;mono&quot;\">mono</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\">.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;x64&quot;\">x64</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>D:\\httpd\\httpd<br /></li>\n<li>D:\\httpd\\httpd.exe<br /></li>\n<li>D:\\httpd\\httpd.exe.config<br /></li>\n<li>D:\\httpd\\httpd.json<br /></li>\n<li>D:\\httpd\\httpd.pdb<br /></li>\n<li>D:\\httpd\\httpd.txt<br /></li>\n<li>D:\\httpd\\httpd.vshost.exe<br /></li>\n<li>D:\\httpd\\httpd.vshost.exe.config<br /></li>\n<li>D:\\httpd\\httpd.vshost.exe.manifest<br /></li>\n<li>D:\\httpd\\httpd.xml<br /></li>\n<li>D:\\httpd\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>D:\\httpd\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>D:\\httpd\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>D:\\httpd\\Microsoft.VisualBasic.dll<br /></li>\n<li>D:\\httpd\\readme.txt<br /></li>\n<li>D:\\httpd\\SMRUCC.HTTPInternal.dll<br /></li>\n<li>D:\\httpd\\SMRUCC.HTTPInternal.pdb<br /></li>\n<li>D:\\httpd\\SMRUCC.HTTPInternal.xml<br /></li>\n</ul>\n"},{"title":"VisualBasic light http server library","date":"2016-06-10T09:25:07.000Z","_content":"\n[<< Back to Index](../index.html)\n# VisualBasic light http server library\n\nVersion: **1.0.1**\n\nProject URL: https://github.com/xieguigang/REST_Framework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic light http server library](https://www.nuget.org/packages/VB.httpd/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB.httpd**\n\n\n## Summary\nA lite version of http server, currently not support https\nsource code can be download from github:\nhttps://github.com/xieguigang/REST_Framework\n\nPlatform:  Win32/Linux  .NET 4.6/mono x64\n\nA lite version of http server, currently not support https\n\nfor commandline usage, type in terminal:\nhttpd ?\n## Release Notes\ncan running on linux, but some file path case sensitive could case problem of file not found.\n\nfix a bugs of colorful printing on the terminal console\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [mono](https://www.nuget.org/packages?q=Tags%3A\"mono\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\") [x64](https://www.nuget.org/packages?q=Tags%3A\"x64\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ D:\\httpd\\httpd.exe<br />\n+ D:\\httpd\\httpd.exe.config<br />\n+ D:\\httpd\\httpd.pdb<br />\n+ D:\\httpd\\httpd.xml<br />\n+ D:\\httpd\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ D:\\httpd\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ D:\\httpd\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ D:\\httpd\\Microsoft.VisualBasic.dll<br />\n+ D:\\httpd\\SMRUCC.HTTPInternal.dll<br />\n+ D:\\httpd\\SMRUCC.HTTPInternal.pdb<br />\n+ D:\\httpd\\SMRUCC.HTTPInternal.xml<br />\n\n","source":"nuget/httpd/VB.httpd.1.0.1.md","raw":"---\ntitle: VisualBasic light http server library\ndate: 6/10/2016 5:25:07 PM\n---\n\n[<< Back to Index](../index.html)\n# VisualBasic light http server library\n\nVersion: **1.0.1**\n\nProject URL: https://github.com/xieguigang/REST_Framework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic light http server library](https://www.nuget.org/packages/VB.httpd/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB.httpd**\n\n\n## Summary\nA lite version of http server, currently not support https\nsource code can be download from github:\nhttps://github.com/xieguigang/REST_Framework\n\nPlatform:  Win32/Linux  .NET 4.6/mono x64\n\nA lite version of http server, currently not support https\n\nfor commandline usage, type in terminal:\nhttpd ?\n## Release Notes\ncan running on linux, but some file path case sensitive could case problem of file not found.\n\nfix a bugs of colorful printing on the terminal console\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [mono](https://www.nuget.org/packages?q=Tags%3A\"mono\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\") [x64](https://www.nuget.org/packages?q=Tags%3A\"x64\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ D:\\httpd\\httpd.exe<br />\n+ D:\\httpd\\httpd.exe.config<br />\n+ D:\\httpd\\httpd.pdb<br />\n+ D:\\httpd\\httpd.xml<br />\n+ D:\\httpd\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ D:\\httpd\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ D:\\httpd\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ D:\\httpd\\Microsoft.VisualBasic.dll<br />\n+ D:\\httpd\\SMRUCC.HTTPInternal.dll<br />\n+ D:\\httpd\\SMRUCC.HTTPInternal.pdb<br />\n+ D:\\httpd\\SMRUCC.HTTPInternal.xml<br />\n\n","updated":"2016-06-10T09:25:07.466Z","path":"nuget/httpd/VB.httpd.1.0.1.html","comments":1,"layout":"page","_id":"cipnbu3ld003y8gv4k37y7jzq","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-light-http-server-library\"><a href=\"#VisualBasic-light-http-server-library\" class=\"headerlink\" title=\"VisualBasic light http server library\"></a>VisualBasic light http server library</h1><p>Version: <strong>1.0.1</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/REST_Framework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/REST_Framework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB.httpd/\" target=\"_blank\" rel=\"external\">VisualBasic light http server library</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB.httpd</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>A lite version of http server, currently not support https<br>source code can be download from github:<br><a href=\"https://github.com/xieguigang/REST_Framework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/REST_Framework</a></p>\n<p>Platform:  Win32/Linux  .NET 4.6/mono x64</p>\n<p>A lite version of http server, currently not support https</p>\n<p>for commandline usage, type in terminal:<br>httpd ?</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>can running on linux, but some file path case sensitive could case problem of file not found.</p>\n<p>fix a bugs of colorful printing on the terminal console</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\" target=\"_blank\" rel=\"external\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;mono&quot;\" target=\"_blank\" rel=\"external\">mono</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\" target=\"_blank\" rel=\"external\">.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;x64&quot;\" target=\"_blank\" rel=\"external\">x64</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>D:\\httpd\\httpd.exe<br></li>\n<li>D:\\httpd\\httpd.exe.config<br></li>\n<li>D:\\httpd\\httpd.pdb<br></li>\n<li>D:\\httpd\\httpd.xml<br></li>\n<li>D:\\httpd\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>D:\\httpd\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>D:\\httpd\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>D:\\httpd\\Microsoft.VisualBasic.dll<br></li>\n<li>D:\\httpd\\SMRUCC.HTTPInternal.dll<br></li>\n<li>D:\\httpd\\SMRUCC.HTTPInternal.pdb<br></li>\n<li>D:\\httpd\\SMRUCC.HTTPInternal.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-light-http-server-library\"><a href=\"#VisualBasic-light-http-server-library\" class=\"headerlink\" title=\"VisualBasic light http server library\"></a>VisualBasic light http server library</h1><p>Version: <strong>1.0.1</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/REST_Framework\">https://github.com/xieguigang/REST_Framework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB.httpd/\">VisualBasic light http server library</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB.httpd</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>A lite version of http server, currently not support https<br>source code can be download from github:<br><a href=\"https://github.com/xieguigang/REST_Framework\">https://github.com/xieguigang/REST_Framework</a></p>\n<p>Platform:  Win32/Linux  .NET 4.6/mono x64</p>\n<p>A lite version of http server, currently not support https</p>\n<p>for commandline usage, type in terminal:<br>httpd ?</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>can running on linux, but some file path case sensitive could case problem of file not found.</p>\n<p>fix a bugs of colorful printing on the terminal console</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;mono&quot;\">mono</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\">.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;x64&quot;\">x64</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>D:\\httpd\\httpd.exe<br /></li>\n<li>D:\\httpd\\httpd.exe.config<br /></li>\n<li>D:\\httpd\\httpd.pdb<br /></li>\n<li>D:\\httpd\\httpd.xml<br /></li>\n<li>D:\\httpd\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>D:\\httpd\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>D:\\httpd\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>D:\\httpd\\Microsoft.VisualBasic.dll<br /></li>\n<li>D:\\httpd\\SMRUCC.HTTPInternal.dll<br /></li>\n<li>D:\\httpd\\SMRUCC.HTTPInternal.pdb<br /></li>\n<li>D:\\httpd\\SMRUCC.HTTPInternal.xml<br /></li>\n</ul>\n"},{"title":"VisualBasic light http server library","date":"2016-06-10T09:25:08.000Z","_content":"\n[<< Back to Index](../index.html)\n# VisualBasic light http server library\n\nVersion: **1.0.12**\n\nProject URL: https://github.com/xieguigang/REST_Framework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic light http server library](https://www.nuget.org/packages/VB.httpd/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB.httpd**\n\n\n## Summary\nA lite version of http server, currently not support https\nsource code can be download from github:\nhttps://github.com/xieguigang/REST_Framework\n\nPlatform:  Win32/Linux  .NET 4.6/mono x64\n\nA lite version of http server, currently not support https\n\nfor commandline usage, type in terminal:\nhttpd ?\n## Release Notes\nImprovements on the multiple thread task model in the framework\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [mono](https://www.nuget.org/packages?q=Tags%3A\"mono\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\") [x64](https://www.nuget.org/packages?q=Tags%3A\"x64\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ httpd.exe<br />\n+ httpd.exe.config<br />\n+ httpd.pdb<br />\n+ httpd.xml<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ D:\\httpd\\Microsoft.VisualBasic.dll<br />\n+ SMRUCC.HTTPInternal.dll<br />\n+ SMRUCC.HTTPInternal.pdb<br />\n+ SMRUCC.HTTPInternal.xml<br />\n\n","source":"nuget/httpd/VB.httpd.1.0.12.md","raw":"---\ntitle: VisualBasic light http server library\ndate: 6/10/2016 5:25:08 PM\n---\n\n[<< Back to Index](../index.html)\n# VisualBasic light http server library\n\nVersion: **1.0.12**\n\nProject URL: https://github.com/xieguigang/REST_Framework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic light http server library](https://www.nuget.org/packages/VB.httpd/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB.httpd**\n\n\n## Summary\nA lite version of http server, currently not support https\nsource code can be download from github:\nhttps://github.com/xieguigang/REST_Framework\n\nPlatform:  Win32/Linux  .NET 4.6/mono x64\n\nA lite version of http server, currently not support https\n\nfor commandline usage, type in terminal:\nhttpd ?\n## Release Notes\nImprovements on the multiple thread task model in the framework\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [mono](https://www.nuget.org/packages?q=Tags%3A\"mono\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\") [x64](https://www.nuget.org/packages?q=Tags%3A\"x64\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ httpd.exe<br />\n+ httpd.exe.config<br />\n+ httpd.pdb<br />\n+ httpd.xml<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ D:\\httpd\\Microsoft.VisualBasic.dll<br />\n+ SMRUCC.HTTPInternal.dll<br />\n+ SMRUCC.HTTPInternal.pdb<br />\n+ SMRUCC.HTTPInternal.xml<br />\n\n","updated":"2016-06-10T09:25:08.991Z","path":"nuget/httpd/VB.httpd.1.0.12.html","comments":1,"layout":"page","_id":"cipnbu3lf003z8gv40g1vf81j","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-light-http-server-library\"><a href=\"#VisualBasic-light-http-server-library\" class=\"headerlink\" title=\"VisualBasic light http server library\"></a>VisualBasic light http server library</h1><p>Version: <strong>1.0.12</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/REST_Framework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/REST_Framework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB.httpd/\" target=\"_blank\" rel=\"external\">VisualBasic light http server library</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB.httpd</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>A lite version of http server, currently not support https<br>source code can be download from github:<br><a href=\"https://github.com/xieguigang/REST_Framework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/REST_Framework</a></p>\n<p>Platform:  Win32/Linux  .NET 4.6/mono x64</p>\n<p>A lite version of http server, currently not support https</p>\n<p>for commandline usage, type in terminal:<br>httpd ?</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>Improvements on the multiple thread task model in the framework</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\" target=\"_blank\" rel=\"external\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;mono&quot;\" target=\"_blank\" rel=\"external\">mono</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\" target=\"_blank\" rel=\"external\">.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;x64&quot;\" target=\"_blank\" rel=\"external\">x64</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>httpd.exe<br></li>\n<li>httpd.exe.config<br></li>\n<li>httpd.pdb<br></li>\n<li>httpd.xml<br></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>D:\\httpd\\Microsoft.VisualBasic.dll<br></li>\n<li>SMRUCC.HTTPInternal.dll<br></li>\n<li>SMRUCC.HTTPInternal.pdb<br></li>\n<li>SMRUCC.HTTPInternal.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-light-http-server-library\"><a href=\"#VisualBasic-light-http-server-library\" class=\"headerlink\" title=\"VisualBasic light http server library\"></a>VisualBasic light http server library</h1><p>Version: <strong>1.0.12</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/REST_Framework\">https://github.com/xieguigang/REST_Framework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB.httpd/\">VisualBasic light http server library</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB.httpd</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>A lite version of http server, currently not support https<br>source code can be download from github:<br><a href=\"https://github.com/xieguigang/REST_Framework\">https://github.com/xieguigang/REST_Framework</a></p>\n<p>Platform:  Win32/Linux  .NET 4.6/mono x64</p>\n<p>A lite version of http server, currently not support https</p>\n<p>for commandline usage, type in terminal:<br>httpd ?</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>Improvements on the multiple thread task model in the framework</p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;mono&quot;\">mono</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\">.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;x64&quot;\">x64</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>httpd.exe<br /></li>\n<li>httpd.exe.config<br /></li>\n<li>httpd.pdb<br /></li>\n<li>httpd.xml<br /></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>D:\\httpd\\Microsoft.VisualBasic.dll<br /></li>\n<li>SMRUCC.HTTPInternal.dll<br /></li>\n<li>SMRUCC.HTTPInternal.pdb<br /></li>\n<li>SMRUCC.HTTPInternal.xml<br /></li>\n</ul>\n"},{"title":"VisualBasic light http server library","date":"2016-06-10T09:25:09.000Z","_content":"\n[<< Back to Index](../index.html)\n# VisualBasic light http server library\n\nVersion: **1.0.13**\n\nProject URL: https://github.com/xieguigang/REST_Framework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic light http server library](https://www.nuget.org/packages/VB.httpd/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB.httpd**\n\n\n## Summary\nA lite version of http server, currently not support https\nsource code can be download from github:\nhttps://github.com/xieguigang/REST_Framework\n\nPlatform:  Win32/Linux  .NET 4.6/mono x64\n\nA lite version of http server, currently not support https\n\nfor commandline usage, type in terminal:\nhttpd ?\n## Release Notes\nfix a bug on the file index.html when the url is in format like:  http://host/sub\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [mono](https://www.nuget.org/packages?q=Tags%3A\"mono\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\") [x64](https://www.nuget.org/packages?q=Tags%3A\"x64\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x64\\httpd.exe<br />\n+ x64\\httpd.exe.config<br />\n+ x64\\httpd.pdb<br />\n+ x64\\httpd.xml<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\SMRUCC.HTTPInternal.dll<br />\n+ x64\\SMRUCC.HTTPInternal.pdb<br />\n+ x64\\SMRUCC.HTTPInternal.xml<br />\n+ x86\\httpd.exe<br />\n+ x86\\httpd.exe.config<br />\n+ x86\\httpd.pdb<br />\n+ x86\\httpd.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\SMRUCC.HTTPInternal.dll<br />\n+ x86\\SMRUCC.HTTPInternal.pdb<br />\n+ x86\\SMRUCC.HTTPInternal.xml<br />\n\n","source":"nuget/httpd/VB.httpd.1.0.13.md","raw":"---\ntitle: VisualBasic light http server library\ndate: 6/10/2016 5:25:09 PM\n---\n\n[<< Back to Index](../index.html)\n# VisualBasic light http server library\n\nVersion: **1.0.13**\n\nProject URL: https://github.com/xieguigang/REST_Framework\n\nLicense: http://www.gnu.org/licenses/gpl-3.0.html\n\nTo install **[VisualBasic light http server library](https://www.nuget.org/packages/VB.httpd/)**, run the following command in the Package Manager Console:\n> PM>  **Install-Package VB.httpd**\n\n\n## Summary\nA lite version of http server, currently not support https\nsource code can be download from github:\nhttps://github.com/xieguigang/REST_Framework\n\nPlatform:  Win32/Linux  .NET 4.6/mono x64\n\nA lite version of http server, currently not support https\n\nfor commandline usage, type in terminal:\nhttpd ?\n## Release Notes\nfix a bug on the file index.html when the url is in format like:  http://host/sub\n## Owners\nxie.guigang@live.com\n## Authors\n[xieguigang](https://www.nuget.org/profiles/xieguigang)\n## Copyright\nxie.guigang@gcmodeller.org\n## Tags\n[VB.NET](https://www.nuget.org/packages?q=Tags%3A\"VB.NET\") [mono](https://www.nuget.org/packages?q=Tags%3A\"mono\") [.NET](https://www.nuget.org/packages?q=Tags%3A\".NET\") [x64](https://www.nuget.org/packages?q=Tags%3A\"x64\")\n## Dependencies\n```json\n[{\"assemblyName\":\"Microsoft.VisualBasic\",\"targetFramework\":\".NETFramework4.6\"}]\n```\n\n\n## File includes\n+ x64\\httpd.exe<br />\n+ x64\\httpd.exe.config<br />\n+ x64\\httpd.pdb<br />\n+ x64\\httpd.xml<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x64\\SMRUCC.HTTPInternal.dll<br />\n+ x64\\SMRUCC.HTTPInternal.pdb<br />\n+ x64\\SMRUCC.HTTPInternal.xml<br />\n+ x86\\httpd.exe<br />\n+ x86\\httpd.exe.config<br />\n+ x86\\httpd.pdb<br />\n+ x86\\httpd.xml<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br />\n+ x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br />\n+ x86\\SMRUCC.HTTPInternal.dll<br />\n+ x86\\SMRUCC.HTTPInternal.pdb<br />\n+ x86\\SMRUCC.HTTPInternal.xml<br />\n\n","updated":"2016-06-10T09:25:09.579Z","path":"nuget/httpd/VB.httpd.1.0.13.html","comments":1,"layout":"page","_id":"cipnbu3li00408gv4cmtdqx69","content":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-light-http-server-library\"><a href=\"#VisualBasic-light-http-server-library\" class=\"headerlink\" title=\"VisualBasic light http server library\"></a>VisualBasic light http server library</h1><p>Version: <strong>1.0.13</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/REST_Framework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/REST_Framework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB.httpd/\" target=\"_blank\" rel=\"external\">VisualBasic light http server library</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB.httpd</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>A lite version of http server, currently not support https<br>source code can be download from github:<br><a href=\"https://github.com/xieguigang/REST_Framework\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/REST_Framework</a></p>\n<p>Platform:  Win32/Linux  .NET 4.6/mono x64</p>\n<p>A lite version of http server, currently not support https</p>\n<p>for commandline usage, type in terminal:<br>httpd ?</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>fix a bug on the file index.html when the url is in format like:  <a href=\"http://host/sub\" target=\"_blank\" rel=\"external\">http://host/sub</a></p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\" target=\"_blank\" rel=\"external\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;mono&quot;\" target=\"_blank\" rel=\"external\">mono</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\" target=\"_blank\" rel=\"external\">.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;x64&quot;\" target=\"_blank\" rel=\"external\">x64</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\httpd.exe<br></li>\n<li>x64\\httpd.exe.config<br></li>\n<li>x64\\httpd.pdb<br></li>\n<li>x64\\httpd.xml<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x64\\SMRUCC.HTTPInternal.dll<br></li>\n<li>x64\\SMRUCC.HTTPInternal.pdb<br></li>\n<li>x64\\SMRUCC.HTTPInternal.xml<br></li>\n<li>x86\\httpd.exe<br></li>\n<li>x86\\httpd.exe.config<br></li>\n<li>x86\\httpd.pdb<br></li>\n<li>x86\\httpd.xml<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br></li>\n<li>x86\\SMRUCC.HTTPInternal.dll<br></li>\n<li>x86\\SMRUCC.HTTPInternal.pdb<br></li>\n<li>x86\\SMRUCC.HTTPInternal.xml<br></li>\n</ul>\n","excerpt":"","more":"<p><a href=\"../index.html\">&lt;&lt; Back to Index</a></p>\n<h1 id=\"VisualBasic-light-http-server-library\"><a href=\"#VisualBasic-light-http-server-library\" class=\"headerlink\" title=\"VisualBasic light http server library\"></a>VisualBasic light http server library</h1><p>Version: <strong>1.0.13</strong></p>\n<p>Project URL: <a href=\"https://github.com/xieguigang/REST_Framework\">https://github.com/xieguigang/REST_Framework</a></p>\n<p>License: <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>To install <strong><a href=\"https://www.nuget.org/packages/VB.httpd/\">VisualBasic light http server library</a></strong>, run the following command in the Package Manager Console:</p>\n<blockquote>\n<p>PM&gt;  <strong>Install-Package VB.httpd</strong></p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><p>A lite version of http server, currently not support https<br>source code can be download from github:<br><a href=\"https://github.com/xieguigang/REST_Framework\">https://github.com/xieguigang/REST_Framework</a></p>\n<p>Platform:  Win32/Linux  .NET 4.6/mono x64</p>\n<p>A lite version of http server, currently not support https</p>\n<p>for commandline usage, type in terminal:<br>httpd ?</p>\n<h2 id=\"Release-Notes\"><a href=\"#Release-Notes\" class=\"headerlink\" title=\"Release Notes\"></a>Release Notes</h2><p>fix a bug on the file index.html when the url is in format like:  <a href=\"http://host/sub\">http://host/sub</a></p>\n<h2 id=\"Owners\"><a href=\"#Owners\" class=\"headerlink\" title=\"Owners\"></a>Owners</h2><p>xie.guigang@live.com</p>\n<h2 id=\"Authors\"><a href=\"#Authors\" class=\"headerlink\" title=\"Authors\"></a>Authors</h2><p><a href=\"https://www.nuget.org/profiles/xieguigang\">xieguigang</a></p>\n<h2 id=\"Copyright\"><a href=\"#Copyright\" class=\"headerlink\" title=\"Copyright\"></a>Copyright</h2><p>xie.guigang@gcmodeller.org</p>\n<h2 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h2><p><a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;VB.NET&quot;\">VB.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;mono&quot;\">mono</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;.NET&quot;\">.NET</a> <a href=\"https://www.nuget.org/packages?q=Tags%3A&quot;x64&quot;\">x64</a></p>\n<h2 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"attr\">\"assemblyName\"</span>:<span class=\"string\">\"Microsoft.VisualBasic\"</span>,<span class=\"attr\">\"targetFramework\"</span>:<span class=\"string\">\".NETFramework4.6\"</span>&#125;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"File-includes\"><a href=\"#File-includes\" class=\"headerlink\" title=\"File includes\"></a>File includes</h2><ul>\n<li>x64\\httpd.exe<br /></li>\n<li>x64\\httpd.exe.config<br /></li>\n<li>x64\\httpd.pdb<br /></li>\n<li>x64\\httpd.xml<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x64\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x64\\SMRUCC.HTTPInternal.dll<br /></li>\n<li>x64\\SMRUCC.HTTPInternal.pdb<br /></li>\n<li>x64\\SMRUCC.HTTPInternal.xml<br /></li>\n<li>x86\\httpd.exe<br /></li>\n<li>x86\\httpd.exe.config<br /></li>\n<li>x86\\httpd.pdb<br /></li>\n<li>x86\\httpd.xml<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.dll<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.pdb<br /></li>\n<li>x86\\Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a.xml<br /></li>\n<li>x86\\SMRUCC.HTTPInternal.dll<br /></li>\n<li>x86\\SMRUCC.HTTPInternal.pdb<br /></li>\n<li>x86\\SMRUCC.HTTPInternal.xml<br /></li>\n</ul>\n"}],"Post":[{"title":"3D Rotation","date":"2016-06-09T16:00:00.000Z","_content":"\n![](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Microsoft.VisualBasic.Imaging/Drawing3D/images/feature.jpg)\n\n3D Rotation is more complicated than 2D rotation since we must specify an axis of rotation. In 2D the axis of rotation is always perpendicular to the **x,y** plane, i.e., the Z axis, but in 3D the axis of rotation can have any spatial orientation. We will first look at rotation around the three principle axes **(X, Y, Z)** and then about an arbitrary axis. Note that for Inverse Rotation: **replace q with -q and then R(R-1) = 1**\n\n> 1. Z-Axis Rotation\n> 2. X-Axis Rotation\n> 3. Y-Axis Rotation\n> 4. Rotation about an Arbitrary Axis\n\n<!--more-->\n\nExample Demo:\n\n> ![](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Datavisualization.Network/3d_demo.gif)\n> [**3D network rotation in my project on github**](https://github.com/xieguigang/VisualBasic_AppFramework/tree/master/Datavisualization/Datavisualization.Network)\n\n# Z-Axis Rotation\n\nZ-axis rotation is identical to the 2D case:\n![](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Microsoft.VisualBasic.Imaging/Drawing3D/images/3drotz.gif)\n\n```\nx' = x*cos q - y*sin q\ny' = x*sin q + y*cos q\nz' = z\n\n         | cos q  sin q  0  0|\nRz (q) = |-sin q  cos q  0  0|\n         |     0      0  1  0|\n         |     0      0  0  1|\n```\n\n# X-Axis Rotation\n\nX-axis rotation looks like Z-axis rotation if replace:\n\n>X axis with Y axis\nY axis with Z axis\nZ axis with X axis\n\n![](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Microsoft.VisualBasic.Imaging/Drawing3D/images/3drotx.gif)\n\nSo we do the same replacement in the equations:\n```\ny' = y*cos(q) - z*sin(q)\nz' = y*sin(q) + z*cos(q)\nx' = x\n\n        |1      0       0   0|\nRx(q) = |0  cos(q)  sin(q)  0|\n        |0 -sin(q)  cos(q)  0|\n        |0      0       0   1|\n```\n\n# Y-Axis Rotation\n\nY-axis rotation looks like Z-axis rotation if replace:\n\n> X axis with Z axis\n> Y axis with X axis\n> Z axis with Y axis\n\n![](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Microsoft.VisualBasic.Imaging/Drawing3D/images/3droty.gif)\n\nSo we do the same replacement in equations :\n\n```\nz' = z*cos(q) - x*sin(q)\nx' = z*sin(q) + x*cos(q)\ny' = y\n\n        |cos(q)  0  -sin(q)  0|\nRy(q) = |    0   1       0   0|\n        |sin(q)  0   cos(q)  0|\n        |    0   0       0   1|\n```\n\n# Rotation about an Arbitrary Axis\n\nThis is similar to 2D rotation about an arbitrary point. The general procedure is as follows:\n\n1. Perform transformations which align rotation axis with one of coordinate axis **(x, y, z)**\n2. Perform rotation about the axis\n3. Do inverse of (1)\n\nSpecial case: The rotation axis is parallel to a principle coordinate axis. This is directly analogous to the 2D case of rotation about a point. The steps are:\n\n1. Translate rotation axis to coordinate axis\n2. Perform rotation\n3. Do inverse translation\n\n![](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Microsoft.VisualBasic.Imaging/Drawing3D/images/3drotar1.gif)\n\nIn the general case, rotation about an arbitrary axis is more complicated. First we must define **the axis of Rotation by 2 points - P1, P2** then do the following:\n\n1. Translate so that rotation axis passes through origin.\n2. Rotate so that the rotation axis is aligned with one of the principle coordinate axes.\n3. Perform rotation of object about coordinate axis.\n4. Perform inverse rotation of 2.\n5. Perform iInverse translation of 1.\n\nWe will arbitrarily choose the Z axis to map the rotation axis onto. The rotation axis is defined by 2 points: **P1(x1,y1,z1) and P2(x2,y2,z2.)**. These 2 points define a vector:\n\n> V = (x2 - x1 , y2 - y1 , z2 - z1) = (dx, dy, dz)\n\nwhich has a unit vector\n\n> **U = V \\* |V|** where |V| is the length of **V = (VxV) = (dx^2 + dy^2 + dz^2)^1/2**\n\nNow **U = (a,b,c)** where\n\n> a = dx/|V|\n> b = dy/|V|\n> c = dz/|V| (these are called the direction cosines of x, y, and z)\n\n(Note: the direction cosine of **x = cos A** where **A = angle** of V with respect to x axis)\n\nNow we can perform the first translation (of the rotation axis to pass through the origin) by using the matrix **T (-x1, -y1, -z 1)**, i.e., move the point P1 to the origin. Next we want to rotate to align V with Z axis. We do this in 2 steps:\n\n1. Rotate V about X axis to put V in XZ plane.\n2. Rotate V about Y to align with Z.\n\nFor rotation about X axis we need to find **cos(A), sin(A) where A = angle** between projection of U (in YZ plane) and Z axis.\nNote: **U'** is no longer a unit vector, i.e.\n> |U'| =/ 1\n> Uz = unit vector along z axis = (0,0,1)\n\nnow\n\n> (U)' \\* (Uz ) = |U'| \\* |Uz| cos A = d \\* cos A\n> |Uz| = (1)1/2 = 1\n> (U')(Uz) = 0 \\* 0 + b \\* 0 + c \\* 1 = c\n\ntherefore **c = d \\* (cos A) => cos A = c/d**\n\nNow the cross product of 2 vectors\n\n> (V1) X (V2) = W |V| \\* |V2|sin(q) where W is perpendicular to plane of V1, V2\n\nso\n\n```\n(U') X (Uz) = Ux|U'| * |Uz|sin(A) = Ux d * sin(A)\n\n           |0   0    0    0|\nSo Rx(a) = |0   c/d  b/a  0|\n           |0  -b/a  c/a  0|\n           |0   0    0    1|\n```\nRx(a) --> Rotates U into XZ plane\nNow compute Ry(B) for rotation to z-axis.\nAfter rotation about x-axis the vector is as below:\n> Uy\" = 0 since in XZ plane\n> Uz\" = d = |U'| since just rotated U' into XZ plane\n\n\nagain from dot product:\n```\ncos(B) = U\" * (Uz) / |U\"|\n  |Uz| = 0 * a + 0 * 0 + 1 * d = d\n```\nNote: **|U\"|\\*|Uz| = 1** since both are unit vectors\nfrom the cross product **U\" x Uz = Uz|U\"||Uz|sin B**\n(from matrix) = Uy x (-a)\ntherefore **sin(B) = - a**\n```\n        | d  0  a  0|\nRy(B) = | 0  1  0  0|\n        |-a  0  d  0|\n        | 0  0  0  1|\n```\nThe result of this transformation is that V (= Rotation axis) is coincident with z axis.\n\nThen apply\n```\n        | cos(q) sin(q)  0  0|\nRz(q) = |-sin(q) cos(q)  0  0|\n        |     0      0   1  0|\n        |     0      0   0  1|\n```\nThen we must apply inverse transformations to get R.A. back to original position. Therefore, the complete composite transformation matrix is as follows:\n```\nR(q) = T * Rx(A) * Ry(B) * Rz(q) * RY-1(B) * Rx-1(A) * T-1\nn1 = a(x)\nn2 = b(y)\nn3 = c(z)\n\n[R] =\nRow1    n12 + (1 - n12)cosq         n1n2(1 - cosq) + n3sinq     n1n3(1 - cosq) - n2sinq    0\nRow2\tn1n2(1 - cosq) - n3sinq     n22 + (1 - n22)cosq         n2n3(1 - cosq) + n1sinq    0\nRow3\tn1n3(1 - cosq) + n2sinq     n2n3(1 - cosq) - n1sinq     n32 + (1 - n32)cosq        0\nRow4\t0                           0                           0                          1\n```\n\n> ![3D Rotation](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/qrcode/3d_rotation.png)","source":"_posts/3d_rotation.md","raw":"---\ntitle: 3D Rotation\ntags: [repost,3d graphics,note, math]\ndate: 2016-06-10\n---\n\n![](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Microsoft.VisualBasic.Imaging/Drawing3D/images/feature.jpg)\n\n3D Rotation is more complicated than 2D rotation since we must specify an axis of rotation. In 2D the axis of rotation is always perpendicular to the **x,y** plane, i.e., the Z axis, but in 3D the axis of rotation can have any spatial orientation. We will first look at rotation around the three principle axes **(X, Y, Z)** and then about an arbitrary axis. Note that for Inverse Rotation: **replace q with -q and then R(R-1) = 1**\n\n> 1. Z-Axis Rotation\n> 2. X-Axis Rotation\n> 3. Y-Axis Rotation\n> 4. Rotation about an Arbitrary Axis\n\n<!--more-->\n\nExample Demo:\n\n> ![](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Datavisualization.Network/3d_demo.gif)\n> [**3D network rotation in my project on github**](https://github.com/xieguigang/VisualBasic_AppFramework/tree/master/Datavisualization/Datavisualization.Network)\n\n# Z-Axis Rotation\n\nZ-axis rotation is identical to the 2D case:\n![](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Microsoft.VisualBasic.Imaging/Drawing3D/images/3drotz.gif)\n\n```\nx' = x*cos q - y*sin q\ny' = x*sin q + y*cos q\nz' = z\n\n         | cos q  sin q  0  0|\nRz (q) = |-sin q  cos q  0  0|\n         |     0      0  1  0|\n         |     0      0  0  1|\n```\n\n# X-Axis Rotation\n\nX-axis rotation looks like Z-axis rotation if replace:\n\n>X axis with Y axis\nY axis with Z axis\nZ axis with X axis\n\n![](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Microsoft.VisualBasic.Imaging/Drawing3D/images/3drotx.gif)\n\nSo we do the same replacement in the equations:\n```\ny' = y*cos(q) - z*sin(q)\nz' = y*sin(q) + z*cos(q)\nx' = x\n\n        |1      0       0   0|\nRx(q) = |0  cos(q)  sin(q)  0|\n        |0 -sin(q)  cos(q)  0|\n        |0      0       0   1|\n```\n\n# Y-Axis Rotation\n\nY-axis rotation looks like Z-axis rotation if replace:\n\n> X axis with Z axis\n> Y axis with X axis\n> Z axis with Y axis\n\n![](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Microsoft.VisualBasic.Imaging/Drawing3D/images/3droty.gif)\n\nSo we do the same replacement in equations :\n\n```\nz' = z*cos(q) - x*sin(q)\nx' = z*sin(q) + x*cos(q)\ny' = y\n\n        |cos(q)  0  -sin(q)  0|\nRy(q) = |    0   1       0   0|\n        |sin(q)  0   cos(q)  0|\n        |    0   0       0   1|\n```\n\n# Rotation about an Arbitrary Axis\n\nThis is similar to 2D rotation about an arbitrary point. The general procedure is as follows:\n\n1. Perform transformations which align rotation axis with one of coordinate axis **(x, y, z)**\n2. Perform rotation about the axis\n3. Do inverse of (1)\n\nSpecial case: The rotation axis is parallel to a principle coordinate axis. This is directly analogous to the 2D case of rotation about a point. The steps are:\n\n1. Translate rotation axis to coordinate axis\n2. Perform rotation\n3. Do inverse translation\n\n![](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Microsoft.VisualBasic.Imaging/Drawing3D/images/3drotar1.gif)\n\nIn the general case, rotation about an arbitrary axis is more complicated. First we must define **the axis of Rotation by 2 points - P1, P2** then do the following:\n\n1. Translate so that rotation axis passes through origin.\n2. Rotate so that the rotation axis is aligned with one of the principle coordinate axes.\n3. Perform rotation of object about coordinate axis.\n4. Perform inverse rotation of 2.\n5. Perform iInverse translation of 1.\n\nWe will arbitrarily choose the Z axis to map the rotation axis onto. The rotation axis is defined by 2 points: **P1(x1,y1,z1) and P2(x2,y2,z2.)**. These 2 points define a vector:\n\n> V = (x2 - x1 , y2 - y1 , z2 - z1) = (dx, dy, dz)\n\nwhich has a unit vector\n\n> **U = V \\* |V|** where |V| is the length of **V = (VxV) = (dx^2 + dy^2 + dz^2)^1/2**\n\nNow **U = (a,b,c)** where\n\n> a = dx/|V|\n> b = dy/|V|\n> c = dz/|V| (these are called the direction cosines of x, y, and z)\n\n(Note: the direction cosine of **x = cos A** where **A = angle** of V with respect to x axis)\n\nNow we can perform the first translation (of the rotation axis to pass through the origin) by using the matrix **T (-x1, -y1, -z 1)**, i.e., move the point P1 to the origin. Next we want to rotate to align V with Z axis. We do this in 2 steps:\n\n1. Rotate V about X axis to put V in XZ plane.\n2. Rotate V about Y to align with Z.\n\nFor rotation about X axis we need to find **cos(A), sin(A) where A = angle** between projection of U (in YZ plane) and Z axis.\nNote: **U'** is no longer a unit vector, i.e.\n> |U'| =/ 1\n> Uz = unit vector along z axis = (0,0,1)\n\nnow\n\n> (U)' \\* (Uz ) = |U'| \\* |Uz| cos A = d \\* cos A\n> |Uz| = (1)1/2 = 1\n> (U')(Uz) = 0 \\* 0 + b \\* 0 + c \\* 1 = c\n\ntherefore **c = d \\* (cos A) => cos A = c/d**\n\nNow the cross product of 2 vectors\n\n> (V1) X (V2) = W |V| \\* |V2|sin(q) where W is perpendicular to plane of V1, V2\n\nso\n\n```\n(U') X (Uz) = Ux|U'| * |Uz|sin(A) = Ux d * sin(A)\n\n           |0   0    0    0|\nSo Rx(a) = |0   c/d  b/a  0|\n           |0  -b/a  c/a  0|\n           |0   0    0    1|\n```\nRx(a) --> Rotates U into XZ plane\nNow compute Ry(B) for rotation to z-axis.\nAfter rotation about x-axis the vector is as below:\n> Uy\" = 0 since in XZ plane\n> Uz\" = d = |U'| since just rotated U' into XZ plane\n\n\nagain from dot product:\n```\ncos(B) = U\" * (Uz) / |U\"|\n  |Uz| = 0 * a + 0 * 0 + 1 * d = d\n```\nNote: **|U\"|\\*|Uz| = 1** since both are unit vectors\nfrom the cross product **U\" x Uz = Uz|U\"||Uz|sin B**\n(from matrix) = Uy x (-a)\ntherefore **sin(B) = - a**\n```\n        | d  0  a  0|\nRy(B) = | 0  1  0  0|\n        |-a  0  d  0|\n        | 0  0  0  1|\n```\nThe result of this transformation is that V (= Rotation axis) is coincident with z axis.\n\nThen apply\n```\n        | cos(q) sin(q)  0  0|\nRz(q) = |-sin(q) cos(q)  0  0|\n        |     0      0   1  0|\n        |     0      0   0  1|\n```\nThen we must apply inverse transformations to get R.A. back to original position. Therefore, the complete composite transformation matrix is as follows:\n```\nR(q) = T * Rx(A) * Ry(B) * Rz(q) * RY-1(B) * Rx-1(A) * T-1\nn1 = a(x)\nn2 = b(y)\nn3 = c(z)\n\n[R] =\nRow1    n12 + (1 - n12)cosq         n1n2(1 - cosq) + n3sinq     n1n3(1 - cosq) - n2sinq    0\nRow2\tn1n2(1 - cosq) - n3sinq     n22 + (1 - n22)cosq         n2n3(1 - cosq) + n1sinq    0\nRow3\tn1n3(1 - cosq) + n2sinq     n2n3(1 - cosq) - n1sinq     n32 + (1 - n32)cosq        0\nRow4\t0                           0                           0                          1\n```\n\n> ![3D Rotation](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/qrcode/3d_rotation.png)","slug":"3d_rotation","published":1,"updated":"2016-08-04T20:20:17.024Z","_id":"cipnbu3by00008gv4gunzlro5","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Microsoft.VisualBasic.Imaging/Drawing3D/images/feature.jpg\" alt=\"\"></p>\n<p>3D Rotation is more complicated than 2D rotation since we must specify an axis of rotation. In 2D the axis of rotation is always perpendicular to the <strong>x,y</strong> plane, i.e., the Z axis, but in 3D the axis of rotation can have any spatial orientation. We will first look at rotation around the three principle axes <strong>(X, Y, Z)</strong> and then about an arbitrary axis. Note that for Inverse Rotation: <strong>replace q with -q and then R(R-1) = 1</strong></p>\n<blockquote>\n<ol>\n<li>Z-Axis Rotation</li>\n<li>X-Axis Rotation</li>\n<li>Y-Axis Rotation</li>\n<li>Rotation about an Arbitrary Axis</li>\n</ol>\n</blockquote>\n<a id=\"more\"></a>\n<p>Example Demo:</p>\n<blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Datavisualization.Network/3d_demo.gif\" alt=\"\"><br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/tree/master/Datavisualization/Datavisualization.Network\" target=\"_blank\" rel=\"external\"><strong>3D network rotation in my project on github</strong></a></p>\n</blockquote>\n<h1 id=\"Z-Axis-Rotation\"><a href=\"#Z-Axis-Rotation\" class=\"headerlink\" title=\"Z-Axis Rotation\"></a>Z-Axis Rotation</h1><p>Z-axis rotation is identical to the 2D case:<br><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Microsoft.VisualBasic.Imaging/Drawing3D/images/3drotz.gif\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x&apos; = x*cos q - y*sin q</span><br><span class=\"line\">y&apos; = x*sin q + y*cos q</span><br><span class=\"line\">z&apos; = z</span><br><span class=\"line\"></span><br><span class=\"line\">         | cos q  sin q  0  0|</span><br><span class=\"line\">Rz (q) = |-sin q  cos q  0  0|</span><br><span class=\"line\">         |     0      0  1  0|</span><br><span class=\"line\">         |     0      0  0  1|</span><br></pre></td></tr></table></figure>\n<h1 id=\"X-Axis-Rotation\"><a href=\"#X-Axis-Rotation\" class=\"headerlink\" title=\"X-Axis Rotation\"></a>X-Axis Rotation</h1><p>X-axis rotation looks like Z-axis rotation if replace:</p>\n<blockquote>\n<p>X axis with Y axis<br>Y axis with Z axis<br>Z axis with X axis</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Microsoft.VisualBasic.Imaging/Drawing3D/images/3drotx.gif\" alt=\"\"></p>\n<p>So we do the same replacement in the equations:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">y&apos; = y*cos(q) - z*sin(q)</span><br><span class=\"line\">z&apos; = y*sin(q) + z*cos(q)</span><br><span class=\"line\">x&apos; = x</span><br><span class=\"line\"></span><br><span class=\"line\">        |1      0       0   0|</span><br><span class=\"line\">Rx(q) = |0  cos(q)  sin(q)  0|</span><br><span class=\"line\">        |0 -sin(q)  cos(q)  0|</span><br><span class=\"line\">        |0      0       0   1|</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"Y-Axis-Rotation\"><a href=\"#Y-Axis-Rotation\" class=\"headerlink\" title=\"Y-Axis Rotation\"></a>Y-Axis Rotation</h1><p>Y-axis rotation looks like Z-axis rotation if replace:</p>\n<blockquote>\n<p>X axis with Z axis<br>Y axis with X axis<br>Z axis with Y axis</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Microsoft.VisualBasic.Imaging/Drawing3D/images/3droty.gif\" alt=\"\"></p>\n<p>So we do the same replacement in equations :</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">z&apos; = z*cos(q) - x*sin(q)</span><br><span class=\"line\">x&apos; = z*sin(q) + x*cos(q)</span><br><span class=\"line\">y&apos; = y</span><br><span class=\"line\"></span><br><span class=\"line\">        |cos(q)  0  -sin(q)  0|</span><br><span class=\"line\">Ry(q) = |    0   1       0   0|</span><br><span class=\"line\">        |sin(q)  0   cos(q)  0|</span><br><span class=\"line\">        |    0   0       0   1|</span><br></pre></td></tr></table></figure>\n<h1 id=\"Rotation-about-an-Arbitrary-Axis\"><a href=\"#Rotation-about-an-Arbitrary-Axis\" class=\"headerlink\" title=\"Rotation about an Arbitrary Axis\"></a>Rotation about an Arbitrary Axis</h1><p>This is similar to 2D rotation about an arbitrary point. The general procedure is as follows:</p>\n<ol>\n<li>Perform transformations which align rotation axis with one of coordinate axis <strong>(x, y, z)</strong></li>\n<li>Perform rotation about the axis</li>\n<li>Do inverse of (1)</li>\n</ol>\n<p>Special case: The rotation axis is parallel to a principle coordinate axis. This is directly analogous to the 2D case of rotation about a point. The steps are:</p>\n<ol>\n<li>Translate rotation axis to coordinate axis</li>\n<li>Perform rotation</li>\n<li>Do inverse translation</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Microsoft.VisualBasic.Imaging/Drawing3D/images/3drotar1.gif\" alt=\"\"></p>\n<p>In the general case, rotation about an arbitrary axis is more complicated. First we must define <strong>the axis of Rotation by 2 points - P1, P2</strong> then do the following:</p>\n<ol>\n<li>Translate so that rotation axis passes through origin.</li>\n<li>Rotate so that the rotation axis is aligned with one of the principle coordinate axes.</li>\n<li>Perform rotation of object about coordinate axis.</li>\n<li>Perform inverse rotation of 2.</li>\n<li>Perform iInverse translation of 1.</li>\n</ol>\n<p>We will arbitrarily choose the Z axis to map the rotation axis onto. The rotation axis is defined by 2 points: <strong>P1(x1,y1,z1) and P2(x2,y2,z2.)</strong>. These 2 points define a vector:</p>\n<blockquote>\n<p>V = (x2 - x1 , y2 - y1 , z2 - z1) = (dx, dy, dz)</p>\n</blockquote>\n<p>which has a unit vector</p>\n<blockquote>\n<p><strong>U = V * |V|</strong> where |V| is the length of <strong>V = (VxV) = (dx^2 + dy^2 + dz^2)^1/2</strong></p>\n</blockquote>\n<p>Now <strong>U = (a,b,c)</strong> where</p>\n<blockquote>\n<p>a = dx/|V|<br>b = dy/|V|<br>c = dz/|V| (these are called the direction cosines of x, y, and z)</p>\n</blockquote>\n<p>(Note: the direction cosine of <strong>x = cos A</strong> where <strong>A = angle</strong> of V with respect to x axis)</p>\n<p>Now we can perform the first translation (of the rotation axis to pass through the origin) by using the matrix <strong>T (-x1, -y1, -z 1)</strong>, i.e., move the point P1 to the origin. Next we want to rotate to align V with Z axis. We do this in 2 steps:</p>\n<ol>\n<li>Rotate V about X axis to put V in XZ plane.</li>\n<li>Rotate V about Y to align with Z.</li>\n</ol>\n<p>For rotation about X axis we need to find <strong>cos(A), sin(A) where A = angle</strong> between projection of U (in YZ plane) and Z axis.<br>Note: <strong>U’</strong> is no longer a unit vector, i.e.</p>\n<blockquote>\n<p>|U’| =/ 1<br>Uz = unit vector along z axis = (0,0,1)</p>\n</blockquote>\n<p>now</p>\n<blockquote>\n<p>(U)’ * (Uz ) = |U’| * |Uz| cos A = d * cos A<br>|Uz| = (1)1/2 = 1<br>(U’)(Uz) = 0 * 0 + b * 0 + c * 1 = c</p>\n</blockquote>\n<p>therefore <strong>c = d * (cos A) =&gt; cos A = c/d</strong></p>\n<p>Now the cross product of 2 vectors</p>\n<blockquote>\n<p>(V1) X (V2) = W |V| * |V2|sin(q) where W is perpendicular to plane of V1, V2</p>\n</blockquote>\n<p>so</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(U&apos;) X (Uz) = Ux|U&apos;| * |Uz|sin(A) = Ux d * sin(A)</span><br><span class=\"line\"></span><br><span class=\"line\">           |0   0    0    0|</span><br><span class=\"line\">So Rx(a) = |0   c/d  b/a  0|</span><br><span class=\"line\">           |0  -b/a  c/a  0|</span><br><span class=\"line\">           |0   0    0    1|</span><br></pre></td></tr></table></figure>\n<p>Rx(a) –&gt; Rotates U into XZ plane<br>Now compute Ry(B) for rotation to z-axis.<br>After rotation about x-axis the vector is as below:</p>\n<blockquote>\n<p>Uy” = 0 since in XZ plane<br>Uz” = d = |U’| since just rotated U’ into XZ plane</p>\n</blockquote>\n<p>again from dot product:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cos(B) = U&quot; * (Uz) / |U&quot;|</span><br><span class=\"line\">  |Uz| = 0 * a + 0 * 0 + 1 * d = d</span><br></pre></td></tr></table></figure></p>\n<p>Note: <strong>|U”|*|Uz| = 1</strong> since both are unit vectors<br>from the cross product <strong>U” x Uz = Uz|U”||Uz|sin B</strong><br>(from matrix) = Uy x (-a)<br>therefore <strong>sin(B) = - a</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">        | d  0  a  0|</span><br><span class=\"line\">Ry(B) = | 0  1  0  0|</span><br><span class=\"line\">        |-a  0  d  0|</span><br><span class=\"line\">        | 0  0  0  1|</span><br></pre></td></tr></table></figure></p>\n<p>The result of this transformation is that V (= Rotation axis) is coincident with z axis.</p>\n<p>Then apply<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">        | cos(q) sin(q)  0  0|</span><br><span class=\"line\">Rz(q) = |-sin(q) cos(q)  0  0|</span><br><span class=\"line\">        |     0      0   1  0|</span><br><span class=\"line\">        |     0      0   0  1|</span><br></pre></td></tr></table></figure></p>\n<p>Then we must apply inverse transformations to get R.A. back to original position. Therefore, the complete composite transformation matrix is as follows:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">R(q) = T * Rx(A) * Ry(B) * Rz(q) * RY-1(B) * Rx-1(A) * T-1</span><br><span class=\"line\">n1 = a(x)</span><br><span class=\"line\">n2 = b(y)</span><br><span class=\"line\">n3 = c(z)</span><br><span class=\"line\"></span><br><span class=\"line\">[R] =</span><br><span class=\"line\">Row1    n12 + (1 - n12)cosq         n1n2(1 - cosq) + n3sinq     n1n3(1 - cosq) - n2sinq    0</span><br><span class=\"line\">Row2\tn1n2(1 - cosq) - n3sinq     n22 + (1 - n22)cosq         n2n3(1 - cosq) + n1sinq    0</span><br><span class=\"line\">Row3\tn1n3(1 - cosq) + n2sinq     n2n3(1 - cosq) - n1sinq     n32 + (1 - n32)cosq        0</span><br><span class=\"line\">Row4\t0                           0                           0                          1</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/qrcode/3d_rotation.png\" alt=\"3D Rotation\"></p>\n</blockquote>\n","excerpt":"<p><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Microsoft.VisualBasic.Imaging/Drawing3D/images/feature.jpg\" alt=\"\"></p>\n<p>3D Rotation is more complicated than 2D rotation since we must specify an axis of rotation. In 2D the axis of rotation is always perpendicular to the <strong>x,y</strong> plane, i.e., the Z axis, but in 3D the axis of rotation can have any spatial orientation. We will first look at rotation around the three principle axes <strong>(X, Y, Z)</strong> and then about an arbitrary axis. Note that for Inverse Rotation: <strong>replace q with -q and then R(R-1) = 1</strong></p>\n<blockquote>\n<ol>\n<li>Z-Axis Rotation</li>\n<li>X-Axis Rotation</li>\n<li>Y-Axis Rotation</li>\n<li>Rotation about an Arbitrary Axis</li>\n</ol>\n</blockquote>","more":"<p>Example Demo:</p>\n<blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Datavisualization.Network/3d_demo.gif\" alt=\"\"><br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/tree/master/Datavisualization/Datavisualization.Network\"><strong>3D network rotation in my project on github</strong></a></p>\n</blockquote>\n<h1 id=\"Z-Axis-Rotation\"><a href=\"#Z-Axis-Rotation\" class=\"headerlink\" title=\"Z-Axis Rotation\"></a>Z-Axis Rotation</h1><p>Z-axis rotation is identical to the 2D case:<br><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Microsoft.VisualBasic.Imaging/Drawing3D/images/3drotz.gif\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x&apos; = x*cos q - y*sin q</span><br><span class=\"line\">y&apos; = x*sin q + y*cos q</span><br><span class=\"line\">z&apos; = z</span><br><span class=\"line\"></span><br><span class=\"line\">         | cos q  sin q  0  0|</span><br><span class=\"line\">Rz (q) = |-sin q  cos q  0  0|</span><br><span class=\"line\">         |     0      0  1  0|</span><br><span class=\"line\">         |     0      0  0  1|</span><br></pre></td></tr></table></figure>\n<h1 id=\"X-Axis-Rotation\"><a href=\"#X-Axis-Rotation\" class=\"headerlink\" title=\"X-Axis Rotation\"></a>X-Axis Rotation</h1><p>X-axis rotation looks like Z-axis rotation if replace:</p>\n<blockquote>\n<p>X axis with Y axis<br>Y axis with Z axis<br>Z axis with X axis</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Microsoft.VisualBasic.Imaging/Drawing3D/images/3drotx.gif\" alt=\"\"></p>\n<p>So we do the same replacement in the equations:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">y&apos; = y*cos(q) - z*sin(q)</span><br><span class=\"line\">z&apos; = y*sin(q) + z*cos(q)</span><br><span class=\"line\">x&apos; = x</span><br><span class=\"line\"></span><br><span class=\"line\">        |1      0       0   0|</span><br><span class=\"line\">Rx(q) = |0  cos(q)  sin(q)  0|</span><br><span class=\"line\">        |0 -sin(q)  cos(q)  0|</span><br><span class=\"line\">        |0      0       0   1|</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"Y-Axis-Rotation\"><a href=\"#Y-Axis-Rotation\" class=\"headerlink\" title=\"Y-Axis Rotation\"></a>Y-Axis Rotation</h1><p>Y-axis rotation looks like Z-axis rotation if replace:</p>\n<blockquote>\n<p>X axis with Z axis<br>Y axis with X axis<br>Z axis with Y axis</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Microsoft.VisualBasic.Imaging/Drawing3D/images/3droty.gif\" alt=\"\"></p>\n<p>So we do the same replacement in equations :</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">z&apos; = z*cos(q) - x*sin(q)</span><br><span class=\"line\">x&apos; = z*sin(q) + x*cos(q)</span><br><span class=\"line\">y&apos; = y</span><br><span class=\"line\"></span><br><span class=\"line\">        |cos(q)  0  -sin(q)  0|</span><br><span class=\"line\">Ry(q) = |    0   1       0   0|</span><br><span class=\"line\">        |sin(q)  0   cos(q)  0|</span><br><span class=\"line\">        |    0   0       0   1|</span><br></pre></td></tr></table></figure>\n<h1 id=\"Rotation-about-an-Arbitrary-Axis\"><a href=\"#Rotation-about-an-Arbitrary-Axis\" class=\"headerlink\" title=\"Rotation about an Arbitrary Axis\"></a>Rotation about an Arbitrary Axis</h1><p>This is similar to 2D rotation about an arbitrary point. The general procedure is as follows:</p>\n<ol>\n<li>Perform transformations which align rotation axis with one of coordinate axis <strong>(x, y, z)</strong></li>\n<li>Perform rotation about the axis</li>\n<li>Do inverse of (1)</li>\n</ol>\n<p>Special case: The rotation axis is parallel to a principle coordinate axis. This is directly analogous to the 2D case of rotation about a point. The steps are:</p>\n<ol>\n<li>Translate rotation axis to coordinate axis</li>\n<li>Perform rotation</li>\n<li>Do inverse translation</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Microsoft.VisualBasic.Imaging/Drawing3D/images/3drotar1.gif\" alt=\"\"></p>\n<p>In the general case, rotation about an arbitrary axis is more complicated. First we must define <strong>the axis of Rotation by 2 points - P1, P2</strong> then do the following:</p>\n<ol>\n<li>Translate so that rotation axis passes through origin.</li>\n<li>Rotate so that the rotation axis is aligned with one of the principle coordinate axes.</li>\n<li>Perform rotation of object about coordinate axis.</li>\n<li>Perform inverse rotation of 2.</li>\n<li>Perform iInverse translation of 1.</li>\n</ol>\n<p>We will arbitrarily choose the Z axis to map the rotation axis onto. The rotation axis is defined by 2 points: <strong>P1(x1,y1,z1) and P2(x2,y2,z2.)</strong>. These 2 points define a vector:</p>\n<blockquote>\n<p>V = (x2 - x1 , y2 - y1 , z2 - z1) = (dx, dy, dz)</p>\n</blockquote>\n<p>which has a unit vector</p>\n<blockquote>\n<p><strong>U = V * |V|</strong> where |V| is the length of <strong>V = (VxV) = (dx^2 + dy^2 + dz^2)^1/2</strong></p>\n</blockquote>\n<p>Now <strong>U = (a,b,c)</strong> where</p>\n<blockquote>\n<p>a = dx/|V|<br>b = dy/|V|<br>c = dz/|V| (these are called the direction cosines of x, y, and z)</p>\n</blockquote>\n<p>(Note: the direction cosine of <strong>x = cos A</strong> where <strong>A = angle</strong> of V with respect to x axis)</p>\n<p>Now we can perform the first translation (of the rotation axis to pass through the origin) by using the matrix <strong>T (-x1, -y1, -z 1)</strong>, i.e., move the point P1 to the origin. Next we want to rotate to align V with Z axis. We do this in 2 steps:</p>\n<ol>\n<li>Rotate V about X axis to put V in XZ plane.</li>\n<li>Rotate V about Y to align with Z.</li>\n</ol>\n<p>For rotation about X axis we need to find <strong>cos(A), sin(A) where A = angle</strong> between projection of U (in YZ plane) and Z axis.<br>Note: <strong>U’</strong> is no longer a unit vector, i.e.</p>\n<blockquote>\n<p>|U’| =/ 1<br>Uz = unit vector along z axis = (0,0,1)</p>\n</blockquote>\n<p>now</p>\n<blockquote>\n<p>(U)’ * (Uz ) = |U’| * |Uz| cos A = d * cos A<br>|Uz| = (1)1/2 = 1<br>(U’)(Uz) = 0 * 0 + b * 0 + c * 1 = c</p>\n</blockquote>\n<p>therefore <strong>c = d * (cos A) =&gt; cos A = c/d</strong></p>\n<p>Now the cross product of 2 vectors</p>\n<blockquote>\n<p>(V1) X (V2) = W |V| * |V2|sin(q) where W is perpendicular to plane of V1, V2</p>\n</blockquote>\n<p>so</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(U&apos;) X (Uz) = Ux|U&apos;| * |Uz|sin(A) = Ux d * sin(A)</span><br><span class=\"line\"></span><br><span class=\"line\">           |0   0    0    0|</span><br><span class=\"line\">So Rx(a) = |0   c/d  b/a  0|</span><br><span class=\"line\">           |0  -b/a  c/a  0|</span><br><span class=\"line\">           |0   0    0    1|</span><br></pre></td></tr></table></figure>\n<p>Rx(a) –&gt; Rotates U into XZ plane<br>Now compute Ry(B) for rotation to z-axis.<br>After rotation about x-axis the vector is as below:</p>\n<blockquote>\n<p>Uy” = 0 since in XZ plane<br>Uz” = d = |U’| since just rotated U’ into XZ plane</p>\n</blockquote>\n<p>again from dot product:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cos(B) = U&quot; * (Uz) / |U&quot;|</span><br><span class=\"line\">  |Uz| = 0 * a + 0 * 0 + 1 * d = d</span><br></pre></td></tr></table></figure></p>\n<p>Note: <strong>|U”|*|Uz| = 1</strong> since both are unit vectors<br>from the cross product <strong>U” x Uz = Uz|U”||Uz|sin B</strong><br>(from matrix) = Uy x (-a)<br>therefore <strong>sin(B) = - a</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">        | d  0  a  0|</span><br><span class=\"line\">Ry(B) = | 0  1  0  0|</span><br><span class=\"line\">        |-a  0  d  0|</span><br><span class=\"line\">        | 0  0  0  1|</span><br></pre></td></tr></table></figure></p>\n<p>The result of this transformation is that V (= Rotation axis) is coincident with z axis.</p>\n<p>Then apply<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">        | cos(q) sin(q)  0  0|</span><br><span class=\"line\">Rz(q) = |-sin(q) cos(q)  0  0|</span><br><span class=\"line\">        |     0      0   1  0|</span><br><span class=\"line\">        |     0      0   0  1|</span><br></pre></td></tr></table></figure></p>\n<p>Then we must apply inverse transformations to get R.A. back to original position. Therefore, the complete composite transformation matrix is as follows:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">R(q) = T * Rx(A) * Ry(B) * Rz(q) * RY-1(B) * Rx-1(A) * T-1</span><br><span class=\"line\">n1 = a(x)</span><br><span class=\"line\">n2 = b(y)</span><br><span class=\"line\">n3 = c(z)</span><br><span class=\"line\"></span><br><span class=\"line\">[R] =</span><br><span class=\"line\">Row1    n12 + (1 - n12)cosq         n1n2(1 - cosq) + n3sinq     n1n3(1 - cosq) - n2sinq    0</span><br><span class=\"line\">Row2\tn1n2(1 - cosq) - n3sinq     n22 + (1 - n22)cosq         n2n3(1 - cosq) + n1sinq    0</span><br><span class=\"line\">Row3\tn1n3(1 - cosq) + n2sinq     n2n3(1 - cosq) - n1sinq     n32 + (1 - n32)cosq        0</span><br><span class=\"line\">Row4\t0                           0                           0                          1</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/qrcode/3d_rotation.png\" alt=\"3D Rotation\"></p>\n</blockquote>"},{"title":"File-Explorer","date":"2016-06-18T16:00:00.000Z","_content":"\nWhat a Modern Version of Windows 10’s File Explorer Could Look Like\n\ntry implements the explorer art design from http://steppiman89.deviantart.com/art/Windows-10-Redesign-File-Explorer-589967814\n\n![](https://raw.githubusercontent.com/xieguigang/File-Explorer/master/what-a-modern-version-of-windows-10-s-file-explorer-could-look-like-500353-3.jpg)\n[github/xieguigang/File-Explorer](https://github.com/xieguigang/File-Explorer)","source":"_posts/Windows-10-Redesign-File-Explorer-589967814.md","raw":"----\ntitle: File-Explorer\ntags: [Desktop,vb.net,前端设计]\ndate: 2016-06-19\n----\n\nWhat a Modern Version of Windows 10’s File Explorer Could Look Like\n\ntry implements the explorer art design from http://steppiman89.deviantart.com/art/Windows-10-Redesign-File-Explorer-589967814\n\n![](https://raw.githubusercontent.com/xieguigang/File-Explorer/master/what-a-modern-version-of-windows-10-s-file-explorer-could-look-like-500353-3.jpg)\n[github/xieguigang/File-Explorer](https://github.com/xieguigang/File-Explorer)","slug":"Windows-10-Redesign-File-Explorer-589967814","published":1,"updated":"2016-06-19T04:46:55.982Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cipnbu3cf00028gv4mlva8zez","content":"<p>What a Modern Version of Windows 10’s File Explorer Could Look Like</p>\n<p>try implements the explorer art design from <a href=\"http://steppiman89.deviantart.com/art/Windows-10-Redesign-File-Explorer-589967814\" target=\"_blank\" rel=\"external\">http://steppiman89.deviantart.com/art/Windows-10-Redesign-File-Explorer-589967814</a></p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/File-Explorer/master/what-a-modern-version-of-windows-10-s-file-explorer-could-look-like-500353-3.jpg\" alt=\"\"><br><a href=\"https://github.com/xieguigang/File-Explorer\" target=\"_blank\" rel=\"external\">github/xieguigang/File-Explorer</a></p>\n","excerpt":"","more":"<p>What a Modern Version of Windows 10’s File Explorer Could Look Like</p>\n<p>try implements the explorer art design from <a href=\"http://steppiman89.deviantart.com/art/Windows-10-Redesign-File-Explorer-589967814\">http://steppiman89.deviantart.com/art/Windows-10-Redesign-File-Explorer-589967814</a></p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/File-Explorer/master/what-a-modern-version-of-windows-10-s-file-explorer-could-look-like-500353-3.jpg\" alt=\"\"><br><a href=\"https://github.com/xieguigang/File-Explorer\">github/xieguigang/File-Explorer</a></p>\n"},{"title":"Deal with the github merge conflicts","date":"2016-06-06T16:00:00.000Z","_content":"\n### First: checkout branch\n\n>```bash\ngit checkout -b <branch-name> master\ngit pull git://github.com/{username}/{<repo>.git} master\n```\n\n### Second: edits the conflict file\n\nAfter edits in your text editor, then commit the changes:\n>```bash\ngit commit -a\n```\n\n### Last: Push and merge\n\n>```bash\ngit checkout master\ngit merge --no-ff <branch-name>\ngit push origin master\n```\n\n<!--more-->\n\n### Example\n>```\n# git checkout -b xieguigang-master master\nSwitched to a new branch 'xieguigang-master'\n```\n>```\n# git pull git://github.com/xieguigang/GCModeller.Core.git master\nremote: Counting objects: 6, done.\nremote: Compressing objects: 100% (4/4), done.\nremote: Total 6 (delta 3), reused 5 (delta 2), pack-reused 0\nUnpacking objects: 100% (6/6), done.\nFrom git://github.com/xieguigang/GCModeller.Core\n * branch            master     -> FETCH_HEAD\nAuto-merging README.md\nCONFLICT (content): Merge conflict in README.md\nAutomatic merge failed; fix conflicts and then commit the result.\n```\n>```\n# git checkout master\nREADME.md: needs merge\nerror: you need to resolve your current index first\n```\n>```\n# git commit -a\n[xieguigang-master b5f50e6] Merge branch 'master' of git://github.com/xieguigang/GCModeller.Core into xieguigang-master\n```\n>```\n# git checkout master\nSwitched to branch 'master'\nYour branch is up-to-date with 'origin/master'.\n```\n>```\n# git merge --no-ff xieguigang-master\nMerge made by the 'recursive' strategy.\n README.md | 34 +++++++++++++++++++++++++++-------\n 1 file changed, 27 insertions(+), 7 deletions(-)\n```\n>```\n# git push origin master\nCounting objects: 9, done.\nDelta compression using up to 4 threads.\nCompressing objects: 100% (9/9), done.\nWriting objects: 100% (9/9), 1.46 KiB | 0 bytes/s, done.\nTotal 9 (delta 5), reused 0 (delta 0)\nTo https://github.com/SMRUCC/GCModeller.Core.git\n   ffa7199..1408682  master -> master\n```\n\n![](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/guides/MergeGthubConflicts-example.png)","source":"_posts/MergeGthubConflicts.md","raw":"---\ntitle: Deal with the github merge conflicts\ntags: [github,note]\ndate: 2016.06.07\n---\n\n### First: checkout branch\n\n>```bash\ngit checkout -b <branch-name> master\ngit pull git://github.com/{username}/{<repo>.git} master\n```\n\n### Second: edits the conflict file\n\nAfter edits in your text editor, then commit the changes:\n>```bash\ngit commit -a\n```\n\n### Last: Push and merge\n\n>```bash\ngit checkout master\ngit merge --no-ff <branch-name>\ngit push origin master\n```\n\n<!--more-->\n\n### Example\n>```\n# git checkout -b xieguigang-master master\nSwitched to a new branch 'xieguigang-master'\n```\n>```\n# git pull git://github.com/xieguigang/GCModeller.Core.git master\nremote: Counting objects: 6, done.\nremote: Compressing objects: 100% (4/4), done.\nremote: Total 6 (delta 3), reused 5 (delta 2), pack-reused 0\nUnpacking objects: 100% (6/6), done.\nFrom git://github.com/xieguigang/GCModeller.Core\n * branch            master     -> FETCH_HEAD\nAuto-merging README.md\nCONFLICT (content): Merge conflict in README.md\nAutomatic merge failed; fix conflicts and then commit the result.\n```\n>```\n# git checkout master\nREADME.md: needs merge\nerror: you need to resolve your current index first\n```\n>```\n# git commit -a\n[xieguigang-master b5f50e6] Merge branch 'master' of git://github.com/xieguigang/GCModeller.Core into xieguigang-master\n```\n>```\n# git checkout master\nSwitched to branch 'master'\nYour branch is up-to-date with 'origin/master'.\n```\n>```\n# git merge --no-ff xieguigang-master\nMerge made by the 'recursive' strategy.\n README.md | 34 +++++++++++++++++++++++++++-------\n 1 file changed, 27 insertions(+), 7 deletions(-)\n```\n>```\n# git push origin master\nCounting objects: 9, done.\nDelta compression using up to 4 threads.\nCompressing objects: 100% (9/9), done.\nWriting objects: 100% (9/9), 1.46 KiB | 0 bytes/s, done.\nTotal 9 (delta 5), reused 0 (delta 0)\nTo https://github.com/SMRUCC/GCModeller.Core.git\n   ffa7199..1408682  master -> master\n```\n\n![](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/guides/MergeGthubConflicts-example.png)","slug":"MergeGthubConflicts","published":1,"updated":"2016-06-12T19:15:32.589Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cipnbu3cw00058gv4bxacdl1j","content":"<h3 id=\"First-checkout-branch\"><a href=\"#First-checkout-branch\" class=\"headerlink\" title=\"First: checkout branch\"></a>First: checkout branch</h3><blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b &lt;branch-name&gt; master</span><br><span class=\"line\">git pull git://github.com/&#123;username&#125;/&#123;&lt;repo&gt;.git&#125; master</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h3 id=\"Second-edits-the-conflict-file\"><a href=\"#Second-edits-the-conflict-file\" class=\"headerlink\" title=\"Second: edits the conflict file\"></a>Second: edits the conflict file</h3><p>After edits in your text editor, then commit the changes:</p>\n<blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit <span class=\"_\">-a</span></span><br></pre></td></tr></table></figure>\n</blockquote>\n<h3 id=\"Last-Push-and-merge\"><a href=\"#Last-Push-and-merge\" class=\"headerlink\" title=\"Last: Push and merge\"></a>Last: Push and merge</h3><blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout master</span><br><span class=\"line\">git merge --no-ff &lt;branch-name&gt;</span><br><span class=\"line\">git push origin master</span><br></pre></td></tr></table></figure>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h3><blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># git checkout -b xieguigang-master master</span><br><span class=\"line\">Switched to a new branch &apos;xieguigang-master&apos;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># git pull git://github.com/xieguigang/GCModeller.Core.git master</span><br><span class=\"line\">remote: Counting objects: 6, done.</span><br><span class=\"line\">remote: Compressing objects: 100% (4/4), done.</span><br><span class=\"line\">remote: Total 6 (delta 3), reused 5 (delta 2), pack-reused 0</span><br><span class=\"line\">Unpacking objects: 100% (6/6), done.</span><br><span class=\"line\">From git://github.com/xieguigang/GCModeller.Core</span><br><span class=\"line\"> * branch            master     -&gt; FETCH_HEAD</span><br><span class=\"line\">Auto-merging README.md</span><br><span class=\"line\">CONFLICT (content): Merge conflict in README.md</span><br><span class=\"line\">Automatic merge failed; fix conflicts and then commit the result.</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># git checkout master</span><br><span class=\"line\">README.md: needs merge</span><br><span class=\"line\">error: you need to resolve your current index first</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># git commit -a</span><br><span class=\"line\">[xieguigang-master b5f50e6] Merge branch &apos;master&apos; of git://github.com/xieguigang/GCModeller.Core into xieguigang-master</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># git checkout master</span><br><span class=\"line\">Switched to branch &apos;master&apos;</span><br><span class=\"line\">Your branch is up-to-date with &apos;origin/master&apos;.</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># git merge --no-ff xieguigang-master</span><br><span class=\"line\">Merge made by the &apos;recursive&apos; strategy.</span><br><span class=\"line\"> README.md | 34 +++++++++++++++++++++++++++-------</span><br><span class=\"line\"> 1 file changed, 27 insertions(+), 7 deletions(-)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># git push origin master</span><br><span class=\"line\">Counting objects: 9, done.</span><br><span class=\"line\">Delta compression using up to 4 threads.</span><br><span class=\"line\">Compressing objects: 100% (9/9), done.</span><br><span class=\"line\">Writing objects: 100% (9/9), 1.46 KiB | 0 bytes/s, done.</span><br><span class=\"line\">Total 9 (delta 5), reused 0 (delta 0)</span><br><span class=\"line\">To https://github.com/SMRUCC/GCModeller.Core.git</span><br><span class=\"line\">   ffa7199..1408682  master -&gt; master</span><br></pre></td></tr></table></figure>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/guides/MergeGthubConflicts-example.png\" alt=\"\"></p>\n","excerpt":"<h3 id=\"First-checkout-branch\"><a href=\"#First-checkout-branch\" class=\"headerlink\" title=\"First: checkout branch\"></a>First: checkout branch</h3><blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b &lt;branch-name&gt; master</span><br><span class=\"line\">git pull git://github.com/&#123;username&#125;/&#123;&lt;repo&gt;.git&#125; master</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h3 id=\"Second-edits-the-conflict-file\"><a href=\"#Second-edits-the-conflict-file\" class=\"headerlink\" title=\"Second: edits the conflict file\"></a>Second: edits the conflict file</h3><p>After edits in your text editor, then commit the changes:</p>\n<blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit <span class=\"_\">-a</span></span><br></pre></td></tr></table></figure>\n</blockquote>\n<h3 id=\"Last-Push-and-merge\"><a href=\"#Last-Push-and-merge\" class=\"headerlink\" title=\"Last: Push and merge\"></a>Last: Push and merge</h3><blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout master</span><br><span class=\"line\">git merge --no-ff &lt;branch-name&gt;</span><br><span class=\"line\">git push origin master</span><br></pre></td></tr></table></figure>\n</blockquote>","more":"<h3 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h3><blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># git checkout -b xieguigang-master master</span><br><span class=\"line\">Switched to a new branch &apos;xieguigang-master&apos;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># git pull git://github.com/xieguigang/GCModeller.Core.git master</span><br><span class=\"line\">remote: Counting objects: 6, done.</span><br><span class=\"line\">remote: Compressing objects: 100% (4/4), done.</span><br><span class=\"line\">remote: Total 6 (delta 3), reused 5 (delta 2), pack-reused 0</span><br><span class=\"line\">Unpacking objects: 100% (6/6), done.</span><br><span class=\"line\">From git://github.com/xieguigang/GCModeller.Core</span><br><span class=\"line\"> * branch            master     -&gt; FETCH_HEAD</span><br><span class=\"line\">Auto-merging README.md</span><br><span class=\"line\">CONFLICT (content): Merge conflict in README.md</span><br><span class=\"line\">Automatic merge failed; fix conflicts and then commit the result.</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># git checkout master</span><br><span class=\"line\">README.md: needs merge</span><br><span class=\"line\">error: you need to resolve your current index first</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># git commit -a</span><br><span class=\"line\">[xieguigang-master b5f50e6] Merge branch &apos;master&apos; of git://github.com/xieguigang/GCModeller.Core into xieguigang-master</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># git checkout master</span><br><span class=\"line\">Switched to branch &apos;master&apos;</span><br><span class=\"line\">Your branch is up-to-date with &apos;origin/master&apos;.</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># git merge --no-ff xieguigang-master</span><br><span class=\"line\">Merge made by the &apos;recursive&apos; strategy.</span><br><span class=\"line\"> README.md | 34 +++++++++++++++++++++++++++-------</span><br><span class=\"line\"> 1 file changed, 27 insertions(+), 7 deletions(-)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># git push origin master</span><br><span class=\"line\">Counting objects: 9, done.</span><br><span class=\"line\">Delta compression using up to 4 threads.</span><br><span class=\"line\">Compressing objects: 100% (9/9), done.</span><br><span class=\"line\">Writing objects: 100% (9/9), 1.46 KiB | 0 bytes/s, done.</span><br><span class=\"line\">Total 9 (delta 5), reused 0 (delta 0)</span><br><span class=\"line\">To https://github.com/SMRUCC/GCModeller.Core.git</span><br><span class=\"line\">   ffa7199..1408682  master -&gt; master</span><br></pre></td></tr></table></figure>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/guides/MergeGthubConflicts-example.png\" alt=\"\"></p>"},{"title":"VB.NET是怎样做到的（搬家版）","date":"2016-06-03T16:00:00.000Z","_content":"\nVB.net能够实现很多C#不能做到的功能，如**When**语句、**Optional**参数、局部**Static**变量、对象实例访问静态方法、**Handles**绑定事件、**On Error**处理异常、**Object**直接后期绑定等等。VB和C#同属.net的语言，编译出来的是同样的CIL，但为什么VB支持很多有趣的特性呢。我们一起来探究一下。\n<!--more-->\n### 局部静态变量\n\nVB支持用**Static**关键字声明局部变量，这样在过程结束的时候可以保持变量的数值：\n```vbnet\nPublic Sub Test1()\n   Static i As Integer\n   i += 1  ' 实现一个过程调用计数器\nEnd Sub\n```\n我们实现了一个简单的过程计数器。每调用一次Test，计数器的数值就增加1。其实还有很多情况我们希望保持变量的数值。而C#的static是不能用在过程内部的。因此要实现过程计数器，我们必须声明一个类级别的变量。这样做明显不如VB好。因为无法防止其他过程修改计数器变量。这就和对象封装一个道理，本来应该是一个方法的局部变量，现在我要被迫把它独立出来，显然是不好的设计。那么VB是怎么生成局部静态变量的呢？将上述代码返汇编，我们可以清楚地看到在VB生成的CIL中，i不是作为局部变量，而是作为类的Field出现的：\n\n```c\n.field private specialname int32 $STATIC$Test1$2001$i\n```\n\n也就是说，i被改名作为一个类的字段，但被冠以specialname。在代码中试图访问$STATIC$Test1$2001$i是不可能的，因为它不是一个有效的标识符。但是在IL中，将这个变量加一的代码却与一般的类字段完全一样，是通过ldfld加载的。我觉得这个方法十分聪明，把静态变量变成生命周期一样的类字段，但是又由编译器来控制访问的权限，让它成为一个局部变量。同时也解释了VB为什么要用两个不同的关键字来声明静态变量——Static和Shared。\n\n由于局部静态变量的实质是类的字段，所以它和真正的局部变量还是有所不同的。比如在多线程条件下，对局部静态变量的访问就和访问字段相同。\n\n### MyClass关键字\n\nVB.net支持一项很有意思的功能——MyClass。大部分人使用MyClass可能仅限于调用本类其他构造函数时。其实MyClass可以产生一些很独特的用法。MyClass永远按类的成员为不可重写的状态进行调用，即当类的方法被重写后，用MyClass仍能得到自身的版本。下面这个例子和VB帮助中所举的例子非常相似\n```vbnet\nPublic Class MyClassBase\n   Protected Overridable Sub Greeting()\n      Console.WriteLine(\"Hello form Base\")\n   End Sub\n\n   Public Sub UseMe()\n      Me.Greeting()\n   End Sub\n\n   Public Sub UseMyClass()\n      MyClass.Greeting()\n   End Sub\nEnd Class\n\nPublic Class MyClassSub\n   Inherits MyClassBase\n\n   Protected Overrides Sub Greeting()\n      Console.WriteLine(\"Hello form Sub\")\n   End Sub\nEnd Class\n```\n\n我们用一段代码来测试：\n```vbnet\nDim o As MyClassBase = New MyClassSub()\n\no.UseMe()\no.UseMyClass()\n```\n结果是UseMe执行了子类的版本，而UseMyClass还是执行了基类本身的版本，尽管这是一个虚拟方法。观其IL，可以看到其简单的实现原理：\n\nMe用的调用指令是callvirt\n\n```c\nIL_0001: callvirt  instance void App1.MyClassBase::Greeting()\n```\n\n而MyClass调用的是call\n```c\nIL_0001:  call     instance void App1.MyClassBase::Greeting()\n```\n\n奇怪的是，如此简单的一个功能，我竟然无法用C#实现，C#怎样也不允许我按非虚函数的方式调用一个虚函数。C++可以用类名::方法名的方式访问自身版本的函数，但C#的类名只能用来访问静态的成员。这真是C#一个奇怪的限制。\n\n### Handles和WithEvents\n\nVB除了可以用C#那样的方法来处理事件响应以外，还有从VB5继承下来的独特的事件处理方式——WithEvents。\n\n我喜欢称这种事件处理方式为静态的事件处理，书写响应事件的方法时就已经决定该方法响应的是哪一个事件，而C#则是在代码中绑定事件的。比如下面这个最简单的例子：\n```vbnet\nPublic Class HandlerClass\n   Public WithEvents MyObj As EventClass\n\n\n   Private Sub MyObj_MyEvent(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyObj.MyEvent\n      MsgBox(\"hello\")\n   End Sub\n\n   Public Sub New()\n      MyObj = New EventClass\n   End Sub\nEnd Class\n```\n代码中用到的EventClass是这样的：\n```vbnet\nPublic Class EventClass\n   Public Event MyEvent As EventHandler\n\n   Protected Overridable Sub OnMyEvent(ByVal e As EventArgs)\n      RaiseEvent MyEvent(Me, e)\n   End Sub\n\n   Public Sub Test()\n      OnMyEvent(New EventArgs)\n   End Sub\nEnd Class\n```\n我们来复习一下，这段代码隐式地给EventClass编写了两个方法——Add_MyEvent(EventHandler)和Remove_MyEvent(EventHandler)，实际上任何使用事件的上下文都是通过调用这两个方法来绑定事件和解除绑定的。C#还允许你书写自己的事件绑定/解除绑定的代码。\n\n那么WithEvents是怎么工作的呢？VB.net的编译器在编译时自动将\n```vbnet\nPublic WithEvents MyObj As EventClass\n```\n翻译成下面这个过程：\n```vbnet\nPrivate _MyObj As EventClass\n\nPublic Property MyObj() As EventClass\n    Get\n        Return _MyObj\n    End Get\n    Set(ByVal Value As EventClass)\n        If Not (Me._MyObj Is Nothing) Then\n            RemoveHandler _MyObj.MyEvent, AddressOf MyObj_MyEvent\n        End If\n        Me._MyObj = Value\n        If Me._MyObj Is Nothing Then Exit Property\n\n        AddHandler _MyObj.MyEvent, AddressOf MyObj_MyEvent\n    End Set\nEnd Property\n```\n\n由此可见，当对WithEvents变量赋值的时候，会自动触发这个属性以绑定事件。我们所用的大部分事件响应都是1对1的，即一个过程响应一个事件，所以这种WithEvents静态方法是非常有用的，它可以显著增强代码可读性，同时也让VB.net中的事件处理非常方便，不像C#那样离开了窗体设计器就必须手工绑定事件。\n\n不过在分析这段IL的时候，我也发现了VB.net在翻译时小小的问题，就是**ldarg.0**出现得过多，这是频繁使用Me或this的表现，所以我们在编码过程中一定要注意，除了使用到Me/this本身引用以外，使用它的成员时不要带上Me/this，比如**Me.MyInt = 1**就改成**MyInt = 1**，这样的小习惯会为你带来很大的性能收益。\n\n### 类型转换运算符\n\n在Visual Basic 2005中将加入一个新的运算符——TryCast，相当于C#的as运算符。我一直希望VB有这样一个运算符。VB目前的类型转换运算符主要有CType和DirectCast。他们的用法几乎一样。我详细比较了一下这两个运算符，得出以下结论：\n\n+ 在转换成引用类型时，两者没有什么区别，都是直接调用castclass指令，除非重载了类型转换运算符CType。DirectCast运算符是不能重载的。\n+ 转换成值类型时，CType会调用VB指定的类型转换函数（如果有的话），比如将String转换为Int32时，就会自动调用**VisualBasic.CompilerServices.IntegerType.FromString**，而将Object转换为Int32则会调用FromObject。其他数值类型转换为Int32时，CType也会调用类型本身的转换方法实施转换。DirectCast运算符则很简单，直接将对象拆箱成所需类型。\n\n所以在用于值类型时，CType没有DirectCast快速但可以支持更多的转换。在C#中，类型转换则为（type)运算符和as运算符。(type)运算符的工作方式与VB的DirectCast很相似，也是直接拆箱或castclass的，但是如果遇到支持的类型转换（如long到int），(type)运算符也会调用相应的转换方法，但不支持从String到int的转换。C#另一个运算符as则更加智能，它只要判断对象的运行实例能否转成目标类型，然后就可以省略castclass指令，直接按已知类型进行操作，而且编译器还可以自动对as进行优化，比如节省一个对象引用等。所以在将Object转换成所需的类型时，as是最佳选择。\n\n由于as有很多优点，Visual Basic 2005将这一特性吸收了过来，用TryCast运算符就可以获得和as一样的效果，而且语法与DirectCast或CType一样。\n\n### 实现接口\n\nVB.net采用的实现接口的语法是VB5发明的Implements，这个实现接口的语法在当今主流语言中独一无二。比如我有两个接口：\n```vbnet\nInterface Interface1\n   Sub Test()\nEnd Interface\n\nInterface Interface2\n   Sub Test()\nEnd Interface\n```\n这两个接口有一个完全一样的成员Test。假设我需要用一个类同时实现两个接口会怎么样呢？先想想看，如果是Java，JScrip.NET这样的语言就只能用一个Test函数实现两个接口的Test成员。假如两个Test只是偶然重名，其内容必须要分别实现怎么办，于是一些解决接口重名的设计出现了……。在VB中，独特的Implements语句可以让你想怎么实现接口就怎么实现，比如下面的类Implementation用两个名字根本不一样的方法实现了两个接口。\n```vbnet\nPublic Class Implementation\n    Implements Interface1, Interface2\n\n    Public Sub Hello() Implements Interface1.Test\n    End Sub\n\n    Private Sub Hi() Implements Interface2.Test\n    End Sub\nEnd Class\n```\n也就是说，VB允许用任意名字的函数实现接口中的成员，而且访问器可以是任意的，比如想用Public还是Private都可以。\n\nC#在处理重名成员上提供了显式实现（explicit implementation）的语法，其实现上述两个接口的语法为\n```c\npublic class Class1 : Interface1, Interface2 {\n    public Class1() {\n    }\n    void Interface1.Test() {\n    }\n    void Interface2.Test() {\n    }\n}\n```\n注意这里，C#只能用接口名.成员名的名字来命名实现方法，而且访问器只能是private，不能公开显式实现的方法。\n\n在考察了IL以后，我发现.NET支持隐式实现和显式实现两种方式。其中隐式实现只要在类里面放一个与接口成员方法名字一样的方法即可——这一种VB不支持。而显式实现则在方法的描述信息里加入：\n```c\n.override TestApp.Interface1::Test\n```\n无论是C#的显式实现还是VB的Implements语句都是这样的原理。也就是说.NET提供了换名实现接口成员的功能，但是只有VB将这个自由让给了用户，而其他语言还是采用了经典的语法。\n\n### 默认属性和属性参数\n\n在原先的VB6里，有一项奇特的功能——默认属性。在VB6中，对象的名称可以直接表示该对象的默认属性。比如TextBox的默认属性是Text，所以下面的代码\n```vbnet\nText1.Text = \"Hello\"\n```\n就可以简化为\n```vbnet\nText1 = \"Hello\"\n```\n这种简化给VB带来了很多麻烦，赋值运算就需要两个关键字——Let和Set，结果属性过程也需要Let和Set两种。而且这种特征在后期绑定的时候仍能工作。到了VB.NET，这项功能被大大限制了，现在只有带参数的属性才可以作为默认属性。如\n```vbnet\nList1.Item(0) = \"Hello\"\n```\n可以简化为\n```vbnet\nList1(0) = \"Hello\"\n```\n这种语法让有默认属性的对象看起来像是一个数组。那么VB怎么判断一个属性是否是默认属性呢？看下列代码\n```vbnet\nPublic Class PropTest \n   Public Property P1(ByVal index As Integer) As String \n      Get \n\n      End Get \n      Set(ByVal Value As String) \n\n      End Set \n   End Property \n\n   Default Public Property P2(ByVal index As Integer) As String \n      Get \n\n      End Get \n      Set(ByVal Value As String) \n\n      End Set \n   End Property \nEnd Class\n```\nP1和P2两个属性基本上完全相同，唯一的不同是P2带有一个Default修饰符。反汇编这个类以后，可以发现两个属性完全相同，没有任何差异。但是PropTest类却被增加了一个自定义元属性**System.Reflection.DefaultMemberAttribute**。这个元属性指定的成员是InvokeMember所使用默认类型，也就是说后期绑定也可以使用默认属性。可是我试验将DefaultMember元属性手工添加到类型上却不能达到让某属性成为默认属性的功能。看来这项功能又是VB的一项“语法甜头”。但是，VB或C#的编译器对别人生成的类的默认属性应该只能通过**DefaultMemberAttribute**来判断，所以我将一个VB类只用**DefaultMemberAttribute**指定一个默认方法，不使用Default，然后将它编译以后给C#用，果然，C#将它识别为一个索引器（indexer）！\n\n既然说到了C#的索引器，我们就顺便来研究一下VB和C#属性方面的不同。刚才的实验结果是VB的默认属性在C#中就是索引器。但是VB仍然可以用属性的语法来访问默认属性，而C#只能用数组的语法访问索引器。更特别的是，VB可以创建不是默认属性，但是带有参数的属性，如上面例子里的P1，而C#则不支持带参数的属性，如果将VB编写的，含有带参数属性的类给C#用，C#会提示“属性不受该语言支持，请用get_XXX和set_XXX的语法访问”。也就是说，带参数的属性是CLR的一项功能，但不符合CLS（通用语言规范），因此就会出现跨语言的障碍。这也更加深了我们对CLS的认识——如果你希望让你的代码跨语言工作，请一定要注意符合CLS。\n\n### 可选参数和按名传递\n\nVB从4.0开始支持“可选参数”这一特性。就是说，函数或子程序的参数有些是可选的，调用的时候可以不输入。其实VB从1.0开始就有一些函数带有可选参数，只不过到了4.0才让用户自己开发这样的过程。在VB4里，可选参数可以不带默认值，而在VB.NET里，如果使用可选参数，则必须带有默认值。如 \n```vbnet\nPublic Sub TestOptional(Optional i As Integer = 1)\n\nEnd Sub\n```\n调用的时候，既可以写成TestOptional(2)，也可以写成TestOptional()，这种情况参数i自动等于1。如果过程有不止一个可选参数，则VB还提供一种简化操作的方法——按名传递参数。比如过程\n```vbnet\nPublic Sub TestOptional(Optional i As Int32 = 1, Optional j As Int32 = 1, Optional k As Int32 = 1) \nEnd Sub \n```\n如果只想指定k，让i和j使用默认值，就可以使用按名传递，如下 \n```vbnet\nTestOptional(k := 2) \n```\n而且这种方式不受参数表顺序的限制 \n```vbnet\nTestOptional(k := 2, i := 3, j := 5) \n```\n这些的确是相当方便的功能，C#就不支持上述两个特性。我们看看它是怎样在IL级别实现的。上述第一个方法在IL中的定义为 \n```c\n.method public instance void TestOptional([opt] int32 i) cil managed\n{\n.param [1] = int32(0x00000001)\n.maxstack 8 \n```\n可见，参数被加上了[opt]修饰符，而且.param指定了参数的默认值。这是只有VB能识别的内容，C#会跳过他们。在调用的时候，VB若发现参数被省略，则自动读取*.param*部分的默认值，并显式传递给过程。这一部分完全由编译器处理，而且没有任何性能损失，和手工传递所有参数是完全一样的。至于按名传递，VB会自动调整参数的顺序，其结果与传统方式的传递也没有任何的不同。这说明我们可以放心地使用这项便利。而且带有可选参数的过程拿到C#中，顶多变成不可选参数，也不会造成什么其他的麻烦。 \n\nPS.很多COM组件都使用了默认参数，而且有些过程的参数列表非常长，在VB里可以轻松地处理它们，而在C#中经常让开发者传参数传到吐血。 \n\n### On Error语句和When语句\n\n本次讨论的是异常处理语句。VB.NET推荐使用**Try...End Try**块来进行结构化的异常处理，但是为了确保兼容性，它也从以前版本的BASIC中借鉴了On Error语句。其实On Error并不能算是VB的优点，因为使用它会破坏程序的结构，让带有异常处理的程序难以看懂和调试。但是我一直很惊叹于VB的工程师是怎样实现它的，因为On Error可以让异常的跳转变得很灵活，不像Try那样受到限制。首先看看Try是怎样实现的：\n```vbnet\nPublic Function F1() As Integer\n   Try\n      Dim n As Integer = 2 \\ n\n   Catch ex As Exception\n      MsgBox(ex.Message)\n   End Try\nEnd Function\n```\n这是最简单的异常处理程序，通过Reflector反汇编（如果用ILDasm，不要选择“展开try-catch”），可以发现整个过程被翻译成19条指令。留意这一句：\n```vbnet\n.try L_0000 to L_0006 catch Exception L_0006 to L_0022\n```\n这就是典型的try块，在catch处直接指定要捕获的异常，然后指定catch区的位置，非常清晰。还要留意这两句：\n```vbnet\nL_0007: call ProjectData.SetProjectError\nL_001b: call ProjectData.ClearProjectError\n```\n可以看出，这两句是在catch块的开头和末尾。深入这两个过程我发现它是在为Err对象记录异常。看来使用Err也是语法甜头，性能苦头，凭空添加了这两句（幸好都不太复杂）。\n\n接下来我编写了一个与此功能类似的函数，用的是On语句处理异常：\n```vbnet\nPublic Function F2() As Integer\n   On Error GoTo CATCHBLOCK\n   Dim n As Integer = 2 \\ n\n   Exit Function\n   \nCATCHBLOCK:\n   MsgBox(Err.Description)\nEnd Function\n```\n这不比上一个过程复杂，但是反汇编以后，它的IL代码竟然有47条指令，刚才才19条啊！最主要的改变是try部分，现在它是这样：\n```c\n.try L_0000 to L_0022 filter L_0022 L_0036 to L_0060\n```\n注意，catch不见了，而出现了filter。我从没在C#生成的IL中见过filter。我查询了Meta Data一节的文档，filter大概能够进行一些过滤，满足一定条件才进入处理异常的块中，本例来说，L_0022指令开始就是过滤器，它是：\n```c\nL_0022: isinst Exception\nL_0027: brfalse.s L_0033\nL_0029: ldloc.s V_4\nL_002b: brfalse.s L_0033\nL_002d: ldloc.3 \nL_002e: brtrue.s L_0033\nL_0030: ldc.i4.1 \nL_0031: br.s L_0034\nL_0033: ldc.i4.0 \nL_0034: endfilter\n```\nendfilter就是异常处理部分代码的开始。而L0030之前的代码是过滤器的判断部分，**V_4**和**V_3**是VB自己加入保存错误代码的变量。在整个反汇编中，我发现设计成处理异常部分的代码在IL里其实也是在try块中，也就是说程序的结构已经不是规整的**try...catch**块，产生异常的语句和处理异常的语句在一起，而真正处理异常的指令是一大堆繁冗拖沓的跳转语句。\n\n下面看看我编写的第三个例子：\n```vbnet\nPublic Function F3() As Integer\n   On Error Resume Next\n   Dim n As Integer = 2 \\ n\nEnd Function\n```\n这个值有2行的过程动用了VB强大的语法杀手——**On Error Resume** Next，它将忽略所有异常，让代码紧接产生异常的语句继续执行下去，猜猜这个功能产生了多少IL指令？答案是**50**条！比普通的**On Error**还要长。其实现我就不多说了，和前面的On语句差不多。不过50这个数字似乎提醒了大家，不要在程序里偷懒使用On Error处理异常，这样产生的代价是不可接受的。\n\n最后一个例子是VB.NET的When语句，它可以实现对Catch部分的过滤：\n```vbnet\nPublic Function F1() As Integer\n   Dim n As Integer = 0\n   Try\n      Dim m As Integer = 2 \\ n\n   Catch ex As Exception When n = 0\n      MsgBox(ex.Message)\n   End Try\nEnd Function\n```\n里面的When语句进行了对变量n的判断，仅当**n = 0**的时候才进入处理部分。\n\n听到“过滤”两个字，我们已经猜出，它是用try...filter来实现的。没错。这里的filter主要是进行ex是否是Exception型，n是否等于零等，当过滤成功，就会转移到异常处理段进行处理。这次VB生成的代码要比On Error语句规则得多，结构相当清晰。\n\n本次我们还借助On Error语句和When语句了解到try filter结构，它是C#不能生成的，因此，我发现它不能被常见的反编译器反编译（因为反编译器的编写者只知道C#，呵呵）。而且用了On Error后程序结构变得异常混乱，这在产生负面作用的时候，是不是能够变相起到保护我们代码的作用呢？\n\n（九）实例访问共享成员\n\n大家都知道静态成员在VB中叫做共享成员，虽然刚接受起来有点别扭，但“共享成员”的确是名副其实的：\n```vbnet\nPublic Class Class1\n   Public Shared i As Integer\n   ' Other none-shared members\nEnd Class\n```\n不但像在C#中那样，可以用Class1.i访问共享成员i，还可以用实例变量来访问:\n```vbnet\nDim c1 As New Class1\nc1.i = 100\n```\n就像i是c1的成员一样！当然只有一个i，任何实例去修改i的值都将导致所有i的值改变（因为其实只有一个）。甚至Me和MyClass也可以访问共享成员。\n```vbnet\nMe.i = 100\nMyClass.i = 100\n```\n这在C#中是不可能做到的，一个纯正的C#程序员看到这些代码一定会觉得匪夷所思。为了揭示它的工作原理，我们可以做下列实验：\n```vbnet\nDim c1 As Class1\nc1.i = 100\n```\n注意，这里的c1为Nothing!，即使是Nothing的变量也可以访问共享成员，而且不会出错。接下来我们实验更极端的情况：\n```vbnet\nDim o As Object = New Class1\no.i = 100\n```\n结果——失败，不能通过后期绑定访问共享成员。现在结果已经很明显，只有在VB明确了解对象类型的情况下，才能使用实例访问共享成员，VB会自动判断类型，然后将所有对共享成员访问的语句改写成\n```vbnet\nClass1.i = 100\n```\n这样的语法。Delphi也支持这一有趣的特征，而且李维在《Inside VCL》中将此说成Delphi.NET相对于.NET的扩展之一。\n>\"结果——失败，不能通过后期绑定访问共享成员\"\n\n那只是编辑器不允许而已，语法结构上并没有错！将Option Strict 设为 off 就不会有错误提示。正在从无知迈向菜鸟...\n","source":"_posts/VBdotNET_howto.md","raw":"---\ntitle: VB.NET是怎样做到的（搬家版）\ntags: [vb.net,转载搬运]\ndate: 2016.06.04\n---\n\nVB.net能够实现很多C#不能做到的功能，如**When**语句、**Optional**参数、局部**Static**变量、对象实例访问静态方法、**Handles**绑定事件、**On Error**处理异常、**Object**直接后期绑定等等。VB和C#同属.net的语言，编译出来的是同样的CIL，但为什么VB支持很多有趣的特性呢。我们一起来探究一下。\n<!--more-->\n### 局部静态变量\n\nVB支持用**Static**关键字声明局部变量，这样在过程结束的时候可以保持变量的数值：\n```vbnet\nPublic Sub Test1()\n   Static i As Integer\n   i += 1  ' 实现一个过程调用计数器\nEnd Sub\n```\n我们实现了一个简单的过程计数器。每调用一次Test，计数器的数值就增加1。其实还有很多情况我们希望保持变量的数值。而C#的static是不能用在过程内部的。因此要实现过程计数器，我们必须声明一个类级别的变量。这样做明显不如VB好。因为无法防止其他过程修改计数器变量。这就和对象封装一个道理，本来应该是一个方法的局部变量，现在我要被迫把它独立出来，显然是不好的设计。那么VB是怎么生成局部静态变量的呢？将上述代码返汇编，我们可以清楚地看到在VB生成的CIL中，i不是作为局部变量，而是作为类的Field出现的：\n\n```c\n.field private specialname int32 $STATIC$Test1$2001$i\n```\n\n也就是说，i被改名作为一个类的字段，但被冠以specialname。在代码中试图访问$STATIC$Test1$2001$i是不可能的，因为它不是一个有效的标识符。但是在IL中，将这个变量加一的代码却与一般的类字段完全一样，是通过ldfld加载的。我觉得这个方法十分聪明，把静态变量变成生命周期一样的类字段，但是又由编译器来控制访问的权限，让它成为一个局部变量。同时也解释了VB为什么要用两个不同的关键字来声明静态变量——Static和Shared。\n\n由于局部静态变量的实质是类的字段，所以它和真正的局部变量还是有所不同的。比如在多线程条件下，对局部静态变量的访问就和访问字段相同。\n\n### MyClass关键字\n\nVB.net支持一项很有意思的功能——MyClass。大部分人使用MyClass可能仅限于调用本类其他构造函数时。其实MyClass可以产生一些很独特的用法。MyClass永远按类的成员为不可重写的状态进行调用，即当类的方法被重写后，用MyClass仍能得到自身的版本。下面这个例子和VB帮助中所举的例子非常相似\n```vbnet\nPublic Class MyClassBase\n   Protected Overridable Sub Greeting()\n      Console.WriteLine(\"Hello form Base\")\n   End Sub\n\n   Public Sub UseMe()\n      Me.Greeting()\n   End Sub\n\n   Public Sub UseMyClass()\n      MyClass.Greeting()\n   End Sub\nEnd Class\n\nPublic Class MyClassSub\n   Inherits MyClassBase\n\n   Protected Overrides Sub Greeting()\n      Console.WriteLine(\"Hello form Sub\")\n   End Sub\nEnd Class\n```\n\n我们用一段代码来测试：\n```vbnet\nDim o As MyClassBase = New MyClassSub()\n\no.UseMe()\no.UseMyClass()\n```\n结果是UseMe执行了子类的版本，而UseMyClass还是执行了基类本身的版本，尽管这是一个虚拟方法。观其IL，可以看到其简单的实现原理：\n\nMe用的调用指令是callvirt\n\n```c\nIL_0001: callvirt  instance void App1.MyClassBase::Greeting()\n```\n\n而MyClass调用的是call\n```c\nIL_0001:  call     instance void App1.MyClassBase::Greeting()\n```\n\n奇怪的是，如此简单的一个功能，我竟然无法用C#实现，C#怎样也不允许我按非虚函数的方式调用一个虚函数。C++可以用类名::方法名的方式访问自身版本的函数，但C#的类名只能用来访问静态的成员。这真是C#一个奇怪的限制。\n\n### Handles和WithEvents\n\nVB除了可以用C#那样的方法来处理事件响应以外，还有从VB5继承下来的独特的事件处理方式——WithEvents。\n\n我喜欢称这种事件处理方式为静态的事件处理，书写响应事件的方法时就已经决定该方法响应的是哪一个事件，而C#则是在代码中绑定事件的。比如下面这个最简单的例子：\n```vbnet\nPublic Class HandlerClass\n   Public WithEvents MyObj As EventClass\n\n\n   Private Sub MyObj_MyEvent(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyObj.MyEvent\n      MsgBox(\"hello\")\n   End Sub\n\n   Public Sub New()\n      MyObj = New EventClass\n   End Sub\nEnd Class\n```\n代码中用到的EventClass是这样的：\n```vbnet\nPublic Class EventClass\n   Public Event MyEvent As EventHandler\n\n   Protected Overridable Sub OnMyEvent(ByVal e As EventArgs)\n      RaiseEvent MyEvent(Me, e)\n   End Sub\n\n   Public Sub Test()\n      OnMyEvent(New EventArgs)\n   End Sub\nEnd Class\n```\n我们来复习一下，这段代码隐式地给EventClass编写了两个方法——Add_MyEvent(EventHandler)和Remove_MyEvent(EventHandler)，实际上任何使用事件的上下文都是通过调用这两个方法来绑定事件和解除绑定的。C#还允许你书写自己的事件绑定/解除绑定的代码。\n\n那么WithEvents是怎么工作的呢？VB.net的编译器在编译时自动将\n```vbnet\nPublic WithEvents MyObj As EventClass\n```\n翻译成下面这个过程：\n```vbnet\nPrivate _MyObj As EventClass\n\nPublic Property MyObj() As EventClass\n    Get\n        Return _MyObj\n    End Get\n    Set(ByVal Value As EventClass)\n        If Not (Me._MyObj Is Nothing) Then\n            RemoveHandler _MyObj.MyEvent, AddressOf MyObj_MyEvent\n        End If\n        Me._MyObj = Value\n        If Me._MyObj Is Nothing Then Exit Property\n\n        AddHandler _MyObj.MyEvent, AddressOf MyObj_MyEvent\n    End Set\nEnd Property\n```\n\n由此可见，当对WithEvents变量赋值的时候，会自动触发这个属性以绑定事件。我们所用的大部分事件响应都是1对1的，即一个过程响应一个事件，所以这种WithEvents静态方法是非常有用的，它可以显著增强代码可读性，同时也让VB.net中的事件处理非常方便，不像C#那样离开了窗体设计器就必须手工绑定事件。\n\n不过在分析这段IL的时候，我也发现了VB.net在翻译时小小的问题，就是**ldarg.0**出现得过多，这是频繁使用Me或this的表现，所以我们在编码过程中一定要注意，除了使用到Me/this本身引用以外，使用它的成员时不要带上Me/this，比如**Me.MyInt = 1**就改成**MyInt = 1**，这样的小习惯会为你带来很大的性能收益。\n\n### 类型转换运算符\n\n在Visual Basic 2005中将加入一个新的运算符——TryCast，相当于C#的as运算符。我一直希望VB有这样一个运算符。VB目前的类型转换运算符主要有CType和DirectCast。他们的用法几乎一样。我详细比较了一下这两个运算符，得出以下结论：\n\n+ 在转换成引用类型时，两者没有什么区别，都是直接调用castclass指令，除非重载了类型转换运算符CType。DirectCast运算符是不能重载的。\n+ 转换成值类型时，CType会调用VB指定的类型转换函数（如果有的话），比如将String转换为Int32时，就会自动调用**VisualBasic.CompilerServices.IntegerType.FromString**，而将Object转换为Int32则会调用FromObject。其他数值类型转换为Int32时，CType也会调用类型本身的转换方法实施转换。DirectCast运算符则很简单，直接将对象拆箱成所需类型。\n\n所以在用于值类型时，CType没有DirectCast快速但可以支持更多的转换。在C#中，类型转换则为（type)运算符和as运算符。(type)运算符的工作方式与VB的DirectCast很相似，也是直接拆箱或castclass的，但是如果遇到支持的类型转换（如long到int），(type)运算符也会调用相应的转换方法，但不支持从String到int的转换。C#另一个运算符as则更加智能，它只要判断对象的运行实例能否转成目标类型，然后就可以省略castclass指令，直接按已知类型进行操作，而且编译器还可以自动对as进行优化，比如节省一个对象引用等。所以在将Object转换成所需的类型时，as是最佳选择。\n\n由于as有很多优点，Visual Basic 2005将这一特性吸收了过来，用TryCast运算符就可以获得和as一样的效果，而且语法与DirectCast或CType一样。\n\n### 实现接口\n\nVB.net采用的实现接口的语法是VB5发明的Implements，这个实现接口的语法在当今主流语言中独一无二。比如我有两个接口：\n```vbnet\nInterface Interface1\n   Sub Test()\nEnd Interface\n\nInterface Interface2\n   Sub Test()\nEnd Interface\n```\n这两个接口有一个完全一样的成员Test。假设我需要用一个类同时实现两个接口会怎么样呢？先想想看，如果是Java，JScrip.NET这样的语言就只能用一个Test函数实现两个接口的Test成员。假如两个Test只是偶然重名，其内容必须要分别实现怎么办，于是一些解决接口重名的设计出现了……。在VB中，独特的Implements语句可以让你想怎么实现接口就怎么实现，比如下面的类Implementation用两个名字根本不一样的方法实现了两个接口。\n```vbnet\nPublic Class Implementation\n    Implements Interface1, Interface2\n\n    Public Sub Hello() Implements Interface1.Test\n    End Sub\n\n    Private Sub Hi() Implements Interface2.Test\n    End Sub\nEnd Class\n```\n也就是说，VB允许用任意名字的函数实现接口中的成员，而且访问器可以是任意的，比如想用Public还是Private都可以。\n\nC#在处理重名成员上提供了显式实现（explicit implementation）的语法，其实现上述两个接口的语法为\n```c\npublic class Class1 : Interface1, Interface2 {\n    public Class1() {\n    }\n    void Interface1.Test() {\n    }\n    void Interface2.Test() {\n    }\n}\n```\n注意这里，C#只能用接口名.成员名的名字来命名实现方法，而且访问器只能是private，不能公开显式实现的方法。\n\n在考察了IL以后，我发现.NET支持隐式实现和显式实现两种方式。其中隐式实现只要在类里面放一个与接口成员方法名字一样的方法即可——这一种VB不支持。而显式实现则在方法的描述信息里加入：\n```c\n.override TestApp.Interface1::Test\n```\n无论是C#的显式实现还是VB的Implements语句都是这样的原理。也就是说.NET提供了换名实现接口成员的功能，但是只有VB将这个自由让给了用户，而其他语言还是采用了经典的语法。\n\n### 默认属性和属性参数\n\n在原先的VB6里，有一项奇特的功能——默认属性。在VB6中，对象的名称可以直接表示该对象的默认属性。比如TextBox的默认属性是Text，所以下面的代码\n```vbnet\nText1.Text = \"Hello\"\n```\n就可以简化为\n```vbnet\nText1 = \"Hello\"\n```\n这种简化给VB带来了很多麻烦，赋值运算就需要两个关键字——Let和Set，结果属性过程也需要Let和Set两种。而且这种特征在后期绑定的时候仍能工作。到了VB.NET，这项功能被大大限制了，现在只有带参数的属性才可以作为默认属性。如\n```vbnet\nList1.Item(0) = \"Hello\"\n```\n可以简化为\n```vbnet\nList1(0) = \"Hello\"\n```\n这种语法让有默认属性的对象看起来像是一个数组。那么VB怎么判断一个属性是否是默认属性呢？看下列代码\n```vbnet\nPublic Class PropTest \n   Public Property P1(ByVal index As Integer) As String \n      Get \n\n      End Get \n      Set(ByVal Value As String) \n\n      End Set \n   End Property \n\n   Default Public Property P2(ByVal index As Integer) As String \n      Get \n\n      End Get \n      Set(ByVal Value As String) \n\n      End Set \n   End Property \nEnd Class\n```\nP1和P2两个属性基本上完全相同，唯一的不同是P2带有一个Default修饰符。反汇编这个类以后，可以发现两个属性完全相同，没有任何差异。但是PropTest类却被增加了一个自定义元属性**System.Reflection.DefaultMemberAttribute**。这个元属性指定的成员是InvokeMember所使用默认类型，也就是说后期绑定也可以使用默认属性。可是我试验将DefaultMember元属性手工添加到类型上却不能达到让某属性成为默认属性的功能。看来这项功能又是VB的一项“语法甜头”。但是，VB或C#的编译器对别人生成的类的默认属性应该只能通过**DefaultMemberAttribute**来判断，所以我将一个VB类只用**DefaultMemberAttribute**指定一个默认方法，不使用Default，然后将它编译以后给C#用，果然，C#将它识别为一个索引器（indexer）！\n\n既然说到了C#的索引器，我们就顺便来研究一下VB和C#属性方面的不同。刚才的实验结果是VB的默认属性在C#中就是索引器。但是VB仍然可以用属性的语法来访问默认属性，而C#只能用数组的语法访问索引器。更特别的是，VB可以创建不是默认属性，但是带有参数的属性，如上面例子里的P1，而C#则不支持带参数的属性，如果将VB编写的，含有带参数属性的类给C#用，C#会提示“属性不受该语言支持，请用get_XXX和set_XXX的语法访问”。也就是说，带参数的属性是CLR的一项功能，但不符合CLS（通用语言规范），因此就会出现跨语言的障碍。这也更加深了我们对CLS的认识——如果你希望让你的代码跨语言工作，请一定要注意符合CLS。\n\n### 可选参数和按名传递\n\nVB从4.0开始支持“可选参数”这一特性。就是说，函数或子程序的参数有些是可选的，调用的时候可以不输入。其实VB从1.0开始就有一些函数带有可选参数，只不过到了4.0才让用户自己开发这样的过程。在VB4里，可选参数可以不带默认值，而在VB.NET里，如果使用可选参数，则必须带有默认值。如 \n```vbnet\nPublic Sub TestOptional(Optional i As Integer = 1)\n\nEnd Sub\n```\n调用的时候，既可以写成TestOptional(2)，也可以写成TestOptional()，这种情况参数i自动等于1。如果过程有不止一个可选参数，则VB还提供一种简化操作的方法——按名传递参数。比如过程\n```vbnet\nPublic Sub TestOptional(Optional i As Int32 = 1, Optional j As Int32 = 1, Optional k As Int32 = 1) \nEnd Sub \n```\n如果只想指定k，让i和j使用默认值，就可以使用按名传递，如下 \n```vbnet\nTestOptional(k := 2) \n```\n而且这种方式不受参数表顺序的限制 \n```vbnet\nTestOptional(k := 2, i := 3, j := 5) \n```\n这些的确是相当方便的功能，C#就不支持上述两个特性。我们看看它是怎样在IL级别实现的。上述第一个方法在IL中的定义为 \n```c\n.method public instance void TestOptional([opt] int32 i) cil managed\n{\n.param [1] = int32(0x00000001)\n.maxstack 8 \n```\n可见，参数被加上了[opt]修饰符，而且.param指定了参数的默认值。这是只有VB能识别的内容，C#会跳过他们。在调用的时候，VB若发现参数被省略，则自动读取*.param*部分的默认值，并显式传递给过程。这一部分完全由编译器处理，而且没有任何性能损失，和手工传递所有参数是完全一样的。至于按名传递，VB会自动调整参数的顺序，其结果与传统方式的传递也没有任何的不同。这说明我们可以放心地使用这项便利。而且带有可选参数的过程拿到C#中，顶多变成不可选参数，也不会造成什么其他的麻烦。 \n\nPS.很多COM组件都使用了默认参数，而且有些过程的参数列表非常长，在VB里可以轻松地处理它们，而在C#中经常让开发者传参数传到吐血。 \n\n### On Error语句和When语句\n\n本次讨论的是异常处理语句。VB.NET推荐使用**Try...End Try**块来进行结构化的异常处理，但是为了确保兼容性，它也从以前版本的BASIC中借鉴了On Error语句。其实On Error并不能算是VB的优点，因为使用它会破坏程序的结构，让带有异常处理的程序难以看懂和调试。但是我一直很惊叹于VB的工程师是怎样实现它的，因为On Error可以让异常的跳转变得很灵活，不像Try那样受到限制。首先看看Try是怎样实现的：\n```vbnet\nPublic Function F1() As Integer\n   Try\n      Dim n As Integer = 2 \\ n\n   Catch ex As Exception\n      MsgBox(ex.Message)\n   End Try\nEnd Function\n```\n这是最简单的异常处理程序，通过Reflector反汇编（如果用ILDasm，不要选择“展开try-catch”），可以发现整个过程被翻译成19条指令。留意这一句：\n```vbnet\n.try L_0000 to L_0006 catch Exception L_0006 to L_0022\n```\n这就是典型的try块，在catch处直接指定要捕获的异常，然后指定catch区的位置，非常清晰。还要留意这两句：\n```vbnet\nL_0007: call ProjectData.SetProjectError\nL_001b: call ProjectData.ClearProjectError\n```\n可以看出，这两句是在catch块的开头和末尾。深入这两个过程我发现它是在为Err对象记录异常。看来使用Err也是语法甜头，性能苦头，凭空添加了这两句（幸好都不太复杂）。\n\n接下来我编写了一个与此功能类似的函数，用的是On语句处理异常：\n```vbnet\nPublic Function F2() As Integer\n   On Error GoTo CATCHBLOCK\n   Dim n As Integer = 2 \\ n\n   Exit Function\n   \nCATCHBLOCK:\n   MsgBox(Err.Description)\nEnd Function\n```\n这不比上一个过程复杂，但是反汇编以后，它的IL代码竟然有47条指令，刚才才19条啊！最主要的改变是try部分，现在它是这样：\n```c\n.try L_0000 to L_0022 filter L_0022 L_0036 to L_0060\n```\n注意，catch不见了，而出现了filter。我从没在C#生成的IL中见过filter。我查询了Meta Data一节的文档，filter大概能够进行一些过滤，满足一定条件才进入处理异常的块中，本例来说，L_0022指令开始就是过滤器，它是：\n```c\nL_0022: isinst Exception\nL_0027: brfalse.s L_0033\nL_0029: ldloc.s V_4\nL_002b: brfalse.s L_0033\nL_002d: ldloc.3 \nL_002e: brtrue.s L_0033\nL_0030: ldc.i4.1 \nL_0031: br.s L_0034\nL_0033: ldc.i4.0 \nL_0034: endfilter\n```\nendfilter就是异常处理部分代码的开始。而L0030之前的代码是过滤器的判断部分，**V_4**和**V_3**是VB自己加入保存错误代码的变量。在整个反汇编中，我发现设计成处理异常部分的代码在IL里其实也是在try块中，也就是说程序的结构已经不是规整的**try...catch**块，产生异常的语句和处理异常的语句在一起，而真正处理异常的指令是一大堆繁冗拖沓的跳转语句。\n\n下面看看我编写的第三个例子：\n```vbnet\nPublic Function F3() As Integer\n   On Error Resume Next\n   Dim n As Integer = 2 \\ n\nEnd Function\n```\n这个值有2行的过程动用了VB强大的语法杀手——**On Error Resume** Next，它将忽略所有异常，让代码紧接产生异常的语句继续执行下去，猜猜这个功能产生了多少IL指令？答案是**50**条！比普通的**On Error**还要长。其实现我就不多说了，和前面的On语句差不多。不过50这个数字似乎提醒了大家，不要在程序里偷懒使用On Error处理异常，这样产生的代价是不可接受的。\n\n最后一个例子是VB.NET的When语句，它可以实现对Catch部分的过滤：\n```vbnet\nPublic Function F1() As Integer\n   Dim n As Integer = 0\n   Try\n      Dim m As Integer = 2 \\ n\n   Catch ex As Exception When n = 0\n      MsgBox(ex.Message)\n   End Try\nEnd Function\n```\n里面的When语句进行了对变量n的判断，仅当**n = 0**的时候才进入处理部分。\n\n听到“过滤”两个字，我们已经猜出，它是用try...filter来实现的。没错。这里的filter主要是进行ex是否是Exception型，n是否等于零等，当过滤成功，就会转移到异常处理段进行处理。这次VB生成的代码要比On Error语句规则得多，结构相当清晰。\n\n本次我们还借助On Error语句和When语句了解到try filter结构，它是C#不能生成的，因此，我发现它不能被常见的反编译器反编译（因为反编译器的编写者只知道C#，呵呵）。而且用了On Error后程序结构变得异常混乱，这在产生负面作用的时候，是不是能够变相起到保护我们代码的作用呢？\n\n（九）实例访问共享成员\n\n大家都知道静态成员在VB中叫做共享成员，虽然刚接受起来有点别扭，但“共享成员”的确是名副其实的：\n```vbnet\nPublic Class Class1\n   Public Shared i As Integer\n   ' Other none-shared members\nEnd Class\n```\n不但像在C#中那样，可以用Class1.i访问共享成员i，还可以用实例变量来访问:\n```vbnet\nDim c1 As New Class1\nc1.i = 100\n```\n就像i是c1的成员一样！当然只有一个i，任何实例去修改i的值都将导致所有i的值改变（因为其实只有一个）。甚至Me和MyClass也可以访问共享成员。\n```vbnet\nMe.i = 100\nMyClass.i = 100\n```\n这在C#中是不可能做到的，一个纯正的C#程序员看到这些代码一定会觉得匪夷所思。为了揭示它的工作原理，我们可以做下列实验：\n```vbnet\nDim c1 As Class1\nc1.i = 100\n```\n注意，这里的c1为Nothing!，即使是Nothing的变量也可以访问共享成员，而且不会出错。接下来我们实验更极端的情况：\n```vbnet\nDim o As Object = New Class1\no.i = 100\n```\n结果——失败，不能通过后期绑定访问共享成员。现在结果已经很明显，只有在VB明确了解对象类型的情况下，才能使用实例访问共享成员，VB会自动判断类型，然后将所有对共享成员访问的语句改写成\n```vbnet\nClass1.i = 100\n```\n这样的语法。Delphi也支持这一有趣的特征，而且李维在《Inside VCL》中将此说成Delphi.NET相对于.NET的扩展之一。\n>\"结果——失败，不能通过后期绑定访问共享成员\"\n\n那只是编辑器不允许而已，语法结构上并没有错！将Option Strict 设为 off 就不会有错误提示。正在从无知迈向菜鸟...\n","slug":"VBdotNET_howto","published":1,"updated":"2016-06-09T14:33:01.334Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cipnbu3d200068gv4ie1t6l9n","content":"<p>VB.net能够实现很多C#不能做到的功能，如<strong>When</strong>语句、<strong>Optional</strong>参数、局部<strong>Static</strong>变量、对象实例访问静态方法、<strong>Handles</strong>绑定事件、<strong>On Error</strong>处理异常、<strong>Object</strong>直接后期绑定等等。VB和C#同属.net的语言，编译出来的是同样的CIL，但为什么VB支持很多有趣的特性呢。我们一起来探究一下。<br><a id=\"more\"></a></p>\n<h3 id=\"局部静态变量\"><a href=\"#局部静态变量\" class=\"headerlink\" title=\"局部静态变量\"></a>局部静态变量</h3><p>VB支持用<strong>Static</strong>关键字声明局部变量，这样在过程结束的时候可以保持变量的数值：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> Test1()</span><br><span class=\"line\">   <span class=\"keyword\">Static</span> i <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\">   i += <span class=\"number\">1</span>  <span class=\"comment\">' 实现一个过程调用计数器</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br></pre></td></tr></table></figure></p>\n<p>我们实现了一个简单的过程计数器。每调用一次Test，计数器的数值就增加1。其实还有很多情况我们希望保持变量的数值。而C#的static是不能用在过程内部的。因此要实现过程计数器，我们必须声明一个类级别的变量。这样做明显不如VB好。因为无法防止其他过程修改计数器变量。这就和对象封装一个道理，本来应该是一个方法的局部变量，现在我要被迫把它独立出来，显然是不好的设计。那么VB是怎么生成局部静态变量的呢？将上述代码返汇编，我们可以清楚地看到在VB生成的CIL中，i不是作为局部变量，而是作为类的Field出现的：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.field <span class=\"keyword\">private</span> specialname int32 $STATIC$Test1$<span class=\"number\">2001</span>$i</span><br></pre></td></tr></table></figure>\n<p>也就是说，i被改名作为一个类的字段，但被冠以specialname。在代码中试图访问$STATIC$Test1$2001$i是不可能的，因为它不是一个有效的标识符。但是在IL中，将这个变量加一的代码却与一般的类字段完全一样，是通过ldfld加载的。我觉得这个方法十分聪明，把静态变量变成生命周期一样的类字段，但是又由编译器来控制访问的权限，让它成为一个局部变量。同时也解释了VB为什么要用两个不同的关键字来声明静态变量——Static和Shared。</p>\n<p>由于局部静态变量的实质是类的字段，所以它和真正的局部变量还是有所不同的。比如在多线程条件下，对局部静态变量的访问就和访问字段相同。</p>\n<h3 id=\"MyClass关键字\"><a href=\"#MyClass关键字\" class=\"headerlink\" title=\"MyClass关键字\"></a>MyClass关键字</h3><p>VB.net支持一项很有意思的功能——MyClass。大部分人使用MyClass可能仅限于调用本类其他构造函数时。其实MyClass可以产生一些很独特的用法。MyClass永远按类的成员为不可重写的状态进行调用，即当类的方法被重写后，用MyClass仍能得到自身的版本。下面这个例子和VB帮助中所举的例子非常相似<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> MyClassBase</span><br><span class=\"line\">   <span class=\"keyword\">Protected</span> <span class=\"keyword\">Overridable</span> <span class=\"keyword\">Sub</span> Greeting()</span><br><span class=\"line\">      Console.WriteLine(<span class=\"string\">\"Hello form Base\"</span>)</span><br><span class=\"line\">   <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> UseMe()</span><br><span class=\"line\">      <span class=\"keyword\">Me</span>.Greeting()</span><br><span class=\"line\">   <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> UseMyClass()</span><br><span class=\"line\">      <span class=\"keyword\">MyClass</span>.Greeting()</span><br><span class=\"line\">   <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> MyClassSub</span><br><span class=\"line\">   <span class=\"keyword\">Inherits</span> MyClassBase</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">Protected</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Sub</span> Greeting()</span><br><span class=\"line\">      Console.WriteLine(<span class=\"string\">\"Hello form Sub\"</span>)</span><br><span class=\"line\">   <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure></p>\n<p>我们用一段代码来测试：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> o <span class=\"keyword\">As</span> MyClassBase = <span class=\"keyword\">New</span> MyClassSub()</span><br><span class=\"line\"></span><br><span class=\"line\">o.UseMe()</span><br><span class=\"line\">o.UseMyClass()</span><br></pre></td></tr></table></figure></p>\n<p>结果是UseMe执行了子类的版本，而UseMyClass还是执行了基类本身的版本，尽管这是一个虚拟方法。观其IL，可以看到其简单的实现原理：</p>\n<p>Me用的调用指令是callvirt</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IL_0001: callvirt  instance <span class=\"keyword\">void</span> App1.MyClassBase::Greeting()</span><br></pre></td></tr></table></figure>\n<p>而MyClass调用的是call<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IL_0001:  call     instance <span class=\"keyword\">void</span> App1.MyClassBase::Greeting()</span><br></pre></td></tr></table></figure></p>\n<p>奇怪的是，如此简单的一个功能，我竟然无法用C#实现，C#怎样也不允许我按非虚函数的方式调用一个虚函数。C++可以用类名::方法名的方式访问自身版本的函数，但C#的类名只能用来访问静态的成员。这真是C#一个奇怪的限制。</p>\n<h3 id=\"Handles和WithEvents\"><a href=\"#Handles和WithEvents\" class=\"headerlink\" title=\"Handles和WithEvents\"></a>Handles和WithEvents</h3><p>VB除了可以用C#那样的方法来处理事件响应以外，还有从VB5继承下来的独特的事件处理方式——WithEvents。</p>\n<p>我喜欢称这种事件处理方式为静态的事件处理，书写响应事件的方法时就已经决定该方法响应的是哪一个事件，而C#则是在代码中绑定事件的。比如下面这个最简单的例子：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> HandlerClass</span><br><span class=\"line\">   <span class=\"keyword\">Public</span> <span class=\"keyword\">WithEvents</span> MyObj <span class=\"keyword\">As</span> EventClass</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> MyObj_MyEvent(<span class=\"keyword\">ByVal</span> sender <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span>, <span class=\"keyword\">ByVal</span> e <span class=\"keyword\">As</span> System.EventArgs) <span class=\"keyword\">Handles</span> MyObj.MyEvent</span><br><span class=\"line\">      MsgBox(<span class=\"string\">\"hello\"</span>)</span><br><span class=\"line\">   <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> <span class=\"keyword\">New</span>()</span><br><span class=\"line\">      MyObj = <span class=\"keyword\">New</span> EventClass</span><br><span class=\"line\">   <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure></p>\n<p>代码中用到的EventClass是这样的：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> EventClass</span><br><span class=\"line\">   <span class=\"keyword\">Public</span> <span class=\"keyword\">Event</span> MyEvent <span class=\"keyword\">As</span> EventHandler</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">Protected</span> <span class=\"keyword\">Overridable</span> <span class=\"keyword\">Sub</span> OnMyEvent(<span class=\"keyword\">ByVal</span> e <span class=\"keyword\">As</span> EventArgs)</span><br><span class=\"line\">      <span class=\"keyword\">RaiseEvent</span> MyEvent(<span class=\"keyword\">Me</span>, e)</span><br><span class=\"line\">   <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> Test()</span><br><span class=\"line\">      OnMyEvent(<span class=\"keyword\">New</span> EventArgs)</span><br><span class=\"line\">   <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure></p>\n<p>我们来复习一下，这段代码隐式地给EventClass编写了两个方法——Add_MyEvent(EventHandler)和Remove_MyEvent(EventHandler)，实际上任何使用事件的上下文都是通过调用这两个方法来绑定事件和解除绑定的。C#还允许你书写自己的事件绑定/解除绑定的代码。</p>\n<p>那么WithEvents是怎么工作的呢？VB.net的编译器在编译时自动将<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">WithEvents</span> MyObj <span class=\"keyword\">As</span> EventClass</span><br></pre></td></tr></table></figure></p>\n<p>翻译成下面这个过程：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Private</span> _MyObj <span class=\"keyword\">As</span> EventClass</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> MyObj() <span class=\"keyword\">As</span> EventClass</span><br><span class=\"line\">    <span class=\"keyword\">Get</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> _MyObj</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Get</span></span><br><span class=\"line\">    <span class=\"keyword\">Set</span>(<span class=\"keyword\">ByVal</span> Value <span class=\"keyword\">As</span> EventClass)</span><br><span class=\"line\">        <span class=\"keyword\">If</span> <span class=\"keyword\">Not</span> (<span class=\"keyword\">Me</span>._MyObj <span class=\"keyword\">Is</span> <span class=\"literal\">Nothing</span>) <span class=\"keyword\">Then</span></span><br><span class=\"line\">            <span class=\"keyword\">RemoveHandler</span> _MyObj.MyEvent, <span class=\"keyword\">AddressOf</span> MyObj_MyEvent</span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">        <span class=\"keyword\">Me</span>._MyObj = Value</span><br><span class=\"line\">        <span class=\"keyword\">If</span> <span class=\"keyword\">Me</span>._MyObj <span class=\"keyword\">Is</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">Then</span> <span class=\"keyword\">Exit</span> <span class=\"keyword\">Property</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">AddHandler</span> _MyObj.MyEvent, <span class=\"keyword\">AddressOf</span> MyObj_MyEvent</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Set</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Property</span></span><br></pre></td></tr></table></figure></p>\n<p>由此可见，当对WithEvents变量赋值的时候，会自动触发这个属性以绑定事件。我们所用的大部分事件响应都是1对1的，即一个过程响应一个事件，所以这种WithEvents静态方法是非常有用的，它可以显著增强代码可读性，同时也让VB.net中的事件处理非常方便，不像C#那样离开了窗体设计器就必须手工绑定事件。</p>\n<p>不过在分析这段IL的时候，我也发现了VB.net在翻译时小小的问题，就是<strong>ldarg.0</strong>出现得过多，这是频繁使用Me或this的表现，所以我们在编码过程中一定要注意，除了使用到Me/this本身引用以外，使用它的成员时不要带上Me/this，比如<strong>Me.MyInt = 1</strong>就改成<strong>MyInt = 1</strong>，这样的小习惯会为你带来很大的性能收益。</p>\n<h3 id=\"类型转换运算符\"><a href=\"#类型转换运算符\" class=\"headerlink\" title=\"类型转换运算符\"></a>类型转换运算符</h3><p>在Visual Basic 2005中将加入一个新的运算符——TryCast，相当于C#的as运算符。我一直希望VB有这样一个运算符。VB目前的类型转换运算符主要有CType和DirectCast。他们的用法几乎一样。我详细比较了一下这两个运算符，得出以下结论：</p>\n<ul>\n<li>在转换成引用类型时，两者没有什么区别，都是直接调用castclass指令，除非重载了类型转换运算符CType。DirectCast运算符是不能重载的。</li>\n<li>转换成值类型时，CType会调用VB指定的类型转换函数（如果有的话），比如将String转换为Int32时，就会自动调用<strong>VisualBasic.CompilerServices.IntegerType.FromString</strong>，而将Object转换为Int32则会调用FromObject。其他数值类型转换为Int32时，CType也会调用类型本身的转换方法实施转换。DirectCast运算符则很简单，直接将对象拆箱成所需类型。</li>\n</ul>\n<p>所以在用于值类型时，CType没有DirectCast快速但可以支持更多的转换。在C#中，类型转换则为（type)运算符和as运算符。(type)运算符的工作方式与VB的DirectCast很相似，也是直接拆箱或castclass的，但是如果遇到支持的类型转换（如long到int），(type)运算符也会调用相应的转换方法，但不支持从String到int的转换。C#另一个运算符as则更加智能，它只要判断对象的运行实例能否转成目标类型，然后就可以省略castclass指令，直接按已知类型进行操作，而且编译器还可以自动对as进行优化，比如节省一个对象引用等。所以在将Object转换成所需的类型时，as是最佳选择。</p>\n<p>由于as有很多优点，Visual Basic 2005将这一特性吸收了过来，用TryCast运算符就可以获得和as一样的效果，而且语法与DirectCast或CType一样。</p>\n<h3 id=\"实现接口\"><a href=\"#实现接口\" class=\"headerlink\" title=\"实现接口\"></a>实现接口</h3><p>VB.net采用的实现接口的语法是VB5发明的Implements，这个实现接口的语法在当今主流语言中独一无二。比如我有两个接口：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Interface</span> Interface1</span><br><span class=\"line\">   <span class=\"keyword\">Sub</span> Test()</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Interface</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Interface</span> Interface2</span><br><span class=\"line\">   <span class=\"keyword\">Sub</span> Test()</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Interface</span></span><br></pre></td></tr></table></figure></p>\n<p>这两个接口有一个完全一样的成员Test。假设我需要用一个类同时实现两个接口会怎么样呢？先想想看，如果是Java，JScrip.NET这样的语言就只能用一个Test函数实现两个接口的Test成员。假如两个Test只是偶然重名，其内容必须要分别实现怎么办，于是一些解决接口重名的设计出现了……。在VB中，独特的Implements语句可以让你想怎么实现接口就怎么实现，比如下面的类Implementation用两个名字根本不一样的方法实现了两个接口。<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> Implementation</span><br><span class=\"line\">    <span class=\"keyword\">Implements</span> Interface1, Interface2</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> Hello() <span class=\"keyword\">Implements</span> Interface1.Test</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> Hi() <span class=\"keyword\">Implements</span> Interface2.Test</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure></p>\n<p>也就是说，VB允许用任意名字的函数实现接口中的成员，而且访问器可以是任意的，比如想用Public还是Private都可以。</p>\n<p>C#在处理重名成员上提供了显式实现（explicit implementation）的语法，其实现上述两个接口的语法为<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Class1 : Interface1, Interface2 &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Class1</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> Interface1.Test() &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> Interface2.Test() &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>注意这里，C#只能用接口名.成员名的名字来命名实现方法，而且访问器只能是private，不能公开显式实现的方法。</p>\n<p>在考察了IL以后，我发现.NET支持隐式实现和显式实现两种方式。其中隐式实现只要在类里面放一个与接口成员方法名字一样的方法即可——这一种VB不支持。而显式实现则在方法的描述信息里加入：<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.override TestApp.Interface1::Test</span><br></pre></td></tr></table></figure></p>\n<p>无论是C#的显式实现还是VB的Implements语句都是这样的原理。也就是说.NET提供了换名实现接口成员的功能，但是只有VB将这个自由让给了用户，而其他语言还是采用了经典的语法。</p>\n<h3 id=\"默认属性和属性参数\"><a href=\"#默认属性和属性参数\" class=\"headerlink\" title=\"默认属性和属性参数\"></a>默认属性和属性参数</h3><p>在原先的VB6里，有一项奇特的功能——默认属性。在VB6中，对象的名称可以直接表示该对象的默认属性。比如TextBox的默认属性是Text，所以下面的代码<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Text1.<span class=\"keyword\">Text</span> = <span class=\"string\">\"Hello\"</span></span><br></pre></td></tr></table></figure></p>\n<p>就可以简化为<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Text1 = <span class=\"string\">\"Hello\"</span></span><br></pre></td></tr></table></figure></p>\n<p>这种简化给VB带来了很多麻烦，赋值运算就需要两个关键字——Let和Set，结果属性过程也需要Let和Set两种。而且这种特征在后期绑定的时候仍能工作。到了VB.NET，这项功能被大大限制了，现在只有带参数的属性才可以作为默认属性。如<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List1.Item(<span class=\"number\">0</span>) = <span class=\"string\">\"Hello\"</span></span><br></pre></td></tr></table></figure></p>\n<p>可以简化为<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List1(<span class=\"number\">0</span>) = <span class=\"string\">\"Hello\"</span></span><br></pre></td></tr></table></figure></p>\n<p>这种语法让有默认属性的对象看起来像是一个数组。那么VB怎么判断一个属性是否是默认属性呢？看下列代码<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> PropTest </span><br><span class=\"line\">   <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> P1(<span class=\"keyword\">ByVal</span> index <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span>) <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> </span><br><span class=\"line\">      <span class=\"keyword\">Get</span> </span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">End</span> <span class=\"keyword\">Get</span> </span><br><span class=\"line\">      <span class=\"keyword\">Set</span>(<span class=\"keyword\">ByVal</span> Value <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>) </span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">End</span> <span class=\"keyword\">Set</span> </span><br><span class=\"line\">   <span class=\"keyword\">End</span> <span class=\"keyword\">Property</span> </span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">Default</span> <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> P2(<span class=\"keyword\">ByVal</span> index <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span>) <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> </span><br><span class=\"line\">      <span class=\"keyword\">Get</span> </span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">End</span> <span class=\"keyword\">Get</span> </span><br><span class=\"line\">      <span class=\"keyword\">Set</span>(<span class=\"keyword\">ByVal</span> Value <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>) </span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">End</span> <span class=\"keyword\">Set</span> </span><br><span class=\"line\">   <span class=\"keyword\">End</span> <span class=\"keyword\">Property</span> </span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure></p>\n<p>P1和P2两个属性基本上完全相同，唯一的不同是P2带有一个Default修饰符。反汇编这个类以后，可以发现两个属性完全相同，没有任何差异。但是PropTest类却被增加了一个自定义元属性<strong>System.Reflection.DefaultMemberAttribute</strong>。这个元属性指定的成员是InvokeMember所使用默认类型，也就是说后期绑定也可以使用默认属性。可是我试验将DefaultMember元属性手工添加到类型上却不能达到让某属性成为默认属性的功能。看来这项功能又是VB的一项“语法甜头”。但是，VB或C#的编译器对别人生成的类的默认属性应该只能通过<strong>DefaultMemberAttribute</strong>来判断，所以我将一个VB类只用<strong>DefaultMemberAttribute</strong>指定一个默认方法，不使用Default，然后将它编译以后给C#用，果然，C#将它识别为一个索引器（indexer）！</p>\n<p>既然说到了C#的索引器，我们就顺便来研究一下VB和C#属性方面的不同。刚才的实验结果是VB的默认属性在C#中就是索引器。但是VB仍然可以用属性的语法来访问默认属性，而C#只能用数组的语法访问索引器。更特别的是，VB可以创建不是默认属性，但是带有参数的属性，如上面例子里的P1，而C#则不支持带参数的属性，如果将VB编写的，含有带参数属性的类给C#用，C#会提示“属性不受该语言支持，请用get_XXX和set_XXX的语法访问”。也就是说，带参数的属性是CLR的一项功能，但不符合CLS（通用语言规范），因此就会出现跨语言的障碍。这也更加深了我们对CLS的认识——如果你希望让你的代码跨语言工作，请一定要注意符合CLS。</p>\n<h3 id=\"可选参数和按名传递\"><a href=\"#可选参数和按名传递\" class=\"headerlink\" title=\"可选参数和按名传递\"></a>可选参数和按名传递</h3><p>VB从4.0开始支持“可选参数”这一特性。就是说，函数或子程序的参数有些是可选的，调用的时候可以不输入。其实VB从1.0开始就有一些函数带有可选参数，只不过到了4.0才让用户自己开发这样的过程。在VB4里，可选参数可以不带默认值，而在VB.NET里，如果使用可选参数，则必须带有默认值。如<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> TestOptional(<span class=\"keyword\">Optional</span> i <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br></pre></td></tr></table></figure></p>\n<p>调用的时候，既可以写成TestOptional(2)，也可以写成TestOptional()，这种情况参数i自动等于1。如果过程有不止一个可选参数，则VB还提供一种简化操作的方法——按名传递参数。比如过程<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> TestOptional(<span class=\"keyword\">Optional</span> i <span class=\"keyword\">As</span> Int32 = <span class=\"number\">1</span>, <span class=\"keyword\">Optional</span> j <span class=\"keyword\">As</span> Int32 = <span class=\"number\">1</span>, <span class=\"keyword\">Optional</span> k <span class=\"keyword\">As</span> Int32 = <span class=\"number\">1</span>) </span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br></pre></td></tr></table></figure></p>\n<p>如果只想指定k，让i和j使用默认值，就可以使用按名传递，如下<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TestOptional(k := <span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure></p>\n<p>而且这种方式不受参数表顺序的限制<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TestOptional(k := <span class=\"number\">2</span>, i := <span class=\"number\">3</span>, j := <span class=\"number\">5</span>)</span><br></pre></td></tr></table></figure></p>\n<p>这些的确是相当方便的功能，C#就不支持上述两个特性。我们看看它是怎样在IL级别实现的。上述第一个方法在IL中的定义为<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> instance <span class=\"keyword\">void</span> <span class=\"title\">TestOptional</span><span class=\"params\">([opt] int32 i)</span> cil managed</span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\">.param [<span class=\"number\">1</span>] = int32(<span class=\"number\">0x00000001</span>)</span><br><span class=\"line\">.maxstack <span class=\"number\">8</span></span><br></pre></td></tr></table></figure></p>\n<p>可见，参数被加上了[opt]修饰符，而且.param指定了参数的默认值。这是只有VB能识别的内容，C#会跳过他们。在调用的时候，VB若发现参数被省略，则自动读取<em>.param</em>部分的默认值，并显式传递给过程。这一部分完全由编译器处理，而且没有任何性能损失，和手工传递所有参数是完全一样的。至于按名传递，VB会自动调整参数的顺序，其结果与传统方式的传递也没有任何的不同。这说明我们可以放心地使用这项便利。而且带有可选参数的过程拿到C#中，顶多变成不可选参数，也不会造成什么其他的麻烦。 </p>\n<p>PS.很多COM组件都使用了默认参数，而且有些过程的参数列表非常长，在VB里可以轻松地处理它们，而在C#中经常让开发者传参数传到吐血。 </p>\n<h3 id=\"On-Error语句和When语句\"><a href=\"#On-Error语句和When语句\" class=\"headerlink\" title=\"On Error语句和When语句\"></a>On Error语句和When语句</h3><p>本次讨论的是异常处理语句。VB.NET推荐使用<strong>Try…End Try</strong>块来进行结构化的异常处理，但是为了确保兼容性，它也从以前版本的BASIC中借鉴了On Error语句。其实On Error并不能算是VB的优点，因为使用它会破坏程序的结构，让带有异常处理的程序难以看懂和调试。但是我一直很惊叹于VB的工程师是怎样实现它的，因为On Error可以让异常的跳转变得很灵活，不像Try那样受到限制。首先看看Try是怎样实现的：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> F1() <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\">   <span class=\"keyword\">Try</span></span><br><span class=\"line\">      <span class=\"keyword\">Dim</span> n <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">2</span> \\ n</span><br><span class=\"line\">   <span class=\"keyword\">Catch</span> ex <span class=\"keyword\">As</span> Exception</span><br><span class=\"line\">      MsgBox(ex.Message)</span><br><span class=\"line\">   <span class=\"keyword\">End</span> <span class=\"keyword\">Try</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure></p>\n<p>这是最简单的异常处理程序，通过Reflector反汇编（如果用ILDasm，不要选择“展开try-catch”），可以发现整个过程被翻译成19条指令。留意这一句：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.<span class=\"keyword\">try</span> L_0000 <span class=\"keyword\">to</span> L_0006 <span class=\"keyword\">catch</span> Exception L_0006 <span class=\"keyword\">to</span> L_0022</span><br></pre></td></tr></table></figure></p>\n<p>这就是典型的try块，在catch处直接指定要捕获的异常，然后指定catch区的位置，非常清晰。还要留意这两句：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">L_0007: <span class=\"keyword\">call</span> ProjectData.SetProjectError</span><br><span class=\"line\">L_001b: <span class=\"keyword\">call</span> ProjectData.ClearProjectError</span><br></pre></td></tr></table></figure></p>\n<p>可以看出，这两句是在catch块的开头和末尾。深入这两个过程我发现它是在为Err对象记录异常。看来使用Err也是语法甜头，性能苦头，凭空添加了这两句（幸好都不太复杂）。</p>\n<p>接下来我编写了一个与此功能类似的函数，用的是On语句处理异常：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> F2() <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\">   <span class=\"keyword\">On</span> <span class=\"keyword\">Error</span> <span class=\"keyword\">GoTo</span> CATCHBLOCK</span><br><span class=\"line\">   <span class=\"keyword\">Dim</span> n <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">2</span> \\ n</span><br><span class=\"line\">   <span class=\"keyword\">Exit</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\">   </span><br><span class=\"line\">CATCHBLOCK:</span><br><span class=\"line\">   MsgBox(Err.Description)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure></p>\n<p>这不比上一个过程复杂，但是反汇编以后，它的IL代码竟然有47条指令，刚才才19条啊！最主要的改变是try部分，现在它是这样：<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.<span class=\"keyword\">try</span> L_0000 to L_0022 filter L_0022 L_0036 to L_0060</span><br></pre></td></tr></table></figure></p>\n<p>注意，catch不见了，而出现了filter。我从没在C#生成的IL中见过filter。我查询了Meta Data一节的文档，filter大概能够进行一些过滤，满足一定条件才进入处理异常的块中，本例来说，L_0022指令开始就是过滤器，它是：<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">L_0022: isinst Exception</span><br><span class=\"line\">L_0027: brfalse.s L_0033</span><br><span class=\"line\">L_0029: ldloc.s V_4</span><br><span class=\"line\">L_002b: brfalse.s L_0033</span><br><span class=\"line\">L_002d: ldloc<span class=\"number\">.3</span> </span><br><span class=\"line\">L_002e: brtrue.s L_0033</span><br><span class=\"line\">L_0030: ldc.i4<span class=\"number\">.1</span> </span><br><span class=\"line\">L_0031: br.s L_0034</span><br><span class=\"line\">L_0033: ldc.i4<span class=\"number\">.0</span> </span><br><span class=\"line\">L_0034: endfilter</span><br></pre></td></tr></table></figure></p>\n<p>endfilter就是异常处理部分代码的开始。而L0030之前的代码是过滤器的判断部分，<strong>V_4</strong>和<strong>V_3</strong>是VB自己加入保存错误代码的变量。在整个反汇编中，我发现设计成处理异常部分的代码在IL里其实也是在try块中，也就是说程序的结构已经不是规整的<strong>try…catch</strong>块，产生异常的语句和处理异常的语句在一起，而真正处理异常的指令是一大堆繁冗拖沓的跳转语句。</p>\n<p>下面看看我编写的第三个例子：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> F3() <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\">   <span class=\"keyword\">On</span> <span class=\"keyword\">Error</span> <span class=\"keyword\">Resume</span> <span class=\"keyword\">Next</span></span><br><span class=\"line\">   <span class=\"keyword\">Dim</span> n <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">2</span> \\ n</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure></p>\n<p>这个值有2行的过程动用了VB强大的语法杀手——<strong>On Error Resume</strong> Next，它将忽略所有异常，让代码紧接产生异常的语句继续执行下去，猜猜这个功能产生了多少IL指令？答案是<strong>50</strong>条！比普通的<strong>On Error</strong>还要长。其实现我就不多说了，和前面的On语句差不多。不过50这个数字似乎提醒了大家，不要在程序里偷懒使用On Error处理异常，这样产生的代价是不可接受的。</p>\n<p>最后一个例子是VB.NET的When语句，它可以实现对Catch部分的过滤：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> F1() <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\">   <span class=\"keyword\">Dim</span> n <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">0</span></span><br><span class=\"line\">   <span class=\"keyword\">Try</span></span><br><span class=\"line\">      <span class=\"keyword\">Dim</span> m <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">2</span> \\ n</span><br><span class=\"line\">   <span class=\"keyword\">Catch</span> ex <span class=\"keyword\">As</span> Exception <span class=\"keyword\">When</span> n = <span class=\"number\">0</span></span><br><span class=\"line\">      MsgBox(ex.Message)</span><br><span class=\"line\">   <span class=\"keyword\">End</span> <span class=\"keyword\">Try</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure></p>\n<p>里面的When语句进行了对变量n的判断，仅当<strong>n = 0</strong>的时候才进入处理部分。</p>\n<p>听到“过滤”两个字，我们已经猜出，它是用try…filter来实现的。没错。这里的filter主要是进行ex是否是Exception型，n是否等于零等，当过滤成功，就会转移到异常处理段进行处理。这次VB生成的代码要比On Error语句规则得多，结构相当清晰。</p>\n<p>本次我们还借助On Error语句和When语句了解到try filter结构，它是C#不能生成的，因此，我发现它不能被常见的反编译器反编译（因为反编译器的编写者只知道C#，呵呵）。而且用了On Error后程序结构变得异常混乱，这在产生负面作用的时候，是不是能够变相起到保护我们代码的作用呢？</p>\n<p>（九）实例访问共享成员</p>\n<p>大家都知道静态成员在VB中叫做共享成员，虽然刚接受起来有点别扭，但“共享成员”的确是名副其实的：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> Class1</span><br><span class=\"line\">   <span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> i <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\">   <span class=\"comment\">' Other none-shared members</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure></p>\n<p>不但像在C#中那样，可以用Class1.i访问共享成员i，还可以用实例变量来访问:<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> c1 <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> Class1</span><br><span class=\"line\">c1.i = <span class=\"number\">100</span></span><br></pre></td></tr></table></figure></p>\n<p>就像i是c1的成员一样！当然只有一个i，任何实例去修改i的值都将导致所有i的值改变（因为其实只有一个）。甚至Me和MyClass也可以访问共享成员。<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Me</span>.i = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"keyword\">MyClass</span>.i = <span class=\"number\">100</span></span><br></pre></td></tr></table></figure></p>\n<p>这在C#中是不可能做到的，一个纯正的C#程序员看到这些代码一定会觉得匪夷所思。为了揭示它的工作原理，我们可以做下列实验：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> c1 <span class=\"keyword\">As</span> Class1</span><br><span class=\"line\">c1.i = <span class=\"number\">100</span></span><br></pre></td></tr></table></figure></p>\n<p>注意，这里的c1为Nothing!，即使是Nothing的变量也可以访问共享成员，而且不会出错。接下来我们实验更极端的情况：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> o <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span> = <span class=\"keyword\">New</span> Class1</span><br><span class=\"line\">o.i = <span class=\"number\">100</span></span><br></pre></td></tr></table></figure></p>\n<p>结果——失败，不能通过后期绑定访问共享成员。现在结果已经很明显，只有在VB明确了解对象类型的情况下，才能使用实例访问共享成员，VB会自动判断类型，然后将所有对共享成员访问的语句改写成<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Class1.i = <span class=\"number\">100</span></span><br></pre></td></tr></table></figure></p>\n<p>这样的语法。Delphi也支持这一有趣的特征，而且李维在《Inside VCL》中将此说成Delphi.NET相对于.NET的扩展之一。</p>\n<blockquote>\n<p>“结果——失败，不能通过后期绑定访问共享成员”</p>\n</blockquote>\n<p>那只是编辑器不允许而已，语法结构上并没有错！将Option Strict 设为 off 就不会有错误提示。正在从无知迈向菜鸟…</p>\n","excerpt":"<p>VB.net能够实现很多C#不能做到的功能，如<strong>When</strong>语句、<strong>Optional</strong>参数、局部<strong>Static</strong>变量、对象实例访问静态方法、<strong>Handles</strong>绑定事件、<strong>On Error</strong>处理异常、<strong>Object</strong>直接后期绑定等等。VB和C#同属.net的语言，编译出来的是同样的CIL，但为什么VB支持很多有趣的特性呢。我们一起来探究一下。<br>","more":"</p>\n<h3 id=\"局部静态变量\"><a href=\"#局部静态变量\" class=\"headerlink\" title=\"局部静态变量\"></a>局部静态变量</h3><p>VB支持用<strong>Static</strong>关键字声明局部变量，这样在过程结束的时候可以保持变量的数值：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> Test1()</span><br><span class=\"line\">   <span class=\"keyword\">Static</span> i <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\">   i += <span class=\"number\">1</span>  <span class=\"comment\">' 实现一个过程调用计数器</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br></pre></td></tr></table></figure></p>\n<p>我们实现了一个简单的过程计数器。每调用一次Test，计数器的数值就增加1。其实还有很多情况我们希望保持变量的数值。而C#的static是不能用在过程内部的。因此要实现过程计数器，我们必须声明一个类级别的变量。这样做明显不如VB好。因为无法防止其他过程修改计数器变量。这就和对象封装一个道理，本来应该是一个方法的局部变量，现在我要被迫把它独立出来，显然是不好的设计。那么VB是怎么生成局部静态变量的呢？将上述代码返汇编，我们可以清楚地看到在VB生成的CIL中，i不是作为局部变量，而是作为类的Field出现的：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.field <span class=\"keyword\">private</span> specialname int32 $STATIC$Test1$<span class=\"number\">2001</span>$i</span><br></pre></td></tr></table></figure>\n<p>也就是说，i被改名作为一个类的字段，但被冠以specialname。在代码中试图访问$STATIC$Test1$2001$i是不可能的，因为它不是一个有效的标识符。但是在IL中，将这个变量加一的代码却与一般的类字段完全一样，是通过ldfld加载的。我觉得这个方法十分聪明，把静态变量变成生命周期一样的类字段，但是又由编译器来控制访问的权限，让它成为一个局部变量。同时也解释了VB为什么要用两个不同的关键字来声明静态变量——Static和Shared。</p>\n<p>由于局部静态变量的实质是类的字段，所以它和真正的局部变量还是有所不同的。比如在多线程条件下，对局部静态变量的访问就和访问字段相同。</p>\n<h3 id=\"MyClass关键字\"><a href=\"#MyClass关键字\" class=\"headerlink\" title=\"MyClass关键字\"></a>MyClass关键字</h3><p>VB.net支持一项很有意思的功能——MyClass。大部分人使用MyClass可能仅限于调用本类其他构造函数时。其实MyClass可以产生一些很独特的用法。MyClass永远按类的成员为不可重写的状态进行调用，即当类的方法被重写后，用MyClass仍能得到自身的版本。下面这个例子和VB帮助中所举的例子非常相似<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> MyClassBase</span><br><span class=\"line\">   <span class=\"keyword\">Protected</span> <span class=\"keyword\">Overridable</span> <span class=\"keyword\">Sub</span> Greeting()</span><br><span class=\"line\">      Console.WriteLine(<span class=\"string\">\"Hello form Base\"</span>)</span><br><span class=\"line\">   <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> UseMe()</span><br><span class=\"line\">      <span class=\"keyword\">Me</span>.Greeting()</span><br><span class=\"line\">   <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> UseMyClass()</span><br><span class=\"line\">      <span class=\"keyword\">MyClass</span>.Greeting()</span><br><span class=\"line\">   <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> MyClassSub</span><br><span class=\"line\">   <span class=\"keyword\">Inherits</span> MyClassBase</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">Protected</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Sub</span> Greeting()</span><br><span class=\"line\">      Console.WriteLine(<span class=\"string\">\"Hello form Sub\"</span>)</span><br><span class=\"line\">   <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure></p>\n<p>我们用一段代码来测试：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> o <span class=\"keyword\">As</span> MyClassBase = <span class=\"keyword\">New</span> MyClassSub()</span><br><span class=\"line\"></span><br><span class=\"line\">o.UseMe()</span><br><span class=\"line\">o.UseMyClass()</span><br></pre></td></tr></table></figure></p>\n<p>结果是UseMe执行了子类的版本，而UseMyClass还是执行了基类本身的版本，尽管这是一个虚拟方法。观其IL，可以看到其简单的实现原理：</p>\n<p>Me用的调用指令是callvirt</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IL_0001: callvirt  instance <span class=\"keyword\">void</span> App1.MyClassBase::Greeting()</span><br></pre></td></tr></table></figure>\n<p>而MyClass调用的是call<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IL_0001:  call     instance <span class=\"keyword\">void</span> App1.MyClassBase::Greeting()</span><br></pre></td></tr></table></figure></p>\n<p>奇怪的是，如此简单的一个功能，我竟然无法用C#实现，C#怎样也不允许我按非虚函数的方式调用一个虚函数。C++可以用类名::方法名的方式访问自身版本的函数，但C#的类名只能用来访问静态的成员。这真是C#一个奇怪的限制。</p>\n<h3 id=\"Handles和WithEvents\"><a href=\"#Handles和WithEvents\" class=\"headerlink\" title=\"Handles和WithEvents\"></a>Handles和WithEvents</h3><p>VB除了可以用C#那样的方法来处理事件响应以外，还有从VB5继承下来的独特的事件处理方式——WithEvents。</p>\n<p>我喜欢称这种事件处理方式为静态的事件处理，书写响应事件的方法时就已经决定该方法响应的是哪一个事件，而C#则是在代码中绑定事件的。比如下面这个最简单的例子：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> HandlerClass</span><br><span class=\"line\">   <span class=\"keyword\">Public</span> <span class=\"keyword\">WithEvents</span> MyObj <span class=\"keyword\">As</span> EventClass</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> MyObj_MyEvent(<span class=\"keyword\">ByVal</span> sender <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span>, <span class=\"keyword\">ByVal</span> e <span class=\"keyword\">As</span> System.EventArgs) <span class=\"keyword\">Handles</span> MyObj.MyEvent</span><br><span class=\"line\">      MsgBox(<span class=\"string\">\"hello\"</span>)</span><br><span class=\"line\">   <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> <span class=\"keyword\">New</span>()</span><br><span class=\"line\">      MyObj = <span class=\"keyword\">New</span> EventClass</span><br><span class=\"line\">   <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure></p>\n<p>代码中用到的EventClass是这样的：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> EventClass</span><br><span class=\"line\">   <span class=\"keyword\">Public</span> <span class=\"keyword\">Event</span> MyEvent <span class=\"keyword\">As</span> EventHandler</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">Protected</span> <span class=\"keyword\">Overridable</span> <span class=\"keyword\">Sub</span> OnMyEvent(<span class=\"keyword\">ByVal</span> e <span class=\"keyword\">As</span> EventArgs)</span><br><span class=\"line\">      <span class=\"keyword\">RaiseEvent</span> MyEvent(<span class=\"keyword\">Me</span>, e)</span><br><span class=\"line\">   <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> Test()</span><br><span class=\"line\">      OnMyEvent(<span class=\"keyword\">New</span> EventArgs)</span><br><span class=\"line\">   <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure></p>\n<p>我们来复习一下，这段代码隐式地给EventClass编写了两个方法——Add_MyEvent(EventHandler)和Remove_MyEvent(EventHandler)，实际上任何使用事件的上下文都是通过调用这两个方法来绑定事件和解除绑定的。C#还允许你书写自己的事件绑定/解除绑定的代码。</p>\n<p>那么WithEvents是怎么工作的呢？VB.net的编译器在编译时自动将<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">WithEvents</span> MyObj <span class=\"keyword\">As</span> EventClass</span><br></pre></td></tr></table></figure></p>\n<p>翻译成下面这个过程：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Private</span> _MyObj <span class=\"keyword\">As</span> EventClass</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> MyObj() <span class=\"keyword\">As</span> EventClass</span><br><span class=\"line\">    <span class=\"keyword\">Get</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> _MyObj</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Get</span></span><br><span class=\"line\">    <span class=\"keyword\">Set</span>(<span class=\"keyword\">ByVal</span> Value <span class=\"keyword\">As</span> EventClass)</span><br><span class=\"line\">        <span class=\"keyword\">If</span> <span class=\"keyword\">Not</span> (<span class=\"keyword\">Me</span>._MyObj <span class=\"keyword\">Is</span> <span class=\"literal\">Nothing</span>) <span class=\"keyword\">Then</span></span><br><span class=\"line\">            <span class=\"keyword\">RemoveHandler</span> _MyObj.MyEvent, <span class=\"keyword\">AddressOf</span> MyObj_MyEvent</span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">        <span class=\"keyword\">Me</span>._MyObj = Value</span><br><span class=\"line\">        <span class=\"keyword\">If</span> <span class=\"keyword\">Me</span>._MyObj <span class=\"keyword\">Is</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">Then</span> <span class=\"keyword\">Exit</span> <span class=\"keyword\">Property</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">AddHandler</span> _MyObj.MyEvent, <span class=\"keyword\">AddressOf</span> MyObj_MyEvent</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Set</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Property</span></span><br></pre></td></tr></table></figure></p>\n<p>由此可见，当对WithEvents变量赋值的时候，会自动触发这个属性以绑定事件。我们所用的大部分事件响应都是1对1的，即一个过程响应一个事件，所以这种WithEvents静态方法是非常有用的，它可以显著增强代码可读性，同时也让VB.net中的事件处理非常方便，不像C#那样离开了窗体设计器就必须手工绑定事件。</p>\n<p>不过在分析这段IL的时候，我也发现了VB.net在翻译时小小的问题，就是<strong>ldarg.0</strong>出现得过多，这是频繁使用Me或this的表现，所以我们在编码过程中一定要注意，除了使用到Me/this本身引用以外，使用它的成员时不要带上Me/this，比如<strong>Me.MyInt = 1</strong>就改成<strong>MyInt = 1</strong>，这样的小习惯会为你带来很大的性能收益。</p>\n<h3 id=\"类型转换运算符\"><a href=\"#类型转换运算符\" class=\"headerlink\" title=\"类型转换运算符\"></a>类型转换运算符</h3><p>在Visual Basic 2005中将加入一个新的运算符——TryCast，相当于C#的as运算符。我一直希望VB有这样一个运算符。VB目前的类型转换运算符主要有CType和DirectCast。他们的用法几乎一样。我详细比较了一下这两个运算符，得出以下结论：</p>\n<ul>\n<li>在转换成引用类型时，两者没有什么区别，都是直接调用castclass指令，除非重载了类型转换运算符CType。DirectCast运算符是不能重载的。</li>\n<li>转换成值类型时，CType会调用VB指定的类型转换函数（如果有的话），比如将String转换为Int32时，就会自动调用<strong>VisualBasic.CompilerServices.IntegerType.FromString</strong>，而将Object转换为Int32则会调用FromObject。其他数值类型转换为Int32时，CType也会调用类型本身的转换方法实施转换。DirectCast运算符则很简单，直接将对象拆箱成所需类型。</li>\n</ul>\n<p>所以在用于值类型时，CType没有DirectCast快速但可以支持更多的转换。在C#中，类型转换则为（type)运算符和as运算符。(type)运算符的工作方式与VB的DirectCast很相似，也是直接拆箱或castclass的，但是如果遇到支持的类型转换（如long到int），(type)运算符也会调用相应的转换方法，但不支持从String到int的转换。C#另一个运算符as则更加智能，它只要判断对象的运行实例能否转成目标类型，然后就可以省略castclass指令，直接按已知类型进行操作，而且编译器还可以自动对as进行优化，比如节省一个对象引用等。所以在将Object转换成所需的类型时，as是最佳选择。</p>\n<p>由于as有很多优点，Visual Basic 2005将这一特性吸收了过来，用TryCast运算符就可以获得和as一样的效果，而且语法与DirectCast或CType一样。</p>\n<h3 id=\"实现接口\"><a href=\"#实现接口\" class=\"headerlink\" title=\"实现接口\"></a>实现接口</h3><p>VB.net采用的实现接口的语法是VB5发明的Implements，这个实现接口的语法在当今主流语言中独一无二。比如我有两个接口：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Interface</span> Interface1</span><br><span class=\"line\">   <span class=\"keyword\">Sub</span> Test()</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Interface</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Interface</span> Interface2</span><br><span class=\"line\">   <span class=\"keyword\">Sub</span> Test()</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Interface</span></span><br></pre></td></tr></table></figure></p>\n<p>这两个接口有一个完全一样的成员Test。假设我需要用一个类同时实现两个接口会怎么样呢？先想想看，如果是Java，JScrip.NET这样的语言就只能用一个Test函数实现两个接口的Test成员。假如两个Test只是偶然重名，其内容必须要分别实现怎么办，于是一些解决接口重名的设计出现了……。在VB中，独特的Implements语句可以让你想怎么实现接口就怎么实现，比如下面的类Implementation用两个名字根本不一样的方法实现了两个接口。<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> Implementation</span><br><span class=\"line\">    <span class=\"keyword\">Implements</span> Interface1, Interface2</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> Hello() <span class=\"keyword\">Implements</span> Interface1.Test</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> Hi() <span class=\"keyword\">Implements</span> Interface2.Test</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure></p>\n<p>也就是说，VB允许用任意名字的函数实现接口中的成员，而且访问器可以是任意的，比如想用Public还是Private都可以。</p>\n<p>C#在处理重名成员上提供了显式实现（explicit implementation）的语法，其实现上述两个接口的语法为<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Class1 : Interface1, Interface2 &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Class1</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> Interface1.Test() &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> Interface2.Test() &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>注意这里，C#只能用接口名.成员名的名字来命名实现方法，而且访问器只能是private，不能公开显式实现的方法。</p>\n<p>在考察了IL以后，我发现.NET支持隐式实现和显式实现两种方式。其中隐式实现只要在类里面放一个与接口成员方法名字一样的方法即可——这一种VB不支持。而显式实现则在方法的描述信息里加入：<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.override TestApp.Interface1::Test</span><br></pre></td></tr></table></figure></p>\n<p>无论是C#的显式实现还是VB的Implements语句都是这样的原理。也就是说.NET提供了换名实现接口成员的功能，但是只有VB将这个自由让给了用户，而其他语言还是采用了经典的语法。</p>\n<h3 id=\"默认属性和属性参数\"><a href=\"#默认属性和属性参数\" class=\"headerlink\" title=\"默认属性和属性参数\"></a>默认属性和属性参数</h3><p>在原先的VB6里，有一项奇特的功能——默认属性。在VB6中，对象的名称可以直接表示该对象的默认属性。比如TextBox的默认属性是Text，所以下面的代码<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Text1.<span class=\"keyword\">Text</span> = <span class=\"string\">\"Hello\"</span></span><br></pre></td></tr></table></figure></p>\n<p>就可以简化为<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Text1 = <span class=\"string\">\"Hello\"</span></span><br></pre></td></tr></table></figure></p>\n<p>这种简化给VB带来了很多麻烦，赋值运算就需要两个关键字——Let和Set，结果属性过程也需要Let和Set两种。而且这种特征在后期绑定的时候仍能工作。到了VB.NET，这项功能被大大限制了，现在只有带参数的属性才可以作为默认属性。如<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List1.Item(<span class=\"number\">0</span>) = <span class=\"string\">\"Hello\"</span></span><br></pre></td></tr></table></figure></p>\n<p>可以简化为<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List1(<span class=\"number\">0</span>) = <span class=\"string\">\"Hello\"</span></span><br></pre></td></tr></table></figure></p>\n<p>这种语法让有默认属性的对象看起来像是一个数组。那么VB怎么判断一个属性是否是默认属性呢？看下列代码<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> PropTest </span><br><span class=\"line\">   <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> P1(<span class=\"keyword\">ByVal</span> index <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span>) <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> </span><br><span class=\"line\">      <span class=\"keyword\">Get</span> </span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">End</span> <span class=\"keyword\">Get</span> </span><br><span class=\"line\">      <span class=\"keyword\">Set</span>(<span class=\"keyword\">ByVal</span> Value <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>) </span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">End</span> <span class=\"keyword\">Set</span> </span><br><span class=\"line\">   <span class=\"keyword\">End</span> <span class=\"keyword\">Property</span> </span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">Default</span> <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> P2(<span class=\"keyword\">ByVal</span> index <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span>) <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> </span><br><span class=\"line\">      <span class=\"keyword\">Get</span> </span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">End</span> <span class=\"keyword\">Get</span> </span><br><span class=\"line\">      <span class=\"keyword\">Set</span>(<span class=\"keyword\">ByVal</span> Value <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>) </span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">End</span> <span class=\"keyword\">Set</span> </span><br><span class=\"line\">   <span class=\"keyword\">End</span> <span class=\"keyword\">Property</span> </span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure></p>\n<p>P1和P2两个属性基本上完全相同，唯一的不同是P2带有一个Default修饰符。反汇编这个类以后，可以发现两个属性完全相同，没有任何差异。但是PropTest类却被增加了一个自定义元属性<strong>System.Reflection.DefaultMemberAttribute</strong>。这个元属性指定的成员是InvokeMember所使用默认类型，也就是说后期绑定也可以使用默认属性。可是我试验将DefaultMember元属性手工添加到类型上却不能达到让某属性成为默认属性的功能。看来这项功能又是VB的一项“语法甜头”。但是，VB或C#的编译器对别人生成的类的默认属性应该只能通过<strong>DefaultMemberAttribute</strong>来判断，所以我将一个VB类只用<strong>DefaultMemberAttribute</strong>指定一个默认方法，不使用Default，然后将它编译以后给C#用，果然，C#将它识别为一个索引器（indexer）！</p>\n<p>既然说到了C#的索引器，我们就顺便来研究一下VB和C#属性方面的不同。刚才的实验结果是VB的默认属性在C#中就是索引器。但是VB仍然可以用属性的语法来访问默认属性，而C#只能用数组的语法访问索引器。更特别的是，VB可以创建不是默认属性，但是带有参数的属性，如上面例子里的P1，而C#则不支持带参数的属性，如果将VB编写的，含有带参数属性的类给C#用，C#会提示“属性不受该语言支持，请用get_XXX和set_XXX的语法访问”。也就是说，带参数的属性是CLR的一项功能，但不符合CLS（通用语言规范），因此就会出现跨语言的障碍。这也更加深了我们对CLS的认识——如果你希望让你的代码跨语言工作，请一定要注意符合CLS。</p>\n<h3 id=\"可选参数和按名传递\"><a href=\"#可选参数和按名传递\" class=\"headerlink\" title=\"可选参数和按名传递\"></a>可选参数和按名传递</h3><p>VB从4.0开始支持“可选参数”这一特性。就是说，函数或子程序的参数有些是可选的，调用的时候可以不输入。其实VB从1.0开始就有一些函数带有可选参数，只不过到了4.0才让用户自己开发这样的过程。在VB4里，可选参数可以不带默认值，而在VB.NET里，如果使用可选参数，则必须带有默认值。如<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> TestOptional(<span class=\"keyword\">Optional</span> i <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br></pre></td></tr></table></figure></p>\n<p>调用的时候，既可以写成TestOptional(2)，也可以写成TestOptional()，这种情况参数i自动等于1。如果过程有不止一个可选参数，则VB还提供一种简化操作的方法——按名传递参数。比如过程<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> TestOptional(<span class=\"keyword\">Optional</span> i <span class=\"keyword\">As</span> Int32 = <span class=\"number\">1</span>, <span class=\"keyword\">Optional</span> j <span class=\"keyword\">As</span> Int32 = <span class=\"number\">1</span>, <span class=\"keyword\">Optional</span> k <span class=\"keyword\">As</span> Int32 = <span class=\"number\">1</span>) </span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br></pre></td></tr></table></figure></p>\n<p>如果只想指定k，让i和j使用默认值，就可以使用按名传递，如下<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TestOptional(k := <span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure></p>\n<p>而且这种方式不受参数表顺序的限制<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TestOptional(k := <span class=\"number\">2</span>, i := <span class=\"number\">3</span>, j := <span class=\"number\">5</span>)</span><br></pre></td></tr></table></figure></p>\n<p>这些的确是相当方便的功能，C#就不支持上述两个特性。我们看看它是怎样在IL级别实现的。上述第一个方法在IL中的定义为<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> instance <span class=\"keyword\">void</span> <span class=\"title\">TestOptional</span><span class=\"params\">([opt] int32 i)</span> cil managed</span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\">.param [<span class=\"number\">1</span>] = int32(<span class=\"number\">0x00000001</span>)</span><br><span class=\"line\">.maxstack <span class=\"number\">8</span></span><br></pre></td></tr></table></figure></p>\n<p>可见，参数被加上了[opt]修饰符，而且.param指定了参数的默认值。这是只有VB能识别的内容，C#会跳过他们。在调用的时候，VB若发现参数被省略，则自动读取<em>.param</em>部分的默认值，并显式传递给过程。这一部分完全由编译器处理，而且没有任何性能损失，和手工传递所有参数是完全一样的。至于按名传递，VB会自动调整参数的顺序，其结果与传统方式的传递也没有任何的不同。这说明我们可以放心地使用这项便利。而且带有可选参数的过程拿到C#中，顶多变成不可选参数，也不会造成什么其他的麻烦。 </p>\n<p>PS.很多COM组件都使用了默认参数，而且有些过程的参数列表非常长，在VB里可以轻松地处理它们，而在C#中经常让开发者传参数传到吐血。 </p>\n<h3 id=\"On-Error语句和When语句\"><a href=\"#On-Error语句和When语句\" class=\"headerlink\" title=\"On Error语句和When语句\"></a>On Error语句和When语句</h3><p>本次讨论的是异常处理语句。VB.NET推荐使用<strong>Try…End Try</strong>块来进行结构化的异常处理，但是为了确保兼容性，它也从以前版本的BASIC中借鉴了On Error语句。其实On Error并不能算是VB的优点，因为使用它会破坏程序的结构，让带有异常处理的程序难以看懂和调试。但是我一直很惊叹于VB的工程师是怎样实现它的，因为On Error可以让异常的跳转变得很灵活，不像Try那样受到限制。首先看看Try是怎样实现的：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> F1() <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\">   <span class=\"keyword\">Try</span></span><br><span class=\"line\">      <span class=\"keyword\">Dim</span> n <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">2</span> \\ n</span><br><span class=\"line\">   <span class=\"keyword\">Catch</span> ex <span class=\"keyword\">As</span> Exception</span><br><span class=\"line\">      MsgBox(ex.Message)</span><br><span class=\"line\">   <span class=\"keyword\">End</span> <span class=\"keyword\">Try</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure></p>\n<p>这是最简单的异常处理程序，通过Reflector反汇编（如果用ILDasm，不要选择“展开try-catch”），可以发现整个过程被翻译成19条指令。留意这一句：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.<span class=\"keyword\">try</span> L_0000 <span class=\"keyword\">to</span> L_0006 <span class=\"keyword\">catch</span> Exception L_0006 <span class=\"keyword\">to</span> L_0022</span><br></pre></td></tr></table></figure></p>\n<p>这就是典型的try块，在catch处直接指定要捕获的异常，然后指定catch区的位置，非常清晰。还要留意这两句：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">L_0007: <span class=\"keyword\">call</span> ProjectData.SetProjectError</span><br><span class=\"line\">L_001b: <span class=\"keyword\">call</span> ProjectData.ClearProjectError</span><br></pre></td></tr></table></figure></p>\n<p>可以看出，这两句是在catch块的开头和末尾。深入这两个过程我发现它是在为Err对象记录异常。看来使用Err也是语法甜头，性能苦头，凭空添加了这两句（幸好都不太复杂）。</p>\n<p>接下来我编写了一个与此功能类似的函数，用的是On语句处理异常：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> F2() <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\">   <span class=\"keyword\">On</span> <span class=\"keyword\">Error</span> <span class=\"keyword\">GoTo</span> CATCHBLOCK</span><br><span class=\"line\">   <span class=\"keyword\">Dim</span> n <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">2</span> \\ n</span><br><span class=\"line\">   <span class=\"keyword\">Exit</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\">   </span><br><span class=\"line\">CATCHBLOCK:</span><br><span class=\"line\">   MsgBox(Err.Description)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure></p>\n<p>这不比上一个过程复杂，但是反汇编以后，它的IL代码竟然有47条指令，刚才才19条啊！最主要的改变是try部分，现在它是这样：<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.<span class=\"keyword\">try</span> L_0000 to L_0022 filter L_0022 L_0036 to L_0060</span><br></pre></td></tr></table></figure></p>\n<p>注意，catch不见了，而出现了filter。我从没在C#生成的IL中见过filter。我查询了Meta Data一节的文档，filter大概能够进行一些过滤，满足一定条件才进入处理异常的块中，本例来说，L_0022指令开始就是过滤器，它是：<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">L_0022: isinst Exception</span><br><span class=\"line\">L_0027: brfalse.s L_0033</span><br><span class=\"line\">L_0029: ldloc.s V_4</span><br><span class=\"line\">L_002b: brfalse.s L_0033</span><br><span class=\"line\">L_002d: ldloc<span class=\"number\">.3</span> </span><br><span class=\"line\">L_002e: brtrue.s L_0033</span><br><span class=\"line\">L_0030: ldc.i4<span class=\"number\">.1</span> </span><br><span class=\"line\">L_0031: br.s L_0034</span><br><span class=\"line\">L_0033: ldc.i4<span class=\"number\">.0</span> </span><br><span class=\"line\">L_0034: endfilter</span><br></pre></td></tr></table></figure></p>\n<p>endfilter就是异常处理部分代码的开始。而L0030之前的代码是过滤器的判断部分，<strong>V_4</strong>和<strong>V_3</strong>是VB自己加入保存错误代码的变量。在整个反汇编中，我发现设计成处理异常部分的代码在IL里其实也是在try块中，也就是说程序的结构已经不是规整的<strong>try…catch</strong>块，产生异常的语句和处理异常的语句在一起，而真正处理异常的指令是一大堆繁冗拖沓的跳转语句。</p>\n<p>下面看看我编写的第三个例子：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> F3() <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\">   <span class=\"keyword\">On</span> <span class=\"keyword\">Error</span> <span class=\"keyword\">Resume</span> <span class=\"keyword\">Next</span></span><br><span class=\"line\">   <span class=\"keyword\">Dim</span> n <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">2</span> \\ n</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure></p>\n<p>这个值有2行的过程动用了VB强大的语法杀手——<strong>On Error Resume</strong> Next，它将忽略所有异常，让代码紧接产生异常的语句继续执行下去，猜猜这个功能产生了多少IL指令？答案是<strong>50</strong>条！比普通的<strong>On Error</strong>还要长。其实现我就不多说了，和前面的On语句差不多。不过50这个数字似乎提醒了大家，不要在程序里偷懒使用On Error处理异常，这样产生的代价是不可接受的。</p>\n<p>最后一个例子是VB.NET的When语句，它可以实现对Catch部分的过滤：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> F1() <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\">   <span class=\"keyword\">Dim</span> n <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">0</span></span><br><span class=\"line\">   <span class=\"keyword\">Try</span></span><br><span class=\"line\">      <span class=\"keyword\">Dim</span> m <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">2</span> \\ n</span><br><span class=\"line\">   <span class=\"keyword\">Catch</span> ex <span class=\"keyword\">As</span> Exception <span class=\"keyword\">When</span> n = <span class=\"number\">0</span></span><br><span class=\"line\">      MsgBox(ex.Message)</span><br><span class=\"line\">   <span class=\"keyword\">End</span> <span class=\"keyword\">Try</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure></p>\n<p>里面的When语句进行了对变量n的判断，仅当<strong>n = 0</strong>的时候才进入处理部分。</p>\n<p>听到“过滤”两个字，我们已经猜出，它是用try…filter来实现的。没错。这里的filter主要是进行ex是否是Exception型，n是否等于零等，当过滤成功，就会转移到异常处理段进行处理。这次VB生成的代码要比On Error语句规则得多，结构相当清晰。</p>\n<p>本次我们还借助On Error语句和When语句了解到try filter结构，它是C#不能生成的，因此，我发现它不能被常见的反编译器反编译（因为反编译器的编写者只知道C#，呵呵）。而且用了On Error后程序结构变得异常混乱，这在产生负面作用的时候，是不是能够变相起到保护我们代码的作用呢？</p>\n<p>（九）实例访问共享成员</p>\n<p>大家都知道静态成员在VB中叫做共享成员，虽然刚接受起来有点别扭，但“共享成员”的确是名副其实的：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> Class1</span><br><span class=\"line\">   <span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> i <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\">   <span class=\"comment\">' Other none-shared members</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure></p>\n<p>不但像在C#中那样，可以用Class1.i访问共享成员i，还可以用实例变量来访问:<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> c1 <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> Class1</span><br><span class=\"line\">c1.i = <span class=\"number\">100</span></span><br></pre></td></tr></table></figure></p>\n<p>就像i是c1的成员一样！当然只有一个i，任何实例去修改i的值都将导致所有i的值改变（因为其实只有一个）。甚至Me和MyClass也可以访问共享成员。<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Me</span>.i = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"keyword\">MyClass</span>.i = <span class=\"number\">100</span></span><br></pre></td></tr></table></figure></p>\n<p>这在C#中是不可能做到的，一个纯正的C#程序员看到这些代码一定会觉得匪夷所思。为了揭示它的工作原理，我们可以做下列实验：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> c1 <span class=\"keyword\">As</span> Class1</span><br><span class=\"line\">c1.i = <span class=\"number\">100</span></span><br></pre></td></tr></table></figure></p>\n<p>注意，这里的c1为Nothing!，即使是Nothing的变量也可以访问共享成员，而且不会出错。接下来我们实验更极端的情况：<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> o <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span> = <span class=\"keyword\">New</span> Class1</span><br><span class=\"line\">o.i = <span class=\"number\">100</span></span><br></pre></td></tr></table></figure></p>\n<p>结果——失败，不能通过后期绑定访问共享成员。现在结果已经很明显，只有在VB明确了解对象类型的情况下，才能使用实例访问共享成员，VB会自动判断类型，然后将所有对共享成员访问的语句改写成<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Class1.i = <span class=\"number\">100</span></span><br></pre></td></tr></table></figure></p>\n<p>这样的语法。Delphi也支持这一有趣的特征，而且李维在《Inside VCL》中将此说成Delphi.NET相对于.NET的扩展之一。</p>\n<blockquote>\n<p>“结果——失败，不能通过后期绑定访问共享成员”</p>\n</blockquote>\n<p>那只是编辑器不允许而已，语法结构上并没有错！将Option Strict 设为 off 就不会有错误提示。正在从无知迈向菜鸟…</p>"},{"title":"Zplay Music","date":"2016-06-18T16:00:00.000Z","_content":"\nZplay-Music based on libzplay(http://libzplay.sourceforge.net/) kernel\n![](https://raw.githubusercontent.com/xieguigang/Zplay-Music/master/manual/Zplay-Music.png)\nhttps://github.com/xieguigang/Zplay-Music\n\n<!--more-->\n\n使用Windows 10的任务栏的高级特性只需要导入命名空间``Microsoft.Windows.Taskbar``就可以轻松使用：\n\n```vbnet\nImports Microsoft.Windows.Taskbar\n\nPublic Class cloudMusic\n\n    Dim WithEvents buttonPrevious As ThumbnailToolBarButton\n    Dim WithEvents buttonNext As ThumbnailToolBarButton\n    Dim WithEvents buttonPause As ThumbnailToolBarButton\n\n    Private Sub cloudMusic_Load(sender As Object, e As EventArgs) Handles Me.Load\n        Size = New Size(310, 431)\n    End Sub\n\n    Private Sub cloudMusic_Shown(sender As Object, e As EventArgs) Handles Me.Shown\n        buttonPrevious = New ThumbnailToolBarButton(My.Resources.start, \"Previous\")\n        buttonNext = New ThumbnailToolBarButton(My.Resources._end, \"Next\")\n        buttonPause = New ThumbnailToolBarButton(My.Resources.pause, \"play/pause\")\n\n        TaskbarManager.Instance.ThumbnailToolBars.AddButtons(\n            Handle,\n            buttonPrevious,\n            buttonPause,\n            buttonNext)\n        Call cloudMusic_SizeChanged(Nothing, Nothing)\n    End Sub\n\n    Private Sub cloudMusic_SizeChanged(sender As Object, e As EventArgs) Handles Me.SizeChanged\n        Dim sz As New Size(90, 90)\n        TaskbarManager.Instance.TabbedThumbnail.SetThumbnailClip(\n            Handle,\n            New Rectangle(New Point(), sz))\n    End Sub\nEnd Class\n```\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/c/cloudMusic.png)","source":"_posts/Zplay-Music.md","raw":"---\ntitle: Zplay Music\ntags: [libzplay, vb.net, 前端设计, music, works]\ndate: 2016-06-19\n---\n\nZplay-Music based on libzplay(http://libzplay.sourceforge.net/) kernel\n![](https://raw.githubusercontent.com/xieguigang/Zplay-Music/master/manual/Zplay-Music.png)\nhttps://github.com/xieguigang/Zplay-Music\n\n<!--more-->\n\n使用Windows 10的任务栏的高级特性只需要导入命名空间``Microsoft.Windows.Taskbar``就可以轻松使用：\n\n```vbnet\nImports Microsoft.Windows.Taskbar\n\nPublic Class cloudMusic\n\n    Dim WithEvents buttonPrevious As ThumbnailToolBarButton\n    Dim WithEvents buttonNext As ThumbnailToolBarButton\n    Dim WithEvents buttonPause As ThumbnailToolBarButton\n\n    Private Sub cloudMusic_Load(sender As Object, e As EventArgs) Handles Me.Load\n        Size = New Size(310, 431)\n    End Sub\n\n    Private Sub cloudMusic_Shown(sender As Object, e As EventArgs) Handles Me.Shown\n        buttonPrevious = New ThumbnailToolBarButton(My.Resources.start, \"Previous\")\n        buttonNext = New ThumbnailToolBarButton(My.Resources._end, \"Next\")\n        buttonPause = New ThumbnailToolBarButton(My.Resources.pause, \"play/pause\")\n\n        TaskbarManager.Instance.ThumbnailToolBars.AddButtons(\n            Handle,\n            buttonPrevious,\n            buttonPause,\n            buttonNext)\n        Call cloudMusic_SizeChanged(Nothing, Nothing)\n    End Sub\n\n    Private Sub cloudMusic_SizeChanged(sender As Object, e As EventArgs) Handles Me.SizeChanged\n        Dim sz As New Size(90, 90)\n        TaskbarManager.Instance.TabbedThumbnail.SetThumbnailClip(\n            Handle,\n            New Rectangle(New Point(), sz))\n    End Sub\nEnd Class\n```\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/c/cloudMusic.png)","slug":"Zplay-Music","published":1,"updated":"2016-06-21T12:53:00.419Z","_id":"cipnbu3d700088gv4hp9ms8c0","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Zplay-Music based on libzplay(<a href=\"http://libzplay.sourceforge.net/\" target=\"_blank\" rel=\"external\">http://libzplay.sourceforge.net/</a>) kernel<br><img src=\"https://raw.githubusercontent.com/xieguigang/Zplay-Music/master/manual/Zplay-Music.png\" alt=\"\"><br><a href=\"https://github.com/xieguigang/Zplay-Music\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/Zplay-Music</a></p>\n<a id=\"more\"></a>\n<p>使用Windows 10的任务栏的高级特性只需要导入命名空间<code>Microsoft.Windows.Taskbar</code>就可以轻松使用：</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Imports</span> Microsoft.Windows.Taskbar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> cloudMusic</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> <span class=\"keyword\">WithEvents</span> buttonPrevious <span class=\"keyword\">As</span> ThumbnailToolBarButton</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> <span class=\"keyword\">WithEvents</span> buttonNext <span class=\"keyword\">As</span> ThumbnailToolBarButton</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> <span class=\"keyword\">WithEvents</span> buttonPause <span class=\"keyword\">As</span> ThumbnailToolBarButton</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> cloudMusic_Load(sender <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span>, e <span class=\"keyword\">As</span> EventArgs) <span class=\"keyword\">Handles</span> <span class=\"keyword\">Me</span>.Load</span><br><span class=\"line\">        Size = <span class=\"keyword\">New</span> Size(<span class=\"number\">310</span>, <span class=\"number\">431</span>)</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> cloudMusic_Shown(sender <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span>, e <span class=\"keyword\">As</span> EventArgs) <span class=\"keyword\">Handles</span> <span class=\"keyword\">Me</span>.Shown</span><br><span class=\"line\">        buttonPrevious = <span class=\"keyword\">New</span> ThumbnailToolBarButton(My.Resources.start, <span class=\"string\">\"Previous\"</span>)</span><br><span class=\"line\">        buttonNext = <span class=\"keyword\">New</span> ThumbnailToolBarButton(My.Resources._end, <span class=\"string\">\"Next\"</span>)</span><br><span class=\"line\">        buttonPause = <span class=\"keyword\">New</span> ThumbnailToolBarButton(My.Resources.pause, <span class=\"string\">\"play/pause\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        TaskbarManager.Instance.ThumbnailToolBars.AddButtons(</span><br><span class=\"line\">            Handle,</span><br><span class=\"line\">            buttonPrevious,</span><br><span class=\"line\">            buttonPause,</span><br><span class=\"line\">            buttonNext)</span><br><span class=\"line\">        <span class=\"keyword\">Call</span> cloudMusic_SizeChanged(<span class=\"literal\">Nothing</span>, <span class=\"literal\">Nothing</span>)</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> cloudMusic_SizeChanged(sender <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span>, e <span class=\"keyword\">As</span> EventArgs) <span class=\"keyword\">Handles</span> <span class=\"keyword\">Me</span>.SizeChanged</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> sz <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> Size(<span class=\"number\">90</span>, <span class=\"number\">90</span>)</span><br><span class=\"line\">        TaskbarManager.Instance.TabbedThumbnail.SetThumbnailClip(</span><br><span class=\"line\">            Handle,</span><br><span class=\"line\">            <span class=\"keyword\">New</span> Rectangle(<span class=\"keyword\">New</span> Point(), sz))</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/c/cloudMusic.png\" alt=\"\"></p>\n","excerpt":"<p>Zplay-Music based on libzplay(<a href=\"http://libzplay.sourceforge.net/\">http://libzplay.sourceforge.net/</a>) kernel<br><img src=\"https://raw.githubusercontent.com/xieguigang/Zplay-Music/master/manual/Zplay-Music.png\" alt=\"\"><br><a href=\"https://github.com/xieguigang/Zplay-Music\">https://github.com/xieguigang/Zplay-Music</a></p>","more":"<p>使用Windows 10的任务栏的高级特性只需要导入命名空间<code>Microsoft.Windows.Taskbar</code>就可以轻松使用：</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Imports</span> Microsoft.Windows.Taskbar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> cloudMusic</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> <span class=\"keyword\">WithEvents</span> buttonPrevious <span class=\"keyword\">As</span> ThumbnailToolBarButton</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> <span class=\"keyword\">WithEvents</span> buttonNext <span class=\"keyword\">As</span> ThumbnailToolBarButton</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> <span class=\"keyword\">WithEvents</span> buttonPause <span class=\"keyword\">As</span> ThumbnailToolBarButton</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> cloudMusic_Load(sender <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span>, e <span class=\"keyword\">As</span> EventArgs) <span class=\"keyword\">Handles</span> <span class=\"keyword\">Me</span>.Load</span><br><span class=\"line\">        Size = <span class=\"keyword\">New</span> Size(<span class=\"number\">310</span>, <span class=\"number\">431</span>)</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> cloudMusic_Shown(sender <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span>, e <span class=\"keyword\">As</span> EventArgs) <span class=\"keyword\">Handles</span> <span class=\"keyword\">Me</span>.Shown</span><br><span class=\"line\">        buttonPrevious = <span class=\"keyword\">New</span> ThumbnailToolBarButton(My.Resources.start, <span class=\"string\">\"Previous\"</span>)</span><br><span class=\"line\">        buttonNext = <span class=\"keyword\">New</span> ThumbnailToolBarButton(My.Resources._end, <span class=\"string\">\"Next\"</span>)</span><br><span class=\"line\">        buttonPause = <span class=\"keyword\">New</span> ThumbnailToolBarButton(My.Resources.pause, <span class=\"string\">\"play/pause\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        TaskbarManager.Instance.ThumbnailToolBars.AddButtons(</span><br><span class=\"line\">            Handle,</span><br><span class=\"line\">            buttonPrevious,</span><br><span class=\"line\">            buttonPause,</span><br><span class=\"line\">            buttonNext)</span><br><span class=\"line\">        <span class=\"keyword\">Call</span> cloudMusic_SizeChanged(<span class=\"literal\">Nothing</span>, <span class=\"literal\">Nothing</span>)</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> cloudMusic_SizeChanged(sender <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span>, e <span class=\"keyword\">As</span> EventArgs) <span class=\"keyword\">Handles</span> <span class=\"keyword\">Me</span>.SizeChanged</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> sz <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> Size(<span class=\"number\">90</span>, <span class=\"number\">90</span>)</span><br><span class=\"line\">        TaskbarManager.Instance.TabbedThumbnail.SetThumbnailClip(</span><br><span class=\"line\">            Handle,</span><br><span class=\"line\">            <span class=\"keyword\">New</span> Rectangle(<span class=\"keyword\">New</span> Point(), sz))</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/c/cloudMusic.png\" alt=\"\"></p>"},{"title":"The Action Interceptor Pattern","date":"2016-06-08T16:00:00.000Z","source":"_posts/action_interceptor_pattern.md","_content":"\n## Introduction\n\nIn Interceptor in the Wild by João Matos Silva has presented how to use an IoC framework, NInject, to inject new behaviors into existing methods without hacking into the method implementations. In this article, we will see an old-school yet beneficial way to reach the same goal, but without messing around with IoC frameworks.\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/Class.png)\n\n<!--more-->\n\n## Background\n\n>**Notice:**\nThe article Interceptor in the Wild by João Matos Silva was very well written and pleased to follow. This article offers the alternative to it and reuses examples in it. I suggest you read it before going on with this alternative.\n\nIn Silva's article, the good sides of IoC frameworks were demonstrated. However, there are pros and cons in IoC frameworks in practical use. Please correct me if any of the following listed is wrong.\n\n1. **Abstraction of object creation**\n    + **Pros**: Dynamic object factory can be achieved at runtime.\n    + **Cons**:\n        a. It hides the constructor of the types, which may be difficult for programmers to follow when the injection chains become complicated. \n\t    \"What instance is resolved by the IoC?\" is one of the most common issue programmers will usually encounter.\n        b. It requires some efforts when we try to instantiate objects, if we are trying to call:\n        [**b1**] _Constructors with parameters: relative discussions here and there. And this can usually causes problems when the programmers are refactoring the constructor, \n\t\twithout knowing that it is somewhere referenced by the IoC module indirectly._\n        [**b2**] _Private or internal constructors: relative discussion here and there._\n        [**b3**] _Constructors which could throw exceptions, and we have to work harder to address them._\n        c. **Performance penalty**.\n2. **Runtime parameterization**. It is not so easy to alter the parameter of interceptors in IoC. And again, performance penalty here is unavoidable.\n3. **Partially overlapped interception**: An IoC binder affects all methods bounded to the type via the given interface. Given that we have a type with three methods: M1, M2 and M3, and we are going to use all of them in the code. We want to bind behavior B1 to M1, B1 and B2 to M2, but no behavior to M3. Afterwards, we are going to call the bounded M1, bounded M2, and the unbounded M3. You need to write a lot to achieve this. It is not so easy to implement, understand or debug with IoC frameworks at all.\n4. IoC binders only affect instance methods, not static methods, unless you wrap them with instance classes.\n5. **Complexity**. IoC requires the programmer to program new classes or interfaces for behavioral interceptors, thus more types have to be added to the project.\n\n## An Alternative to IoC Injections\nIf injecting functionalities to methods is our goal, and the above issues in IoC frameworks are your headache, the Action Interceptor Pattern is your way to go. The following is an example of an Action Interceptor. It can be as simple as the following five lines:\n\n```vbnet\n<Extension>\nPublic Function WaitAMinute(Of TArg, TResult)(func As Func(Of TArg, TResult)) As Func(Of TArg, TResult)\n    Return Function(arg)\n               Call Thread.Sleep(TimeSpan.FromMinutes(1))\n               Return func(arg)\n           End Function\nEnd Function\n```\n\nYou may ask: What? An extension method of Func?\n\nYep! Wrapping a function with another function, and the job will be done. Just a single method will save our days. Not yet convinced? Please read on.\n\n## The Usage of Action Interceptors\nI will use the NativeClient example in Interceptor in the Wild to demonstrate how Action Interceptors can be an alternative to IoC injections.\n\n### Decreasing Fault Rate / Increasing Success Rate\n\nIn the Silva's article Interceptor in the Wild, the NativeClient very well shows us a service which can be broken at any time, and the RetryInterceptor remedies this by retrying when something goes wrong. The same pattern can be implemented with Action Intercetor.\n\nTo demonstrate the result. Let's take a look back to the primitive client code:\n\n```vbnet\nConst TimesToInvoke As Integer = 1000\n\nPublic Sub Main(args As String())\n    Dim counter = New StatsCounter()\n    Dim client = New NaiveClient(counter)\n    \n    counter.Stopwatch.Start()\n    \n    For i As var = 0 To TimesToInvoke - 1\n        Try\n            client.GetMyDate(DateTime.Today.AddDays(i Mod 30))\n            counter.TotalSuccess += 1\n        Catch ex As Exception\n            counter.TotalError += 1\n        End Try\n    Next\n\t\n    counter.Stopwatch.[Stop]()\n    counter.PrintStats()\n    Console.WriteLine(\"Press any key to exit\")\n    Console.ReadKey()\nEnd Sub\n```\n\nIn the above code, you don't need to care about how GetMyDate was implemented, since we will not touch it and we will just change the client side code which calls that function. Please just keep in mind that it was a broken function and it had a probability of 0.3 to throw exceptions.\n\nThe result of execution was, at no doubt, very bad. It took a long time to run and execution fail rates were as high as 325/1000. Here was a possible output.\n\n```json\nExecution Time: 36.0658004 seconds\nTotal Executions: 1000\nExecution Sucess: 675\nTotal Sucess: 675\nExecution Fail: 325\nTotal Fail: 325\n```\n\nNow, we will introduce a new RetryIfFailed action interceptor to automatically retry the action after failures, and we can easily configure how many times we want to retry at run time. by assigning value to the maxRetry parameter.\n\n```vbnet\n    <Extension>\n    Public Function RetryIfFailed(Of TArg, TResult)(func As Func(Of TArg, TResult), maxRetry As Integer) As Func(Of TArg, TResult)\n        Return _\n            Function(arg)\n                Dim t As New Pointer(Scan0)\n\t\t\t\t\n                Do\n                    Try\n                        Return func(arg)\n                    Catch generatedExceptionName As Exception\n                        If ++t > maxRetry Then\n                            Throw\n                        End If\n                    End Try\n                Loop While True\n            End Function\n    End Function\n```\n\nThen, we apply it to the calling procedure.\n\n```vbnet\nDim counter = New StatsCounter()\nDim client = New NaiveClient(counter)\n' get the method we are going to retry with\nDim getMyDate As Func(Of DateTime, String) = AddressOf client.GetMyDate\n\nCall counter.Stopwatch.Start()\n' intercept it with RetryIfFailed interceptor, which retries once at most\ngetMyDate = getMyDate.RetryIfFailed(1)\n\nFor i As Integer = 0 To TimesToInvoke\n    Try \n        ' call the intercepted method instead of client.GetMyDate\n        getMyDate(DateTime.Today.AddDays(i Mod 30))\n        counter.TotalSuccess++\n    Catch ex As Exception \n        counter.TotalError+=1\n    End Try\nNext\n\nCall counter.Stopwatch.Stop()\n```\n\nThe above program gave a better result. The execution fault rate dropped from the original 325/1000 to 91/1000, simply because we have retried once more.\n\n```\nExecution Time: 59.6016893 seconds\nTotal Executions: 1302\nExecution Sucess: 909\nTotal Sucess: 909\nExecution Fail: 393\nTotal Fail: 91\n```\n\nIf you are not happy with the result, you can tweak the maxRetry parameter in the interceptor to a larger value, for instance 3. Here was the result of \"getMyDate.RetryIfFailed(3)\" and the fault rate was reduced to around 8/1000.\n\n```\nExecution Time: 65.8972493 seconds\nTotal Executions: 1421\nExecution Sucess: 992\nTotal Sucess: 992\nExecution Fail: 429\nTotal Fail: 8\n```\n\n### Caching the Result\n\nIn Interceptor in the Wild, Silva also demonstrated caching can be injected to methods via a PoorMansCacheProvider and a CacheInterceptor. The same result can be achieved with the Action Interceptor pattern.\n\n```php\n<Extension>\nPublic Function GetOrCache(Of TArg, TResult, TCache As {Class, IDictionary(Of TArg, TResult)})(func As Func(Of TArg, TResult), cache As TCache) As Func(Of TArg, TResult)\n    Return _\n        Function(arg)\n            Dim value As TResult\n\n            If cache.TryGetValue(arg, value) Then\n                Return value\n            End If\n\n            value = func(arg)\n            cache.Add(arg, value)\n\n            Return value\n        End Function\nEnd Function\n```\n\nWe can easily apply it to the calling procedure, after the RetryIfFailed interceptor.\n\n```vbnet\nDim counter = New StatsCounter()\nDim client = New NaiveClient(counter)\nDim cache = New Dictionary(Of DateTime, String)()\nDim getMyDate As Func(Of DateTime, String) = AddressOf client.GetMyDate\n\ncounter.Stopwatch.Start()\ngetMyDate = getMyDate.RetryIfFailed(3).GetOrCache(cache)\n\nFor i As Integer = 0 To TimesToInvoke - 1\n    Try\n        getMyDate(DateTime.Today.AddDays(i Mod 30))\n        counter.TotalSuccess += 1\n    Catch ex As Exception\n        counter.TotalError += 1\n    End Try\nNext\n\ncounter.Stopwatch.[Stop]()\ncounter.PrintStats()\n\nConsole.WriteLine(\"Benchmarks: \")\nBenchmarkWithActionInterceptor()\nBenchmarkWithNInjectInterceptor()\nConsole.WriteLine(\"Press any key to exit\")\nConsole.ReadKey()\n```\n\n>Note:\nAlthough **GetOrCache** is appended after **RetryIfFailed**, since it is actually wrapping around the original function, the cache provided to GetOrCache will be firstly accessed before RetryIfFailed is call.\n>\nIn short, the later attached methods will be executed earlier.\n\n\nThe result may look like the following, similar to the final result in Interceptor in the Wild. Since cache was in the play, the execution time was dramatically shortened and the total execution fault rate was dramatically reduced to around zero.\n\n```\nExecution Time: 0.981474 seconds\nTotal Executions: 36\nExecution Sucess: 30\nTotal Sucess: 1000\nExecution Fail: 6\nTotal Fail: 0\n```\n\nUntil now, what we have done is simply adding two extension methods and changing 4 lines of code in the calling procedure.\n\n1. No need to modify the implemetation of the underlying function\n2. No need to NuGet a single bit from the Internet\n3. No need to learn a single new framework\n4. No need to struggle with object instantiation\n5. No need to think about how to alter parameters in interceptors\n\nJobs got done and our days were saved.\n\n## Points of Interest - Performance\nOn performance, I enclosed a simple benchmark which compares the speed of Action Inteceptor and NInject (an IoC framework) Interceptor in the code.\n\nThe code will call a NopClient which actually does nothing to compare the time spent on different types of interceptions.\n\n```vbnet\nPublic Class NopClient : Implements INaiveClient\n\n    Dim _counter As StatsCounter\n\n    Public Sub New(counter As StatsCounter)\n        _counter = counter\n    End Sub\n\n    Public Function GetMyDate([date] As DateTime) As String Implements INaiveClient.GetMyDate\n        Return Nothing\n    End Function\nEnd Class\n```\n\nThe setup code of NInject interceptor looks like the following:\n\n```vbnet\nPublic Class [Module] : Inherits NinjectModule\n    Public Overrides Sub Load()\n        Kernel.Bind(Of StatsCounter)().ToConstant(New StatsCounter())\n        Dim binding = Kernel.Bind(Of INaiveClient)().[To](Of NopClient)()\n        binding.Intercept().[With](Of RetryInterceptor)()\n    End Sub\nEnd Class\n```\n\nDuring practical development, we typically create a client object which is not reusable and call its methods. For instance, we create WebRequest objects to load a web page or DbConnection objects to manage the database. Hence, in performance benchmarks, we must take object initialization into account.\n\nHere are what we are going to time during the benchmark.\n\nThe speed of Action Interceptor.\n\n```vbnet\nFor i As Integer = 0 To TimesToInvoke - 1\n    Dim nopClient = New NopClient(counter)\n    Dim getMyDate As Func(Of DateTime, String) = AddressOf nopClient.GetMyDate\n\n    getMyDate = getMyDate.RetryIfFailed(3)\n    getMyDate(DateTime.MinValue)\nNext\n```\n\nAnd the speed of a NInject interceptor.\n\n```vbnet\n        For i As Integer = 0 To TimesToInvoke - 1\n            Dim client = kernel.[Get](Of INaiveClient)()\n            client.GetMyDate(DateTime.MinValue)\n        Next\n```\n\nAnd here was a result taken from my computer. Action Interceptor was about hundreds of times faster than the NInject Interceptor.\n\n```il\nAction interceptor:\nExecution Time: 0.1758 milliseconds\n\nNInject interceptor:\nExecution Time: 144.2733 milliseconds\n```\n\n## Conclusion\nThe **Action Interceptor** pattern has the following features which are the same as IoC frameworks:\n\n\t1. It does inject new behaviors to methods we want to change as IoC does (introduced in the Interceptor in the Wild): \n\t   increasing execution success rates, providing cachability and efficiency, and more.\n\t2. The underlying basic implementation remains unchanged. \n\t   It does not require you to change a single character in the injected method.\n\nAnd it has the following advantages over IoC frameworks:\n\n1. The construction logic of types is preserved. So you can happily use the old-school new className(parameters) fashion to instantiate objects or apply any factory patterns if needed. The object creation logic therefore remains clean, simple and fully in your control.\n2. It does not force you to use the \"injected\" version all the time, you can return to use the un-injected original method any time as needed.\n3. Functionalities are clearly, selectively and freely added to existing methods.\n4. No new class or interface is required to be created manually.\n5. New behaviors can be injected to already injected methods at run time, after object initialization.\n6. It is open and fully compatible with IoC frameworks. You can take advantages of their abstraction object factory.\n7. It can be applied to static methods or private methods.\n8. Its performance is much superior than IoC frameworks.\n9. It has no external dependency. No need to reference any third party assemblies.\n10. Plain easy to learn.\n11. Plain easy to debug.\n12. Ready for being refactored.\n\nThe disadvantages are:\n\n1. It does not serve as an abstract object factory.\n2. It does not wrap properties, except that you wrap the hidden getter or setter method of a property.\n3. It does not inject behaviors to all methods in a type by default. You must manually apply it to methods, one by one.\n4. It is old-fashioned and low-tech. It does not sound COOL in front of your boss at all.\n5. It is up to your decision.\n\nIoC frameworks do give us great powers. But we have to face the tradeoffs of added code complexity and performance loss. When I saw people asking questions about IoC frameworks here and there, which were originally simple without IoC, I wondered whether they were using the right tool.\n\n> source: [wmjordan,](http://www.codeproject.com/Articles/1104555/The-Action-Interceptor-Pattern?msg=5258531#xx5258531xx) 16 Jun 2016","raw":"---\ntitle: The Action Interceptor Pattern\ntags: [CodeProject,note,转载搬运,architecture,vb.net, 架构]\ndate: 2016-06-09\nsource: http://www.codeproject.com/Articles/1104555/The-Action-Interceptor-Pattern?msg=5258531#xx5258531xx\n---\n\n## Introduction\n\nIn Interceptor in the Wild by João Matos Silva has presented how to use an IoC framework, NInject, to inject new behaviors into existing methods without hacking into the method implementations. In this article, we will see an old-school yet beneficial way to reach the same goal, but without messing around with IoC frameworks.\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/Class.png)\n\n<!--more-->\n\n## Background\n\n>**Notice:**\nThe article Interceptor in the Wild by João Matos Silva was very well written and pleased to follow. This article offers the alternative to it and reuses examples in it. I suggest you read it before going on with this alternative.\n\nIn Silva's article, the good sides of IoC frameworks were demonstrated. However, there are pros and cons in IoC frameworks in practical use. Please correct me if any of the following listed is wrong.\n\n1. **Abstraction of object creation**\n    + **Pros**: Dynamic object factory can be achieved at runtime.\n    + **Cons**:\n        a. It hides the constructor of the types, which may be difficult for programmers to follow when the injection chains become complicated. \n\t    \"What instance is resolved by the IoC?\" is one of the most common issue programmers will usually encounter.\n        b. It requires some efforts when we try to instantiate objects, if we are trying to call:\n        [**b1**] _Constructors with parameters: relative discussions here and there. And this can usually causes problems when the programmers are refactoring the constructor, \n\t\twithout knowing that it is somewhere referenced by the IoC module indirectly._\n        [**b2**] _Private or internal constructors: relative discussion here and there._\n        [**b3**] _Constructors which could throw exceptions, and we have to work harder to address them._\n        c. **Performance penalty**.\n2. **Runtime parameterization**. It is not so easy to alter the parameter of interceptors in IoC. And again, performance penalty here is unavoidable.\n3. **Partially overlapped interception**: An IoC binder affects all methods bounded to the type via the given interface. Given that we have a type with three methods: M1, M2 and M3, and we are going to use all of them in the code. We want to bind behavior B1 to M1, B1 and B2 to M2, but no behavior to M3. Afterwards, we are going to call the bounded M1, bounded M2, and the unbounded M3. You need to write a lot to achieve this. It is not so easy to implement, understand or debug with IoC frameworks at all.\n4. IoC binders only affect instance methods, not static methods, unless you wrap them with instance classes.\n5. **Complexity**. IoC requires the programmer to program new classes or interfaces for behavioral interceptors, thus more types have to be added to the project.\n\n## An Alternative to IoC Injections\nIf injecting functionalities to methods is our goal, and the above issues in IoC frameworks are your headache, the Action Interceptor Pattern is your way to go. The following is an example of an Action Interceptor. It can be as simple as the following five lines:\n\n```vbnet\n<Extension>\nPublic Function WaitAMinute(Of TArg, TResult)(func As Func(Of TArg, TResult)) As Func(Of TArg, TResult)\n    Return Function(arg)\n               Call Thread.Sleep(TimeSpan.FromMinutes(1))\n               Return func(arg)\n           End Function\nEnd Function\n```\n\nYou may ask: What? An extension method of Func?\n\nYep! Wrapping a function with another function, and the job will be done. Just a single method will save our days. Not yet convinced? Please read on.\n\n## The Usage of Action Interceptors\nI will use the NativeClient example in Interceptor in the Wild to demonstrate how Action Interceptors can be an alternative to IoC injections.\n\n### Decreasing Fault Rate / Increasing Success Rate\n\nIn the Silva's article Interceptor in the Wild, the NativeClient very well shows us a service which can be broken at any time, and the RetryInterceptor remedies this by retrying when something goes wrong. The same pattern can be implemented with Action Intercetor.\n\nTo demonstrate the result. Let's take a look back to the primitive client code:\n\n```vbnet\nConst TimesToInvoke As Integer = 1000\n\nPublic Sub Main(args As String())\n    Dim counter = New StatsCounter()\n    Dim client = New NaiveClient(counter)\n    \n    counter.Stopwatch.Start()\n    \n    For i As var = 0 To TimesToInvoke - 1\n        Try\n            client.GetMyDate(DateTime.Today.AddDays(i Mod 30))\n            counter.TotalSuccess += 1\n        Catch ex As Exception\n            counter.TotalError += 1\n        End Try\n    Next\n\t\n    counter.Stopwatch.[Stop]()\n    counter.PrintStats()\n    Console.WriteLine(\"Press any key to exit\")\n    Console.ReadKey()\nEnd Sub\n```\n\nIn the above code, you don't need to care about how GetMyDate was implemented, since we will not touch it and we will just change the client side code which calls that function. Please just keep in mind that it was a broken function and it had a probability of 0.3 to throw exceptions.\n\nThe result of execution was, at no doubt, very bad. It took a long time to run and execution fail rates were as high as 325/1000. Here was a possible output.\n\n```json\nExecution Time: 36.0658004 seconds\nTotal Executions: 1000\nExecution Sucess: 675\nTotal Sucess: 675\nExecution Fail: 325\nTotal Fail: 325\n```\n\nNow, we will introduce a new RetryIfFailed action interceptor to automatically retry the action after failures, and we can easily configure how many times we want to retry at run time. by assigning value to the maxRetry parameter.\n\n```vbnet\n    <Extension>\n    Public Function RetryIfFailed(Of TArg, TResult)(func As Func(Of TArg, TResult), maxRetry As Integer) As Func(Of TArg, TResult)\n        Return _\n            Function(arg)\n                Dim t As New Pointer(Scan0)\n\t\t\t\t\n                Do\n                    Try\n                        Return func(arg)\n                    Catch generatedExceptionName As Exception\n                        If ++t > maxRetry Then\n                            Throw\n                        End If\n                    End Try\n                Loop While True\n            End Function\n    End Function\n```\n\nThen, we apply it to the calling procedure.\n\n```vbnet\nDim counter = New StatsCounter()\nDim client = New NaiveClient(counter)\n' get the method we are going to retry with\nDim getMyDate As Func(Of DateTime, String) = AddressOf client.GetMyDate\n\nCall counter.Stopwatch.Start()\n' intercept it with RetryIfFailed interceptor, which retries once at most\ngetMyDate = getMyDate.RetryIfFailed(1)\n\nFor i As Integer = 0 To TimesToInvoke\n    Try \n        ' call the intercepted method instead of client.GetMyDate\n        getMyDate(DateTime.Today.AddDays(i Mod 30))\n        counter.TotalSuccess++\n    Catch ex As Exception \n        counter.TotalError+=1\n    End Try\nNext\n\nCall counter.Stopwatch.Stop()\n```\n\nThe above program gave a better result. The execution fault rate dropped from the original 325/1000 to 91/1000, simply because we have retried once more.\n\n```\nExecution Time: 59.6016893 seconds\nTotal Executions: 1302\nExecution Sucess: 909\nTotal Sucess: 909\nExecution Fail: 393\nTotal Fail: 91\n```\n\nIf you are not happy with the result, you can tweak the maxRetry parameter in the interceptor to a larger value, for instance 3. Here was the result of \"getMyDate.RetryIfFailed(3)\" and the fault rate was reduced to around 8/1000.\n\n```\nExecution Time: 65.8972493 seconds\nTotal Executions: 1421\nExecution Sucess: 992\nTotal Sucess: 992\nExecution Fail: 429\nTotal Fail: 8\n```\n\n### Caching the Result\n\nIn Interceptor in the Wild, Silva also demonstrated caching can be injected to methods via a PoorMansCacheProvider and a CacheInterceptor. The same result can be achieved with the Action Interceptor pattern.\n\n```php\n<Extension>\nPublic Function GetOrCache(Of TArg, TResult, TCache As {Class, IDictionary(Of TArg, TResult)})(func As Func(Of TArg, TResult), cache As TCache) As Func(Of TArg, TResult)\n    Return _\n        Function(arg)\n            Dim value As TResult\n\n            If cache.TryGetValue(arg, value) Then\n                Return value\n            End If\n\n            value = func(arg)\n            cache.Add(arg, value)\n\n            Return value\n        End Function\nEnd Function\n```\n\nWe can easily apply it to the calling procedure, after the RetryIfFailed interceptor.\n\n```vbnet\nDim counter = New StatsCounter()\nDim client = New NaiveClient(counter)\nDim cache = New Dictionary(Of DateTime, String)()\nDim getMyDate As Func(Of DateTime, String) = AddressOf client.GetMyDate\n\ncounter.Stopwatch.Start()\ngetMyDate = getMyDate.RetryIfFailed(3).GetOrCache(cache)\n\nFor i As Integer = 0 To TimesToInvoke - 1\n    Try\n        getMyDate(DateTime.Today.AddDays(i Mod 30))\n        counter.TotalSuccess += 1\n    Catch ex As Exception\n        counter.TotalError += 1\n    End Try\nNext\n\ncounter.Stopwatch.[Stop]()\ncounter.PrintStats()\n\nConsole.WriteLine(\"Benchmarks: \")\nBenchmarkWithActionInterceptor()\nBenchmarkWithNInjectInterceptor()\nConsole.WriteLine(\"Press any key to exit\")\nConsole.ReadKey()\n```\n\n>Note:\nAlthough **GetOrCache** is appended after **RetryIfFailed**, since it is actually wrapping around the original function, the cache provided to GetOrCache will be firstly accessed before RetryIfFailed is call.\n>\nIn short, the later attached methods will be executed earlier.\n\n\nThe result may look like the following, similar to the final result in Interceptor in the Wild. Since cache was in the play, the execution time was dramatically shortened and the total execution fault rate was dramatically reduced to around zero.\n\n```\nExecution Time: 0.981474 seconds\nTotal Executions: 36\nExecution Sucess: 30\nTotal Sucess: 1000\nExecution Fail: 6\nTotal Fail: 0\n```\n\nUntil now, what we have done is simply adding two extension methods and changing 4 lines of code in the calling procedure.\n\n1. No need to modify the implemetation of the underlying function\n2. No need to NuGet a single bit from the Internet\n3. No need to learn a single new framework\n4. No need to struggle with object instantiation\n5. No need to think about how to alter parameters in interceptors\n\nJobs got done and our days were saved.\n\n## Points of Interest - Performance\nOn performance, I enclosed a simple benchmark which compares the speed of Action Inteceptor and NInject (an IoC framework) Interceptor in the code.\n\nThe code will call a NopClient which actually does nothing to compare the time spent on different types of interceptions.\n\n```vbnet\nPublic Class NopClient : Implements INaiveClient\n\n    Dim _counter As StatsCounter\n\n    Public Sub New(counter As StatsCounter)\n        _counter = counter\n    End Sub\n\n    Public Function GetMyDate([date] As DateTime) As String Implements INaiveClient.GetMyDate\n        Return Nothing\n    End Function\nEnd Class\n```\n\nThe setup code of NInject interceptor looks like the following:\n\n```vbnet\nPublic Class [Module] : Inherits NinjectModule\n    Public Overrides Sub Load()\n        Kernel.Bind(Of StatsCounter)().ToConstant(New StatsCounter())\n        Dim binding = Kernel.Bind(Of INaiveClient)().[To](Of NopClient)()\n        binding.Intercept().[With](Of RetryInterceptor)()\n    End Sub\nEnd Class\n```\n\nDuring practical development, we typically create a client object which is not reusable and call its methods. For instance, we create WebRequest objects to load a web page or DbConnection objects to manage the database. Hence, in performance benchmarks, we must take object initialization into account.\n\nHere are what we are going to time during the benchmark.\n\nThe speed of Action Interceptor.\n\n```vbnet\nFor i As Integer = 0 To TimesToInvoke - 1\n    Dim nopClient = New NopClient(counter)\n    Dim getMyDate As Func(Of DateTime, String) = AddressOf nopClient.GetMyDate\n\n    getMyDate = getMyDate.RetryIfFailed(3)\n    getMyDate(DateTime.MinValue)\nNext\n```\n\nAnd the speed of a NInject interceptor.\n\n```vbnet\n        For i As Integer = 0 To TimesToInvoke - 1\n            Dim client = kernel.[Get](Of INaiveClient)()\n            client.GetMyDate(DateTime.MinValue)\n        Next\n```\n\nAnd here was a result taken from my computer. Action Interceptor was about hundreds of times faster than the NInject Interceptor.\n\n```il\nAction interceptor:\nExecution Time: 0.1758 milliseconds\n\nNInject interceptor:\nExecution Time: 144.2733 milliseconds\n```\n\n## Conclusion\nThe **Action Interceptor** pattern has the following features which are the same as IoC frameworks:\n\n\t1. It does inject new behaviors to methods we want to change as IoC does (introduced in the Interceptor in the Wild): \n\t   increasing execution success rates, providing cachability and efficiency, and more.\n\t2. The underlying basic implementation remains unchanged. \n\t   It does not require you to change a single character in the injected method.\n\nAnd it has the following advantages over IoC frameworks:\n\n1. The construction logic of types is preserved. So you can happily use the old-school new className(parameters) fashion to instantiate objects or apply any factory patterns if needed. The object creation logic therefore remains clean, simple and fully in your control.\n2. It does not force you to use the \"injected\" version all the time, you can return to use the un-injected original method any time as needed.\n3. Functionalities are clearly, selectively and freely added to existing methods.\n4. No new class or interface is required to be created manually.\n5. New behaviors can be injected to already injected methods at run time, after object initialization.\n6. It is open and fully compatible with IoC frameworks. You can take advantages of their abstraction object factory.\n7. It can be applied to static methods or private methods.\n8. Its performance is much superior than IoC frameworks.\n9. It has no external dependency. No need to reference any third party assemblies.\n10. Plain easy to learn.\n11. Plain easy to debug.\n12. Ready for being refactored.\n\nThe disadvantages are:\n\n1. It does not serve as an abstract object factory.\n2. It does not wrap properties, except that you wrap the hidden getter or setter method of a property.\n3. It does not inject behaviors to all methods in a type by default. You must manually apply it to methods, one by one.\n4. It is old-fashioned and low-tech. It does not sound COOL in front of your boss at all.\n5. It is up to your decision.\n\nIoC frameworks do give us great powers. But we have to face the tradeoffs of added code complexity and performance loss. When I saw people asking questions about IoC frameworks here and there, which were originally simple without IoC, I wondered whether they were using the right tool.\n\n> source: [wmjordan,](http://www.codeproject.com/Articles/1104555/The-Action-Interceptor-Pattern?msg=5258531#xx5258531xx) 16 Jun 2016","slug":"action_interceptor_pattern","published":1,"updated":"2016-08-03T13:20:53.525Z","_id":"cipnbu3da00098gv43vo9i545","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h2><p>In Interceptor in the Wild by João Matos Silva has presented how to use an IoC framework, NInject, to inject new behaviors into existing methods without hacking into the method implementations. In this article, we will see an old-school yet beneficial way to reach the same goal, but without messing around with IoC frameworks.</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/Class.png\" alt=\"\"></p>\n<a id=\"more\"></a>\n<h2 id=\"Background\"><a href=\"#Background\" class=\"headerlink\" title=\"Background\"></a>Background</h2><blockquote>\n<p><strong>Notice:</strong><br>The article Interceptor in the Wild by João Matos Silva was very well written and pleased to follow. This article offers the alternative to it and reuses examples in it. I suggest you read it before going on with this alternative.</p>\n</blockquote>\n<p>In Silva’s article, the good sides of IoC frameworks were demonstrated. However, there are pros and cons in IoC frameworks in practical use. Please correct me if any of the following listed is wrong.</p>\n<ol>\n<li><strong>Abstraction of object creation</strong><ul>\n<li><strong>Pros</strong>: Dynamic object factory can be achieved at runtime.</li>\n<li><strong>Cons</strong>:<br>  a. It hides the constructor of the types, which may be difficult for programmers to follow when the injection chains become complicated.<br>  “What instance is resolved by the IoC?” is one of the most common issue programmers will usually encounter.<br>  b. It requires some efforts when we try to instantiate objects, if we are trying to call:<br>  [<strong>b1</strong>] <em>Constructors with parameters: relative discussions here and there. And this can usually causes problems when the programmers are refactoring the constructor,<br>  without knowing that it is somewhere referenced by the IoC module indirectly.</em><br>  [<strong>b2</strong>] <em>Private or internal constructors: relative discussion here and there.</em><br>  [<strong>b3</strong>] <em>Constructors which could throw exceptions, and we have to work harder to address them.</em><br>  c. <strong>Performance penalty</strong>.</li>\n</ul>\n</li>\n<li><strong>Runtime parameterization</strong>. It is not so easy to alter the parameter of interceptors in IoC. And again, performance penalty here is unavoidable.</li>\n<li><strong>Partially overlapped interception</strong>: An IoC binder affects all methods bounded to the type via the given interface. Given that we have a type with three methods: M1, M2 and M3, and we are going to use all of them in the code. We want to bind behavior B1 to M1, B1 and B2 to M2, but no behavior to M3. Afterwards, we are going to call the bounded M1, bounded M2, and the unbounded M3. You need to write a lot to achieve this. It is not so easy to implement, understand or debug with IoC frameworks at all.</li>\n<li>IoC binders only affect instance methods, not static methods, unless you wrap them with instance classes.</li>\n<li><strong>Complexity</strong>. IoC requires the programmer to program new classes or interfaces for behavioral interceptors, thus more types have to be added to the project.</li>\n</ol>\n<h2 id=\"An-Alternative-to-IoC-Injections\"><a href=\"#An-Alternative-to-IoC-Injections\" class=\"headerlink\" title=\"An Alternative to IoC Injections\"></a>An Alternative to IoC Injections</h2><p>If injecting functionalities to methods is our goal, and the above issues in IoC frameworks are your headache, the Action Interceptor Pattern is your way to go. The following is an example of an Action Interceptor. It can be as simple as the following five lines:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Extension&gt;</span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> WaitAMinute(<span class=\"keyword\">Of</span> TArg, TResult)(func <span class=\"keyword\">As</span> Func(<span class=\"keyword\">Of</span> TArg, TResult)) <span class=\"keyword\">As</span> Func(<span class=\"keyword\">Of</span> TArg, TResult)</span><br><span class=\"line\">    <span class=\"keyword\">Return</span> <span class=\"keyword\">Function</span>(arg)</span><br><span class=\"line\">               <span class=\"keyword\">Call</span> Thread.Sleep(TimeSpan.FromMinutes(<span class=\"number\">1</span>))</span><br><span class=\"line\">               <span class=\"keyword\">Return</span> func(arg)</span><br><span class=\"line\">           <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure>\n<p>You may ask: What? An extension method of Func?</p>\n<p>Yep! Wrapping a function with another function, and the job will be done. Just a single method will save our days. Not yet convinced? Please read on.</p>\n<h2 id=\"The-Usage-of-Action-Interceptors\"><a href=\"#The-Usage-of-Action-Interceptors\" class=\"headerlink\" title=\"The Usage of Action Interceptors\"></a>The Usage of Action Interceptors</h2><p>I will use the NativeClient example in Interceptor in the Wild to demonstrate how Action Interceptors can be an alternative to IoC injections.</p>\n<h3 id=\"Decreasing-Fault-Rate-Increasing-Success-Rate\"><a href=\"#Decreasing-Fault-Rate-Increasing-Success-Rate\" class=\"headerlink\" title=\"Decreasing Fault Rate / Increasing Success Rate\"></a>Decreasing Fault Rate / Increasing Success Rate</h3><p>In the Silva’s article Interceptor in the Wild, the NativeClient very well shows us a service which can be broken at any time, and the RetryInterceptor remedies this by retrying when something goes wrong. The same pattern can be implemented with Action Intercetor.</p>\n<p>To demonstrate the result. Let’s take a look back to the primitive client code:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Const</span> TimesToInvoke <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">1000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> Main(args <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>())</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> counter = <span class=\"keyword\">New</span> StatsCounter()</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> client = <span class=\"keyword\">New</span> NaiveClient(counter)</span><br><span class=\"line\">    </span><br><span class=\"line\">    counter.Stopwatch.Start()</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">For</span> i <span class=\"keyword\">As</span> var = <span class=\"number\">0</span> <span class=\"keyword\">To</span> TimesToInvoke - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">Try</span></span><br><span class=\"line\">            client.GetMyDate(DateTime.Today.AddDays(i <span class=\"keyword\">Mod</span> <span class=\"number\">30</span>))</span><br><span class=\"line\">            counter.TotalSuccess += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">Catch</span> ex <span class=\"keyword\">As</span> Exception</span><br><span class=\"line\">            counter.TotalError += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">Try</span></span><br><span class=\"line\">    <span class=\"keyword\">Next</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">    counter.Stopwatch.[<span class=\"keyword\">Stop</span>]()</span><br><span class=\"line\">    counter.PrintStats()</span><br><span class=\"line\">    Console.WriteLine(<span class=\"string\">\"Press any key to exit\"</span>)</span><br><span class=\"line\">    Console.ReadKey()</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br></pre></td></tr></table></figure>\n<p>In the above code, you don’t need to care about how GetMyDate was implemented, since we will not touch it and we will just change the client side code which calls that function. Please just keep in mind that it was a broken function and it had a probability of 0.3 to throw exceptions.</p>\n<p>The result of execution was, at no doubt, very bad. It took a long time to run and execution fail rates were as high as 325/1000. Here was a possible output.</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Execution Time: 36.0658004 seconds</span><br><span class=\"line\">Total Executions: 1000</span><br><span class=\"line\">Execution Sucess: 675</span><br><span class=\"line\">Total Sucess: 675</span><br><span class=\"line\">Execution Fail: 325</span><br><span class=\"line\">Total Fail: 325</span><br></pre></td></tr></table></figure>\n<p>Now, we will introduce a new RetryIfFailed action interceptor to automatically retry the action after failures, and we can easily configure how many times we want to retry at run time. by assigning value to the maxRetry parameter.</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Extension&gt;</span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> RetryIfFailed(<span class=\"keyword\">Of</span> TArg, TResult)(func <span class=\"keyword\">As</span> Func(<span class=\"keyword\">Of</span> TArg, TResult), maxRetry <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span>) <span class=\"keyword\">As</span> Func(<span class=\"keyword\">Of</span> TArg, TResult)</span><br><span class=\"line\">    <span class=\"keyword\">Return</span> _</span><br><span class=\"line\">        <span class=\"keyword\">Function</span>(arg)</span><br><span class=\"line\">            <span class=\"keyword\">Dim</span> t <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> Pointer(Scan0)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">Do</span></span><br><span class=\"line\">                <span class=\"keyword\">Try</span></span><br><span class=\"line\">                    <span class=\"keyword\">Return</span> func(arg)</span><br><span class=\"line\">                <span class=\"keyword\">Catch</span> generatedExceptionName <span class=\"keyword\">As</span> Exception</span><br><span class=\"line\">                    <span class=\"keyword\">If</span> ++t &gt; maxRetry <span class=\"keyword\">Then</span></span><br><span class=\"line\">                        <span class=\"keyword\">Throw</span></span><br><span class=\"line\">                    <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">                <span class=\"keyword\">End</span> <span class=\"keyword\">Try</span></span><br><span class=\"line\">            <span class=\"keyword\">Loop</span> <span class=\"keyword\">While</span> <span class=\"literal\">True</span></span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure>\n<p>Then, we apply it to the calling procedure.</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> counter = <span class=\"keyword\">New</span> StatsCounter()</span><br><span class=\"line\"><span class=\"keyword\">Dim</span> client = <span class=\"keyword\">New</span> NaiveClient(counter)</span><br><span class=\"line\"><span class=\"comment\">' get the method we are going to retry with</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> getMyDate <span class=\"keyword\">As</span> Func(<span class=\"keyword\">Of</span> DateTime, <span class=\"built_in\">String</span>) = <span class=\"keyword\">AddressOf</span> client.GetMyDate</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Call</span> counter.Stopwatch.Start()</span><br><span class=\"line\"><span class=\"comment\">' intercept it with RetryIfFailed interceptor, which retries once at most</span></span><br><span class=\"line\">getMyDate = getMyDate.RetryIfFailed(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">For</span> i <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">0</span> <span class=\"keyword\">To</span> TimesToInvoke</span><br><span class=\"line\">    <span class=\"keyword\">Try</span> </span><br><span class=\"line\">        <span class=\"comment\">' call the intercepted method instead of client.GetMyDate</span></span><br><span class=\"line\">        getMyDate(DateTime.Today.AddDays(i <span class=\"keyword\">Mod</span> <span class=\"number\">30</span>))</span><br><span class=\"line\">        counter.TotalSuccess++</span><br><span class=\"line\">    <span class=\"keyword\">Catch</span> ex <span class=\"keyword\">As</span> Exception </span><br><span class=\"line\">        counter.TotalError+=<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Try</span></span><br><span class=\"line\"><span class=\"keyword\">Next</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Call</span> counter.Stopwatch.<span class=\"keyword\">Stop</span>()</span><br></pre></td></tr></table></figure>\n<p>The above program gave a better result. The execution fault rate dropped from the original 325/1000 to 91/1000, simply because we have retried once more.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Execution Time: 59.6016893 seconds</span><br><span class=\"line\">Total Executions: 1302</span><br><span class=\"line\">Execution Sucess: 909</span><br><span class=\"line\">Total Sucess: 909</span><br><span class=\"line\">Execution Fail: 393</span><br><span class=\"line\">Total Fail: 91</span><br></pre></td></tr></table></figure>\n<p>If you are not happy with the result, you can tweak the maxRetry parameter in the interceptor to a larger value, for instance 3. Here was the result of “getMyDate.RetryIfFailed(3)” and the fault rate was reduced to around 8/1000.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Execution Time: 65.8972493 seconds</span><br><span class=\"line\">Total Executions: 1421</span><br><span class=\"line\">Execution Sucess: 992</span><br><span class=\"line\">Total Sucess: 992</span><br><span class=\"line\">Execution Fail: 429</span><br><span class=\"line\">Total Fail: 8</span><br></pre></td></tr></table></figure>\n<h3 id=\"Caching-the-Result\"><a href=\"#Caching-the-Result\" class=\"headerlink\" title=\"Caching the Result\"></a>Caching the Result</h3><p>In Interceptor in the Wild, Silva also demonstrated caching can be injected to methods via a PoorMansCacheProvider and a CacheInterceptor. The same result can be achieved with the Action Interceptor pattern.</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Extension&gt;</span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"function\"><span class=\"keyword\">Function</span> <span class=\"title\">GetOrCache</span><span class=\"params\">(Of TArg, TResult, TCache As &#123;Class, IDictionary<span class=\"params\">(Of TArg, TResult)</span>&#125;)</span><span class=\"params\">(func As Func<span class=\"params\">(Of TArg, TResult)</span>, cache As TCache)</span> <span class=\"title\">As</span> <span class=\"title\">Func</span><span class=\"params\">(Of TArg, TResult)</span></span><br><span class=\"line\">    <span class=\"title\">Return</span> <span class=\"title\">_</span></span><br><span class=\"line\">        <span class=\"title\">Function</span><span class=\"params\">(arg)</span></span><br><span class=\"line\">            <span class=\"title\">Dim</span> <span class=\"title\">value</span> <span class=\"title\">As</span> <span class=\"title\">TResult</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"title\">If</span> <span class=\"title\">cache</span>.<span class=\"title\">TryGetValue</span><span class=\"params\">(arg, value)</span> <span class=\"title\">Then</span></span><br><span class=\"line\">                <span class=\"title\">Return</span> <span class=\"title\">value</span></span><br><span class=\"line\">            <span class=\"title\">End</span> <span class=\"title\">If</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"title\">value</span> = <span class=\"title\">func</span><span class=\"params\">(arg)</span></span><br><span class=\"line\">            <span class=\"title\">cache</span>.<span class=\"title\">Add</span><span class=\"params\">(arg, value)</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"title\">Return</span> <span class=\"title\">value</span></span><br><span class=\"line\">        <span class=\"title\">End</span> <span class=\"title\">Function</span></span><br><span class=\"line\"><span class=\"title\">End</span> <span class=\"title\">Function</span></span></span><br></pre></td></tr></table></figure>\n<p>We can easily apply it to the calling procedure, after the RetryIfFailed interceptor.</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> counter = <span class=\"keyword\">New</span> StatsCounter()</span><br><span class=\"line\"><span class=\"keyword\">Dim</span> client = <span class=\"keyword\">New</span> NaiveClient(counter)</span><br><span class=\"line\"><span class=\"keyword\">Dim</span> cache = <span class=\"keyword\">New</span> Dictionary(<span class=\"keyword\">Of</span> DateTime, <span class=\"built_in\">String</span>)()</span><br><span class=\"line\"><span class=\"keyword\">Dim</span> getMyDate <span class=\"keyword\">As</span> Func(<span class=\"keyword\">Of</span> DateTime, <span class=\"built_in\">String</span>) = <span class=\"keyword\">AddressOf</span> client.GetMyDate</span><br><span class=\"line\"></span><br><span class=\"line\">counter.Stopwatch.Start()</span><br><span class=\"line\">getMyDate = getMyDate.RetryIfFailed(<span class=\"number\">3</span>).GetOrCache(cache)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">For</span> i <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">0</span> <span class=\"keyword\">To</span> TimesToInvoke - <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">Try</span></span><br><span class=\"line\">        getMyDate(DateTime.Today.AddDays(i <span class=\"keyword\">Mod</span> <span class=\"number\">30</span>))</span><br><span class=\"line\">        counter.TotalSuccess += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">Catch</span> ex <span class=\"keyword\">As</span> Exception</span><br><span class=\"line\">        counter.TotalError += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Try</span></span><br><span class=\"line\"><span class=\"keyword\">Next</span></span><br><span class=\"line\"></span><br><span class=\"line\">counter.Stopwatch.[<span class=\"keyword\">Stop</span>]()</span><br><span class=\"line\">counter.PrintStats()</span><br><span class=\"line\"></span><br><span class=\"line\">Console.WriteLine(<span class=\"string\">\"Benchmarks: \"</span>)</span><br><span class=\"line\">BenchmarkWithActionInterceptor()</span><br><span class=\"line\">BenchmarkWithNInjectInterceptor()</span><br><span class=\"line\">Console.WriteLine(<span class=\"string\">\"Press any key to exit\"</span>)</span><br><span class=\"line\">Console.ReadKey()</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Note:<br>Although <strong>GetOrCache</strong> is appended after <strong>RetryIfFailed</strong>, since it is actually wrapping around the original function, the cache provided to GetOrCache will be firstly accessed before RetryIfFailed is call.</p>\n<p>In short, the later attached methods will be executed earlier.</p>\n</blockquote>\n<p>The result may look like the following, similar to the final result in Interceptor in the Wild. Since cache was in the play, the execution time was dramatically shortened and the total execution fault rate was dramatically reduced to around zero.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Execution Time: 0.981474 seconds</span><br><span class=\"line\">Total Executions: 36</span><br><span class=\"line\">Execution Sucess: 30</span><br><span class=\"line\">Total Sucess: 1000</span><br><span class=\"line\">Execution Fail: 6</span><br><span class=\"line\">Total Fail: 0</span><br></pre></td></tr></table></figure>\n<p>Until now, what we have done is simply adding two extension methods and changing 4 lines of code in the calling procedure.</p>\n<ol>\n<li>No need to modify the implemetation of the underlying function</li>\n<li>No need to NuGet a single bit from the Internet</li>\n<li>No need to learn a single new framework</li>\n<li>No need to struggle with object instantiation</li>\n<li>No need to think about how to alter parameters in interceptors</li>\n</ol>\n<p>Jobs got done and our days were saved.</p>\n<h2 id=\"Points-of-Interest-Performance\"><a href=\"#Points-of-Interest-Performance\" class=\"headerlink\" title=\"Points of Interest - Performance\"></a>Points of Interest - Performance</h2><p>On performance, I enclosed a simple benchmark which compares the speed of Action Inteceptor and NInject (an IoC framework) Interceptor in the code.</p>\n<p>The code will call a NopClient which actually does nothing to compare the time spent on different types of interceptions.</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> NopClient : <span class=\"keyword\">Implements</span> INaiveClient</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> _counter <span class=\"keyword\">As</span> StatsCounter</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> <span class=\"keyword\">New</span>(counter <span class=\"keyword\">As</span> StatsCounter)</span><br><span class=\"line\">        _counter = counter</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> GetMyDate([<span class=\"built_in\">date</span>] <span class=\"keyword\">As</span> DateTime) <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> <span class=\"keyword\">Implements</span> INaiveClient.GetMyDate</span><br><span class=\"line\">        <span class=\"keyword\">Return</span> <span class=\"literal\">Nothing</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<p>The setup code of NInject interceptor looks like the following:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> [<span class=\"keyword\">Module</span>] : <span class=\"keyword\">Inherits</span> NinjectModule</span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Sub</span> Load()</span><br><span class=\"line\">        Kernel.Bind(<span class=\"keyword\">Of</span> StatsCounter)().ToConstant(<span class=\"keyword\">New</span> StatsCounter())</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> binding = Kernel.Bind(<span class=\"keyword\">Of</span> INaiveClient)().[<span class=\"keyword\">To</span>](<span class=\"keyword\">Of</span> NopClient)()</span><br><span class=\"line\">        binding.Intercept().[<span class=\"keyword\">With</span>](<span class=\"keyword\">Of</span> RetryInterceptor)()</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<p>During practical development, we typically create a client object which is not reusable and call its methods. For instance, we create WebRequest objects to load a web page or DbConnection objects to manage the database. Hence, in performance benchmarks, we must take object initialization into account.</p>\n<p>Here are what we are going to time during the benchmark.</p>\n<p>The speed of Action Interceptor.</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">For</span> i <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">0</span> <span class=\"keyword\">To</span> TimesToInvoke - <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> nopClient = <span class=\"keyword\">New</span> NopClient(counter)</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> getMyDate <span class=\"keyword\">As</span> Func(<span class=\"keyword\">Of</span> DateTime, <span class=\"built_in\">String</span>) = <span class=\"keyword\">AddressOf</span> nopClient.GetMyDate</span><br><span class=\"line\"></span><br><span class=\"line\">    getMyDate = getMyDate.RetryIfFailed(<span class=\"number\">3</span>)</span><br><span class=\"line\">    getMyDate(DateTime.MinValue)</span><br><span class=\"line\"><span class=\"keyword\">Next</span></span><br></pre></td></tr></table></figure>\n<p>And the speed of a NInject interceptor.</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">For</span> i <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">0</span> <span class=\"keyword\">To</span> TimesToInvoke - <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> client = kernel.[<span class=\"keyword\">Get</span>](<span class=\"keyword\">Of</span> INaiveClient)()</span><br><span class=\"line\">    client.GetMyDate(DateTime.MinValue)</span><br><span class=\"line\"><span class=\"keyword\">Next</span></span><br></pre></td></tr></table></figure>\n<p>And here was a result taken from my computer. Action Interceptor was about hundreds of times faster than the NInject Interceptor.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Action interceptor:</span><br><span class=\"line\">Execution Time: 0.1758 milliseconds</span><br><span class=\"line\"></span><br><span class=\"line\">NInject interceptor:</span><br><span class=\"line\">Execution Time: 144.2733 milliseconds</span><br></pre></td></tr></table></figure>\n<h2 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h2><p>The <strong>Action Interceptor</strong> pattern has the following features which are the same as IoC frameworks:</p>\n<pre><code>1. It does inject new behaviors to methods we want to change as IoC does (introduced in the Interceptor in the Wild): \n   increasing execution success rates, providing cachability and efficiency, and more.\n2. The underlying basic implementation remains unchanged. \n   It does not require you to change a single character in the injected method.\n</code></pre><p>And it has the following advantages over IoC frameworks:</p>\n<ol>\n<li>The construction logic of types is preserved. So you can happily use the old-school new className(parameters) fashion to instantiate objects or apply any factory patterns if needed. The object creation logic therefore remains clean, simple and fully in your control.</li>\n<li>It does not force you to use the “injected” version all the time, you can return to use the un-injected original method any time as needed.</li>\n<li>Functionalities are clearly, selectively and freely added to existing methods.</li>\n<li>No new class or interface is required to be created manually.</li>\n<li>New behaviors can be injected to already injected methods at run time, after object initialization.</li>\n<li>It is open and fully compatible with IoC frameworks. You can take advantages of their abstraction object factory.</li>\n<li>It can be applied to static methods or private methods.</li>\n<li>Its performance is much superior than IoC frameworks.</li>\n<li>It has no external dependency. No need to reference any third party assemblies.</li>\n<li>Plain easy to learn.</li>\n<li>Plain easy to debug.</li>\n<li>Ready for being refactored.</li>\n</ol>\n<p>The disadvantages are:</p>\n<ol>\n<li>It does not serve as an abstract object factory.</li>\n<li>It does not wrap properties, except that you wrap the hidden getter or setter method of a property.</li>\n<li>It does not inject behaviors to all methods in a type by default. You must manually apply it to methods, one by one.</li>\n<li>It is old-fashioned and low-tech. It does not sound COOL in front of your boss at all.</li>\n<li>It is up to your decision.</li>\n</ol>\n<p>IoC frameworks do give us great powers. But we have to face the tradeoffs of added code complexity and performance loss. When I saw people asking questions about IoC frameworks here and there, which were originally simple without IoC, I wondered whether they were using the right tool.</p>\n<blockquote>\n<p>source: <a href=\"http://www.codeproject.com/Articles/1104555/The-Action-Interceptor-Pattern?msg=5258531#xx5258531xx\" target=\"_blank\" rel=\"external\">wmjordan,</a> 16 Jun 2016</p>\n</blockquote>\n","excerpt":"<h2 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h2><p>In Interceptor in the Wild by João Matos Silva has presented how to use an IoC framework, NInject, to inject new behaviors into existing methods without hacking into the method implementations. In this article, we will see an old-school yet beneficial way to reach the same goal, but without messing around with IoC frameworks.</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/Class.png\" alt=\"\"></p>","more":"<h2 id=\"Background\"><a href=\"#Background\" class=\"headerlink\" title=\"Background\"></a>Background</h2><blockquote>\n<p><strong>Notice:</strong><br>The article Interceptor in the Wild by João Matos Silva was very well written and pleased to follow. This article offers the alternative to it and reuses examples in it. I suggest you read it before going on with this alternative.</p>\n</blockquote>\n<p>In Silva’s article, the good sides of IoC frameworks were demonstrated. However, there are pros and cons in IoC frameworks in practical use. Please correct me if any of the following listed is wrong.</p>\n<ol>\n<li><strong>Abstraction of object creation</strong><ul>\n<li><strong>Pros</strong>: Dynamic object factory can be achieved at runtime.</li>\n<li><strong>Cons</strong>:<br>  a. It hides the constructor of the types, which may be difficult for programmers to follow when the injection chains become complicated.<br>  “What instance is resolved by the IoC?” is one of the most common issue programmers will usually encounter.<br>  b. It requires some efforts when we try to instantiate objects, if we are trying to call:<br>  [<strong>b1</strong>] <em>Constructors with parameters: relative discussions here and there. And this can usually causes problems when the programmers are refactoring the constructor,<br>  without knowing that it is somewhere referenced by the IoC module indirectly.</em><br>  [<strong>b2</strong>] <em>Private or internal constructors: relative discussion here and there.</em><br>  [<strong>b3</strong>] <em>Constructors which could throw exceptions, and we have to work harder to address them.</em><br>  c. <strong>Performance penalty</strong>.</li>\n</ul>\n</li>\n<li><strong>Runtime parameterization</strong>. It is not so easy to alter the parameter of interceptors in IoC. And again, performance penalty here is unavoidable.</li>\n<li><strong>Partially overlapped interception</strong>: An IoC binder affects all methods bounded to the type via the given interface. Given that we have a type with three methods: M1, M2 and M3, and we are going to use all of them in the code. We want to bind behavior B1 to M1, B1 and B2 to M2, but no behavior to M3. Afterwards, we are going to call the bounded M1, bounded M2, and the unbounded M3. You need to write a lot to achieve this. It is not so easy to implement, understand or debug with IoC frameworks at all.</li>\n<li>IoC binders only affect instance methods, not static methods, unless you wrap them with instance classes.</li>\n<li><strong>Complexity</strong>. IoC requires the programmer to program new classes or interfaces for behavioral interceptors, thus more types have to be added to the project.</li>\n</ol>\n<h2 id=\"An-Alternative-to-IoC-Injections\"><a href=\"#An-Alternative-to-IoC-Injections\" class=\"headerlink\" title=\"An Alternative to IoC Injections\"></a>An Alternative to IoC Injections</h2><p>If injecting functionalities to methods is our goal, and the above issues in IoC frameworks are your headache, the Action Interceptor Pattern is your way to go. The following is an example of an Action Interceptor. It can be as simple as the following five lines:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Extension&gt;</span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> WaitAMinute(<span class=\"keyword\">Of</span> TArg, TResult)(func <span class=\"keyword\">As</span> Func(<span class=\"keyword\">Of</span> TArg, TResult)) <span class=\"keyword\">As</span> Func(<span class=\"keyword\">Of</span> TArg, TResult)</span><br><span class=\"line\">    <span class=\"keyword\">Return</span> <span class=\"keyword\">Function</span>(arg)</span><br><span class=\"line\">               <span class=\"keyword\">Call</span> Thread.Sleep(TimeSpan.FromMinutes(<span class=\"number\">1</span>))</span><br><span class=\"line\">               <span class=\"keyword\">Return</span> func(arg)</span><br><span class=\"line\">           <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure>\n<p>You may ask: What? An extension method of Func?</p>\n<p>Yep! Wrapping a function with another function, and the job will be done. Just a single method will save our days. Not yet convinced? Please read on.</p>\n<h2 id=\"The-Usage-of-Action-Interceptors\"><a href=\"#The-Usage-of-Action-Interceptors\" class=\"headerlink\" title=\"The Usage of Action Interceptors\"></a>The Usage of Action Interceptors</h2><p>I will use the NativeClient example in Interceptor in the Wild to demonstrate how Action Interceptors can be an alternative to IoC injections.</p>\n<h3 id=\"Decreasing-Fault-Rate-Increasing-Success-Rate\"><a href=\"#Decreasing-Fault-Rate-Increasing-Success-Rate\" class=\"headerlink\" title=\"Decreasing Fault Rate / Increasing Success Rate\"></a>Decreasing Fault Rate / Increasing Success Rate</h3><p>In the Silva’s article Interceptor in the Wild, the NativeClient very well shows us a service which can be broken at any time, and the RetryInterceptor remedies this by retrying when something goes wrong. The same pattern can be implemented with Action Intercetor.</p>\n<p>To demonstrate the result. Let’s take a look back to the primitive client code:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Const</span> TimesToInvoke <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">1000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> Main(args <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>())</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> counter = <span class=\"keyword\">New</span> StatsCounter()</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> client = <span class=\"keyword\">New</span> NaiveClient(counter)</span><br><span class=\"line\">    </span><br><span class=\"line\">    counter.Stopwatch.Start()</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">For</span> i <span class=\"keyword\">As</span> var = <span class=\"number\">0</span> <span class=\"keyword\">To</span> TimesToInvoke - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">Try</span></span><br><span class=\"line\">            client.GetMyDate(DateTime.Today.AddDays(i <span class=\"keyword\">Mod</span> <span class=\"number\">30</span>))</span><br><span class=\"line\">            counter.TotalSuccess += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">Catch</span> ex <span class=\"keyword\">As</span> Exception</span><br><span class=\"line\">            counter.TotalError += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">Try</span></span><br><span class=\"line\">    <span class=\"keyword\">Next</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">    counter.Stopwatch.[<span class=\"keyword\">Stop</span>]()</span><br><span class=\"line\">    counter.PrintStats()</span><br><span class=\"line\">    Console.WriteLine(<span class=\"string\">\"Press any key to exit\"</span>)</span><br><span class=\"line\">    Console.ReadKey()</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br></pre></td></tr></table></figure>\n<p>In the above code, you don’t need to care about how GetMyDate was implemented, since we will not touch it and we will just change the client side code which calls that function. Please just keep in mind that it was a broken function and it had a probability of 0.3 to throw exceptions.</p>\n<p>The result of execution was, at no doubt, very bad. It took a long time to run and execution fail rates were as high as 325/1000. Here was a possible output.</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Execution Time: 36.0658004 seconds</span><br><span class=\"line\">Total Executions: 1000</span><br><span class=\"line\">Execution Sucess: 675</span><br><span class=\"line\">Total Sucess: 675</span><br><span class=\"line\">Execution Fail: 325</span><br><span class=\"line\">Total Fail: 325</span><br></pre></td></tr></table></figure>\n<p>Now, we will introduce a new RetryIfFailed action interceptor to automatically retry the action after failures, and we can easily configure how many times we want to retry at run time. by assigning value to the maxRetry parameter.</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Extension&gt;</span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> RetryIfFailed(<span class=\"keyword\">Of</span> TArg, TResult)(func <span class=\"keyword\">As</span> Func(<span class=\"keyword\">Of</span> TArg, TResult), maxRetry <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span>) <span class=\"keyword\">As</span> Func(<span class=\"keyword\">Of</span> TArg, TResult)</span><br><span class=\"line\">    <span class=\"keyword\">Return</span> _</span><br><span class=\"line\">        <span class=\"keyword\">Function</span>(arg)</span><br><span class=\"line\">            <span class=\"keyword\">Dim</span> t <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> Pointer(Scan0)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">Do</span></span><br><span class=\"line\">                <span class=\"keyword\">Try</span></span><br><span class=\"line\">                    <span class=\"keyword\">Return</span> func(arg)</span><br><span class=\"line\">                <span class=\"keyword\">Catch</span> generatedExceptionName <span class=\"keyword\">As</span> Exception</span><br><span class=\"line\">                    <span class=\"keyword\">If</span> ++t &gt; maxRetry <span class=\"keyword\">Then</span></span><br><span class=\"line\">                        <span class=\"keyword\">Throw</span></span><br><span class=\"line\">                    <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">                <span class=\"keyword\">End</span> <span class=\"keyword\">Try</span></span><br><span class=\"line\">            <span class=\"keyword\">Loop</span> <span class=\"keyword\">While</span> <span class=\"literal\">True</span></span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure>\n<p>Then, we apply it to the calling procedure.</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> counter = <span class=\"keyword\">New</span> StatsCounter()</span><br><span class=\"line\"><span class=\"keyword\">Dim</span> client = <span class=\"keyword\">New</span> NaiveClient(counter)</span><br><span class=\"line\"><span class=\"comment\">' get the method we are going to retry with</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> getMyDate <span class=\"keyword\">As</span> Func(<span class=\"keyword\">Of</span> DateTime, <span class=\"built_in\">String</span>) = <span class=\"keyword\">AddressOf</span> client.GetMyDate</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Call</span> counter.Stopwatch.Start()</span><br><span class=\"line\"><span class=\"comment\">' intercept it with RetryIfFailed interceptor, which retries once at most</span></span><br><span class=\"line\">getMyDate = getMyDate.RetryIfFailed(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">For</span> i <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">0</span> <span class=\"keyword\">To</span> TimesToInvoke</span><br><span class=\"line\">    <span class=\"keyword\">Try</span> </span><br><span class=\"line\">        <span class=\"comment\">' call the intercepted method instead of client.GetMyDate</span></span><br><span class=\"line\">        getMyDate(DateTime.Today.AddDays(i <span class=\"keyword\">Mod</span> <span class=\"number\">30</span>))</span><br><span class=\"line\">        counter.TotalSuccess++</span><br><span class=\"line\">    <span class=\"keyword\">Catch</span> ex <span class=\"keyword\">As</span> Exception </span><br><span class=\"line\">        counter.TotalError+=<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Try</span></span><br><span class=\"line\"><span class=\"keyword\">Next</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Call</span> counter.Stopwatch.<span class=\"keyword\">Stop</span>()</span><br></pre></td></tr></table></figure>\n<p>The above program gave a better result. The execution fault rate dropped from the original 325/1000 to 91/1000, simply because we have retried once more.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Execution Time: 59.6016893 seconds</span><br><span class=\"line\">Total Executions: 1302</span><br><span class=\"line\">Execution Sucess: 909</span><br><span class=\"line\">Total Sucess: 909</span><br><span class=\"line\">Execution Fail: 393</span><br><span class=\"line\">Total Fail: 91</span><br></pre></td></tr></table></figure>\n<p>If you are not happy with the result, you can tweak the maxRetry parameter in the interceptor to a larger value, for instance 3. Here was the result of “getMyDate.RetryIfFailed(3)” and the fault rate was reduced to around 8/1000.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Execution Time: 65.8972493 seconds</span><br><span class=\"line\">Total Executions: 1421</span><br><span class=\"line\">Execution Sucess: 992</span><br><span class=\"line\">Total Sucess: 992</span><br><span class=\"line\">Execution Fail: 429</span><br><span class=\"line\">Total Fail: 8</span><br></pre></td></tr></table></figure>\n<h3 id=\"Caching-the-Result\"><a href=\"#Caching-the-Result\" class=\"headerlink\" title=\"Caching the Result\"></a>Caching the Result</h3><p>In Interceptor in the Wild, Silva also demonstrated caching can be injected to methods via a PoorMansCacheProvider and a CacheInterceptor. The same result can be achieved with the Action Interceptor pattern.</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Extension&gt;</span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"function\"><span class=\"keyword\">Function</span> <span class=\"title\">GetOrCache</span><span class=\"params\">(Of TArg, TResult, TCache As &#123;Class, IDictionary<span class=\"params\">(Of TArg, TResult)</span>&#125;)</span><span class=\"params\">(func As Func<span class=\"params\">(Of TArg, TResult)</span>, cache As TCache)</span> <span class=\"title\">As</span> <span class=\"title\">Func</span><span class=\"params\">(Of TArg, TResult)</span></span><br><span class=\"line\">    <span class=\"title\">Return</span> <span class=\"title\">_</span></span><br><span class=\"line\">        <span class=\"title\">Function</span><span class=\"params\">(arg)</span></span><br><span class=\"line\">            <span class=\"title\">Dim</span> <span class=\"title\">value</span> <span class=\"title\">As</span> <span class=\"title\">TResult</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"title\">If</span> <span class=\"title\">cache</span>.<span class=\"title\">TryGetValue</span><span class=\"params\">(arg, value)</span> <span class=\"title\">Then</span></span><br><span class=\"line\">                <span class=\"title\">Return</span> <span class=\"title\">value</span></span><br><span class=\"line\">            <span class=\"title\">End</span> <span class=\"title\">If</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"title\">value</span> = <span class=\"title\">func</span><span class=\"params\">(arg)</span></span><br><span class=\"line\">            <span class=\"title\">cache</span>.<span class=\"title\">Add</span><span class=\"params\">(arg, value)</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"title\">Return</span> <span class=\"title\">value</span></span><br><span class=\"line\">        <span class=\"title\">End</span> <span class=\"title\">Function</span></span><br><span class=\"line\"><span class=\"title\">End</span> <span class=\"title\">Function</span></span></span><br></pre></td></tr></table></figure>\n<p>We can easily apply it to the calling procedure, after the RetryIfFailed interceptor.</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> counter = <span class=\"keyword\">New</span> StatsCounter()</span><br><span class=\"line\"><span class=\"keyword\">Dim</span> client = <span class=\"keyword\">New</span> NaiveClient(counter)</span><br><span class=\"line\"><span class=\"keyword\">Dim</span> cache = <span class=\"keyword\">New</span> Dictionary(<span class=\"keyword\">Of</span> DateTime, <span class=\"built_in\">String</span>)()</span><br><span class=\"line\"><span class=\"keyword\">Dim</span> getMyDate <span class=\"keyword\">As</span> Func(<span class=\"keyword\">Of</span> DateTime, <span class=\"built_in\">String</span>) = <span class=\"keyword\">AddressOf</span> client.GetMyDate</span><br><span class=\"line\"></span><br><span class=\"line\">counter.Stopwatch.Start()</span><br><span class=\"line\">getMyDate = getMyDate.RetryIfFailed(<span class=\"number\">3</span>).GetOrCache(cache)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">For</span> i <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">0</span> <span class=\"keyword\">To</span> TimesToInvoke - <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">Try</span></span><br><span class=\"line\">        getMyDate(DateTime.Today.AddDays(i <span class=\"keyword\">Mod</span> <span class=\"number\">30</span>))</span><br><span class=\"line\">        counter.TotalSuccess += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">Catch</span> ex <span class=\"keyword\">As</span> Exception</span><br><span class=\"line\">        counter.TotalError += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Try</span></span><br><span class=\"line\"><span class=\"keyword\">Next</span></span><br><span class=\"line\"></span><br><span class=\"line\">counter.Stopwatch.[<span class=\"keyword\">Stop</span>]()</span><br><span class=\"line\">counter.PrintStats()</span><br><span class=\"line\"></span><br><span class=\"line\">Console.WriteLine(<span class=\"string\">\"Benchmarks: \"</span>)</span><br><span class=\"line\">BenchmarkWithActionInterceptor()</span><br><span class=\"line\">BenchmarkWithNInjectInterceptor()</span><br><span class=\"line\">Console.WriteLine(<span class=\"string\">\"Press any key to exit\"</span>)</span><br><span class=\"line\">Console.ReadKey()</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Note:<br>Although <strong>GetOrCache</strong> is appended after <strong>RetryIfFailed</strong>, since it is actually wrapping around the original function, the cache provided to GetOrCache will be firstly accessed before RetryIfFailed is call.</p>\n<p>In short, the later attached methods will be executed earlier.</p>\n</blockquote>\n<p>The result may look like the following, similar to the final result in Interceptor in the Wild. Since cache was in the play, the execution time was dramatically shortened and the total execution fault rate was dramatically reduced to around zero.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Execution Time: 0.981474 seconds</span><br><span class=\"line\">Total Executions: 36</span><br><span class=\"line\">Execution Sucess: 30</span><br><span class=\"line\">Total Sucess: 1000</span><br><span class=\"line\">Execution Fail: 6</span><br><span class=\"line\">Total Fail: 0</span><br></pre></td></tr></table></figure>\n<p>Until now, what we have done is simply adding two extension methods and changing 4 lines of code in the calling procedure.</p>\n<ol>\n<li>No need to modify the implemetation of the underlying function</li>\n<li>No need to NuGet a single bit from the Internet</li>\n<li>No need to learn a single new framework</li>\n<li>No need to struggle with object instantiation</li>\n<li>No need to think about how to alter parameters in interceptors</li>\n</ol>\n<p>Jobs got done and our days were saved.</p>\n<h2 id=\"Points-of-Interest-Performance\"><a href=\"#Points-of-Interest-Performance\" class=\"headerlink\" title=\"Points of Interest - Performance\"></a>Points of Interest - Performance</h2><p>On performance, I enclosed a simple benchmark which compares the speed of Action Inteceptor and NInject (an IoC framework) Interceptor in the code.</p>\n<p>The code will call a NopClient which actually does nothing to compare the time spent on different types of interceptions.</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> NopClient : <span class=\"keyword\">Implements</span> INaiveClient</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> _counter <span class=\"keyword\">As</span> StatsCounter</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> <span class=\"keyword\">New</span>(counter <span class=\"keyword\">As</span> StatsCounter)</span><br><span class=\"line\">        _counter = counter</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> GetMyDate([<span class=\"built_in\">date</span>] <span class=\"keyword\">As</span> DateTime) <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> <span class=\"keyword\">Implements</span> INaiveClient.GetMyDate</span><br><span class=\"line\">        <span class=\"keyword\">Return</span> <span class=\"literal\">Nothing</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<p>The setup code of NInject interceptor looks like the following:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> [<span class=\"keyword\">Module</span>] : <span class=\"keyword\">Inherits</span> NinjectModule</span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Sub</span> Load()</span><br><span class=\"line\">        Kernel.Bind(<span class=\"keyword\">Of</span> StatsCounter)().ToConstant(<span class=\"keyword\">New</span> StatsCounter())</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> binding = Kernel.Bind(<span class=\"keyword\">Of</span> INaiveClient)().[<span class=\"keyword\">To</span>](<span class=\"keyword\">Of</span> NopClient)()</span><br><span class=\"line\">        binding.Intercept().[<span class=\"keyword\">With</span>](<span class=\"keyword\">Of</span> RetryInterceptor)()</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<p>During practical development, we typically create a client object which is not reusable and call its methods. For instance, we create WebRequest objects to load a web page or DbConnection objects to manage the database. Hence, in performance benchmarks, we must take object initialization into account.</p>\n<p>Here are what we are going to time during the benchmark.</p>\n<p>The speed of Action Interceptor.</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">For</span> i <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">0</span> <span class=\"keyword\">To</span> TimesToInvoke - <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> nopClient = <span class=\"keyword\">New</span> NopClient(counter)</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> getMyDate <span class=\"keyword\">As</span> Func(<span class=\"keyword\">Of</span> DateTime, <span class=\"built_in\">String</span>) = <span class=\"keyword\">AddressOf</span> nopClient.GetMyDate</span><br><span class=\"line\"></span><br><span class=\"line\">    getMyDate = getMyDate.RetryIfFailed(<span class=\"number\">3</span>)</span><br><span class=\"line\">    getMyDate(DateTime.MinValue)</span><br><span class=\"line\"><span class=\"keyword\">Next</span></span><br></pre></td></tr></table></figure>\n<p>And the speed of a NInject interceptor.</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">For</span> i <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">0</span> <span class=\"keyword\">To</span> TimesToInvoke - <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> client = kernel.[<span class=\"keyword\">Get</span>](<span class=\"keyword\">Of</span> INaiveClient)()</span><br><span class=\"line\">    client.GetMyDate(DateTime.MinValue)</span><br><span class=\"line\"><span class=\"keyword\">Next</span></span><br></pre></td></tr></table></figure>\n<p>And here was a result taken from my computer. Action Interceptor was about hundreds of times faster than the NInject Interceptor.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Action interceptor:</span><br><span class=\"line\">Execution Time: 0.1758 milliseconds</span><br><span class=\"line\"></span><br><span class=\"line\">NInject interceptor:</span><br><span class=\"line\">Execution Time: 144.2733 milliseconds</span><br></pre></td></tr></table></figure>\n<h2 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h2><p>The <strong>Action Interceptor</strong> pattern has the following features which are the same as IoC frameworks:</p>\n<pre><code>1. It does inject new behaviors to methods we want to change as IoC does (introduced in the Interceptor in the Wild): \n   increasing execution success rates, providing cachability and efficiency, and more.\n2. The underlying basic implementation remains unchanged. \n   It does not require you to change a single character in the injected method.\n</code></pre><p>And it has the following advantages over IoC frameworks:</p>\n<ol>\n<li>The construction logic of types is preserved. So you can happily use the old-school new className(parameters) fashion to instantiate objects or apply any factory patterns if needed. The object creation logic therefore remains clean, simple and fully in your control.</li>\n<li>It does not force you to use the “injected” version all the time, you can return to use the un-injected original method any time as needed.</li>\n<li>Functionalities are clearly, selectively and freely added to existing methods.</li>\n<li>No new class or interface is required to be created manually.</li>\n<li>New behaviors can be injected to already injected methods at run time, after object initialization.</li>\n<li>It is open and fully compatible with IoC frameworks. You can take advantages of their abstraction object factory.</li>\n<li>It can be applied to static methods or private methods.</li>\n<li>Its performance is much superior than IoC frameworks.</li>\n<li>It has no external dependency. No need to reference any third party assemblies.</li>\n<li>Plain easy to learn.</li>\n<li>Plain easy to debug.</li>\n<li>Ready for being refactored.</li>\n</ol>\n<p>The disadvantages are:</p>\n<ol>\n<li>It does not serve as an abstract object factory.</li>\n<li>It does not wrap properties, except that you wrap the hidden getter or setter method of a property.</li>\n<li>It does not inject behaviors to all methods in a type by default. You must manually apply it to methods, one by one.</li>\n<li>It is old-fashioned and low-tech. It does not sound COOL in front of your boss at all.</li>\n<li>It is up to your decision.</li>\n</ol>\n<p>IoC frameworks do give us great powers. But we have to face the tradeoffs of added code complexity and performance loss. When I saw people asking questions about IoC frameworks here and there, which were originally simple without IoC, I wondered whether they were using the right tool.</p>\n<blockquote>\n<p>source: <a href=\"http://www.codeproject.com/Articles/1104555/The-Action-Interceptor-Pattern?msg=5258531#xx5258531xx\">wmjordan,</a> 16 Jun 2016</p>\n</blockquote>"},{"title":"Circos plots","date":"2016-06-14T16:00:00.000Z","_content":"\n![](https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/circos-cancer-cell.png)\n\nCircos is a software package for visualizing data and information which is written in **Perl** language. It visualizes data in a circular layout — this makes Circos ideal for exploring relationships between objects or positions. There are other reasons why a circular layout is advantageous, not the least being the fact that it is attractive. From the previous works on the bacterial genome annotation by using GCModeller, required of hybried programming with Perl language with vb.net for the annotation result visualization, by using this Circos software Perl script, I created this Circos API for .NET language, and introduce this .NET language API library.\n\n> HOME page: http://circos.ca/\n> GCModeller API: https://github.com/SMRUCC/GCModeller.Circos\n\n<!--more-->\n\nThe typically circos data directory consists of two parts of data file: **\\*.conf** circos plots layout configuration file, and **\\*.txt** plots data files in a directory which is named '**data**':\n\n>  + circos.conf\n>  + ideogram.conf\n>  + ticks.conf\n>  + ./data/...\n\n![](https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/workflow.png)\n\nUsing circos program just very easy, using ``cd`` command enter the plots' config directory which the file **circos.conf** is located in the terminal, and then inputs the perl script location of circos, circos script will search for the **circos.conf** file automatically in your directory and then invoke drawing:\n\n```bash\n$ ~/circos/bin/circos\n```\n\n> ![](https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/AQ%20Magazine%2C%20April%202011_Simon%20Fraser%20University.png)\n> *AQ Magazine, April 2011 (Simon Fraser University)*\n\n## Layout configs\nThe circos layout configs is consist with 3 config file in the majority:\n\n+ **circos.conf**\n\tThis is the main configuration of your circos plot, and the required graphics includes file, genome brief description, plots' details information was recorded at here.\n+ **ideogram.conf**\n\tideogram visualizes linear layout of CHROMOSOMES, plots of the chromosomes brief information, and layout overview controls of the circos plot.\n+ **ticks.conf**\n\tThe display style of the periodic loci labels for the genome chromosomes sequence was define at here.\n\n### Basic Document Abstract\n\nFirst of all, we define the very basically class object at here for all of the circos documents at here:\n\n```vbnet\n''' <summary>\n''' This object can be convert to text document by using method <see cref=\"GenerateDocument\"/>\n''' </summary>\nPublic Interface ICircosDocNode\n    Function GenerateDocument(IndentLevel As Integer) As String\nEnd Interface\n\n''' <summary>\n''' This object can be save as a text doc for the circos plot\n''' </summary>\nPublic Interface ICircosDocument : Inherits ICircosDocNode, ISaveHandle\nEnd Interface\n```\n\nIn this interface definition, we just created the basically text document model for the files in the circos program: ``ICircosDocNode`` have an abstract function to generates the document text and ``ICircosDocument`` object by multiple inheritance, it have both method of document generation inherits from ``ICircosDocNode`` and abstract save method that inherits from text file save model ``ISaveHandle``\n\nSo that based on the ``ICircosDocument`` abstract type, we can define the model of ``*.conf`` file at here:\n\n```vbnet\n    ''' <summary>\n    ''' Abstract of the circos config files.\n    ''' </summary>\n    Public MustInherit Class CircosConfig : Inherits ITextFile\n        Implements ICircosDocument\n\n        ''' <summary>\n        ''' 文档的对其他的配置文件的引用列表\n        ''' </summary>\n        ''' <returns></returns>\n        Public Property Includes As List(Of CircosConfig)\n\n        ''' <summary>\n        ''' This config file was included in ``circos.conf``.(主配置文件Circos.conf)\n        ''' </summary>\n        ''' <returns></returns>\n        Public Property main As Circos\n\n        Sub New(FileName As String, Circos As Circos)\n            MyBase.FilePath = FileName\n            Me.main = Circos\n        End Sub\n\n        Protected Function GenerateIncludes() As String\n            If Includes.IsNullOrEmpty Then\n                Return \"\"\n            End If\n\n            Dim sb As New StringBuilder(1024)\n\n            For Each includeFile As CircosConfig In Includes\n                Call __appendLine(sb, includeFile)\n                Call includeFile.Save(Encoding:=Encoding.ASCII)\n            Next\n\n            Return sb.ToString\n        End Function\n\n        Private Shared Sub __appendLine(ByRef sb As StringBuilder, include As CircosConfig)\n            Dim refPath As String = Tools.TrimPath(include)\n\n            If TypeOf include Is CircosDistributed Then\n                Dim name As String = DirectCast(include, CircosDistributed).Section\n                If Not String.IsNullOrEmpty(name) Then\n                    Call sb.AppendLine($\"<{name}>\")\n                    Call sb.AppendLine($\"   <<include {refPath}>>\")\n                    Call sb.AppendLine($\"</{name}>\")\n                Else\n                    Call sb.AppendLine($\"<<include {refPath}>>\")\n                End If\n            Else\n                Call sb.AppendLine($\"<<include {refPath}>>\")\n            End If\n        End Sub\n\n        Protected MustOverride Function GenerateDocument(IndentLevel As Integer) As String Implements ICircosDocument.GenerateDocument\n\n        ''' <summary>\n        ''' Auto detected that current is circos distribution or not, if true, then this file will not be saved.\n        ''' </summary>\n        ''' <param name=\"FilePath\"></param>\n        ''' <param name=\"Encoding\"></param>\n        ''' <returns></returns>\n        Public Overrides Function Save(Optional FilePath As String = \"\", Optional Encoding As Encoding = Nothing) As Boolean Implements ICircosDocument.Save\n            If TypeOf Me Is CircosDistributed Then\n                Return True ' 系统自带的不需要进行保存了\n            End If\n\n            Dim doc As String = GenerateDocument(IndentLevel:=Scan0)\n            Return doc.SaveTo(getPath(FilePath), If(Encoding Is Nothing, Encoding.ASCII, Encoding))\n        End Function\n    End Class\n```\n\n### **circos.conf**\n#### a. Includes header\n\nThe files includes in the ``circos.conf`` configuration file using both relative path or absolute path. By default, almost all of the circos distribution miscellaneous pre-defined config file is saved in the ``ect/`` directory, **likes color definitions, fonts, patterns, etc**. By using the relative path, circos program will search you included file in the directory of:\n\n1. ./etc/\n2. ../etc/\n3. circos/bin/etc/\n4. circos/etc/\n\nAs always, centralize all your inputs as much as possible.\n\nAll most all of the ``circos.conf`` layout config file required of these housekeeping includes. These should be present in every Circos configuration file and overridden as required. To see the content of these files, you can look in ``etc/`` in the Circos distribution.\n\nIt's best to include these files using relative paths. This way, the files if not found under your current directory will be drawn from the Circos distribution.\n\n```html\n<<include etc/colors_fonts_patterns.conf>>\n<<include etc/housekeeping.conf>>\n<<include ticks.conf>>\n<<include ideogram.conf>>\n\n<image>\n  <<include etc/image.conf>>\n</image>\n```\n\nDebugging, I/O an dother system parameters Included from Circos distribution.\n\n```\n<<include etc/housekeeping.conf>> \n```\n\nRGB/HSV color definitions, color lists, location of fonts, fill patterns. Included from Circos distribution. In older versions of Circos, colors, fonts and patterns were included individually. Now, this is done from a central file.\n\n```\n<<include etc/colors_fonts_patterns.conf>> \n```\n\nAnd here is the definition of the reference to these circos distribution includes:\n\n```vbnet\n''' <summary>\n''' The circos distributed includes files.\n''' (这个对象仅仅是为了引用Cricos系统内的预置的配置文件的设立的，故而<see cref=\"CircosDistributed.GenerateDocument\">\n''' </see>方法和<see cref=\"CircosDistributed.Save\"></see>方法可以不会被实现)\n''' </summary>\n''' <remarks></remarks>\nPublic Class CircosDistributed : Inherits CircosConfig\n\n    Public ReadOnly Property Section As String\n\n    ''' <summary>\n    ''' 由于这些是系统的预置的数据，是不能够再修改了的，所以这里由于没有数据配置项，直接忽略掉了Circos配置数据\n    ''' </summary>\n    ''' <param name=\"path\"></param>\n    ''' <remarks></remarks>\n    Protected Sub New(path As String)\n        Call MyBase.New(path, Circos:=Nothing)\n    End Sub\n\n    Protected Sub New(path As String, name As String)\n        Me.New(path)\n        Me.Section = name\n    End Sub\n\n    Protected Overrides Function GenerateDocument(IndentLevel As Integer) As String\n        Return \"\"\n    End Function\n\n#Region \"The Circos Distribution includes\"\n    ''' <summary>\n    ''' Debugging, I/O an dother system parameters included from Circos distribution.\n    ''' </summary>\n    ''' <returns></returns>\n    Public Shared ReadOnly Property HouseKeeping As CircosDistributed =\n        New CircosDistributed(\"etc/housekeeping.conf\")\n\n    Public Shared ReadOnly Property ColorBrain As CircosDistributed =\n        New CircosDistributed(\"color.brain.conf\", \"colors\")\n    Public Shared ReadOnly Property Image As CircosDistributed =\n            New CircosDistributed(\"etc/image.conf\", \"image\")\n\n    ''' <summary>\n    ''' RGB/HSV color definitions, color lists, location of fonts, fill\n    ''' patterns. Included from Circos distribution.\n    '''\n    ''' In older versions Of Circos, colors, fonts And patterns were\n    ''' included individually. Now, this Is done from a central file. Make\n    ''' sure that you're not importing these values twice by having\n    '''\n    ''' *** Do Not Do THIS ***\n    ''' &lt;colors>\n    '''     &lt;&lt;include etc/colors.conf>>\n    ''' &lt;colors>\n    ''' **********************\n    ''' </summary>\n    ''' <returns></returns>\n    Public Shared ReadOnly Property ColorFontsPatterns As CircosDistributed =\n        New CircosDistributed(\"etc/colors_fonts_patterns.conf\")\n#End Region\nEnd Class\n```\n\n#### b. genome information &amp; plots configs\n\nHere is some property that used on the genome layout controls in the ``circos.conf`` file:\n\n```vbnet\n''' <summary>\n''' circos.conf\n'''                                     ____ _\n'''                                    / ___(_)_ __ ___ ___  ___\n'''                                   | |   | | '__/ __/ _ \\/ __|\n'''                                   | |___| | | | (_| (_) \\__ \\\n'''                                    \\____|_|_|  \\___\\___/|___/\n'''\n'''                                                round Is good\n'''\n''' circos - generate circularly composited information graphics\n''' \n''' (Circo基因组绘图程序的主配置文件)\n''' </summary>\n''' <remarks>\n''' ![](https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/workflow.png)\n''' \n''' Typically a central configuration file which defines data track information (circos.conf) imports other \n''' configuration files that store parameters that change less frequently \n''' (tick marks, ideogram size, grid, etc). \n''' \n''' Data for each data track Is stored in a file And the same file can be used for multiple tracks.\n''' \n''' + PNG image output Is ideal For immediate viewing, web-based reporting Or presentation. \n''' + SVG output Is most suitable For generating very high resolution line art For publication And For customizing aspects Of the figure.\n''' </remarks>\nPublic Class Circos : Inherits CircosConfig\n    Implements ICircosDocument\n\n    ''' <summary>\n    ''' The basically genome structure plots: Chromosome name, size and color definition.(基本的数据文件)\n    ''' </summary>\n    ''' <value></value>\n    ''' <returns></returns>\n    ''' <remarks></remarks>\n    <Circos> Public Property karyotype As String = \"data/genes.txt\"\n    <Circos> Public Property genome As String = null\n    <Circos> Public Property use_rules As String = yes\n\n    ''' <summary>\n    ''' The chromosomes_unit value is used as a unit (suffix \"u\") to shorten\n    ''' values In other parts Of the configuration file. Some parameters,\n    ''' such As ideogram And tick spacing, accept \"u\" suffixes, so instead Of\n    ''' </summary>\n    ''' <returns></returns>\n    <Circos> Public Property chromosomes_units As String = \"5000\"\n    ''' <summary>\n    ''' The default behaviour is to display all chromosomes defined in the\n    ''' karyotype file. In this example, I Select only a subset.\n    '''\n    ''' The 'chromosomes' parameter has several uses, and selecting which\n    ''' chromosomes To show Is one Of them. You can list them\n    ''' Or provide a regular expression that selects them based On a successful match\n    ''' The ``$`` anchor Is necessary, otherwise chromosomes Like *hs10, hs11 And\n    ''' hs20* are also matched.\n    ''' </summary>\n    ''' <returns></returns>\n    <Circos> Public Property chromosomes_display_default As String = yes\n    <Circos> Public Property chromosomes As String = null\n    ''' <summary>\n    ''' By default, the scale progression is clockwise. You can set the\n    ''' Global angle progression Using 'angle_orientation' in the ``&lt;image>``\n    ''' block (clockwise Or counterclockwise). To reverse it For one Or\n    ''' several ideograms, use 'chromosomes-reverse'\n    ''' </summary>\n    ''' <returns></returns>\n    <Circos> Public Property chromosomes_reverse As String = null\n    ''' <summary>\n    ''' The default radial position for all ideograms is set by 'radius' in\n    ''' the ``&lt;ideogram>`` block (see ideogram.conf). To change the value For\n    ''' specific ideograms, use chromosomes_radius.\n    ''' </summary>\n    ''' <returns></returns>\n    <Circos> Public Property chromosomes_radius As String = null\n    ''' <summary>\n    ''' The size of the ideogram on the figure can be adjusted using an\n    ''' absolute Or relative magnification. Absolute scaling,\n    ''' shrinks Or expands the ideogram by a fixed factor. When the \"r\"\n    ''' suffix Is used, the magnification becomes relative To the\n    ''' circumference Of the figure. Thus, \n    ''' makes ``hs1`` To occupy 50% Of the figure. To uniformly distribute\n    ''' several ideogram within a fraction Of the figure, use a regular\n    ''' expression that selects the ideograms And the \"rn\" suffix (relative\n    ''' normalized).\n    ''' </summary>\n    ''' <returns></returns>\n    <Circos> Public Property chromosomes_scale As String = null\n    ''' <summary>\n    ''' The color of each ideogram is taken from the karyotype file. To\n    ''' change it, use 'chromosomes_color'.\n    ''' </summary>\n    ''' <returns></returns>\n    <Circos> Public Property chromosomes_color As String = null\n    <Circos> Public Property chromosomes_order As String = null\n    <Circos> Public Property chromosomes_breaks As String = null\n\t\t\n    ''' <summary>\n    ''' 基因组的骨架信息\n    ''' </summary>\n    ''' <returns></returns>\n    Public Property SkeletonKaryotype As SkeletonInfo\n```\n\n#### c. plots definitions(Tracks)\nThe plots definitions in the circos is in the section of ``<plots>...</plots>``, and each circle plot is define in the sub-section of ``<plot>...</plot>``, we call this circle plot as tracks. **Tracks are confined to a radial range and may overlap.**\n\n```xml\n  <plot>\n\n  #   --> \"LANS.SystemsBiology.AnalysisTools.DataVisualization.Interaction.Circos.Documents.Karyotype.Highlights.GradientMappings\"\n\n    type              = highlight\n    file              = data/highlight_data_0.txt\n    r1                = 3.95r\n    r0                = 3.8r\n    max               = 0.233698381696429\n    min               = 0\n    fill_color        = orange\n    orientation       = in\n    thickness         = 2\n    stroke_thickness  = 0\n    stroke_color      = grey\n  </plot>\n```\n\nPlot elements have 4 required property:\n\n|Property|Description|Example|\n|--------|-----------|-------|\n|type|The circle plot type|``type = highlight``|\n|file|The data file for this circle plot|``file = data/highlight_data_0.txt``|\n|r1, r0|The outer and inner radius of the current circle, and this radius value is relative to the define of **ideogram** its radius value. <br />In the most of situation, radius value is recommended end with a lower case letter ``r`` as suffix.|``r1 = 3.95r``|\n\n![](https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/track_radius.png)\n\nThe track is confined within ``r0``-``r1`` radius limits. When using the relative ``r`` suffix, the values are relative To the position Of the ``ideogram``.\n\nSo that we can define a basically abstract class for the circos plot in VisualBasic:\n\n```vbnet\nPublic MustInherit Class Plot\n\n   Public MustOverride ReadOnly Property type As String\n   Public Property file As String\n\n   ''' <summary>\n   ''' 圈外径(单位 r，请使用格式\"<double>r\")\n   ''' </summary>\n   ''' <value></value>\n   ''' <returns></returns>\n   ''' <remarks></remarks>\n   Public Property r1 As String = \"0.75r\"\n\n   ''' <summary>\n   ''' 圈内径(单位 r，请使用格式\"<double>r\")\n   ''' </summary>\n   ''' <value></value>\n   ''' <returns></returns>\n   ''' <remarks></remarks>\n   Public Property r0 As String = \"0.6r\"\n   ...\nEnd Class\n```\n\n### **ideogram.conf**\nIn Circos images, ideograms refer to graphical representations of chromosomes (or regions of chromosomes). By default ideograms are arranged in a circle, but radial positions of individual ideograms can be changed. The legibility of the figure depends on an ideogram organization that suits the data type and density.\n\n#### karyotype &amp; band\nThe ideogram using karyotype file to define the genome skeleton information, which defines the name, size and color of chromosomes. \n\nA simple karyotype with 5 chromosomes:\n\n```\n# chr1 5Mb\n# chr2 10Mb\n# chr3 20Mb\n# chr4 50Mb\n# chr5 100Mb\n\nchr - chr1 1 0 5000000 spectral-5-div-1\nchr - chr2 2 0 10000000 spectral-5-div-2\nchr - chr3 3 0 20000000 spectral-5-div-3\nchr - chr4 4 0 50000000 spectral-5-div-4\nchr - chr5 5 0 100000000 spectral-5-div-5\n```\n\nThe format Of this file Is\n\n```\nchr - CHRNAME CHRLABEL START End COLOR\n```\n\t\nIn data files, chromosomes are referred To by CHRNAME. On the image, they are labeled by CHRLABEL. Colors are taken from the spectral Brewer palette. To learn about Brewer palettes, see: [www.colorbrewer.org](http://www.colorbrewer.org)\n\n```vbnet\n    ''' <summary>\n    ''' The ideogram using karyotype file to define the genome skeleton information, which defines the name, size and color of chromosomes. \n    ''' </summary>\n    ''' <remarks>\n    ''' </remarks>\n    Public Class Karyotype\n\n        Public Property chrName As String\n        Public Property chrLabel As String\n        Public Property start As Integer\n        Public Property [end] As Integer\n        Public Property color As String\n\n        Public Overrides Function ToString() As String\n            Return $\"chr - {chrName} {chrLabel} {start} {[end]} {color}\"\n        End Function\n    End Class\n```\n\n### **ticks.conf**\n\nThe tick label is derived by multiplying the tick position by ``multiplier`` and casting it in ``format``:\n\n```c\nsprintf(format,position*multiplier)\n```\n\n|Format Controls|Data types|\n|---------------|----------|\n|%d  |integer|\n|%f  |float|\n|%.1f|float with one decimal|\n|%.2f|float with two decimals|\n\nFor other formats, you can see the document of perl: **http://perldoc.perl.org/functions/sprintf.html**\n\n![](https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/image-02.png)\n\n## Track data types\n**Data for tracks is loaded from a plain-text file. Each data point is stored on a separate line, except for links which use two lines per link. The definition of a data point within a track is based on the genomic range, which is a combination of chromosome and start/end position.** For example, this is a very basically tracks data in the circos:\n\n```\n# the basis for a data point is a range\nchr12 1000 5000\n```\n\nIn this tracks data example, there are two elements: First token ``chr12`` is the name of the chromosome which its identifer in your research is chr12, and then the followed two number value is that this track data on the position of this chromosome: from ranges of 1000bp to 5000bp with default forwards strand. \nSo that we can define a data model for this track data in .NET:\n\n```vbnet\n''' <summary>\n''' Data for tracks is loaded from a plain-text file. Each data point is stored on a \n''' separate line, except for links which use two lines per link.\n''' \n''' The definition Of a data point within a track Is based On the genomic range, \n''' which Is a combination Of chromosome And start/End position.\n''' </summary>\nPublic MustInherit Class TrackData\n\n    ''' <summary>\n    ''' Chromosomes name\n    ''' </summary>\n    Public Property chr As String\n    Public Property start As Integer\n    Public Property [end] As Integer\n    Public Property formatting As Formatting\n\n    ''' <summary>\n    ''' Using <see cref=\"ToString()\"/> method for creates tracks data document.\n    ''' </summary>\n    ''' <returns></returns>\n    Public Overrides Function ToString() As String\n        Dim s As String = __trackData()\n        Dim format As String = formatting.ToString\n\n        If Not String.IsNullOrEmpty(format) Then\n            s &= \" \" & format\n        End If\n\n        Return s\n    End Function\n\n    Protected MustOverride Function __trackData() As String\n\nEnd Class\n```\n\n![](https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/track_example.png)\n\nAnd at here we can using ``formatting`` property to provides some additional data track annotation:\n\n```vbnet\n''' <summary>\n''' Annotated with formatting parameters that control how the point Is drawn. \n''' </summary>\nPublic Structure Formatting\n\n    ''' <summary>\n    ''' Only works in scatter, example is ``10p``\n    ''' </summary>\n    Dim glyph_size As String\n    ''' <summary>\n    ''' Only works in scatter, example is ``circle``\n    ''' </summary>\n    Dim glyph As String\n    ''' <summary>\n    ''' Works on histogram\n    ''' </summary>\n    Dim fill_color As String\n    ''' <summary>\n    ''' Works on any <see cref=\"Trackdata\"/> data type.\n    ''' </summary>\n    Dim URL As String\n\n    Public Overrides Function ToString() As String\n        Dim s As New StringBuilder\n\n        Call __attach(s, NameOf(glyph), glyph)\n        Call __attach(s, NameOf(glyph_size), glyph_size)\n        Call __attach(s, NameOf(fill_color), fill_color)\n        Call __attach(s, \"url\", URL)\n\n        Return s.ToString\n    End Function\n\n    Private Shared Sub __attach(ByRef s As StringBuilder, name As String, value As String)\n        If s.Length = 0 Then\n            Call s.Append($\"{name}={value}\")\n        Else\n            Call s.Append($\",{name}={value}\")\n        End If\n    End Sub\nEnd Structure\n```\n\nAnd then we can define the data point of scatter, stack value, and text labels, separatly, from inherits of the abstract base type ``TrackData`` that we define above:\n\n```vbnet\n''' <summary>\n''' Tracks such As scatter plot, line plot, histogram Or heat map, associate a value With Each range. The input To this kind Of track would be\n''' </summary>\nPublic Class ValueTrackData : Inherits TrackData\n\n    Public Property value As Double\n\n    Protected Overrides Function __trackData() As String\n        Return $\"{chr} {start} {[end]} {value}\"\n    End Function\nEnd Class\n\n''' <summary>\n''' The exception Is a stacked histogram, which associates a list Of values With a range.\n''' </summary>\nPublic Class StackedTrackData : Inherits TrackData\n\n    Public Property values As Double()\n\n    Protected Overrides Function __trackData() As String\n        Dim values As String = Me.values.Select(Function(d) d.ToString).JoinBy(\",\")\n        Return $\"{chr} {start} {[end]} {values}\"\n    End Function\nEnd Class\n\n''' <summary>\n''' The value For a text track Is interpreted As a text label (other tracks require that this field be a floating point number).\n''' </summary>\nPublic Class TextTrackData : Inherits TrackData\n\n    Public Property text As String\n\n    Protected Overrides Function __trackData() As String\n        Return $\"{chr} {start} {[end]} {text}\"\n    End Function\nEnd Class\n```\n\nAnd then we can creates a object for generates the tracks data plant-text document:\n\n```vbnet\n''' <summary>\n''' Tracks data document generator\n''' </summary>\n''' <typeparam name=\"T\"></typeparam>\nPublic Class data(Of T As TrackData) : Inherits List(Of T)\n\n    Sub New()\n        Call MyBase.New(0)\n    End Sub\n\n    Public Overrides Function ToString() As String\n        Return Me.GetJson\n    End Function\n\n    Public Function GetDocumentText() As String\n        Dim sb As New StringBuilder\n\n        For Each x As T In Me\n            If Not String.IsNullOrEmpty(x.comment) Then\n                Call sb.AppendLine(\"# \" & x.comment)\n            End If\n            Call sb.AppendLine(x.ToString)\n        Next\n\n        Return sb.ToString\n    End Function\nEnd Class\n```\n\n## Track plot types\nThere are 5 track plot type that we usually used in the genome visualization: **histogram, scatter, heatmap, links, and text.**\n\n### histogram\n\nHistograms are a type of track that displays 2D data, which associates a value with a genomic position. Line plots, scatter plots and heat maps are examples of other 2D tracks.\n\nThe data format for 2D data is:\n\n```\n #chr start end value [options]\n ...\n hs3 196000000 197999999 71.0000\n hs3 198000000 199999999 57.0000\n hs4 0 1999999 28.0000\n hs4 2000000 3999999 40.0000\n hs4 4000000 5999999 59.0000\n ...\n```\n\nEach histogram is defined in a ``<plot>`` block within an enclosing ``<plots>`` block.\n\n![](https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/tracks_histogram.png)\n### scatter\n\n\n\n![](https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/tracks_scatter.png)\n### heatmap\n\nHeat maps are used for data types which associate a value with a genomic position, or region. As such, this track uses the same data format as histograms.\n\nThe track linearly maps a range of values ``[min,max]`` onto a list of colors ``c[n], i=0..N.``\n\n```\n f = (value - min) / ( max - min )\n n = N * f\n```\n\nColors are defined by a combination of lists or CSV. Color lists exist for all Brewer palletes (see etc/colors.brewer.lists.conf) as well as for N-step hue (hue-sN, e.g. hue-s5 = hue000,hue005,hue010,...) and N-color hue (hue-sN, e.g. hue-3 = hue000,hue120,hue140). Here is a color example:\n\n```\ncolor = hs1_a5,hs1_a4,hs1_a3,hs1_a2,hs1_a1,hs1\n```\n\nIf scale_log_base is used, the mapping is not linear, but a power law:\n\n```\n n = N * f**(1/scale_log_base)\n```\n\n+ When ``scale_log_base`` > 1 the dynamic range for values close to ``min`` is expanded.\n+ When ``scale_log_base`` < 1 the dynamic range for values close to ``max`` is expanded.\n\n```\nscale_log_base = 5\n```\n\n![](https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/tracks_heatmap.png)\n### links\n![](https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/tracks_links.png)\n### text\n\nLike with other tracks, text is limited to a radial range by setting ``r0`` and ``r1``.\n\nIndividual labels can be repositioned automatically with in a position window to fit more labels, without overlap. This is an advanced feature.\n\n![](https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/tracks_text.png)\n\n### Extension track types\n","source":"_posts/circos.md","raw":"---\ntitle: Circos plots\ntags: [vb.net, CodeProject, circos, data visualization, GCModeller, perl]\ndate: 2016-06-15\n---\n\n![](https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/circos-cancer-cell.png)\n\nCircos is a software package for visualizing data and information which is written in **Perl** language. It visualizes data in a circular layout — this makes Circos ideal for exploring relationships between objects or positions. There are other reasons why a circular layout is advantageous, not the least being the fact that it is attractive. From the previous works on the bacterial genome annotation by using GCModeller, required of hybried programming with Perl language with vb.net for the annotation result visualization, by using this Circos software Perl script, I created this Circos API for .NET language, and introduce this .NET language API library.\n\n> HOME page: http://circos.ca/\n> GCModeller API: https://github.com/SMRUCC/GCModeller.Circos\n\n<!--more-->\n\nThe typically circos data directory consists of two parts of data file: **\\*.conf** circos plots layout configuration file, and **\\*.txt** plots data files in a directory which is named '**data**':\n\n>  + circos.conf\n>  + ideogram.conf\n>  + ticks.conf\n>  + ./data/...\n\n![](https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/workflow.png)\n\nUsing circos program just very easy, using ``cd`` command enter the plots' config directory which the file **circos.conf** is located in the terminal, and then inputs the perl script location of circos, circos script will search for the **circos.conf** file automatically in your directory and then invoke drawing:\n\n```bash\n$ ~/circos/bin/circos\n```\n\n> ![](https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/AQ%20Magazine%2C%20April%202011_Simon%20Fraser%20University.png)\n> *AQ Magazine, April 2011 (Simon Fraser University)*\n\n## Layout configs\nThe circos layout configs is consist with 3 config file in the majority:\n\n+ **circos.conf**\n\tThis is the main configuration of your circos plot, and the required graphics includes file, genome brief description, plots' details information was recorded at here.\n+ **ideogram.conf**\n\tideogram visualizes linear layout of CHROMOSOMES, plots of the chromosomes brief information, and layout overview controls of the circos plot.\n+ **ticks.conf**\n\tThe display style of the periodic loci labels for the genome chromosomes sequence was define at here.\n\n### Basic Document Abstract\n\nFirst of all, we define the very basically class object at here for all of the circos documents at here:\n\n```vbnet\n''' <summary>\n''' This object can be convert to text document by using method <see cref=\"GenerateDocument\"/>\n''' </summary>\nPublic Interface ICircosDocNode\n    Function GenerateDocument(IndentLevel As Integer) As String\nEnd Interface\n\n''' <summary>\n''' This object can be save as a text doc for the circos plot\n''' </summary>\nPublic Interface ICircosDocument : Inherits ICircosDocNode, ISaveHandle\nEnd Interface\n```\n\nIn this interface definition, we just created the basically text document model for the files in the circos program: ``ICircosDocNode`` have an abstract function to generates the document text and ``ICircosDocument`` object by multiple inheritance, it have both method of document generation inherits from ``ICircosDocNode`` and abstract save method that inherits from text file save model ``ISaveHandle``\n\nSo that based on the ``ICircosDocument`` abstract type, we can define the model of ``*.conf`` file at here:\n\n```vbnet\n    ''' <summary>\n    ''' Abstract of the circos config files.\n    ''' </summary>\n    Public MustInherit Class CircosConfig : Inherits ITextFile\n        Implements ICircosDocument\n\n        ''' <summary>\n        ''' 文档的对其他的配置文件的引用列表\n        ''' </summary>\n        ''' <returns></returns>\n        Public Property Includes As List(Of CircosConfig)\n\n        ''' <summary>\n        ''' This config file was included in ``circos.conf``.(主配置文件Circos.conf)\n        ''' </summary>\n        ''' <returns></returns>\n        Public Property main As Circos\n\n        Sub New(FileName As String, Circos As Circos)\n            MyBase.FilePath = FileName\n            Me.main = Circos\n        End Sub\n\n        Protected Function GenerateIncludes() As String\n            If Includes.IsNullOrEmpty Then\n                Return \"\"\n            End If\n\n            Dim sb As New StringBuilder(1024)\n\n            For Each includeFile As CircosConfig In Includes\n                Call __appendLine(sb, includeFile)\n                Call includeFile.Save(Encoding:=Encoding.ASCII)\n            Next\n\n            Return sb.ToString\n        End Function\n\n        Private Shared Sub __appendLine(ByRef sb As StringBuilder, include As CircosConfig)\n            Dim refPath As String = Tools.TrimPath(include)\n\n            If TypeOf include Is CircosDistributed Then\n                Dim name As String = DirectCast(include, CircosDistributed).Section\n                If Not String.IsNullOrEmpty(name) Then\n                    Call sb.AppendLine($\"<{name}>\")\n                    Call sb.AppendLine($\"   <<include {refPath}>>\")\n                    Call sb.AppendLine($\"</{name}>\")\n                Else\n                    Call sb.AppendLine($\"<<include {refPath}>>\")\n                End If\n            Else\n                Call sb.AppendLine($\"<<include {refPath}>>\")\n            End If\n        End Sub\n\n        Protected MustOverride Function GenerateDocument(IndentLevel As Integer) As String Implements ICircosDocument.GenerateDocument\n\n        ''' <summary>\n        ''' Auto detected that current is circos distribution or not, if true, then this file will not be saved.\n        ''' </summary>\n        ''' <param name=\"FilePath\"></param>\n        ''' <param name=\"Encoding\"></param>\n        ''' <returns></returns>\n        Public Overrides Function Save(Optional FilePath As String = \"\", Optional Encoding As Encoding = Nothing) As Boolean Implements ICircosDocument.Save\n            If TypeOf Me Is CircosDistributed Then\n                Return True ' 系统自带的不需要进行保存了\n            End If\n\n            Dim doc As String = GenerateDocument(IndentLevel:=Scan0)\n            Return doc.SaveTo(getPath(FilePath), If(Encoding Is Nothing, Encoding.ASCII, Encoding))\n        End Function\n    End Class\n```\n\n### **circos.conf**\n#### a. Includes header\n\nThe files includes in the ``circos.conf`` configuration file using both relative path or absolute path. By default, almost all of the circos distribution miscellaneous pre-defined config file is saved in the ``ect/`` directory, **likes color definitions, fonts, patterns, etc**. By using the relative path, circos program will search you included file in the directory of:\n\n1. ./etc/\n2. ../etc/\n3. circos/bin/etc/\n4. circos/etc/\n\nAs always, centralize all your inputs as much as possible.\n\nAll most all of the ``circos.conf`` layout config file required of these housekeeping includes. These should be present in every Circos configuration file and overridden as required. To see the content of these files, you can look in ``etc/`` in the Circos distribution.\n\nIt's best to include these files using relative paths. This way, the files if not found under your current directory will be drawn from the Circos distribution.\n\n```html\n<<include etc/colors_fonts_patterns.conf>>\n<<include etc/housekeeping.conf>>\n<<include ticks.conf>>\n<<include ideogram.conf>>\n\n<image>\n  <<include etc/image.conf>>\n</image>\n```\n\nDebugging, I/O an dother system parameters Included from Circos distribution.\n\n```\n<<include etc/housekeeping.conf>> \n```\n\nRGB/HSV color definitions, color lists, location of fonts, fill patterns. Included from Circos distribution. In older versions of Circos, colors, fonts and patterns were included individually. Now, this is done from a central file.\n\n```\n<<include etc/colors_fonts_patterns.conf>> \n```\n\nAnd here is the definition of the reference to these circos distribution includes:\n\n```vbnet\n''' <summary>\n''' The circos distributed includes files.\n''' (这个对象仅仅是为了引用Cricos系统内的预置的配置文件的设立的，故而<see cref=\"CircosDistributed.GenerateDocument\">\n''' </see>方法和<see cref=\"CircosDistributed.Save\"></see>方法可以不会被实现)\n''' </summary>\n''' <remarks></remarks>\nPublic Class CircosDistributed : Inherits CircosConfig\n\n    Public ReadOnly Property Section As String\n\n    ''' <summary>\n    ''' 由于这些是系统的预置的数据，是不能够再修改了的，所以这里由于没有数据配置项，直接忽略掉了Circos配置数据\n    ''' </summary>\n    ''' <param name=\"path\"></param>\n    ''' <remarks></remarks>\n    Protected Sub New(path As String)\n        Call MyBase.New(path, Circos:=Nothing)\n    End Sub\n\n    Protected Sub New(path As String, name As String)\n        Me.New(path)\n        Me.Section = name\n    End Sub\n\n    Protected Overrides Function GenerateDocument(IndentLevel As Integer) As String\n        Return \"\"\n    End Function\n\n#Region \"The Circos Distribution includes\"\n    ''' <summary>\n    ''' Debugging, I/O an dother system parameters included from Circos distribution.\n    ''' </summary>\n    ''' <returns></returns>\n    Public Shared ReadOnly Property HouseKeeping As CircosDistributed =\n        New CircosDistributed(\"etc/housekeeping.conf\")\n\n    Public Shared ReadOnly Property ColorBrain As CircosDistributed =\n        New CircosDistributed(\"color.brain.conf\", \"colors\")\n    Public Shared ReadOnly Property Image As CircosDistributed =\n            New CircosDistributed(\"etc/image.conf\", \"image\")\n\n    ''' <summary>\n    ''' RGB/HSV color definitions, color lists, location of fonts, fill\n    ''' patterns. Included from Circos distribution.\n    '''\n    ''' In older versions Of Circos, colors, fonts And patterns were\n    ''' included individually. Now, this Is done from a central file. Make\n    ''' sure that you're not importing these values twice by having\n    '''\n    ''' *** Do Not Do THIS ***\n    ''' &lt;colors>\n    '''     &lt;&lt;include etc/colors.conf>>\n    ''' &lt;colors>\n    ''' **********************\n    ''' </summary>\n    ''' <returns></returns>\n    Public Shared ReadOnly Property ColorFontsPatterns As CircosDistributed =\n        New CircosDistributed(\"etc/colors_fonts_patterns.conf\")\n#End Region\nEnd Class\n```\n\n#### b. genome information &amp; plots configs\n\nHere is some property that used on the genome layout controls in the ``circos.conf`` file:\n\n```vbnet\n''' <summary>\n''' circos.conf\n'''                                     ____ _\n'''                                    / ___(_)_ __ ___ ___  ___\n'''                                   | |   | | '__/ __/ _ \\/ __|\n'''                                   | |___| | | | (_| (_) \\__ \\\n'''                                    \\____|_|_|  \\___\\___/|___/\n'''\n'''                                                round Is good\n'''\n''' circos - generate circularly composited information graphics\n''' \n''' (Circo基因组绘图程序的主配置文件)\n''' </summary>\n''' <remarks>\n''' ![](https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/workflow.png)\n''' \n''' Typically a central configuration file which defines data track information (circos.conf) imports other \n''' configuration files that store parameters that change less frequently \n''' (tick marks, ideogram size, grid, etc). \n''' \n''' Data for each data track Is stored in a file And the same file can be used for multiple tracks.\n''' \n''' + PNG image output Is ideal For immediate viewing, web-based reporting Or presentation. \n''' + SVG output Is most suitable For generating very high resolution line art For publication And For customizing aspects Of the figure.\n''' </remarks>\nPublic Class Circos : Inherits CircosConfig\n    Implements ICircosDocument\n\n    ''' <summary>\n    ''' The basically genome structure plots: Chromosome name, size and color definition.(基本的数据文件)\n    ''' </summary>\n    ''' <value></value>\n    ''' <returns></returns>\n    ''' <remarks></remarks>\n    <Circos> Public Property karyotype As String = \"data/genes.txt\"\n    <Circos> Public Property genome As String = null\n    <Circos> Public Property use_rules As String = yes\n\n    ''' <summary>\n    ''' The chromosomes_unit value is used as a unit (suffix \"u\") to shorten\n    ''' values In other parts Of the configuration file. Some parameters,\n    ''' such As ideogram And tick spacing, accept \"u\" suffixes, so instead Of\n    ''' </summary>\n    ''' <returns></returns>\n    <Circos> Public Property chromosomes_units As String = \"5000\"\n    ''' <summary>\n    ''' The default behaviour is to display all chromosomes defined in the\n    ''' karyotype file. In this example, I Select only a subset.\n    '''\n    ''' The 'chromosomes' parameter has several uses, and selecting which\n    ''' chromosomes To show Is one Of them. You can list them\n    ''' Or provide a regular expression that selects them based On a successful match\n    ''' The ``$`` anchor Is necessary, otherwise chromosomes Like *hs10, hs11 And\n    ''' hs20* are also matched.\n    ''' </summary>\n    ''' <returns></returns>\n    <Circos> Public Property chromosomes_display_default As String = yes\n    <Circos> Public Property chromosomes As String = null\n    ''' <summary>\n    ''' By default, the scale progression is clockwise. You can set the\n    ''' Global angle progression Using 'angle_orientation' in the ``&lt;image>``\n    ''' block (clockwise Or counterclockwise). To reverse it For one Or\n    ''' several ideograms, use 'chromosomes-reverse'\n    ''' </summary>\n    ''' <returns></returns>\n    <Circos> Public Property chromosomes_reverse As String = null\n    ''' <summary>\n    ''' The default radial position for all ideograms is set by 'radius' in\n    ''' the ``&lt;ideogram>`` block (see ideogram.conf). To change the value For\n    ''' specific ideograms, use chromosomes_radius.\n    ''' </summary>\n    ''' <returns></returns>\n    <Circos> Public Property chromosomes_radius As String = null\n    ''' <summary>\n    ''' The size of the ideogram on the figure can be adjusted using an\n    ''' absolute Or relative magnification. Absolute scaling,\n    ''' shrinks Or expands the ideogram by a fixed factor. When the \"r\"\n    ''' suffix Is used, the magnification becomes relative To the\n    ''' circumference Of the figure. Thus, \n    ''' makes ``hs1`` To occupy 50% Of the figure. To uniformly distribute\n    ''' several ideogram within a fraction Of the figure, use a regular\n    ''' expression that selects the ideograms And the \"rn\" suffix (relative\n    ''' normalized).\n    ''' </summary>\n    ''' <returns></returns>\n    <Circos> Public Property chromosomes_scale As String = null\n    ''' <summary>\n    ''' The color of each ideogram is taken from the karyotype file. To\n    ''' change it, use 'chromosomes_color'.\n    ''' </summary>\n    ''' <returns></returns>\n    <Circos> Public Property chromosomes_color As String = null\n    <Circos> Public Property chromosomes_order As String = null\n    <Circos> Public Property chromosomes_breaks As String = null\n\t\t\n    ''' <summary>\n    ''' 基因组的骨架信息\n    ''' </summary>\n    ''' <returns></returns>\n    Public Property SkeletonKaryotype As SkeletonInfo\n```\n\n#### c. plots definitions(Tracks)\nThe plots definitions in the circos is in the section of ``<plots>...</plots>``, and each circle plot is define in the sub-section of ``<plot>...</plot>``, we call this circle plot as tracks. **Tracks are confined to a radial range and may overlap.**\n\n```xml\n  <plot>\n\n  #   --> \"LANS.SystemsBiology.AnalysisTools.DataVisualization.Interaction.Circos.Documents.Karyotype.Highlights.GradientMappings\"\n\n    type              = highlight\n    file              = data/highlight_data_0.txt\n    r1                = 3.95r\n    r0                = 3.8r\n    max               = 0.233698381696429\n    min               = 0\n    fill_color        = orange\n    orientation       = in\n    thickness         = 2\n    stroke_thickness  = 0\n    stroke_color      = grey\n  </plot>\n```\n\nPlot elements have 4 required property:\n\n|Property|Description|Example|\n|--------|-----------|-------|\n|type|The circle plot type|``type = highlight``|\n|file|The data file for this circle plot|``file = data/highlight_data_0.txt``|\n|r1, r0|The outer and inner radius of the current circle, and this radius value is relative to the define of **ideogram** its radius value. <br />In the most of situation, radius value is recommended end with a lower case letter ``r`` as suffix.|``r1 = 3.95r``|\n\n![](https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/track_radius.png)\n\nThe track is confined within ``r0``-``r1`` radius limits. When using the relative ``r`` suffix, the values are relative To the position Of the ``ideogram``.\n\nSo that we can define a basically abstract class for the circos plot in VisualBasic:\n\n```vbnet\nPublic MustInherit Class Plot\n\n   Public MustOverride ReadOnly Property type As String\n   Public Property file As String\n\n   ''' <summary>\n   ''' 圈外径(单位 r，请使用格式\"<double>r\")\n   ''' </summary>\n   ''' <value></value>\n   ''' <returns></returns>\n   ''' <remarks></remarks>\n   Public Property r1 As String = \"0.75r\"\n\n   ''' <summary>\n   ''' 圈内径(单位 r，请使用格式\"<double>r\")\n   ''' </summary>\n   ''' <value></value>\n   ''' <returns></returns>\n   ''' <remarks></remarks>\n   Public Property r0 As String = \"0.6r\"\n   ...\nEnd Class\n```\n\n### **ideogram.conf**\nIn Circos images, ideograms refer to graphical representations of chromosomes (or regions of chromosomes). By default ideograms are arranged in a circle, but radial positions of individual ideograms can be changed. The legibility of the figure depends on an ideogram organization that suits the data type and density.\n\n#### karyotype &amp; band\nThe ideogram using karyotype file to define the genome skeleton information, which defines the name, size and color of chromosomes. \n\nA simple karyotype with 5 chromosomes:\n\n```\n# chr1 5Mb\n# chr2 10Mb\n# chr3 20Mb\n# chr4 50Mb\n# chr5 100Mb\n\nchr - chr1 1 0 5000000 spectral-5-div-1\nchr - chr2 2 0 10000000 spectral-5-div-2\nchr - chr3 3 0 20000000 spectral-5-div-3\nchr - chr4 4 0 50000000 spectral-5-div-4\nchr - chr5 5 0 100000000 spectral-5-div-5\n```\n\nThe format Of this file Is\n\n```\nchr - CHRNAME CHRLABEL START End COLOR\n```\n\t\nIn data files, chromosomes are referred To by CHRNAME. On the image, they are labeled by CHRLABEL. Colors are taken from the spectral Brewer palette. To learn about Brewer palettes, see: [www.colorbrewer.org](http://www.colorbrewer.org)\n\n```vbnet\n    ''' <summary>\n    ''' The ideogram using karyotype file to define the genome skeleton information, which defines the name, size and color of chromosomes. \n    ''' </summary>\n    ''' <remarks>\n    ''' </remarks>\n    Public Class Karyotype\n\n        Public Property chrName As String\n        Public Property chrLabel As String\n        Public Property start As Integer\n        Public Property [end] As Integer\n        Public Property color As String\n\n        Public Overrides Function ToString() As String\n            Return $\"chr - {chrName} {chrLabel} {start} {[end]} {color}\"\n        End Function\n    End Class\n```\n\n### **ticks.conf**\n\nThe tick label is derived by multiplying the tick position by ``multiplier`` and casting it in ``format``:\n\n```c\nsprintf(format,position*multiplier)\n```\n\n|Format Controls|Data types|\n|---------------|----------|\n|%d  |integer|\n|%f  |float|\n|%.1f|float with one decimal|\n|%.2f|float with two decimals|\n\nFor other formats, you can see the document of perl: **http://perldoc.perl.org/functions/sprintf.html**\n\n![](https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/image-02.png)\n\n## Track data types\n**Data for tracks is loaded from a plain-text file. Each data point is stored on a separate line, except for links which use two lines per link. The definition of a data point within a track is based on the genomic range, which is a combination of chromosome and start/end position.** For example, this is a very basically tracks data in the circos:\n\n```\n# the basis for a data point is a range\nchr12 1000 5000\n```\n\nIn this tracks data example, there are two elements: First token ``chr12`` is the name of the chromosome which its identifer in your research is chr12, and then the followed two number value is that this track data on the position of this chromosome: from ranges of 1000bp to 5000bp with default forwards strand. \nSo that we can define a data model for this track data in .NET:\n\n```vbnet\n''' <summary>\n''' Data for tracks is loaded from a plain-text file. Each data point is stored on a \n''' separate line, except for links which use two lines per link.\n''' \n''' The definition Of a data point within a track Is based On the genomic range, \n''' which Is a combination Of chromosome And start/End position.\n''' </summary>\nPublic MustInherit Class TrackData\n\n    ''' <summary>\n    ''' Chromosomes name\n    ''' </summary>\n    Public Property chr As String\n    Public Property start As Integer\n    Public Property [end] As Integer\n    Public Property formatting As Formatting\n\n    ''' <summary>\n    ''' Using <see cref=\"ToString()\"/> method for creates tracks data document.\n    ''' </summary>\n    ''' <returns></returns>\n    Public Overrides Function ToString() As String\n        Dim s As String = __trackData()\n        Dim format As String = formatting.ToString\n\n        If Not String.IsNullOrEmpty(format) Then\n            s &= \" \" & format\n        End If\n\n        Return s\n    End Function\n\n    Protected MustOverride Function __trackData() As String\n\nEnd Class\n```\n\n![](https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/track_example.png)\n\nAnd at here we can using ``formatting`` property to provides some additional data track annotation:\n\n```vbnet\n''' <summary>\n''' Annotated with formatting parameters that control how the point Is drawn. \n''' </summary>\nPublic Structure Formatting\n\n    ''' <summary>\n    ''' Only works in scatter, example is ``10p``\n    ''' </summary>\n    Dim glyph_size As String\n    ''' <summary>\n    ''' Only works in scatter, example is ``circle``\n    ''' </summary>\n    Dim glyph As String\n    ''' <summary>\n    ''' Works on histogram\n    ''' </summary>\n    Dim fill_color As String\n    ''' <summary>\n    ''' Works on any <see cref=\"Trackdata\"/> data type.\n    ''' </summary>\n    Dim URL As String\n\n    Public Overrides Function ToString() As String\n        Dim s As New StringBuilder\n\n        Call __attach(s, NameOf(glyph), glyph)\n        Call __attach(s, NameOf(glyph_size), glyph_size)\n        Call __attach(s, NameOf(fill_color), fill_color)\n        Call __attach(s, \"url\", URL)\n\n        Return s.ToString\n    End Function\n\n    Private Shared Sub __attach(ByRef s As StringBuilder, name As String, value As String)\n        If s.Length = 0 Then\n            Call s.Append($\"{name}={value}\")\n        Else\n            Call s.Append($\",{name}={value}\")\n        End If\n    End Sub\nEnd Structure\n```\n\nAnd then we can define the data point of scatter, stack value, and text labels, separatly, from inherits of the abstract base type ``TrackData`` that we define above:\n\n```vbnet\n''' <summary>\n''' Tracks such As scatter plot, line plot, histogram Or heat map, associate a value With Each range. The input To this kind Of track would be\n''' </summary>\nPublic Class ValueTrackData : Inherits TrackData\n\n    Public Property value As Double\n\n    Protected Overrides Function __trackData() As String\n        Return $\"{chr} {start} {[end]} {value}\"\n    End Function\nEnd Class\n\n''' <summary>\n''' The exception Is a stacked histogram, which associates a list Of values With a range.\n''' </summary>\nPublic Class StackedTrackData : Inherits TrackData\n\n    Public Property values As Double()\n\n    Protected Overrides Function __trackData() As String\n        Dim values As String = Me.values.Select(Function(d) d.ToString).JoinBy(\",\")\n        Return $\"{chr} {start} {[end]} {values}\"\n    End Function\nEnd Class\n\n''' <summary>\n''' The value For a text track Is interpreted As a text label (other tracks require that this field be a floating point number).\n''' </summary>\nPublic Class TextTrackData : Inherits TrackData\n\n    Public Property text As String\n\n    Protected Overrides Function __trackData() As String\n        Return $\"{chr} {start} {[end]} {text}\"\n    End Function\nEnd Class\n```\n\nAnd then we can creates a object for generates the tracks data plant-text document:\n\n```vbnet\n''' <summary>\n''' Tracks data document generator\n''' </summary>\n''' <typeparam name=\"T\"></typeparam>\nPublic Class data(Of T As TrackData) : Inherits List(Of T)\n\n    Sub New()\n        Call MyBase.New(0)\n    End Sub\n\n    Public Overrides Function ToString() As String\n        Return Me.GetJson\n    End Function\n\n    Public Function GetDocumentText() As String\n        Dim sb As New StringBuilder\n\n        For Each x As T In Me\n            If Not String.IsNullOrEmpty(x.comment) Then\n                Call sb.AppendLine(\"# \" & x.comment)\n            End If\n            Call sb.AppendLine(x.ToString)\n        Next\n\n        Return sb.ToString\n    End Function\nEnd Class\n```\n\n## Track plot types\nThere are 5 track plot type that we usually used in the genome visualization: **histogram, scatter, heatmap, links, and text.**\n\n### histogram\n\nHistograms are a type of track that displays 2D data, which associates a value with a genomic position. Line plots, scatter plots and heat maps are examples of other 2D tracks.\n\nThe data format for 2D data is:\n\n```\n #chr start end value [options]\n ...\n hs3 196000000 197999999 71.0000\n hs3 198000000 199999999 57.0000\n hs4 0 1999999 28.0000\n hs4 2000000 3999999 40.0000\n hs4 4000000 5999999 59.0000\n ...\n```\n\nEach histogram is defined in a ``<plot>`` block within an enclosing ``<plots>`` block.\n\n![](https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/tracks_histogram.png)\n### scatter\n\n\n\n![](https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/tracks_scatter.png)\n### heatmap\n\nHeat maps are used for data types which associate a value with a genomic position, or region. As such, this track uses the same data format as histograms.\n\nThe track linearly maps a range of values ``[min,max]`` onto a list of colors ``c[n], i=0..N.``\n\n```\n f = (value - min) / ( max - min )\n n = N * f\n```\n\nColors are defined by a combination of lists or CSV. Color lists exist for all Brewer palletes (see etc/colors.brewer.lists.conf) as well as for N-step hue (hue-sN, e.g. hue-s5 = hue000,hue005,hue010,...) and N-color hue (hue-sN, e.g. hue-3 = hue000,hue120,hue140). Here is a color example:\n\n```\ncolor = hs1_a5,hs1_a4,hs1_a3,hs1_a2,hs1_a1,hs1\n```\n\nIf scale_log_base is used, the mapping is not linear, but a power law:\n\n```\n n = N * f**(1/scale_log_base)\n```\n\n+ When ``scale_log_base`` > 1 the dynamic range for values close to ``min`` is expanded.\n+ When ``scale_log_base`` < 1 the dynamic range for values close to ``max`` is expanded.\n\n```\nscale_log_base = 5\n```\n\n![](https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/tracks_heatmap.png)\n### links\n![](https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/tracks_links.png)\n### text\n\nLike with other tracks, text is limited to a radial range by setting ``r0`` and ``r1``.\n\nIndividual labels can be repositioned automatically with in a position window to fit more labels, without overlap. This is an advanced feature.\n\n![](https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/tracks_text.png)\n\n### Extension track types\n","slug":"circos","published":1,"updated":"2016-06-18T11:16:13.869Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cipnbu3dl000a8gv4817wf7pf","content":"<p><img src=\"https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/circos-cancer-cell.png\" alt=\"\"></p>\n<p>Circos is a software package for visualizing data and information which is written in <strong>Perl</strong> language. It visualizes data in a circular layout — this makes Circos ideal for exploring relationships between objects or positions. There are other reasons why a circular layout is advantageous, not the least being the fact that it is attractive. From the previous works on the bacterial genome annotation by using GCModeller, required of hybried programming with Perl language with vb.net for the annotation result visualization, by using this Circos software Perl script, I created this Circos API for .NET language, and introduce this .NET language API library.</p>\n<blockquote>\n<p>HOME page: <a href=\"http://circos.ca/\" target=\"_blank\" rel=\"external\">http://circos.ca/</a><br>GCModeller API: <a href=\"https://github.com/SMRUCC/GCModeller.Circos\" target=\"_blank\" rel=\"external\">https://github.com/SMRUCC/GCModeller.Circos</a></p>\n</blockquote>\n<a id=\"more\"></a>\n<p>The typically circos data directory consists of two parts of data file: <strong>*.conf</strong> circos plots layout configuration file, and <strong>*.txt</strong> plots data files in a directory which is named ‘<strong>data</strong>‘:</p>\n<blockquote>\n<ul>\n<li>circos.conf</li>\n<li>ideogram.conf</li>\n<li>ticks.conf</li>\n<li>./data/…</li>\n</ul>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/workflow.png\" alt=\"\"></p>\n<p>Using circos program just very easy, using <code>cd</code> command enter the plots’ config directory which the file <strong>circos.conf</strong> is located in the terminal, and then inputs the perl script location of circos, circos script will search for the <strong>circos.conf</strong> file automatically in your directory and then invoke drawing:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ~/circos/bin/circos</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><img src=\"https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/AQ%20Magazine%2C%20April%202011_Simon%20Fraser%20University.png\" alt=\"\"><br><em>AQ Magazine, April 2011 (Simon Fraser University)</em></p>\n</blockquote>\n<h2 id=\"Layout-configs\"><a href=\"#Layout-configs\" class=\"headerlink\" title=\"Layout configs\"></a>Layout configs</h2><p>The circos layout configs is consist with 3 config file in the majority:</p>\n<ul>\n<li><strong>circos.conf</strong><br>  This is the main configuration of your circos plot, and the required graphics includes file, genome brief description, plots’ details information was recorded at here.</li>\n<li><strong>ideogram.conf</strong><br>  ideogram visualizes linear layout of CHROMOSOMES, plots of the chromosomes brief information, and layout overview controls of the circos plot.</li>\n<li><strong>ticks.conf</strong><br>  The display style of the periodic loci labels for the genome chromosomes sequence was define at here.</li>\n</ul>\n<h3 id=\"Basic-Document-Abstract\"><a href=\"#Basic-Document-Abstract\" class=\"headerlink\" title=\"Basic Document Abstract\"></a>Basic Document Abstract</h3><p>First of all, we define the very basically class object at here for all of the circos documents at here:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> This object can be convert to text document by using method <span class=\"doctag\">&lt;see cref=\"GenerateDocument\"/&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Interface</span> ICircosDocNode</span><br><span class=\"line\">    <span class=\"keyword\">Function</span> GenerateDocument(IndentLevel <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span>) <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Interface</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> This object can be save as a text doc for the circos plot</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Interface</span> ICircosDocument : <span class=\"keyword\">Inherits</span> ICircosDocNode, ISaveHandle</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Interface</span></span><br></pre></td></tr></table></figure>\n<p>In this interface definition, we just created the basically text document model for the files in the circos program: <code>ICircosDocNode</code> have an abstract function to generates the document text and <code>ICircosDocument</code> object by multiple inheritance, it have both method of document generation inherits from <code>ICircosDocNode</code> and abstract save method that inherits from text file save model <code>ISaveHandle</code></p>\n<p>So that based on the <code>ICircosDocument</code> abstract type, we can define the model of <code>*.conf</code> file at here:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Abstract of the circos config files.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">MustInherit</span> <span class=\"keyword\">Class</span> CircosConfig : <span class=\"keyword\">Inherits</span> ITextFile</span><br><span class=\"line\">    <span class=\"keyword\">Implements</span> ICircosDocument</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> 文档的对其他的配置文件的引用列表</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> Includes <span class=\"keyword\">As</span> List(<span class=\"keyword\">Of</span> CircosConfig)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> This config file was included in ``circos.conf``.(主配置文件Circos.conf)</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> main <span class=\"keyword\">As</span> Circos</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Sub</span> <span class=\"keyword\">New</span>(FileName <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>, Circos <span class=\"keyword\">As</span> Circos)</span><br><span class=\"line\">        <span class=\"keyword\">MyBase</span>.FilePath = FileName</span><br><span class=\"line\">        <span class=\"keyword\">Me</span>.main = Circos</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Protected</span> <span class=\"keyword\">Function</span> GenerateIncludes() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        <span class=\"keyword\">If</span> Includes.IsNullOrEmpty <span class=\"keyword\">Then</span></span><br><span class=\"line\">            <span class=\"keyword\">Return</span> <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> sb <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> StringBuilder(<span class=\"number\">1024</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">For</span> <span class=\"keyword\">Each</span> includeFile <span class=\"keyword\">As</span> CircosConfig <span class=\"keyword\">In</span> Includes</span><br><span class=\"line\">            <span class=\"keyword\">Call</span> __appendLine(sb, includeFile)</span><br><span class=\"line\">            <span class=\"keyword\">Call</span> includeFile.Save(Encoding:=Encoding.ASCII)</span><br><span class=\"line\">        <span class=\"keyword\">Next</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> sb.ToString</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Private</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> __appendLine(<span class=\"keyword\">ByRef</span> sb <span class=\"keyword\">As</span> StringBuilder, include <span class=\"keyword\">As</span> CircosConfig)</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> refPath <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = Tools.TrimPath(include)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">If</span> <span class=\"built_in\">TypeOf</span> include <span class=\"keyword\">Is</span> CircosDistributed <span class=\"keyword\">Then</span></span><br><span class=\"line\">            <span class=\"keyword\">Dim</span> name <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"built_in\">DirectCast</span>(include, CircosDistributed).Section</span><br><span class=\"line\">            <span class=\"keyword\">If</span> <span class=\"keyword\">Not</span> <span class=\"built_in\">String</span>.IsNullOrEmpty(name) <span class=\"keyword\">Then</span></span><br><span class=\"line\">                <span class=\"keyword\">Call</span> sb.AppendLine($<span class=\"string\">\"&lt;&#123;name&#125;&gt;\"</span>)</span><br><span class=\"line\">                <span class=\"keyword\">Call</span> sb.AppendLine($<span class=\"string\">\"   &lt;&lt;include &#123;refPath&#125;&gt;&gt;\"</span>)</span><br><span class=\"line\">                <span class=\"keyword\">Call</span> sb.AppendLine($<span class=\"string\">\"&lt;/&#123;name&#125;&gt;\"</span>)</span><br><span class=\"line\">            <span class=\"keyword\">Else</span></span><br><span class=\"line\">                <span class=\"keyword\">Call</span> sb.AppendLine($<span class=\"string\">\"&lt;&lt;include &#123;refPath&#125;&gt;&gt;\"</span>)</span><br><span class=\"line\">            <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">        <span class=\"keyword\">Else</span></span><br><span class=\"line\">            <span class=\"keyword\">Call</span> sb.AppendLine($<span class=\"string\">\"&lt;&lt;include &#123;refPath&#125;&gt;&gt;\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Protected</span> <span class=\"keyword\">MustOverride</span> <span class=\"keyword\">Function</span> GenerateDocument(IndentLevel <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span>) <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> <span class=\"keyword\">Implements</span> ICircosDocument.GenerateDocument</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Auto detected that current is circos distribution or not, if true, then this file will not be saved.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"FilePath\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"Encoding\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> Save(<span class=\"keyword\">Optional</span> FilePath <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"string\">\"\"</span>, <span class=\"keyword\">Optional</span> Encoding <span class=\"keyword\">As</span> Encoding = <span class=\"literal\">Nothing</span>) <span class=\"keyword\">As</span> <span class=\"built_in\">Boolean</span> <span class=\"keyword\">Implements</span> ICircosDocument.Save</span><br><span class=\"line\">        <span class=\"keyword\">If</span> <span class=\"built_in\">TypeOf</span> <span class=\"keyword\">Me</span> <span class=\"keyword\">Is</span> CircosDistributed <span class=\"keyword\">Then</span></span><br><span class=\"line\">            <span class=\"keyword\">Return</span> <span class=\"literal\">True</span> <span class=\"comment\">' 系统自带的不需要进行保存了</span></span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> doc <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = GenerateDocument(IndentLevel:=Scan0)</span><br><span class=\"line\">        <span class=\"keyword\">Return</span> doc.SaveTo(getPath(FilePath), <span class=\"keyword\">If</span>(Encoding <span class=\"keyword\">Is</span> <span class=\"literal\">Nothing</span>, Encoding.ASCII, Encoding))</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"circos-conf\"><a href=\"#circos-conf\" class=\"headerlink\" title=\"circos.conf\"></a><strong>circos.conf</strong></h3><h4 id=\"a-Includes-header\"><a href=\"#a-Includes-header\" class=\"headerlink\" title=\"a. Includes header\"></a>a. Includes header</h4><p>The files includes in the <code>circos.conf</code> configuration file using both relative path or absolute path. By default, almost all of the circos distribution miscellaneous pre-defined config file is saved in the <code>ect/</code> directory, <strong>likes color definitions, fonts, patterns, etc</strong>. By using the relative path, circos program will search you included file in the directory of:</p>\n<ol>\n<li>./etc/</li>\n<li>../etc/</li>\n<li>circos/bin/etc/</li>\n<li>circos/etc/</li>\n</ol>\n<p>As always, centralize all your inputs as much as possible.</p>\n<p>All most all of the <code>circos.conf</code> layout config file required of these housekeeping includes. These should be present in every Circos configuration file and overridden as required. To see the content of these files, you can look in <code>etc/</code> in the Circos distribution.</p>\n<p>It’s best to include these files using relative paths. This way, the files if not found under your current directory will be drawn from the Circos distribution.</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;&lt;include etc/colors_fonts_patterns.conf&gt;&gt;</span><br><span class=\"line\">&lt;&lt;include etc/housekeeping.conf&gt;&gt;</span><br><span class=\"line\">&lt;&lt;include ticks.conf&gt;&gt;</span><br><span class=\"line\">&lt;&lt;include ideogram.conf&gt;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;image&gt;</span><br><span class=\"line\">  &lt;&lt;include etc/image.conf&gt;&gt;</span><br><span class=\"line\">&lt;/image&gt;</span><br></pre></td></tr></table></figure>\n<p>Debugging, I/O an dother system parameters Included from Circos distribution.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;&lt;include etc/housekeeping.conf&gt;&gt;</span><br></pre></td></tr></table></figure>\n<p>RGB/HSV color definitions, color lists, location of fonts, fill patterns. Included from Circos distribution. In older versions of Circos, colors, fonts and patterns were included individually. Now, this is done from a central file.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;&lt;include etc/colors_fonts_patterns.conf&gt;&gt;</span><br></pre></td></tr></table></figure>\n<p>And here is the definition of the reference to these circos distribution includes:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> The circos distributed includes files.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> (这个对象仅仅是为了引用Cricos系统内的预置的配置文件的设立的，故而<span class=\"doctag\">&lt;see cref=\"CircosDistributed.GenerateDocument\"&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/see&gt;</span>方法和<span class=\"doctag\">&lt;see cref=\"CircosDistributed.Save\"&gt;</span><span class=\"doctag\">&lt;/see&gt;</span>方法可以不会被实现)</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;remarks&gt;</span><span class=\"doctag\">&lt;/remarks&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> CircosDistributed : <span class=\"keyword\">Inherits</span> CircosConfig</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">ReadOnly</span> <span class=\"keyword\">Property</span> Section <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> 由于这些是系统的预置的数据，是不能够再修改了的，所以这里由于没有数据配置项，直接忽略掉了Circos配置数据</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"path\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;remarks&gt;</span><span class=\"doctag\">&lt;/remarks&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Protected</span> <span class=\"keyword\">Sub</span> <span class=\"keyword\">New</span>(path <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>)</span><br><span class=\"line\">        <span class=\"keyword\">Call</span> <span class=\"keyword\">MyBase</span>.<span class=\"keyword\">New</span>(path, Circos:=<span class=\"literal\">Nothing</span>)</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Protected</span> <span class=\"keyword\">Sub</span> <span class=\"keyword\">New</span>(path <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>, name <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>)</span><br><span class=\"line\">        <span class=\"keyword\">Me</span>.<span class=\"keyword\">New</span>(path)</span><br><span class=\"line\">        <span class=\"keyword\">Me</span>.Section = name</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Protected</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> GenerateDocument(IndentLevel <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span>) <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">Region</span> \"The Circos Distribution includes\"</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Debugging, I/O an dother system parameters included from Circos distribution.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"keyword\">Property</span> HouseKeeping <span class=\"keyword\">As</span> CircosDistributed =</span><br><span class=\"line\">        <span class=\"keyword\">New</span> CircosDistributed(<span class=\"string\">\"etc/housekeeping.conf\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"keyword\">Property</span> ColorBrain <span class=\"keyword\">As</span> CircosDistributed =</span><br><span class=\"line\">        <span class=\"keyword\">New</span> CircosDistributed(<span class=\"string\">\"color.brain.conf\"</span>, <span class=\"string\">\"colors\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"keyword\">Property</span> Image <span class=\"keyword\">As</span> CircosDistributed =</span><br><span class=\"line\">            <span class=\"keyword\">New</span> CircosDistributed(<span class=\"string\">\"etc/image.conf\"</span>, <span class=\"string\">\"image\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> RGB/HSV color definitions, color lists, location of fonts, fill</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> patterns. Included from Circos distribution.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> In older versions Of Circos, colors, fonts And patterns were</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> included individually. Now, this Is done from a central file. Make</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> sure that you're not importing these values twice by having</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> *** Do Not Do THIS ***</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> &amp;lt;colors&gt;</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span>     &amp;lt;&amp;lt;include etc/colors.conf&gt;&gt;</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> &amp;lt;colors&gt;</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> **********************</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"keyword\">Property</span> ColorFontsPatterns <span class=\"keyword\">As</span> CircosDistributed =</span><br><span class=\"line\">        <span class=\"keyword\">New</span> CircosDistributed(<span class=\"string\">\"etc/colors_fonts_patterns.conf\"</span>)</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">End</span> <span class=\"meta-keyword\">Region</span></span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"b-genome-information-amp-plots-configs\"><a href=\"#b-genome-information-amp-plots-configs\" class=\"headerlink\" title=\"b. genome information &amp; plots configs\"></a>b. genome information &amp; plots configs</h4><p>Here is some property that used on the genome layout controls in the <code>circos.conf</code> file:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> circos.conf</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span>                                     ____ _</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span>                                    / ___(_)_ __ ___ ___  ___</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span>                                   | |   | | '__/ __/ _ \\/ __|</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span>                                   | |___| | | | (_| (_) \\__ \\</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span>                                    \\____|_|_|  \\___\\___/|___/</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span>                                                round Is good</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> circos - generate circularly composited information graphics</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> </span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> (Circo基因组绘图程序的主配置文件)</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;remarks&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> ![](https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/workflow.png)</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> </span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Typically a central configuration file which defines data track information (circos.conf) imports other </span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> configuration files that store parameters that change less frequently </span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> (tick marks, ideogram size, grid, etc). </span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> </span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Data for each data track Is stored in a file And the same file can be used for multiple tracks.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> </span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> + PNG image output Is ideal For immediate viewing, web-based reporting Or presentation. </span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> + SVG output Is most suitable For generating very high resolution line art For publication And For customizing aspects Of the figure.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/remarks&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> Circos : <span class=\"keyword\">Inherits</span> CircosConfig</span><br><span class=\"line\">    <span class=\"keyword\">Implements</span> ICircosDocument</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> The basically genome structure plots: Chromosome name, size and color definition.(基本的数据文件)</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;value&gt;</span><span class=\"doctag\">&lt;/value&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;remarks&gt;</span><span class=\"doctag\">&lt;/remarks&gt;</span></span></span><br><span class=\"line\">    &lt;Circos&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> karyotype <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"string\">\"data/genes.txt\"</span></span><br><span class=\"line\">    &lt;Circos&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> genome <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = null</span><br><span class=\"line\">    &lt;Circos&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> use_rules <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = yes</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> The chromosomes_unit value is used as a unit (suffix \"u\") to shorten</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> values In other parts Of the configuration file. Some parameters,</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> such As ideogram And tick spacing, accept \"u\" suffixes, so instead Of</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    &lt;Circos&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> chromosomes_units <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"string\">\"5000\"</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> The default behaviour is to display all chromosomes defined in the</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> karyotype file. In this example, I Select only a subset.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> The 'chromosomes' parameter has several uses, and selecting which</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> chromosomes To show Is one Of them. You can list them</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Or provide a regular expression that selects them based On a successful match</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> The ``$`` anchor Is necessary, otherwise chromosomes Like *hs10, hs11 And</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> hs20* are also matched.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    &lt;Circos&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> chromosomes_display_default <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = yes</span><br><span class=\"line\">    &lt;Circos&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> chromosomes <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = null</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> By default, the scale progression is clockwise. You can set the</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Global angle progression Using 'angle_orientation' in the ``&amp;lt;image&gt;``</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> block (clockwise Or counterclockwise). To reverse it For one Or</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> several ideograms, use 'chromosomes-reverse'</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    &lt;Circos&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> chromosomes_reverse <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = null</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> The default radial position for all ideograms is set by 'radius' in</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> the ``&amp;lt;ideogram&gt;`` block (see ideogram.conf). To change the value For</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> specific ideograms, use chromosomes_radius.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    &lt;Circos&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> chromosomes_radius <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = null</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> The size of the ideogram on the figure can be adjusted using an</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> absolute Or relative magnification. Absolute scaling,</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> shrinks Or expands the ideogram by a fixed factor. When the \"r\"</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> suffix Is used, the magnification becomes relative To the</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> circumference Of the figure. Thus, </span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> makes ``hs1`` To occupy 50% Of the figure. To uniformly distribute</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> several ideogram within a fraction Of the figure, use a regular</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> expression that selects the ideograms And the \"rn\" suffix (relative</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> normalized).</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    &lt;Circos&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> chromosomes_scale <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = null</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> The color of each ideogram is taken from the karyotype file. To</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> change it, use 'chromosomes_color'.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    &lt;Circos&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> chromosomes_color <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = null</span><br><span class=\"line\">    &lt;Circos&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> chromosomes_order <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = null</span><br><span class=\"line\">    &lt;Circos&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> chromosomes_breaks <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = null</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> 基因组的骨架信息</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> SkeletonKaryotype <span class=\"keyword\">As</span> SkeletonInfo</span><br></pre></td></tr></table></figure>\n<h4 id=\"c-plots-definitions-Tracks\"><a href=\"#c-plots-definitions-Tracks\" class=\"headerlink\" title=\"c. plots definitions(Tracks)\"></a>c. plots definitions(Tracks)</h4><p>The plots definitions in the circos is in the section of <code>&lt;plots&gt;...&lt;/plots&gt;</code>, and each circle plot is define in the sub-section of <code>&lt;plot&gt;...&lt;/plot&gt;</code>, we call this circle plot as tracks. <strong>Tracks are confined to a radial range and may overlap.</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">plot</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">#   --&gt; \"LANS.SystemsBiology.AnalysisTools.DataVisualization.Interaction.Circos.Documents.Karyotype.Highlights.GradientMappings\"</span><br><span class=\"line\"></span><br><span class=\"line\">  type              = highlight</span><br><span class=\"line\">  file              = data/highlight_data_0.txt</span><br><span class=\"line\">  r1                = 3.95r</span><br><span class=\"line\">  r0                = 3.8r</span><br><span class=\"line\">  max               = 0.233698381696429</span><br><span class=\"line\">  min               = 0</span><br><span class=\"line\">  fill_color        = orange</span><br><span class=\"line\">  orientation       = in</span><br><span class=\"line\">  thickness         = 2</span><br><span class=\"line\">  stroke_thickness  = 0</span><br><span class=\"line\">  stroke_color      = grey</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">plot</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>Plot elements have 4 required property:</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>The circle plot type</td>\n<td><code>type = highlight</code></td>\n</tr>\n<tr>\n<td>file</td>\n<td>The data file for this circle plot</td>\n<td><code>file = data/highlight_data_0.txt</code></td>\n</tr>\n<tr>\n<td>r1, r0</td>\n<td>The outer and inner radius of the current circle, and this radius value is relative to the define of <strong>ideogram</strong> its radius value. <br>In the most of situation, radius value is recommended end with a lower case letter <code>r</code> as suffix.</td>\n<td><code>r1 = 3.95r</code></td>\n</tr>\n</tbody>\n</table>\n<p><img src=\"https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/track_radius.png\" alt=\"\"></p>\n<p>The track is confined within <code>r0</code>-<code>r1</code> radius limits. When using the relative <code>r</code> suffix, the values are relative To the position Of the <code>ideogram</code>.</p>\n<p>So that we can define a basically abstract class for the circos plot in VisualBasic:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">MustInherit</span> <span class=\"keyword\">Class</span> Plot</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">Public</span> <span class=\"keyword\">MustOverride</span> <span class=\"keyword\">ReadOnly</span> <span class=\"keyword\">Property</span> type <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">   <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> file <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">   <span class=\"comment\"><span class=\"doctag\">'''</span> 圈外径(单位 r，请使用格式\"<span class=\"doctag\">&lt;double&gt;</span>r\")</span></span><br><span class=\"line\">   <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">   <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;value&gt;</span><span class=\"doctag\">&lt;/value&gt;</span></span></span><br><span class=\"line\">   <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">   <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;remarks&gt;</span><span class=\"doctag\">&lt;/remarks&gt;</span></span></span><br><span class=\"line\">   <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> r1 <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"string\">\"0.75r\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">   <span class=\"comment\"><span class=\"doctag\">'''</span> 圈内径(单位 r，请使用格式\"<span class=\"doctag\">&lt;double&gt;</span>r\")</span></span><br><span class=\"line\">   <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">   <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;value&gt;</span><span class=\"doctag\">&lt;/value&gt;</span></span></span><br><span class=\"line\">   <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">   <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;remarks&gt;</span><span class=\"doctag\">&lt;/remarks&gt;</span></span></span><br><span class=\"line\">   <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> r0 <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"string\">\"0.6r\"</span></span><br><span class=\"line\">   ...</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"ideogram-conf\"><a href=\"#ideogram-conf\" class=\"headerlink\" title=\"ideogram.conf\"></a><strong>ideogram.conf</strong></h3><p>In Circos images, ideograms refer to graphical representations of chromosomes (or regions of chromosomes). By default ideograms are arranged in a circle, but radial positions of individual ideograms can be changed. The legibility of the figure depends on an ideogram organization that suits the data type and density.</p>\n<h4 id=\"karyotype-amp-band\"><a href=\"#karyotype-amp-band\" class=\"headerlink\" title=\"karyotype &amp; band\"></a>karyotype &amp; band</h4><p>The ideogram using karyotype file to define the genome skeleton information, which defines the name, size and color of chromosomes. </p>\n<p>A simple karyotype with 5 chromosomes:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># chr1 5Mb</span><br><span class=\"line\"># chr2 10Mb</span><br><span class=\"line\"># chr3 20Mb</span><br><span class=\"line\"># chr4 50Mb</span><br><span class=\"line\"># chr5 100Mb</span><br><span class=\"line\"></span><br><span class=\"line\">chr - chr1 1 0 5000000 spectral-5-div-1</span><br><span class=\"line\">chr - chr2 2 0 10000000 spectral-5-div-2</span><br><span class=\"line\">chr - chr3 3 0 20000000 spectral-5-div-3</span><br><span class=\"line\">chr - chr4 4 0 50000000 spectral-5-div-4</span><br><span class=\"line\">chr - chr5 5 0 100000000 spectral-5-div-5</span><br></pre></td></tr></table></figure>\n<p>The format Of this file Is</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chr - CHRNAME CHRLABEL START End COLOR</span><br></pre></td></tr></table></figure>\n<p>In data files, chromosomes are referred To by CHRNAME. On the image, they are labeled by CHRLABEL. Colors are taken from the spectral Brewer palette. To learn about Brewer palettes, see: <a href=\"http://www.colorbrewer.org\" target=\"_blank\" rel=\"external\">www.colorbrewer.org</a></p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> The ideogram using karyotype file to define the genome skeleton information, which defines the name, size and color of chromosomes. </span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;remarks&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/remarks&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> Karyotype</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> chrName <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> chrLabel <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> start <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> [<span class=\"keyword\">end</span>] <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> color <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> ToString() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> $<span class=\"string\">\"chr - &#123;chrName&#125; &#123;chrLabel&#125; &#123;start&#125; &#123;[end]&#125; &#123;color&#125;\"</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"ticks-conf\"><a href=\"#ticks-conf\" class=\"headerlink\" title=\"ticks.conf\"></a><strong>ticks.conf</strong></h3><p>The tick label is derived by multiplying the tick position by <code>multiplier</code> and casting it in <code>format</code>:</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sprintf</span>(format,position*multiplier)</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Format Controls</th>\n<th>Data types</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>%d</td>\n<td>integer</td>\n</tr>\n<tr>\n<td>%f</td>\n<td>float</td>\n</tr>\n<tr>\n<td>%.1f</td>\n<td>float with one decimal</td>\n</tr>\n<tr>\n<td>%.2f</td>\n<td>float with two decimals</td>\n</tr>\n</tbody>\n</table>\n<p>For other formats, you can see the document of perl: <strong><a href=\"http://perldoc.perl.org/functions/sprintf.html\" target=\"_blank\" rel=\"external\">http://perldoc.perl.org/functions/sprintf.html</a></strong></p>\n<p><img src=\"https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/image-02.png\" alt=\"\"></p>\n<h2 id=\"Track-data-types\"><a href=\"#Track-data-types\" class=\"headerlink\" title=\"Track data types\"></a>Track data types</h2><p><strong>Data for tracks is loaded from a plain-text file. Each data point is stored on a separate line, except for links which use two lines per link. The definition of a data point within a track is based on the genomic range, which is a combination of chromosome and start/end position.</strong> For example, this is a very basically tracks data in the circos:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># the basis for a data point is a range</span><br><span class=\"line\">chr12 1000 5000</span><br></pre></td></tr></table></figure>\n<p>In this tracks data example, there are two elements: First token <code>chr12</code> is the name of the chromosome which its identifer in your research is chr12, and then the followed two number value is that this track data on the position of this chromosome: from ranges of 1000bp to 5000bp with default forwards strand.<br>So that we can define a data model for this track data in .NET:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Data for tracks is loaded from a plain-text file. Each data point is stored on a </span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> separate line, except for links which use two lines per link.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> </span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> The definition Of a data point within a track Is based On the genomic range, </span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> which Is a combination Of chromosome And start/End position.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">MustInherit</span> <span class=\"keyword\">Class</span> TrackData</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Chromosomes name</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> chr <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> start <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> [<span class=\"keyword\">end</span>] <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> formatting <span class=\"keyword\">As</span> Formatting</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Using <span class=\"doctag\">&lt;see cref=\"ToString()\"/&gt;</span> method for creates tracks data document.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> ToString() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> s <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = __trackData()</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> format <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = formatting.ToString</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">If</span> <span class=\"keyword\">Not</span> <span class=\"built_in\">String</span>.IsNullOrEmpty(format) <span class=\"keyword\">Then</span></span><br><span class=\"line\">            s &amp;= <span class=\"string\">\" \"</span> &amp; format</span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> s</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Protected</span> <span class=\"keyword\">MustOverride</span> <span class=\"keyword\">Function</span> __trackData() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/track_example.png\" alt=\"\"></p>\n<p>And at here we can using <code>formatting</code> property to provides some additional data track annotation:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Annotated with formatting parameters that control how the point Is drawn. </span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Structure</span> Formatting</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Only works in scatter, example is ``10p``</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> glyph_size <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Only works in scatter, example is ``circle``</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> glyph <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Works on histogram</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> fill_color <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Works on any <span class=\"doctag\">&lt;see cref=\"Trackdata\"/&gt;</span> data type.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> URL <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> ToString() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> s <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> StringBuilder</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">Call</span> __attach(s, NameOf(glyph), glyph)</span><br><span class=\"line\">        <span class=\"keyword\">Call</span> __attach(s, NameOf(glyph_size), glyph_size)</span><br><span class=\"line\">        <span class=\"keyword\">Call</span> __attach(s, NameOf(fill_color), fill_color)</span><br><span class=\"line\">        <span class=\"keyword\">Call</span> __attach(s, <span class=\"string\">\"url\"</span>, URL)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> s.ToString</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Private</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> __attach(<span class=\"keyword\">ByRef</span> s <span class=\"keyword\">As</span> StringBuilder, name <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>, value <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>)</span><br><span class=\"line\">        <span class=\"keyword\">If</span> s.Length = <span class=\"number\">0</span> <span class=\"keyword\">Then</span></span><br><span class=\"line\">            <span class=\"keyword\">Call</span> s.Append($<span class=\"string\">\"&#123;name&#125;=&#123;value&#125;\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">Else</span></span><br><span class=\"line\">            <span class=\"keyword\">Call</span> s.Append($<span class=\"string\">\",&#123;name&#125;=&#123;value&#125;\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Structure</span></span><br></pre></td></tr></table></figure>\n<p>And then we can define the data point of scatter, stack value, and text labels, separatly, from inherits of the abstract base type <code>TrackData</code> that we define above:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Tracks such As scatter plot, line plot, histogram Or heat map, associate a value With Each range. The input To this kind Of track would be</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> ValueTrackData : <span class=\"keyword\">Inherits</span> TrackData</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> value <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Protected</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> __trackData() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> $<span class=\"string\">\"&#123;chr&#125; &#123;start&#125; &#123;[end]&#125; &#123;value&#125;\"</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> The exception Is a stacked histogram, which associates a list Of values With a range.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> StackedTrackData : <span class=\"keyword\">Inherits</span> TrackData</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> values <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Protected</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> __trackData() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> values <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"keyword\">Me</span>.values.<span class=\"keyword\">Select</span>(<span class=\"keyword\">Function</span>(d) d.ToString).JoinBy(<span class=\"string\">\",\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">Return</span> $<span class=\"string\">\"&#123;chr&#125; &#123;start&#125; &#123;[end]&#125; &#123;values&#125;\"</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> The value For a text track Is interpreted As a text label (other tracks require that this field be a floating point number).</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> TextTrackData : <span class=\"keyword\">Inherits</span> TrackData</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> <span class=\"keyword\">text</span> <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Protected</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> __trackData() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> $<span class=\"string\">\"&#123;chr&#125; &#123;start&#125; &#123;[end]&#125; &#123;text&#125;\"</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<p>And then we can creates a object for generates the tracks data plant-text document:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Tracks data document generator</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;typeparam name=\"T\"&gt;</span><span class=\"doctag\">&lt;/typeparam&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> data(<span class=\"keyword\">Of</span> T <span class=\"keyword\">As</span> TrackData) : <span class=\"keyword\">Inherits</span> List(<span class=\"keyword\">Of</span> T)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Sub</span> <span class=\"keyword\">New</span>()</span><br><span class=\"line\">        <span class=\"keyword\">Call</span> <span class=\"keyword\">MyBase</span>.<span class=\"keyword\">New</span>(<span class=\"number\">0</span>)</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> ToString() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> <span class=\"keyword\">Me</span>.GetJson</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> GetDocumentText() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> sb <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> StringBuilder</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">For</span> <span class=\"keyword\">Each</span> x <span class=\"keyword\">As</span> T <span class=\"keyword\">In</span> <span class=\"keyword\">Me</span></span><br><span class=\"line\">            <span class=\"keyword\">If</span> <span class=\"keyword\">Not</span> <span class=\"built_in\">String</span>.IsNullOrEmpty(x.comment) <span class=\"keyword\">Then</span></span><br><span class=\"line\">                <span class=\"keyword\">Call</span> sb.AppendLine(<span class=\"string\">\"# \"</span> &amp; x.comment)</span><br><span class=\"line\">            <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">            <span class=\"keyword\">Call</span> sb.AppendLine(x.ToString)</span><br><span class=\"line\">        <span class=\"keyword\">Next</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> sb.ToString</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Track-plot-types\"><a href=\"#Track-plot-types\" class=\"headerlink\" title=\"Track plot types\"></a>Track plot types</h2><p>There are 5 track plot type that we usually used in the genome visualization: <strong>histogram, scatter, heatmap, links, and text.</strong></p>\n<h3 id=\"histogram\"><a href=\"#histogram\" class=\"headerlink\" title=\"histogram\"></a>histogram</h3><p>Histograms are a type of track that displays 2D data, which associates a value with a genomic position. Line plots, scatter plots and heat maps are examples of other 2D tracks.</p>\n<p>The data format for 2D data is:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#chr start end value [options]</span><br><span class=\"line\">...</span><br><span class=\"line\">hs3 196000000 197999999 71.0000</span><br><span class=\"line\">hs3 198000000 199999999 57.0000</span><br><span class=\"line\">hs4 0 1999999 28.0000</span><br><span class=\"line\">hs4 2000000 3999999 40.0000</span><br><span class=\"line\">hs4 4000000 5999999 59.0000</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>Each histogram is defined in a <code>&lt;plot&gt;</code> block within an enclosing <code>&lt;plots&gt;</code> block.</p>\n<p><img src=\"https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/tracks_histogram.png\" alt=\"\"></p>\n<h3 id=\"scatter\"><a href=\"#scatter\" class=\"headerlink\" title=\"scatter\"></a>scatter</h3><p><img src=\"https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/tracks_scatter.png\" alt=\"\"></p>\n<h3 id=\"heatmap\"><a href=\"#heatmap\" class=\"headerlink\" title=\"heatmap\"></a>heatmap</h3><p>Heat maps are used for data types which associate a value with a genomic position, or region. As such, this track uses the same data format as histograms.</p>\n<p>The track linearly maps a range of values <code>[min,max]</code> onto a list of colors <code>c[n], i=0..N.</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f = (value - min) / ( max - min )</span><br><span class=\"line\">n = N * f</span><br></pre></td></tr></table></figure>\n<p>Colors are defined by a combination of lists or CSV. Color lists exist for all Brewer palletes (see etc/colors.brewer.lists.conf) as well as for N-step hue (hue-sN, e.g. hue-s5 = hue000,hue005,hue010,…) and N-color hue (hue-sN, e.g. hue-3 = hue000,hue120,hue140). Here is a color example:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">color = hs1_a5,hs1_a4,hs1_a3,hs1_a2,hs1_a1,hs1</span><br></pre></td></tr></table></figure>\n<p>If scale_log_base is used, the mapping is not linear, but a power law:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">n = N * f**(1/scale_log_base)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>When <code>scale_log_base</code> &gt; 1 the dynamic range for values close to <code>min</code> is expanded.</li>\n<li>When <code>scale_log_base</code> &lt; 1 the dynamic range for values close to <code>max</code> is expanded.</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scale_log_base = 5</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/tracks_heatmap.png\" alt=\"\"></p>\n<h3 id=\"links\"><a href=\"#links\" class=\"headerlink\" title=\"links\"></a>links</h3><p><img src=\"https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/tracks_links.png\" alt=\"\"></p>\n<h3 id=\"text\"><a href=\"#text\" class=\"headerlink\" title=\"text\"></a>text</h3><p>Like with other tracks, text is limited to a radial range by setting <code>r0</code> and <code>r1</code>.</p>\n<p>Individual labels can be repositioned automatically with in a position window to fit more labels, without overlap. This is an advanced feature.</p>\n<p><img src=\"https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/tracks_text.png\" alt=\"\"></p>\n<h3 id=\"Extension-track-types\"><a href=\"#Extension-track-types\" class=\"headerlink\" title=\"Extension track types\"></a>Extension track types</h3>","excerpt":"<p><img src=\"https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/circos-cancer-cell.png\" alt=\"\"></p>\n<p>Circos is a software package for visualizing data and information which is written in <strong>Perl</strong> language. It visualizes data in a circular layout — this makes Circos ideal for exploring relationships between objects or positions. There are other reasons why a circular layout is advantageous, not the least being the fact that it is attractive. From the previous works on the bacterial genome annotation by using GCModeller, required of hybried programming with Perl language with vb.net for the annotation result visualization, by using this Circos software Perl script, I created this Circos API for .NET language, and introduce this .NET language API library.</p>\n<blockquote>\n<p>HOME page: <a href=\"http://circos.ca/\">http://circos.ca/</a><br>GCModeller API: <a href=\"https://github.com/SMRUCC/GCModeller.Circos\">https://github.com/SMRUCC/GCModeller.Circos</a></p>\n</blockquote>","more":"<p>The typically circos data directory consists of two parts of data file: <strong>*.conf</strong> circos plots layout configuration file, and <strong>*.txt</strong> plots data files in a directory which is named ‘<strong>data</strong>‘:</p>\n<blockquote>\n<ul>\n<li>circos.conf</li>\n<li>ideogram.conf</li>\n<li>ticks.conf</li>\n<li>./data/…</li>\n</ul>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/workflow.png\" alt=\"\"></p>\n<p>Using circos program just very easy, using <code>cd</code> command enter the plots’ config directory which the file <strong>circos.conf</strong> is located in the terminal, and then inputs the perl script location of circos, circos script will search for the <strong>circos.conf</strong> file automatically in your directory and then invoke drawing:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ~/circos/bin/circos</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><img src=\"https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/AQ%20Magazine%2C%20April%202011_Simon%20Fraser%20University.png\" alt=\"\"><br><em>AQ Magazine, April 2011 (Simon Fraser University)</em></p>\n</blockquote>\n<h2 id=\"Layout-configs\"><a href=\"#Layout-configs\" class=\"headerlink\" title=\"Layout configs\"></a>Layout configs</h2><p>The circos layout configs is consist with 3 config file in the majority:</p>\n<ul>\n<li><strong>circos.conf</strong><br>  This is the main configuration of your circos plot, and the required graphics includes file, genome brief description, plots’ details information was recorded at here.</li>\n<li><strong>ideogram.conf</strong><br>  ideogram visualizes linear layout of CHROMOSOMES, plots of the chromosomes brief information, and layout overview controls of the circos plot.</li>\n<li><strong>ticks.conf</strong><br>  The display style of the periodic loci labels for the genome chromosomes sequence was define at here.</li>\n</ul>\n<h3 id=\"Basic-Document-Abstract\"><a href=\"#Basic-Document-Abstract\" class=\"headerlink\" title=\"Basic Document Abstract\"></a>Basic Document Abstract</h3><p>First of all, we define the very basically class object at here for all of the circos documents at here:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> This object can be convert to text document by using method <span class=\"doctag\">&lt;see cref=\"GenerateDocument\"/&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Interface</span> ICircosDocNode</span><br><span class=\"line\">    <span class=\"keyword\">Function</span> GenerateDocument(IndentLevel <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span>) <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Interface</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> This object can be save as a text doc for the circos plot</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Interface</span> ICircosDocument : <span class=\"keyword\">Inherits</span> ICircosDocNode, ISaveHandle</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Interface</span></span><br></pre></td></tr></table></figure>\n<p>In this interface definition, we just created the basically text document model for the files in the circos program: <code>ICircosDocNode</code> have an abstract function to generates the document text and <code>ICircosDocument</code> object by multiple inheritance, it have both method of document generation inherits from <code>ICircosDocNode</code> and abstract save method that inherits from text file save model <code>ISaveHandle</code></p>\n<p>So that based on the <code>ICircosDocument</code> abstract type, we can define the model of <code>*.conf</code> file at here:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Abstract of the circos config files.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">MustInherit</span> <span class=\"keyword\">Class</span> CircosConfig : <span class=\"keyword\">Inherits</span> ITextFile</span><br><span class=\"line\">    <span class=\"keyword\">Implements</span> ICircosDocument</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> 文档的对其他的配置文件的引用列表</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> Includes <span class=\"keyword\">As</span> List(<span class=\"keyword\">Of</span> CircosConfig)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> This config file was included in ``circos.conf``.(主配置文件Circos.conf)</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> main <span class=\"keyword\">As</span> Circos</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Sub</span> <span class=\"keyword\">New</span>(FileName <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>, Circos <span class=\"keyword\">As</span> Circos)</span><br><span class=\"line\">        <span class=\"keyword\">MyBase</span>.FilePath = FileName</span><br><span class=\"line\">        <span class=\"keyword\">Me</span>.main = Circos</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Protected</span> <span class=\"keyword\">Function</span> GenerateIncludes() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        <span class=\"keyword\">If</span> Includes.IsNullOrEmpty <span class=\"keyword\">Then</span></span><br><span class=\"line\">            <span class=\"keyword\">Return</span> <span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> sb <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> StringBuilder(<span class=\"number\">1024</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">For</span> <span class=\"keyword\">Each</span> includeFile <span class=\"keyword\">As</span> CircosConfig <span class=\"keyword\">In</span> Includes</span><br><span class=\"line\">            <span class=\"keyword\">Call</span> __appendLine(sb, includeFile)</span><br><span class=\"line\">            <span class=\"keyword\">Call</span> includeFile.Save(Encoding:=Encoding.ASCII)</span><br><span class=\"line\">        <span class=\"keyword\">Next</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> sb.ToString</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Private</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> __appendLine(<span class=\"keyword\">ByRef</span> sb <span class=\"keyword\">As</span> StringBuilder, include <span class=\"keyword\">As</span> CircosConfig)</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> refPath <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = Tools.TrimPath(include)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">If</span> <span class=\"built_in\">TypeOf</span> include <span class=\"keyword\">Is</span> CircosDistributed <span class=\"keyword\">Then</span></span><br><span class=\"line\">            <span class=\"keyword\">Dim</span> name <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"built_in\">DirectCast</span>(include, CircosDistributed).Section</span><br><span class=\"line\">            <span class=\"keyword\">If</span> <span class=\"keyword\">Not</span> <span class=\"built_in\">String</span>.IsNullOrEmpty(name) <span class=\"keyword\">Then</span></span><br><span class=\"line\">                <span class=\"keyword\">Call</span> sb.AppendLine($<span class=\"string\">\"&lt;&#123;name&#125;&gt;\"</span>)</span><br><span class=\"line\">                <span class=\"keyword\">Call</span> sb.AppendLine($<span class=\"string\">\"   &lt;&lt;include &#123;refPath&#125;&gt;&gt;\"</span>)</span><br><span class=\"line\">                <span class=\"keyword\">Call</span> sb.AppendLine($<span class=\"string\">\"&lt;/&#123;name&#125;&gt;\"</span>)</span><br><span class=\"line\">            <span class=\"keyword\">Else</span></span><br><span class=\"line\">                <span class=\"keyword\">Call</span> sb.AppendLine($<span class=\"string\">\"&lt;&lt;include &#123;refPath&#125;&gt;&gt;\"</span>)</span><br><span class=\"line\">            <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">        <span class=\"keyword\">Else</span></span><br><span class=\"line\">            <span class=\"keyword\">Call</span> sb.AppendLine($<span class=\"string\">\"&lt;&lt;include &#123;refPath&#125;&gt;&gt;\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Protected</span> <span class=\"keyword\">MustOverride</span> <span class=\"keyword\">Function</span> GenerateDocument(IndentLevel <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span>) <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> <span class=\"keyword\">Implements</span> ICircosDocument.GenerateDocument</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Auto detected that current is circos distribution or not, if true, then this file will not be saved.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"FilePath\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"Encoding\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> Save(<span class=\"keyword\">Optional</span> FilePath <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"string\">\"\"</span>, <span class=\"keyword\">Optional</span> Encoding <span class=\"keyword\">As</span> Encoding = <span class=\"literal\">Nothing</span>) <span class=\"keyword\">As</span> <span class=\"built_in\">Boolean</span> <span class=\"keyword\">Implements</span> ICircosDocument.Save</span><br><span class=\"line\">        <span class=\"keyword\">If</span> <span class=\"built_in\">TypeOf</span> <span class=\"keyword\">Me</span> <span class=\"keyword\">Is</span> CircosDistributed <span class=\"keyword\">Then</span></span><br><span class=\"line\">            <span class=\"keyword\">Return</span> <span class=\"literal\">True</span> <span class=\"comment\">' 系统自带的不需要进行保存了</span></span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> doc <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = GenerateDocument(IndentLevel:=Scan0)</span><br><span class=\"line\">        <span class=\"keyword\">Return</span> doc.SaveTo(getPath(FilePath), <span class=\"keyword\">If</span>(Encoding <span class=\"keyword\">Is</span> <span class=\"literal\">Nothing</span>, Encoding.ASCII, Encoding))</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"circos-conf\"><a href=\"#circos-conf\" class=\"headerlink\" title=\"circos.conf\"></a><strong>circos.conf</strong></h3><h4 id=\"a-Includes-header\"><a href=\"#a-Includes-header\" class=\"headerlink\" title=\"a. Includes header\"></a>a. Includes header</h4><p>The files includes in the <code>circos.conf</code> configuration file using both relative path or absolute path. By default, almost all of the circos distribution miscellaneous pre-defined config file is saved in the <code>ect/</code> directory, <strong>likes color definitions, fonts, patterns, etc</strong>. By using the relative path, circos program will search you included file in the directory of:</p>\n<ol>\n<li>./etc/</li>\n<li>../etc/</li>\n<li>circos/bin/etc/</li>\n<li>circos/etc/</li>\n</ol>\n<p>As always, centralize all your inputs as much as possible.</p>\n<p>All most all of the <code>circos.conf</code> layout config file required of these housekeeping includes. These should be present in every Circos configuration file and overridden as required. To see the content of these files, you can look in <code>etc/</code> in the Circos distribution.</p>\n<p>It’s best to include these files using relative paths. This way, the files if not found under your current directory will be drawn from the Circos distribution.</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;&lt;include etc/colors_fonts_patterns.conf&gt;&gt;</span><br><span class=\"line\">&lt;&lt;include etc/housekeeping.conf&gt;&gt;</span><br><span class=\"line\">&lt;&lt;include ticks.conf&gt;&gt;</span><br><span class=\"line\">&lt;&lt;include ideogram.conf&gt;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;image&gt;</span><br><span class=\"line\">  &lt;&lt;include etc/image.conf&gt;&gt;</span><br><span class=\"line\">&lt;/image&gt;</span><br></pre></td></tr></table></figure>\n<p>Debugging, I/O an dother system parameters Included from Circos distribution.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;&lt;include etc/housekeeping.conf&gt;&gt;</span><br></pre></td></tr></table></figure>\n<p>RGB/HSV color definitions, color lists, location of fonts, fill patterns. Included from Circos distribution. In older versions of Circos, colors, fonts and patterns were included individually. Now, this is done from a central file.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;&lt;include etc/colors_fonts_patterns.conf&gt;&gt;</span><br></pre></td></tr></table></figure>\n<p>And here is the definition of the reference to these circos distribution includes:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> The circos distributed includes files.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> (这个对象仅仅是为了引用Cricos系统内的预置的配置文件的设立的，故而<span class=\"doctag\">&lt;see cref=\"CircosDistributed.GenerateDocument\"&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/see&gt;</span>方法和<span class=\"doctag\">&lt;see cref=\"CircosDistributed.Save\"&gt;</span><span class=\"doctag\">&lt;/see&gt;</span>方法可以不会被实现)</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;remarks&gt;</span><span class=\"doctag\">&lt;/remarks&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> CircosDistributed : <span class=\"keyword\">Inherits</span> CircosConfig</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">ReadOnly</span> <span class=\"keyword\">Property</span> Section <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> 由于这些是系统的预置的数据，是不能够再修改了的，所以这里由于没有数据配置项，直接忽略掉了Circos配置数据</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"path\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;remarks&gt;</span><span class=\"doctag\">&lt;/remarks&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Protected</span> <span class=\"keyword\">Sub</span> <span class=\"keyword\">New</span>(path <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>)</span><br><span class=\"line\">        <span class=\"keyword\">Call</span> <span class=\"keyword\">MyBase</span>.<span class=\"keyword\">New</span>(path, Circos:=<span class=\"literal\">Nothing</span>)</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Protected</span> <span class=\"keyword\">Sub</span> <span class=\"keyword\">New</span>(path <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>, name <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>)</span><br><span class=\"line\">        <span class=\"keyword\">Me</span>.<span class=\"keyword\">New</span>(path)</span><br><span class=\"line\">        <span class=\"keyword\">Me</span>.Section = name</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Protected</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> GenerateDocument(IndentLevel <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span>) <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">Region</span> \"The Circos Distribution includes\"</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Debugging, I/O an dother system parameters included from Circos distribution.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"keyword\">Property</span> HouseKeeping <span class=\"keyword\">As</span> CircosDistributed =</span><br><span class=\"line\">        <span class=\"keyword\">New</span> CircosDistributed(<span class=\"string\">\"etc/housekeeping.conf\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"keyword\">Property</span> ColorBrain <span class=\"keyword\">As</span> CircosDistributed =</span><br><span class=\"line\">        <span class=\"keyword\">New</span> CircosDistributed(<span class=\"string\">\"color.brain.conf\"</span>, <span class=\"string\">\"colors\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"keyword\">Property</span> Image <span class=\"keyword\">As</span> CircosDistributed =</span><br><span class=\"line\">            <span class=\"keyword\">New</span> CircosDistributed(<span class=\"string\">\"etc/image.conf\"</span>, <span class=\"string\">\"image\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> RGB/HSV color definitions, color lists, location of fonts, fill</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> patterns. Included from Circos distribution.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> In older versions Of Circos, colors, fonts And patterns were</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> included individually. Now, this Is done from a central file. Make</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> sure that you're not importing these values twice by having</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> *** Do Not Do THIS ***</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> &amp;lt;colors&gt;</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span>     &amp;lt;&amp;lt;include etc/colors.conf&gt;&gt;</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> &amp;lt;colors&gt;</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> **********************</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"keyword\">Property</span> ColorFontsPatterns <span class=\"keyword\">As</span> CircosDistributed =</span><br><span class=\"line\">        <span class=\"keyword\">New</span> CircosDistributed(<span class=\"string\">\"etc/colors_fonts_patterns.conf\"</span>)</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">End</span> <span class=\"meta-keyword\">Region</span></span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"b-genome-information-amp-plots-configs\"><a href=\"#b-genome-information-amp-plots-configs\" class=\"headerlink\" title=\"b. genome information &amp; plots configs\"></a>b. genome information &amp; plots configs</h4><p>Here is some property that used on the genome layout controls in the <code>circos.conf</code> file:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> circos.conf</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span>                                     ____ _</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span>                                    / ___(_)_ __ ___ ___  ___</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span>                                   | |   | | '__/ __/ _ \\/ __|</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span>                                   | |___| | | | (_| (_) \\__ \\</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span>                                    \\____|_|_|  \\___\\___/|___/</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span>                                                round Is good</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> circos - generate circularly composited information graphics</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> </span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> (Circo基因组绘图程序的主配置文件)</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;remarks&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> ![](https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/workflow.png)</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> </span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Typically a central configuration file which defines data track information (circos.conf) imports other </span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> configuration files that store parameters that change less frequently </span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> (tick marks, ideogram size, grid, etc). </span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> </span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Data for each data track Is stored in a file And the same file can be used for multiple tracks.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> </span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> + PNG image output Is ideal For immediate viewing, web-based reporting Or presentation. </span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> + SVG output Is most suitable For generating very high resolution line art For publication And For customizing aspects Of the figure.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/remarks&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> Circos : <span class=\"keyword\">Inherits</span> CircosConfig</span><br><span class=\"line\">    <span class=\"keyword\">Implements</span> ICircosDocument</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> The basically genome structure plots: Chromosome name, size and color definition.(基本的数据文件)</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;value&gt;</span><span class=\"doctag\">&lt;/value&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;remarks&gt;</span><span class=\"doctag\">&lt;/remarks&gt;</span></span></span><br><span class=\"line\">    &lt;Circos&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> karyotype <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"string\">\"data/genes.txt\"</span></span><br><span class=\"line\">    &lt;Circos&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> genome <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = null</span><br><span class=\"line\">    &lt;Circos&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> use_rules <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = yes</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> The chromosomes_unit value is used as a unit (suffix \"u\") to shorten</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> values In other parts Of the configuration file. Some parameters,</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> such As ideogram And tick spacing, accept \"u\" suffixes, so instead Of</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    &lt;Circos&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> chromosomes_units <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"string\">\"5000\"</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> The default behaviour is to display all chromosomes defined in the</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> karyotype file. In this example, I Select only a subset.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> The 'chromosomes' parameter has several uses, and selecting which</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> chromosomes To show Is one Of them. You can list them</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Or provide a regular expression that selects them based On a successful match</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> The ``$`` anchor Is necessary, otherwise chromosomes Like *hs10, hs11 And</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> hs20* are also matched.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    &lt;Circos&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> chromosomes_display_default <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = yes</span><br><span class=\"line\">    &lt;Circos&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> chromosomes <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = null</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> By default, the scale progression is clockwise. You can set the</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Global angle progression Using 'angle_orientation' in the ``&amp;lt;image&gt;``</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> block (clockwise Or counterclockwise). To reverse it For one Or</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> several ideograms, use 'chromosomes-reverse'</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    &lt;Circos&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> chromosomes_reverse <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = null</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> The default radial position for all ideograms is set by 'radius' in</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> the ``&amp;lt;ideogram&gt;`` block (see ideogram.conf). To change the value For</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> specific ideograms, use chromosomes_radius.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    &lt;Circos&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> chromosomes_radius <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = null</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> The size of the ideogram on the figure can be adjusted using an</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> absolute Or relative magnification. Absolute scaling,</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> shrinks Or expands the ideogram by a fixed factor. When the \"r\"</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> suffix Is used, the magnification becomes relative To the</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> circumference Of the figure. Thus, </span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> makes ``hs1`` To occupy 50% Of the figure. To uniformly distribute</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> several ideogram within a fraction Of the figure, use a regular</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> expression that selects the ideograms And the \"rn\" suffix (relative</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> normalized).</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    &lt;Circos&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> chromosomes_scale <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = null</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> The color of each ideogram is taken from the karyotype file. To</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> change it, use 'chromosomes_color'.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    &lt;Circos&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> chromosomes_color <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = null</span><br><span class=\"line\">    &lt;Circos&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> chromosomes_order <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = null</span><br><span class=\"line\">    &lt;Circos&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> chromosomes_breaks <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = null</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> 基因组的骨架信息</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> SkeletonKaryotype <span class=\"keyword\">As</span> SkeletonInfo</span><br></pre></td></tr></table></figure>\n<h4 id=\"c-plots-definitions-Tracks\"><a href=\"#c-plots-definitions-Tracks\" class=\"headerlink\" title=\"c. plots definitions(Tracks)\"></a>c. plots definitions(Tracks)</h4><p>The plots definitions in the circos is in the section of <code>&lt;plots&gt;...&lt;/plots&gt;</code>, and each circle plot is define in the sub-section of <code>&lt;plot&gt;...&lt;/plot&gt;</code>, we call this circle plot as tracks. <strong>Tracks are confined to a radial range and may overlap.</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">plot</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">#   --&gt; \"LANS.SystemsBiology.AnalysisTools.DataVisualization.Interaction.Circos.Documents.Karyotype.Highlights.GradientMappings\"</span><br><span class=\"line\"></span><br><span class=\"line\">  type              = highlight</span><br><span class=\"line\">  file              = data/highlight_data_0.txt</span><br><span class=\"line\">  r1                = 3.95r</span><br><span class=\"line\">  r0                = 3.8r</span><br><span class=\"line\">  max               = 0.233698381696429</span><br><span class=\"line\">  min               = 0</span><br><span class=\"line\">  fill_color        = orange</span><br><span class=\"line\">  orientation       = in</span><br><span class=\"line\">  thickness         = 2</span><br><span class=\"line\">  stroke_thickness  = 0</span><br><span class=\"line\">  stroke_color      = grey</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">plot</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>Plot elements have 4 required property:</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>The circle plot type</td>\n<td><code>type = highlight</code></td>\n</tr>\n<tr>\n<td>file</td>\n<td>The data file for this circle plot</td>\n<td><code>file = data/highlight_data_0.txt</code></td>\n</tr>\n<tr>\n<td>r1, r0</td>\n<td>The outer and inner radius of the current circle, and this radius value is relative to the define of <strong>ideogram</strong> its radius value. <br />In the most of situation, radius value is recommended end with a lower case letter <code>r</code> as suffix.</td>\n<td><code>r1 = 3.95r</code></td>\n</tr>\n</tbody>\n</table>\n<p><img src=\"https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/track_radius.png\" alt=\"\"></p>\n<p>The track is confined within <code>r0</code>-<code>r1</code> radius limits. When using the relative <code>r</code> suffix, the values are relative To the position Of the <code>ideogram</code>.</p>\n<p>So that we can define a basically abstract class for the circos plot in VisualBasic:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">MustInherit</span> <span class=\"keyword\">Class</span> Plot</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">Public</span> <span class=\"keyword\">MustOverride</span> <span class=\"keyword\">ReadOnly</span> <span class=\"keyword\">Property</span> type <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">   <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> file <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">   <span class=\"comment\"><span class=\"doctag\">'''</span> 圈外径(单位 r，请使用格式\"<span class=\"doctag\">&lt;double&gt;</span>r\")</span></span><br><span class=\"line\">   <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">   <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;value&gt;</span><span class=\"doctag\">&lt;/value&gt;</span></span></span><br><span class=\"line\">   <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">   <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;remarks&gt;</span><span class=\"doctag\">&lt;/remarks&gt;</span></span></span><br><span class=\"line\">   <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> r1 <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"string\">\"0.75r\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">   <span class=\"comment\"><span class=\"doctag\">'''</span> 圈内径(单位 r，请使用格式\"<span class=\"doctag\">&lt;double&gt;</span>r\")</span></span><br><span class=\"line\">   <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">   <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;value&gt;</span><span class=\"doctag\">&lt;/value&gt;</span></span></span><br><span class=\"line\">   <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">   <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;remarks&gt;</span><span class=\"doctag\">&lt;/remarks&gt;</span></span></span><br><span class=\"line\">   <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> r0 <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"string\">\"0.6r\"</span></span><br><span class=\"line\">   ...</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"ideogram-conf\"><a href=\"#ideogram-conf\" class=\"headerlink\" title=\"ideogram.conf\"></a><strong>ideogram.conf</strong></h3><p>In Circos images, ideograms refer to graphical representations of chromosomes (or regions of chromosomes). By default ideograms are arranged in a circle, but radial positions of individual ideograms can be changed. The legibility of the figure depends on an ideogram organization that suits the data type and density.</p>\n<h4 id=\"karyotype-amp-band\"><a href=\"#karyotype-amp-band\" class=\"headerlink\" title=\"karyotype &amp; band\"></a>karyotype &amp; band</h4><p>The ideogram using karyotype file to define the genome skeleton information, which defines the name, size and color of chromosomes. </p>\n<p>A simple karyotype with 5 chromosomes:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># chr1 5Mb</span><br><span class=\"line\"># chr2 10Mb</span><br><span class=\"line\"># chr3 20Mb</span><br><span class=\"line\"># chr4 50Mb</span><br><span class=\"line\"># chr5 100Mb</span><br><span class=\"line\"></span><br><span class=\"line\">chr - chr1 1 0 5000000 spectral-5-div-1</span><br><span class=\"line\">chr - chr2 2 0 10000000 spectral-5-div-2</span><br><span class=\"line\">chr - chr3 3 0 20000000 spectral-5-div-3</span><br><span class=\"line\">chr - chr4 4 0 50000000 spectral-5-div-4</span><br><span class=\"line\">chr - chr5 5 0 100000000 spectral-5-div-5</span><br></pre></td></tr></table></figure>\n<p>The format Of this file Is</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chr - CHRNAME CHRLABEL START End COLOR</span><br></pre></td></tr></table></figure>\n<p>In data files, chromosomes are referred To by CHRNAME. On the image, they are labeled by CHRLABEL. Colors are taken from the spectral Brewer palette. To learn about Brewer palettes, see: <a href=\"http://www.colorbrewer.org\">www.colorbrewer.org</a></p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> The ideogram using karyotype file to define the genome skeleton information, which defines the name, size and color of chromosomes. </span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;remarks&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/remarks&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> Karyotype</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> chrName <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> chrLabel <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> start <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> [<span class=\"keyword\">end</span>] <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> color <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> ToString() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> $<span class=\"string\">\"chr - &#123;chrName&#125; &#123;chrLabel&#125; &#123;start&#125; &#123;[end]&#125; &#123;color&#125;\"</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"ticks-conf\"><a href=\"#ticks-conf\" class=\"headerlink\" title=\"ticks.conf\"></a><strong>ticks.conf</strong></h3><p>The tick label is derived by multiplying the tick position by <code>multiplier</code> and casting it in <code>format</code>:</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sprintf</span>(format,position*multiplier)</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Format Controls</th>\n<th>Data types</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>%d</td>\n<td>integer</td>\n</tr>\n<tr>\n<td>%f</td>\n<td>float</td>\n</tr>\n<tr>\n<td>%.1f</td>\n<td>float with one decimal</td>\n</tr>\n<tr>\n<td>%.2f</td>\n<td>float with two decimals</td>\n</tr>\n</tbody>\n</table>\n<p>For other formats, you can see the document of perl: <strong><a href=\"http://perldoc.perl.org/functions/sprintf.html\">http://perldoc.perl.org/functions/sprintf.html</a></strong></p>\n<p><img src=\"https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/image-02.png\" alt=\"\"></p>\n<h2 id=\"Track-data-types\"><a href=\"#Track-data-types\" class=\"headerlink\" title=\"Track data types\"></a>Track data types</h2><p><strong>Data for tracks is loaded from a plain-text file. Each data point is stored on a separate line, except for links which use two lines per link. The definition of a data point within a track is based on the genomic range, which is a combination of chromosome and start/end position.</strong> For example, this is a very basically tracks data in the circos:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># the basis for a data point is a range</span><br><span class=\"line\">chr12 1000 5000</span><br></pre></td></tr></table></figure>\n<p>In this tracks data example, there are two elements: First token <code>chr12</code> is the name of the chromosome which its identifer in your research is chr12, and then the followed two number value is that this track data on the position of this chromosome: from ranges of 1000bp to 5000bp with default forwards strand.<br>So that we can define a data model for this track data in .NET:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Data for tracks is loaded from a plain-text file. Each data point is stored on a </span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> separate line, except for links which use two lines per link.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> </span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> The definition Of a data point within a track Is based On the genomic range, </span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> which Is a combination Of chromosome And start/End position.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">MustInherit</span> <span class=\"keyword\">Class</span> TrackData</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Chromosomes name</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> chr <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> start <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> [<span class=\"keyword\">end</span>] <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> formatting <span class=\"keyword\">As</span> Formatting</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Using <span class=\"doctag\">&lt;see cref=\"ToString()\"/&gt;</span> method for creates tracks data document.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> ToString() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> s <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = __trackData()</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> format <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = formatting.ToString</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">If</span> <span class=\"keyword\">Not</span> <span class=\"built_in\">String</span>.IsNullOrEmpty(format) <span class=\"keyword\">Then</span></span><br><span class=\"line\">            s &amp;= <span class=\"string\">\" \"</span> &amp; format</span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> s</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Protected</span> <span class=\"keyword\">MustOverride</span> <span class=\"keyword\">Function</span> __trackData() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/track_example.png\" alt=\"\"></p>\n<p>And at here we can using <code>formatting</code> property to provides some additional data track annotation:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Annotated with formatting parameters that control how the point Is drawn. </span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Structure</span> Formatting</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Only works in scatter, example is ``10p``</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> glyph_size <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Only works in scatter, example is ``circle``</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> glyph <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Works on histogram</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> fill_color <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Works on any <span class=\"doctag\">&lt;see cref=\"Trackdata\"/&gt;</span> data type.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> URL <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> ToString() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> s <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> StringBuilder</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">Call</span> __attach(s, NameOf(glyph), glyph)</span><br><span class=\"line\">        <span class=\"keyword\">Call</span> __attach(s, NameOf(glyph_size), glyph_size)</span><br><span class=\"line\">        <span class=\"keyword\">Call</span> __attach(s, NameOf(fill_color), fill_color)</span><br><span class=\"line\">        <span class=\"keyword\">Call</span> __attach(s, <span class=\"string\">\"url\"</span>, URL)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> s.ToString</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Private</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> __attach(<span class=\"keyword\">ByRef</span> s <span class=\"keyword\">As</span> StringBuilder, name <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>, value <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>)</span><br><span class=\"line\">        <span class=\"keyword\">If</span> s.Length = <span class=\"number\">0</span> <span class=\"keyword\">Then</span></span><br><span class=\"line\">            <span class=\"keyword\">Call</span> s.Append($<span class=\"string\">\"&#123;name&#125;=&#123;value&#125;\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">Else</span></span><br><span class=\"line\">            <span class=\"keyword\">Call</span> s.Append($<span class=\"string\">\",&#123;name&#125;=&#123;value&#125;\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Structure</span></span><br></pre></td></tr></table></figure>\n<p>And then we can define the data point of scatter, stack value, and text labels, separatly, from inherits of the abstract base type <code>TrackData</code> that we define above:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Tracks such As scatter plot, line plot, histogram Or heat map, associate a value With Each range. The input To this kind Of track would be</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> ValueTrackData : <span class=\"keyword\">Inherits</span> TrackData</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> value <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Protected</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> __trackData() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> $<span class=\"string\">\"&#123;chr&#125; &#123;start&#125; &#123;[end]&#125; &#123;value&#125;\"</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> The exception Is a stacked histogram, which associates a list Of values With a range.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> StackedTrackData : <span class=\"keyword\">Inherits</span> TrackData</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> values <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Protected</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> __trackData() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> values <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"keyword\">Me</span>.values.<span class=\"keyword\">Select</span>(<span class=\"keyword\">Function</span>(d) d.ToString).JoinBy(<span class=\"string\">\",\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">Return</span> $<span class=\"string\">\"&#123;chr&#125; &#123;start&#125; &#123;[end]&#125; &#123;values&#125;\"</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> The value For a text track Is interpreted As a text label (other tracks require that this field be a floating point number).</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> TextTrackData : <span class=\"keyword\">Inherits</span> TrackData</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> <span class=\"keyword\">text</span> <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Protected</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> __trackData() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> $<span class=\"string\">\"&#123;chr&#125; &#123;start&#125; &#123;[end]&#125; &#123;text&#125;\"</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<p>And then we can creates a object for generates the tracks data plant-text document:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Tracks data document generator</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;typeparam name=\"T\"&gt;</span><span class=\"doctag\">&lt;/typeparam&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> data(<span class=\"keyword\">Of</span> T <span class=\"keyword\">As</span> TrackData) : <span class=\"keyword\">Inherits</span> List(<span class=\"keyword\">Of</span> T)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Sub</span> <span class=\"keyword\">New</span>()</span><br><span class=\"line\">        <span class=\"keyword\">Call</span> <span class=\"keyword\">MyBase</span>.<span class=\"keyword\">New</span>(<span class=\"number\">0</span>)</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> ToString() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> <span class=\"keyword\">Me</span>.GetJson</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> GetDocumentText() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> sb <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> StringBuilder</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">For</span> <span class=\"keyword\">Each</span> x <span class=\"keyword\">As</span> T <span class=\"keyword\">In</span> <span class=\"keyword\">Me</span></span><br><span class=\"line\">            <span class=\"keyword\">If</span> <span class=\"keyword\">Not</span> <span class=\"built_in\">String</span>.IsNullOrEmpty(x.comment) <span class=\"keyword\">Then</span></span><br><span class=\"line\">                <span class=\"keyword\">Call</span> sb.AppendLine(<span class=\"string\">\"# \"</span> &amp; x.comment)</span><br><span class=\"line\">            <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">            <span class=\"keyword\">Call</span> sb.AppendLine(x.ToString)</span><br><span class=\"line\">        <span class=\"keyword\">Next</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> sb.ToString</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Track-plot-types\"><a href=\"#Track-plot-types\" class=\"headerlink\" title=\"Track plot types\"></a>Track plot types</h2><p>There are 5 track plot type that we usually used in the genome visualization: <strong>histogram, scatter, heatmap, links, and text.</strong></p>\n<h3 id=\"histogram\"><a href=\"#histogram\" class=\"headerlink\" title=\"histogram\"></a>histogram</h3><p>Histograms are a type of track that displays 2D data, which associates a value with a genomic position. Line plots, scatter plots and heat maps are examples of other 2D tracks.</p>\n<p>The data format for 2D data is:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#chr start end value [options]</span><br><span class=\"line\">...</span><br><span class=\"line\">hs3 196000000 197999999 71.0000</span><br><span class=\"line\">hs3 198000000 199999999 57.0000</span><br><span class=\"line\">hs4 0 1999999 28.0000</span><br><span class=\"line\">hs4 2000000 3999999 40.0000</span><br><span class=\"line\">hs4 4000000 5999999 59.0000</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>Each histogram is defined in a <code>&lt;plot&gt;</code> block within an enclosing <code>&lt;plots&gt;</code> block.</p>\n<p><img src=\"https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/tracks_histogram.png\" alt=\"\"></p>\n<h3 id=\"scatter\"><a href=\"#scatter\" class=\"headerlink\" title=\"scatter\"></a>scatter</h3><p><img src=\"https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/tracks_scatter.png\" alt=\"\"></p>\n<h3 id=\"heatmap\"><a href=\"#heatmap\" class=\"headerlink\" title=\"heatmap\"></a>heatmap</h3><p>Heat maps are used for data types which associate a value with a genomic position, or region. As such, this track uses the same data format as histograms.</p>\n<p>The track linearly maps a range of values <code>[min,max]</code> onto a list of colors <code>c[n], i=0..N.</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f = (value - min) / ( max - min )</span><br><span class=\"line\">n = N * f</span><br></pre></td></tr></table></figure>\n<p>Colors are defined by a combination of lists or CSV. Color lists exist for all Brewer palletes (see etc/colors.brewer.lists.conf) as well as for N-step hue (hue-sN, e.g. hue-s5 = hue000,hue005,hue010,…) and N-color hue (hue-sN, e.g. hue-3 = hue000,hue120,hue140). Here is a color example:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">color = hs1_a5,hs1_a4,hs1_a3,hs1_a2,hs1_a1,hs1</span><br></pre></td></tr></table></figure>\n<p>If scale_log_base is used, the mapping is not linear, but a power law:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">n = N * f**(1/scale_log_base)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>When <code>scale_log_base</code> &gt; 1 the dynamic range for values close to <code>min</code> is expanded.</li>\n<li>When <code>scale_log_base</code> &lt; 1 the dynamic range for values close to <code>max</code> is expanded.</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scale_log_base = 5</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/tracks_heatmap.png\" alt=\"\"></p>\n<h3 id=\"links\"><a href=\"#links\" class=\"headerlink\" title=\"links\"></a>links</h3><p><img src=\"https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/tracks_links.png\" alt=\"\"></p>\n<h3 id=\"text\"><a href=\"#text\" class=\"headerlink\" title=\"text\"></a>text</h3><p>Like with other tracks, text is limited to a radial range by setting <code>r0</code> and <code>r1</code>.</p>\n<p>Individual labels can be repositioned automatically with in a position window to fit more labels, without overlap. This is an advanced feature.</p>\n<p><img src=\"https://raw.githubusercontent.com/SMRUCC/GCModeller.Circos/master/manual/tracks_text.png\" alt=\"\"></p>\n<h3 id=\"Extension-track-types\"><a href=\"#Extension-track-types\" class=\"headerlink\" title=\"Extension track types\"></a>Extension track types</h3>"},{"title":"Markdown Syntax","date":"2016-06-06T16:00:00.000Z","_content":"\n>*   [Overview](#overview)\n    *   [Philosophy](#philosophy)\n    *   [Inline HTML](#html)\n    *   [Automatic Escaping for Special Characters](#autoescape)\n*   [Block Elements](#block)\n    *   [Paragraphs and Line Breaks](#p)\n    *   [Headers](#header)\n    *   [Blockquotes](#blockquote)\n    *   [Lists](#list)\n    *   [Code Blocks](#precode)\n    *   [Horizontal Rules](#hr)\n*   [Span Elements](#span)\n    *   [Links](#link)\n    *   [Emphasis](#em)\n    *   [Code](#code)\n    *   [Images](#img)\n*   [Miscellaneous](#misc)\n    *   [Backslash Escapes](#backslash)\n    *   [Automatic Links](#autolink)\n\n\n**Note:** This document is itself written using Markdown; you can [see the source for it by adding '.text' to the URL][src].\n\n  [src]: http://daringfireball.net/projects/markdown/syntax.text\n\n<!--more-->\n  \n* * *\n\n<h2 id=\"overview\">Overview</h2>\n\n<h3 id=\"philosophy\">Philosophy</h3>\n\nMarkdown is intended to be as easy-to-read and easy-to-write as is feasible.\n\nReadability, however, is emphasized above all else. A Markdown-formatted document should be publishable as-is, as plain text, without looking like it's been marked up with tags or formatting instructions. While Markdown's syntax has been influenced by several existing text-to-HTML filters -- including [Setext] [1], [atx] [2], [Textile] [3], [reStructuredText] [4], [Grutatext] [5], and [EtText] [6] -- the single biggest source of inspiration for Markdown's syntax is the format of plain text email.\n\n  [1]: http://docutils.sourceforge.net/mirror/setext.html\n  [2]: http://www.aaronsw.com/2002/atx/\n  [3]: http://textism.com/tools/textile/\n  [4]: http://docutils.sourceforge.net/rst.html\n  [5]: http://www.triptico.com/software/grutatxt.html\n  [6]: http://ettext.taint.org/doc/\n\nTo this end, Markdown's syntax is comprised entirely of punctuation characters, which punctuation characters have been carefully chosen so as to look like what they mean. E.g., asterisks around a word actually look like \\*emphasis\\*. Markdown lists look like, well, lists. Even blockquotes look like quoted passages of text, assuming you've ever used email.\n\n<h3 id=\"html\">Inline HTML</h3>\n\nMarkdown's syntax is intended for one purpose: to be used as a format for *writing* for the web.\n\nMarkdown is not a replacement for HTML, or even close to it. Its syntax is very small, corresponding only to a very small subset of HTML tags. The idea is *not* to create a syntax that makes it easier to insert HTML tags. In my opinion, HTML tags are already easy to insert. The idea for Markdown is to make it easy to read, write, and\nedit prose. HTML is a *publishing* format; Markdown is a *writing* format. Thus, Markdown's formatting syntax only addresses issues that can be conveyed in plain text.\n\nFor any markup that is not covered by Markdown's syntax, you simply use HTML itself. There's no need to preface it or delimit it to indicate that you're switching from Markdown to HTML; you just use the tags.\n\nThe only restrictions are that block-level HTML elements -- e.g. `<div>`, `<table>`, `<pre>`, `<p>`, etc. -- must be separated from surrounding content by blank lines, and the start and end tags of the block should not be indented with tabs or spaces. Markdown is smart enough not to add extra (unwanted) `<p>` tags around HTML block-level tags.\n\nFor example, to add an HTML table to a Markdown article:\n\n    This is a regular paragraph.\n\n    <table>\n        <tr>\n            <td>Foo</td>\n        </tr>\n    </table>\n\n    This is another regular paragraph.\n\nNote that Markdown formatting syntax is not processed within block-level HTML tags. E.g., you can't use Markdown-style `*emphasis*` inside an HTML block.\n\nSpan-level HTML tags -- e.g. `<span>`, `<cite>`, or `<del>` -- can be used anywhere in a Markdown paragraph, list item, or header. If you want, you can even use HTML tags instead of Markdown formatting; e.g. if you'd prefer to use HTML `<a>` or `<img>` tags instead of Markdown's link or image syntax, go right ahead.\n\nUnlike block-level HTML tags, Markdown syntax *is* processed within span-level tags.\n\n\n<h3 id=\"autoescape\">Automatic Escaping for Special Characters</h3>\n\nIn HTML, there are two characters that demand special treatment: `<` and `&`. Left angle brackets are used to start tags; ampersands are used to denote HTML entities. If you want to use them as literal characters, you must escape them as entities, e.g. `&lt;`, and `&amp;`.\n\nAmpersands in particular are bedeviling for web writers. If you want to write about 'AT&T', you need to write '`AT&amp;T`'. You even need to escape ampersands within URLs. Thus, if you want to link to:\n\n    http://images.google.com/images?num=30&q=larry+bird\n\nyou need to encode the URL as:\n\n    http://images.google.com/images?num=30&amp;q=larry+bird\n\nin your anchor tag `href` attribute. Needless to say, this is easy to forget, and is probably the single most common source of HTML validation errors in otherwise well-marked-up web sites.\n\nMarkdown allows you to use these characters naturally, taking care of all the necessary escaping for you. If you use an ampersand as part of an HTML entity, it remains unchanged; otherwise it will be translated into `&amp;`.\n\nSo, if you want to include a copyright symbol in your article, you can write:\n\n    &copy;\n\nand Markdown will leave it alone. But if you write:\n\n    AT&T\n\nMarkdown will translate it to:\n\n    AT&amp;T\n\nSimilarly, because Markdown supports [inline HTML](#html), if you use angle brackets as delimiters for HTML tags, Markdown will treat them as such. But if you write:\n\n    4 < 5\n\nMarkdown will translate it to:\n\n    4 &lt; 5\n\nHowever, inside Markdown code spans and blocks, angle brackets and ampersands are *always* encoded automatically. This makes it easy to use Markdown to write about HTML code. (As opposed to raw HTML, which is a terrible format for writing about HTML syntax, because every single `<` and `&` in your example code needs to be escaped.)\n\n\n* * *\n\n<h2 id=\"block\">Block Elements</h2>\n\n<h3 id=\"p\">Paragraphs and Line Breaks</h3>\n\nA paragraph is simply one or more consecutive lines of text, separated by one or more blank lines. (A blank line is any line that looks like a blank line -- a line containing nothing but spaces or tabs is considered blank.) Normal paragraphs should not be indented with spaces or tabs.\n\nThe implication of the \"one or more consecutive lines of text\" rule is that Markdown supports \"hard-wrapped\" text paragraphs. This differs significantly from most other text-to-HTML formatters (including Movable Type's \"Convert Line Breaks\" option) which translate every line break character in a paragraph into a `<br />` tag.\n\nWhen you *do* want to insert a `<br />` break tag using Markdown, you end a line with two or more spaces, then type return.\n\nYes, this takes a tad more effort to create a `<br />`, but a simplistic \"every line break is a `<br />`\" rule wouldn't work for Markdown. Markdown's email-style [blockquoting][bq] and multi-paragraph [list items][l] work best -- and look better -- when you format them with hard breaks.\n\n  [bq]: #blockquote\n  [l]:  #list\n\n\n\n<h3 id=\"header\">Headers</h3>\n\nMarkdown supports two styles of headers, [Setext] [1] and [atx] [2].\n\nSetext-style headers are \"underlined\" using equal signs (for first-level headers) and dashes (for second-level headers). For example:\n\n    This is an H1\n    =============\n\n    This is an H2\n    -------------\n\nAny number of underlining `=`'s or `-`'s will work.\n\nAtx-style headers use 1-6 hash characters at the start of the line, corresponding to header levels 1-6. For example:\n\n    # This is an H1\n\n    ## This is an H2\n\n    ###### This is an H6\n\nOptionally, you may \"close\" atx-style headers. This is purely cosmetic -- you can use this if you think it looks better. The closing hashes don't even need to match the number of hashes used to open the header. (The number of opening hashes determines the header level.) :\n\n    # This is an H1 #\n\n    ## This is an H2 ##\n\n    ### This is an H3 ######\n\n\n<h3 id=\"blockquote\">Blockquotes</h3>\n\nMarkdown uses email-style `>` characters for blockquoting. If you're familiar with quoting passages of text in an email message, then you know how to create a blockquote in Markdown. It looks best if you hard wrap the text and put a `>` before every line:\n\n    > This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\n    > consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\n    > Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n    > \n    > Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\n    > id sem consectetuer libero luctus adipiscing.\n\nMarkdown allows you to be lazy and only put the `>` before the first line of a hard-wrapped paragraph:\n\n    > This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\n    consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\n    Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n\n    > Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\n    id sem consectetuer libero luctus adipiscing.\n\nBlockquotes can be nested (i.e. a blockquote-in-a-blockquote) by adding additional levels of `>`:\n\n    > This is the first level of quoting.\n    >\n    > > This is nested blockquote.\n    >\n    > Back to the first level.\n\nBlockquotes can contain other Markdown elements, including headers, lists, and code blocks:\n\n\t> ## This is a header.\n\t> \n\t> 1.   This is the first list item.\n\t> 2.   This is the second list item.\n\t> \n\t> Here's some example code:\n\t> \n\t>     return shell_exec(\"echo $input | $markdown_script\");\n\nAny decent text editor should make email-style quoting easy. For example, with BBEdit, you can make a selection and choose Increase Quote Level from the Text menu.\n\n\n<h3 id=\"list\">Lists</h3>\n\nMarkdown supports ordered (numbered) and unordered (bulleted) lists.\n\nUnordered lists use asterisks, pluses, and hyphens -- interchangably\n-- as list markers:\n\n    *   Red\n    *   Green\n    *   Blue\n\nis equivalent to:\n\n    +   Red\n    +   Green\n    +   Blue\n\nand:\n\n    -   Red\n    -   Green\n    -   Blue\n\nOrdered lists use numbers followed by periods:\n\n    1.  Bird\n    2.  McHale\n    3.  Parish\n\nIt's important to note that the actual numbers you use to mark the list have no effect on the HTML output Markdown produces. The HTML Markdown produces from the above list is:\n\n    <ol>\n    <li>Bird</li>\n    <li>McHale</li>\n    <li>Parish</li>\n    </ol>\n\nIf you instead wrote the list in Markdown like this:\n\n    1.  Bird\n    1.  McHale\n    1.  Parish\n\nor even:\n\n    3. Bird\n    1. McHale\n    8. Parish\n\nyou'd get the exact same HTML output. The point is, if you want to,  you can use ordinal numbers in your ordered Markdown lists, so that the numbers in your source match the numbers in your published HTML. But if you want to be lazy, you don't have to.\n\nIf you do use lazy list numbering, however, you should still start the list with the number 1. At some point in the future, Markdown may support starting ordered lists at an arbitrary number.\n\nList markers typically start at the left margin, but may be indented by up to three spaces. List markers must be followed by one or more spaces or a tab.\n\nTo make lists look nice, you can wrap items with hanging indents:\n\n    *   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n        Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\n        viverra nec, fringilla in, laoreet vitae, risus.\n    *   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\n        Suspendisse id sem consectetuer libero luctus adipiscing.\n\nBut if you want to be lazy, you don't have to:\n\n    *   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\n    viverra nec, fringilla in, laoreet vitae, risus.\n    *   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\n    Suspendisse id sem consectetuer libero luctus adipiscing.\n\nIf list items are separated by blank lines, Markdown will wrap the items in `<p>` tags in the HTML output. For example, this input:\n\n    *   Bird\n    *   Magic\n\nwill turn into:\n\n    <ul>\n    <li>Bird</li>\n    <li>Magic</li>\n    </ul>\n\nBut this:\n\n    *   Bird\n\n    *   Magic\n\nwill turn into:\n\n    <ul>\n    <li><p>Bird</p></li>\n    <li><p>Magic</p></li>\n    </ul>\n\nList items may consist of multiple paragraphs. Each subsequent paragraph in a list item must be indented by either 4 spaces or one tab:\n\n    1.  This is a list item with two paragraphs. Lorem ipsum dolor\n        sit amet, consectetuer adipiscing elit. Aliquam hendrerit\n        mi posuere lectus.\n\n        Vestibulum enim wisi, viverra nec, fringilla in, laoreet\n        vitae, risus. Donec sit amet nisl. Aliquam semper ipsum\n        sit amet velit.\n\n    2.  Suspendisse id sem consectetuer libero luctus adipiscing.\n\nIt looks nice if you indent every line of the subsequent paragraphs, but here again, Markdown will allow you to be lazy:\n\n    *   This is a list item with two paragraphs.\n\n        This is the second paragraph in the list item. You're\n    only required to indent the first line. Lorem ipsum dolor\n    sit amet, consectetuer adipiscing elit.\n\n    *   Another item in the same list.\n\nTo put a blockquote within a list item, the blockquote's `>` delimiters need to be indented:\n\n    *   A list item with a blockquote:\n\n        > This is a blockquote\n        > inside a list item.\n\nTo put a code block within a list item, the code block needs to be indented *twice* -- 8 spaces or two tabs:\n\n    *   A list item with a code block:\n\n            <code goes here>\n\n\nIt's worth noting that it's possible to trigger an ordered list by accident, by writing something like this:\n\n    1986. What a great season.\n\nIn other words, a *number-period-space* sequence at the beginning of a line. To avoid this, you can backslash-escape the period:\n\n    1986\\. What a great season.\n\n\n\n<h3 id=\"precode\">Code Blocks</h3>\n\nPre-formatted code blocks are used for writing about programming or markup source code. Rather than forming normal paragraphs, the lines of a code block are interpreted literally. Markdown wraps a code block in both `<pre>` and `<code>` tags.\n\nTo produce a code block in Markdown, simply indent every line of the block by at least 4 spaces or 1 tab. For example, given this input:\n\n    This is a normal paragraph:\n\n        This is a code block.\n\nMarkdown will generate:\n\n    <p>This is a normal paragraph:</p>\n\n    <pre><code>This is a code block.\n    </code></pre>\n\nOne level of indentation -- 4 spaces or 1 tab -- is removed from each line of the code block. For example, this:\n\n    Here is an example of AppleScript:\n\n        tell application \"Foo\"\n            beep\n        end tell\n\nwill turn into:\n\n    <p>Here is an example of AppleScript:</p>\n\n    <pre><code>tell application \"Foo\"\n        beep\n    end tell\n    </code></pre>\n\nA code block continues until it reaches a line that is not indented (or the end of the article).\n\nWithin a code block, ampersands (`&`) and angle brackets (`<` and `>`) are automatically converted into HTML entities. This makes it very easy to include example HTML source code using Markdown -- just paste it and indent it, and Markdown will handle the hassle of encoding the ampersands and angle brackets. For example, this:\n\n        <div class=\"footer\">\n            &copy; 2004 Foo Corporation\n        </div>\n\nwill turn into:\n\n    <pre><code>&lt;div class=\"footer\"&gt;\n        &amp;copy; 2004 Foo Corporation\n    &lt;/div&gt;\n    </code></pre>\n\nRegular Markdown syntax is not processed within code blocks. E.g., asterisks are just literal asterisks within a code block. This means it's also easy to use Markdown to write about Markdown's own syntax.\n\n\n<h3 id=\"hr\">Horizontal Rules</h3>\n\nYou can produce a horizontal rule tag (`<hr />`) by placing three or more hyphens, asterisks, or underscores on a line by themselves. If you wish, you may use spaces between the hyphens or asterisks. Each of the following lines will produce a horizontal rule:\n\n    * * *\n\n    ***\n\n    *****\n\n    - - -\n\n    ---------------------------------------\n\n\n* * *\n\n<h2 id=\"span\">Span Elements</h2>\n\n<h3 id=\"link\">Links</h3>\n\nMarkdown supports two style of links: *inline* and *reference*.\n\nIn both styles, the link text is delimited by [square brackets].\n\nTo create an inline link, use a set of regular parentheses immediately after the link text's closing square bracket. Inside the parentheses, put the URL where you want the link to point, along with an *optional* title for the link, surrounded in quotes. For example:\n\n    This is [an example](http://example.com/ \"Title\") inline link.\n\n    [This link](http://example.net/) has no title attribute.\n\nWill produce:\n\n    <p>This is <a href=\"http://example.com/\" title=\"Title\">\n    an example</a> inline link.</p>\n\n    <p><a href=\"http://example.net/\">This link</a> has no\n    title attribute.</p>\n\nIf you're referring to a local resource on the same server, you can use relative paths:\n\n    See my [About](/about/) page for details.   \n\nReference-style links use a second set of square brackets, inside which you place a label of your choosing to identify the link:\n\n    This is [an example][id] reference-style link.\n\nYou can optionally use a space to separate the sets of brackets:\n\n    This is [an example] [id] reference-style link.\n\nThen, anywhere in the document, you define your link label like this, on a line by itself:\n\n    [id]: http://example.com/  \"Optional Title Here\"\n\nThat is:\n\n*   Square brackets containing the link identifier (optionally\n    indented from the left margin using up to three spaces);\n*   followed by a colon;\n*   followed by one or more spaces (or tabs);\n*   followed by the URL for the link;\n*   optionally followed by a title attribute for the link, enclosed\n    in double or single quotes, or enclosed in parentheses.\n\nThe following three link definitions are equivalent:\n\n\t[foo]: http://example.com/  \"Optional Title Here\"\n\t[foo]: http://example.com/  'Optional Title Here'\n\t[foo]: http://example.com/  (Optional Title Here)\n\n**Note:** There is a known bug in Markdown.pl 1.0.1 which prevents single quotes from being used to delimit link titles.\n\nThe link URL may, optionally, be surrounded by angle brackets:\n\n    [id]: <http://example.com/>  \"Optional Title Here\"\n\nYou can put the title attribute on the next line and use extra spaces or tabs for padding, which tends to look better with longer URLs:\n\n    [id]: http://example.com/longish/path/to/resource/here\n        \"Optional Title Here\"\n\nLink definitions are only used for creating links during Markdown processing, and are stripped from your document in the HTML output.\n\nLink definition names may consist of letters, numbers, spaces, and punctuation -- but they are *not* case sensitive. E.g. these two links:\n\n\t[link text][a]\n\t[link text][A]\n\nare equivalent.\n\nThe *implicit link name* shortcut allows you to omit the name of the link, in which case the link text itself is used as the name. Just use an empty set of square brackets -- e.g., to link the word \"Google\" to the google.com web site, you could simply write:\n\n\t[Google][]\n\nAnd then define the link:\n\n\t[Google]: http://google.com/\n\nBecause link names may contain spaces, this shortcut even works for multiple words in the link text:\n\n\tVisit [Daring Fireball][] for more information.\n\nAnd then define the link:\n\t\n\t[Daring Fireball]: http://daringfireball.net/\n\nLink definitions can be placed anywhere in your Markdown document. I tend to put them immediately after each paragraph in which they're used, but if you want, you can put them all at the end of your document, sort of like footnotes.\n\nHere's an example of reference links in action:\n\n    I get 10 times more traffic from [Google] [1] than from\n    [Yahoo] [2] or [MSN] [3].\n\n      [1]: http://google.com/        \"Google\"\n      [2]: http://search.yahoo.com/  \"Yahoo Search\"\n      [3]: http://search.msn.com/    \"MSN Search\"\n\nUsing the implicit link name shortcut, you could instead write:\n\n    I get 10 times more traffic from [Google][] than from\n    [Yahoo][] or [MSN][].\n\n      [google]: http://google.com/        \"Google\"\n      [yahoo]:  http://search.yahoo.com/  \"Yahoo Search\"\n      [msn]:    http://search.msn.com/    \"MSN Search\"\n\nBoth of the above examples will produce the following HTML output:\n\n    <p>I get 10 times more traffic from <a href=\"http://google.com/\"\n    title=\"Google\">Google</a> than from\n    <a href=\"http://search.yahoo.com/\" title=\"Yahoo Search\">Yahoo</a>\n    or <a href=\"http://search.msn.com/\" title=\"MSN Search\">MSN</a>.</p>\n\nFor comparison, here is the same paragraph written using Markdown's inline link style:\n\n    I get 10 times more traffic from [Google](http://google.com/ \"Google\")\n    than from [Yahoo](http://search.yahoo.com/ \"Yahoo Search\") or\n    [MSN](http://search.msn.com/ \"MSN Search\").\n\nThe point of reference-style links is not that they're easier to write. The point is that with reference-style links, your document source is vastly more readable. Compare the above examples: using reference-style links, the paragraph itself is only 81 characters long; with inline-style links, it's 176 characters; and as raw HTML, it's 234 characters. In the raw HTML, there's more markup than there is text.\n\nWith Markdown's reference-style links, a source document much more closely resembles the final output, as rendered in a browser. By allowing you to move the markup-related metadata out of the paragraph, you can add links without interrupting the narrative flow of your prose.\n\n\n<h3 id=\"em\">Emphasis</h3>\n\nMarkdown treats asterisks (`*`) and underscores (`_`) as indicators of emphasis. Text wrapped with one `*` or `_` will be wrapped with an HTML `<em>` tag; double `*`'s or `_`'s will be wrapped with an HTML `<strong>` tag. E.g., this input:\n\n    *single asterisks*\n\n    _single underscores_\n\n    **double asterisks**\n\n    __double underscores__\n\nwill produce:\n\n    <em>single asterisks</em>\n\n    <em>single underscores</em>\n\n    <strong>double asterisks</strong>\n\n    <strong>double underscores</strong>\n\nYou can use whichever style you prefer; the lone restriction is that the same character must be used to open and close an emphasis span.\n\nEmphasis can be used in the middle of a word:\n\n    un*frigging*believable\n\nBut if you surround an `*` or `_` with spaces, it'll be treated as a literal asterisk or underscore.\n\nTo produce a literal asterisk or underscore at a position where it would otherwise be used as an emphasis delimiter, you can backslash escape it:\n\n    \\*this text is surrounded by literal asterisks\\*\n\n\n\n<h3 id=\"code\">Code</h3>\n\nTo indicate a span of code, wrap it with backtick quotes (`` ` ``). Unlike a pre-formatted code block, a code span indicates code within a normal paragraph. For example:\n\n    Use the `printf()` function.\n\nwill produce:\n\n    <p>Use the <code>printf()</code> function.</p>\n\nTo include a literal backtick character within a code span, you can use multiple backticks as the opening and closing delimiters:\n\n    ``There is a literal backtick (`) here.``\n\nwhich will produce this:\n\n    <p><code>There is a literal backtick (`) here.</code></p>\n\nThe backtick delimiters surrounding a code span may include spaces -- one after the opening, one before the closing. This allows you to place literal backtick characters at the beginning or end of a code span:\n\n\tA single backtick in a code span: `` ` ``\n\t\n\tA backtick-delimited string in a code span: `` `foo` ``\n\nwill produce:\n\n\t<p>A single backtick in a code span: <code>`</code></p>\n\t\n\t<p>A backtick-delimited string in a code span: <code>`foo`</code></p>\n\nWith a code span, ampersands and angle brackets are encoded as HTML entities automatically, which makes it easy to include example HTML tags. Markdown will turn this:\n\n    Please don't use any `<blink>` tags.\n\ninto:\n\n    <p>Please don't use any <code>&lt;blink&gt;</code> tags.</p>\n\nYou can write this:\n\n    `&#8212;` is the decimal-encoded equivalent of `&mdash;`.\n\nto produce:\n\n    <p><code>&amp;#8212;</code> is the decimal-encoded\n    equivalent of <code>&amp;mdash;</code>.</p>\n\n\n\n<h3 id=\"img\">Images</h3>\n\nAdmittedly, it's fairly difficult to devise a \"natural\" syntax for placing images into a plain text document format.\n\nMarkdown uses an image syntax that is intended to resemble the syntax for links, allowing for two styles: *inline* and *reference*.\n\nInline image syntax looks like this:\n\n    ![Alt text](/path/to/img.jpg)\n\n    ![Alt text](/path/to/img.jpg \"Optional title\")\n\nThat is:\n\n*   An exclamation mark: `!`;\n*   followed by a set of square brackets, containing the `alt`\n    attribute text for the image;\n*   followed by a set of parentheses, containing the URL or path to\n    the image, and an optional `title` attribute enclosed in double\n    or single quotes.\n\nReference-style image syntax looks like this:\n\n    ![Alt text][id]\n\nWhere \"id\" is the name of a defined image reference. Image references are defined using syntax identical to link references:\n\n    [id]: url/to/image  \"Optional title attribute\"\n\nAs of this writing, Markdown has no syntax for specifying the dimensions of an image; if this is important to you, you can simply use regular HTML `<img>` tags.\n\n\n* * *\n\n\n<h2 id=\"misc\">Miscellaneous</h2>\n\n<h3 id=\"autolink\">Automatic Links</h3>\n\nMarkdown supports a shortcut style for creating \"automatic\" links for URLs and email addresses: simply surround the URL or email address with angle brackets. What this means is that if you want to show the actual text of a URL or email address, and also have it be a clickable link, you can do this:\n\n    <http://example.com/>\n    \nMarkdown will turn this into:\n\n    <a href=\"http://example.com/\">http://example.com/</a>\n\nAutomatic links for email addresses work similarly, except that Markdown will also perform a bit of randomized decimal and hex entity-encoding to help obscure your address from address-harvesting spambots. For example, Markdown will turn this:\n\n    <address@example.com>\n\ninto something like this:\n\n    <a href=\"&#x6D;&#x61;i&#x6C;&#x74;&#x6F;:&#x61;&#x64;&#x64;&#x72;&#x65;\n    &#115;&#115;&#64;&#101;&#120;&#x61;&#109;&#x70;&#x6C;e&#x2E;&#99;&#111;\n    &#109;\">&#x61;&#x64;&#x64;&#x72;&#x65;&#115;&#115;&#64;&#101;&#120;&#x61;\n    &#109;&#x70;&#x6C;e&#x2E;&#99;&#111;&#109;</a>\n\nwhich will render in a browser as a clickable link to \"address@example.com\".\n\n(This sort of entity-encoding trick will indeed fool many, if not most, address-harvesting bots, but it definitely won't fool all of them. It's better than nothing, but an address published in this way will probably eventually start receiving spam.)\n\n\n\n<h3 id=\"backslash\">Backslash Escapes</h3>\n\nMarkdown allows you to use backslash escapes to generate literal characters which would otherwise have special meaning in Markdown's formatting syntax. For example, if you wanted to surround a word with literal asterisks (instead of an HTML `<em>` tag), you can use backslashes before the asterisks, like this:\n\n    \\*literal asterisks\\*\n\nMarkdown provides backslash escapes for the following characters:\n\n    \\   backslash\n    `   backtick\n    *   asterisk\n    _   underscore\n    {}  curly braces\n    []  square brackets\n    ()  parentheses\n    #   hash mark\n\t+\tplus sign\n\t-\tminus sign (hyphen)\n    .   dot\n    !   exclamation mark\n    \n> Source: [http://daringfireball.net/projects/markdown/syntax](http://daringfireball.net/projects/markdown/syntax)","source":"_posts/markdown_syntax.md","raw":"---\ntitle: Markdown Syntax\ntags: [Markdown,Syntax,转载搬运, repost]\ndate: 2016.06.07\n---\n\n>*   [Overview](#overview)\n    *   [Philosophy](#philosophy)\n    *   [Inline HTML](#html)\n    *   [Automatic Escaping for Special Characters](#autoescape)\n*   [Block Elements](#block)\n    *   [Paragraphs and Line Breaks](#p)\n    *   [Headers](#header)\n    *   [Blockquotes](#blockquote)\n    *   [Lists](#list)\n    *   [Code Blocks](#precode)\n    *   [Horizontal Rules](#hr)\n*   [Span Elements](#span)\n    *   [Links](#link)\n    *   [Emphasis](#em)\n    *   [Code](#code)\n    *   [Images](#img)\n*   [Miscellaneous](#misc)\n    *   [Backslash Escapes](#backslash)\n    *   [Automatic Links](#autolink)\n\n\n**Note:** This document is itself written using Markdown; you can [see the source for it by adding '.text' to the URL][src].\n\n  [src]: http://daringfireball.net/projects/markdown/syntax.text\n\n<!--more-->\n  \n* * *\n\n<h2 id=\"overview\">Overview</h2>\n\n<h3 id=\"philosophy\">Philosophy</h3>\n\nMarkdown is intended to be as easy-to-read and easy-to-write as is feasible.\n\nReadability, however, is emphasized above all else. A Markdown-formatted document should be publishable as-is, as plain text, without looking like it's been marked up with tags or formatting instructions. While Markdown's syntax has been influenced by several existing text-to-HTML filters -- including [Setext] [1], [atx] [2], [Textile] [3], [reStructuredText] [4], [Grutatext] [5], and [EtText] [6] -- the single biggest source of inspiration for Markdown's syntax is the format of plain text email.\n\n  [1]: http://docutils.sourceforge.net/mirror/setext.html\n  [2]: http://www.aaronsw.com/2002/atx/\n  [3]: http://textism.com/tools/textile/\n  [4]: http://docutils.sourceforge.net/rst.html\n  [5]: http://www.triptico.com/software/grutatxt.html\n  [6]: http://ettext.taint.org/doc/\n\nTo this end, Markdown's syntax is comprised entirely of punctuation characters, which punctuation characters have been carefully chosen so as to look like what they mean. E.g., asterisks around a word actually look like \\*emphasis\\*. Markdown lists look like, well, lists. Even blockquotes look like quoted passages of text, assuming you've ever used email.\n\n<h3 id=\"html\">Inline HTML</h3>\n\nMarkdown's syntax is intended for one purpose: to be used as a format for *writing* for the web.\n\nMarkdown is not a replacement for HTML, or even close to it. Its syntax is very small, corresponding only to a very small subset of HTML tags. The idea is *not* to create a syntax that makes it easier to insert HTML tags. In my opinion, HTML tags are already easy to insert. The idea for Markdown is to make it easy to read, write, and\nedit prose. HTML is a *publishing* format; Markdown is a *writing* format. Thus, Markdown's formatting syntax only addresses issues that can be conveyed in plain text.\n\nFor any markup that is not covered by Markdown's syntax, you simply use HTML itself. There's no need to preface it or delimit it to indicate that you're switching from Markdown to HTML; you just use the tags.\n\nThe only restrictions are that block-level HTML elements -- e.g. `<div>`, `<table>`, `<pre>`, `<p>`, etc. -- must be separated from surrounding content by blank lines, and the start and end tags of the block should not be indented with tabs or spaces. Markdown is smart enough not to add extra (unwanted) `<p>` tags around HTML block-level tags.\n\nFor example, to add an HTML table to a Markdown article:\n\n    This is a regular paragraph.\n\n    <table>\n        <tr>\n            <td>Foo</td>\n        </tr>\n    </table>\n\n    This is another regular paragraph.\n\nNote that Markdown formatting syntax is not processed within block-level HTML tags. E.g., you can't use Markdown-style `*emphasis*` inside an HTML block.\n\nSpan-level HTML tags -- e.g. `<span>`, `<cite>`, or `<del>` -- can be used anywhere in a Markdown paragraph, list item, or header. If you want, you can even use HTML tags instead of Markdown formatting; e.g. if you'd prefer to use HTML `<a>` or `<img>` tags instead of Markdown's link or image syntax, go right ahead.\n\nUnlike block-level HTML tags, Markdown syntax *is* processed within span-level tags.\n\n\n<h3 id=\"autoescape\">Automatic Escaping for Special Characters</h3>\n\nIn HTML, there are two characters that demand special treatment: `<` and `&`. Left angle brackets are used to start tags; ampersands are used to denote HTML entities. If you want to use them as literal characters, you must escape them as entities, e.g. `&lt;`, and `&amp;`.\n\nAmpersands in particular are bedeviling for web writers. If you want to write about 'AT&T', you need to write '`AT&amp;T`'. You even need to escape ampersands within URLs. Thus, if you want to link to:\n\n    http://images.google.com/images?num=30&q=larry+bird\n\nyou need to encode the URL as:\n\n    http://images.google.com/images?num=30&amp;q=larry+bird\n\nin your anchor tag `href` attribute. Needless to say, this is easy to forget, and is probably the single most common source of HTML validation errors in otherwise well-marked-up web sites.\n\nMarkdown allows you to use these characters naturally, taking care of all the necessary escaping for you. If you use an ampersand as part of an HTML entity, it remains unchanged; otherwise it will be translated into `&amp;`.\n\nSo, if you want to include a copyright symbol in your article, you can write:\n\n    &copy;\n\nand Markdown will leave it alone. But if you write:\n\n    AT&T\n\nMarkdown will translate it to:\n\n    AT&amp;T\n\nSimilarly, because Markdown supports [inline HTML](#html), if you use angle brackets as delimiters for HTML tags, Markdown will treat them as such. But if you write:\n\n    4 < 5\n\nMarkdown will translate it to:\n\n    4 &lt; 5\n\nHowever, inside Markdown code spans and blocks, angle brackets and ampersands are *always* encoded automatically. This makes it easy to use Markdown to write about HTML code. (As opposed to raw HTML, which is a terrible format for writing about HTML syntax, because every single `<` and `&` in your example code needs to be escaped.)\n\n\n* * *\n\n<h2 id=\"block\">Block Elements</h2>\n\n<h3 id=\"p\">Paragraphs and Line Breaks</h3>\n\nA paragraph is simply one or more consecutive lines of text, separated by one or more blank lines. (A blank line is any line that looks like a blank line -- a line containing nothing but spaces or tabs is considered blank.) Normal paragraphs should not be indented with spaces or tabs.\n\nThe implication of the \"one or more consecutive lines of text\" rule is that Markdown supports \"hard-wrapped\" text paragraphs. This differs significantly from most other text-to-HTML formatters (including Movable Type's \"Convert Line Breaks\" option) which translate every line break character in a paragraph into a `<br />` tag.\n\nWhen you *do* want to insert a `<br />` break tag using Markdown, you end a line with two or more spaces, then type return.\n\nYes, this takes a tad more effort to create a `<br />`, but a simplistic \"every line break is a `<br />`\" rule wouldn't work for Markdown. Markdown's email-style [blockquoting][bq] and multi-paragraph [list items][l] work best -- and look better -- when you format them with hard breaks.\n\n  [bq]: #blockquote\n  [l]:  #list\n\n\n\n<h3 id=\"header\">Headers</h3>\n\nMarkdown supports two styles of headers, [Setext] [1] and [atx] [2].\n\nSetext-style headers are \"underlined\" using equal signs (for first-level headers) and dashes (for second-level headers). For example:\n\n    This is an H1\n    =============\n\n    This is an H2\n    -------------\n\nAny number of underlining `=`'s or `-`'s will work.\n\nAtx-style headers use 1-6 hash characters at the start of the line, corresponding to header levels 1-6. For example:\n\n    # This is an H1\n\n    ## This is an H2\n\n    ###### This is an H6\n\nOptionally, you may \"close\" atx-style headers. This is purely cosmetic -- you can use this if you think it looks better. The closing hashes don't even need to match the number of hashes used to open the header. (The number of opening hashes determines the header level.) :\n\n    # This is an H1 #\n\n    ## This is an H2 ##\n\n    ### This is an H3 ######\n\n\n<h3 id=\"blockquote\">Blockquotes</h3>\n\nMarkdown uses email-style `>` characters for blockquoting. If you're familiar with quoting passages of text in an email message, then you know how to create a blockquote in Markdown. It looks best if you hard wrap the text and put a `>` before every line:\n\n    > This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\n    > consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\n    > Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n    > \n    > Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\n    > id sem consectetuer libero luctus adipiscing.\n\nMarkdown allows you to be lazy and only put the `>` before the first line of a hard-wrapped paragraph:\n\n    > This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\n    consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\n    Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n\n    > Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\n    id sem consectetuer libero luctus adipiscing.\n\nBlockquotes can be nested (i.e. a blockquote-in-a-blockquote) by adding additional levels of `>`:\n\n    > This is the first level of quoting.\n    >\n    > > This is nested blockquote.\n    >\n    > Back to the first level.\n\nBlockquotes can contain other Markdown elements, including headers, lists, and code blocks:\n\n\t> ## This is a header.\n\t> \n\t> 1.   This is the first list item.\n\t> 2.   This is the second list item.\n\t> \n\t> Here's some example code:\n\t> \n\t>     return shell_exec(\"echo $input | $markdown_script\");\n\nAny decent text editor should make email-style quoting easy. For example, with BBEdit, you can make a selection and choose Increase Quote Level from the Text menu.\n\n\n<h3 id=\"list\">Lists</h3>\n\nMarkdown supports ordered (numbered) and unordered (bulleted) lists.\n\nUnordered lists use asterisks, pluses, and hyphens -- interchangably\n-- as list markers:\n\n    *   Red\n    *   Green\n    *   Blue\n\nis equivalent to:\n\n    +   Red\n    +   Green\n    +   Blue\n\nand:\n\n    -   Red\n    -   Green\n    -   Blue\n\nOrdered lists use numbers followed by periods:\n\n    1.  Bird\n    2.  McHale\n    3.  Parish\n\nIt's important to note that the actual numbers you use to mark the list have no effect on the HTML output Markdown produces. The HTML Markdown produces from the above list is:\n\n    <ol>\n    <li>Bird</li>\n    <li>McHale</li>\n    <li>Parish</li>\n    </ol>\n\nIf you instead wrote the list in Markdown like this:\n\n    1.  Bird\n    1.  McHale\n    1.  Parish\n\nor even:\n\n    3. Bird\n    1. McHale\n    8. Parish\n\nyou'd get the exact same HTML output. The point is, if you want to,  you can use ordinal numbers in your ordered Markdown lists, so that the numbers in your source match the numbers in your published HTML. But if you want to be lazy, you don't have to.\n\nIf you do use lazy list numbering, however, you should still start the list with the number 1. At some point in the future, Markdown may support starting ordered lists at an arbitrary number.\n\nList markers typically start at the left margin, but may be indented by up to three spaces. List markers must be followed by one or more spaces or a tab.\n\nTo make lists look nice, you can wrap items with hanging indents:\n\n    *   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n        Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\n        viverra nec, fringilla in, laoreet vitae, risus.\n    *   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\n        Suspendisse id sem consectetuer libero luctus adipiscing.\n\nBut if you want to be lazy, you don't have to:\n\n    *   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\n    viverra nec, fringilla in, laoreet vitae, risus.\n    *   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\n    Suspendisse id sem consectetuer libero luctus adipiscing.\n\nIf list items are separated by blank lines, Markdown will wrap the items in `<p>` tags in the HTML output. For example, this input:\n\n    *   Bird\n    *   Magic\n\nwill turn into:\n\n    <ul>\n    <li>Bird</li>\n    <li>Magic</li>\n    </ul>\n\nBut this:\n\n    *   Bird\n\n    *   Magic\n\nwill turn into:\n\n    <ul>\n    <li><p>Bird</p></li>\n    <li><p>Magic</p></li>\n    </ul>\n\nList items may consist of multiple paragraphs. Each subsequent paragraph in a list item must be indented by either 4 spaces or one tab:\n\n    1.  This is a list item with two paragraphs. Lorem ipsum dolor\n        sit amet, consectetuer adipiscing elit. Aliquam hendrerit\n        mi posuere lectus.\n\n        Vestibulum enim wisi, viverra nec, fringilla in, laoreet\n        vitae, risus. Donec sit amet nisl. Aliquam semper ipsum\n        sit amet velit.\n\n    2.  Suspendisse id sem consectetuer libero luctus adipiscing.\n\nIt looks nice if you indent every line of the subsequent paragraphs, but here again, Markdown will allow you to be lazy:\n\n    *   This is a list item with two paragraphs.\n\n        This is the second paragraph in the list item. You're\n    only required to indent the first line. Lorem ipsum dolor\n    sit amet, consectetuer adipiscing elit.\n\n    *   Another item in the same list.\n\nTo put a blockquote within a list item, the blockquote's `>` delimiters need to be indented:\n\n    *   A list item with a blockquote:\n\n        > This is a blockquote\n        > inside a list item.\n\nTo put a code block within a list item, the code block needs to be indented *twice* -- 8 spaces or two tabs:\n\n    *   A list item with a code block:\n\n            <code goes here>\n\n\nIt's worth noting that it's possible to trigger an ordered list by accident, by writing something like this:\n\n    1986. What a great season.\n\nIn other words, a *number-period-space* sequence at the beginning of a line. To avoid this, you can backslash-escape the period:\n\n    1986\\. What a great season.\n\n\n\n<h3 id=\"precode\">Code Blocks</h3>\n\nPre-formatted code blocks are used for writing about programming or markup source code. Rather than forming normal paragraphs, the lines of a code block are interpreted literally. Markdown wraps a code block in both `<pre>` and `<code>` tags.\n\nTo produce a code block in Markdown, simply indent every line of the block by at least 4 spaces or 1 tab. For example, given this input:\n\n    This is a normal paragraph:\n\n        This is a code block.\n\nMarkdown will generate:\n\n    <p>This is a normal paragraph:</p>\n\n    <pre><code>This is a code block.\n    </code></pre>\n\nOne level of indentation -- 4 spaces or 1 tab -- is removed from each line of the code block. For example, this:\n\n    Here is an example of AppleScript:\n\n        tell application \"Foo\"\n            beep\n        end tell\n\nwill turn into:\n\n    <p>Here is an example of AppleScript:</p>\n\n    <pre><code>tell application \"Foo\"\n        beep\n    end tell\n    </code></pre>\n\nA code block continues until it reaches a line that is not indented (or the end of the article).\n\nWithin a code block, ampersands (`&`) and angle brackets (`<` and `>`) are automatically converted into HTML entities. This makes it very easy to include example HTML source code using Markdown -- just paste it and indent it, and Markdown will handle the hassle of encoding the ampersands and angle brackets. For example, this:\n\n        <div class=\"footer\">\n            &copy; 2004 Foo Corporation\n        </div>\n\nwill turn into:\n\n    <pre><code>&lt;div class=\"footer\"&gt;\n        &amp;copy; 2004 Foo Corporation\n    &lt;/div&gt;\n    </code></pre>\n\nRegular Markdown syntax is not processed within code blocks. E.g., asterisks are just literal asterisks within a code block. This means it's also easy to use Markdown to write about Markdown's own syntax.\n\n\n<h3 id=\"hr\">Horizontal Rules</h3>\n\nYou can produce a horizontal rule tag (`<hr />`) by placing three or more hyphens, asterisks, or underscores on a line by themselves. If you wish, you may use spaces between the hyphens or asterisks. Each of the following lines will produce a horizontal rule:\n\n    * * *\n\n    ***\n\n    *****\n\n    - - -\n\n    ---------------------------------------\n\n\n* * *\n\n<h2 id=\"span\">Span Elements</h2>\n\n<h3 id=\"link\">Links</h3>\n\nMarkdown supports two style of links: *inline* and *reference*.\n\nIn both styles, the link text is delimited by [square brackets].\n\nTo create an inline link, use a set of regular parentheses immediately after the link text's closing square bracket. Inside the parentheses, put the URL where you want the link to point, along with an *optional* title for the link, surrounded in quotes. For example:\n\n    This is [an example](http://example.com/ \"Title\") inline link.\n\n    [This link](http://example.net/) has no title attribute.\n\nWill produce:\n\n    <p>This is <a href=\"http://example.com/\" title=\"Title\">\n    an example</a> inline link.</p>\n\n    <p><a href=\"http://example.net/\">This link</a> has no\n    title attribute.</p>\n\nIf you're referring to a local resource on the same server, you can use relative paths:\n\n    See my [About](/about/) page for details.   \n\nReference-style links use a second set of square brackets, inside which you place a label of your choosing to identify the link:\n\n    This is [an example][id] reference-style link.\n\nYou can optionally use a space to separate the sets of brackets:\n\n    This is [an example] [id] reference-style link.\n\nThen, anywhere in the document, you define your link label like this, on a line by itself:\n\n    [id]: http://example.com/  \"Optional Title Here\"\n\nThat is:\n\n*   Square brackets containing the link identifier (optionally\n    indented from the left margin using up to three spaces);\n*   followed by a colon;\n*   followed by one or more spaces (or tabs);\n*   followed by the URL for the link;\n*   optionally followed by a title attribute for the link, enclosed\n    in double or single quotes, or enclosed in parentheses.\n\nThe following three link definitions are equivalent:\n\n\t[foo]: http://example.com/  \"Optional Title Here\"\n\t[foo]: http://example.com/  'Optional Title Here'\n\t[foo]: http://example.com/  (Optional Title Here)\n\n**Note:** There is a known bug in Markdown.pl 1.0.1 which prevents single quotes from being used to delimit link titles.\n\nThe link URL may, optionally, be surrounded by angle brackets:\n\n    [id]: <http://example.com/>  \"Optional Title Here\"\n\nYou can put the title attribute on the next line and use extra spaces or tabs for padding, which tends to look better with longer URLs:\n\n    [id]: http://example.com/longish/path/to/resource/here\n        \"Optional Title Here\"\n\nLink definitions are only used for creating links during Markdown processing, and are stripped from your document in the HTML output.\n\nLink definition names may consist of letters, numbers, spaces, and punctuation -- but they are *not* case sensitive. E.g. these two links:\n\n\t[link text][a]\n\t[link text][A]\n\nare equivalent.\n\nThe *implicit link name* shortcut allows you to omit the name of the link, in which case the link text itself is used as the name. Just use an empty set of square brackets -- e.g., to link the word \"Google\" to the google.com web site, you could simply write:\n\n\t[Google][]\n\nAnd then define the link:\n\n\t[Google]: http://google.com/\n\nBecause link names may contain spaces, this shortcut even works for multiple words in the link text:\n\n\tVisit [Daring Fireball][] for more information.\n\nAnd then define the link:\n\t\n\t[Daring Fireball]: http://daringfireball.net/\n\nLink definitions can be placed anywhere in your Markdown document. I tend to put them immediately after each paragraph in which they're used, but if you want, you can put them all at the end of your document, sort of like footnotes.\n\nHere's an example of reference links in action:\n\n    I get 10 times more traffic from [Google] [1] than from\n    [Yahoo] [2] or [MSN] [3].\n\n      [1]: http://google.com/        \"Google\"\n      [2]: http://search.yahoo.com/  \"Yahoo Search\"\n      [3]: http://search.msn.com/    \"MSN Search\"\n\nUsing the implicit link name shortcut, you could instead write:\n\n    I get 10 times more traffic from [Google][] than from\n    [Yahoo][] or [MSN][].\n\n      [google]: http://google.com/        \"Google\"\n      [yahoo]:  http://search.yahoo.com/  \"Yahoo Search\"\n      [msn]:    http://search.msn.com/    \"MSN Search\"\n\nBoth of the above examples will produce the following HTML output:\n\n    <p>I get 10 times more traffic from <a href=\"http://google.com/\"\n    title=\"Google\">Google</a> than from\n    <a href=\"http://search.yahoo.com/\" title=\"Yahoo Search\">Yahoo</a>\n    or <a href=\"http://search.msn.com/\" title=\"MSN Search\">MSN</a>.</p>\n\nFor comparison, here is the same paragraph written using Markdown's inline link style:\n\n    I get 10 times more traffic from [Google](http://google.com/ \"Google\")\n    than from [Yahoo](http://search.yahoo.com/ \"Yahoo Search\") or\n    [MSN](http://search.msn.com/ \"MSN Search\").\n\nThe point of reference-style links is not that they're easier to write. The point is that with reference-style links, your document source is vastly more readable. Compare the above examples: using reference-style links, the paragraph itself is only 81 characters long; with inline-style links, it's 176 characters; and as raw HTML, it's 234 characters. In the raw HTML, there's more markup than there is text.\n\nWith Markdown's reference-style links, a source document much more closely resembles the final output, as rendered in a browser. By allowing you to move the markup-related metadata out of the paragraph, you can add links without interrupting the narrative flow of your prose.\n\n\n<h3 id=\"em\">Emphasis</h3>\n\nMarkdown treats asterisks (`*`) and underscores (`_`) as indicators of emphasis. Text wrapped with one `*` or `_` will be wrapped with an HTML `<em>` tag; double `*`'s or `_`'s will be wrapped with an HTML `<strong>` tag. E.g., this input:\n\n    *single asterisks*\n\n    _single underscores_\n\n    **double asterisks**\n\n    __double underscores__\n\nwill produce:\n\n    <em>single asterisks</em>\n\n    <em>single underscores</em>\n\n    <strong>double asterisks</strong>\n\n    <strong>double underscores</strong>\n\nYou can use whichever style you prefer; the lone restriction is that the same character must be used to open and close an emphasis span.\n\nEmphasis can be used in the middle of a word:\n\n    un*frigging*believable\n\nBut if you surround an `*` or `_` with spaces, it'll be treated as a literal asterisk or underscore.\n\nTo produce a literal asterisk or underscore at a position where it would otherwise be used as an emphasis delimiter, you can backslash escape it:\n\n    \\*this text is surrounded by literal asterisks\\*\n\n\n\n<h3 id=\"code\">Code</h3>\n\nTo indicate a span of code, wrap it with backtick quotes (`` ` ``). Unlike a pre-formatted code block, a code span indicates code within a normal paragraph. For example:\n\n    Use the `printf()` function.\n\nwill produce:\n\n    <p>Use the <code>printf()</code> function.</p>\n\nTo include a literal backtick character within a code span, you can use multiple backticks as the opening and closing delimiters:\n\n    ``There is a literal backtick (`) here.``\n\nwhich will produce this:\n\n    <p><code>There is a literal backtick (`) here.</code></p>\n\nThe backtick delimiters surrounding a code span may include spaces -- one after the opening, one before the closing. This allows you to place literal backtick characters at the beginning or end of a code span:\n\n\tA single backtick in a code span: `` ` ``\n\t\n\tA backtick-delimited string in a code span: `` `foo` ``\n\nwill produce:\n\n\t<p>A single backtick in a code span: <code>`</code></p>\n\t\n\t<p>A backtick-delimited string in a code span: <code>`foo`</code></p>\n\nWith a code span, ampersands and angle brackets are encoded as HTML entities automatically, which makes it easy to include example HTML tags. Markdown will turn this:\n\n    Please don't use any `<blink>` tags.\n\ninto:\n\n    <p>Please don't use any <code>&lt;blink&gt;</code> tags.</p>\n\nYou can write this:\n\n    `&#8212;` is the decimal-encoded equivalent of `&mdash;`.\n\nto produce:\n\n    <p><code>&amp;#8212;</code> is the decimal-encoded\n    equivalent of <code>&amp;mdash;</code>.</p>\n\n\n\n<h3 id=\"img\">Images</h3>\n\nAdmittedly, it's fairly difficult to devise a \"natural\" syntax for placing images into a plain text document format.\n\nMarkdown uses an image syntax that is intended to resemble the syntax for links, allowing for two styles: *inline* and *reference*.\n\nInline image syntax looks like this:\n\n    ![Alt text](/path/to/img.jpg)\n\n    ![Alt text](/path/to/img.jpg \"Optional title\")\n\nThat is:\n\n*   An exclamation mark: `!`;\n*   followed by a set of square brackets, containing the `alt`\n    attribute text for the image;\n*   followed by a set of parentheses, containing the URL or path to\n    the image, and an optional `title` attribute enclosed in double\n    or single quotes.\n\nReference-style image syntax looks like this:\n\n    ![Alt text][id]\n\nWhere \"id\" is the name of a defined image reference. Image references are defined using syntax identical to link references:\n\n    [id]: url/to/image  \"Optional title attribute\"\n\nAs of this writing, Markdown has no syntax for specifying the dimensions of an image; if this is important to you, you can simply use regular HTML `<img>` tags.\n\n\n* * *\n\n\n<h2 id=\"misc\">Miscellaneous</h2>\n\n<h3 id=\"autolink\">Automatic Links</h3>\n\nMarkdown supports a shortcut style for creating \"automatic\" links for URLs and email addresses: simply surround the URL or email address with angle brackets. What this means is that if you want to show the actual text of a URL or email address, and also have it be a clickable link, you can do this:\n\n    <http://example.com/>\n    \nMarkdown will turn this into:\n\n    <a href=\"http://example.com/\">http://example.com/</a>\n\nAutomatic links for email addresses work similarly, except that Markdown will also perform a bit of randomized decimal and hex entity-encoding to help obscure your address from address-harvesting spambots. For example, Markdown will turn this:\n\n    <address@example.com>\n\ninto something like this:\n\n    <a href=\"&#x6D;&#x61;i&#x6C;&#x74;&#x6F;:&#x61;&#x64;&#x64;&#x72;&#x65;\n    &#115;&#115;&#64;&#101;&#120;&#x61;&#109;&#x70;&#x6C;e&#x2E;&#99;&#111;\n    &#109;\">&#x61;&#x64;&#x64;&#x72;&#x65;&#115;&#115;&#64;&#101;&#120;&#x61;\n    &#109;&#x70;&#x6C;e&#x2E;&#99;&#111;&#109;</a>\n\nwhich will render in a browser as a clickable link to \"address@example.com\".\n\n(This sort of entity-encoding trick will indeed fool many, if not most, address-harvesting bots, but it definitely won't fool all of them. It's better than nothing, but an address published in this way will probably eventually start receiving spam.)\n\n\n\n<h3 id=\"backslash\">Backslash Escapes</h3>\n\nMarkdown allows you to use backslash escapes to generate literal characters which would otherwise have special meaning in Markdown's formatting syntax. For example, if you wanted to surround a word with literal asterisks (instead of an HTML `<em>` tag), you can use backslashes before the asterisks, like this:\n\n    \\*literal asterisks\\*\n\nMarkdown provides backslash escapes for the following characters:\n\n    \\   backslash\n    `   backtick\n    *   asterisk\n    _   underscore\n    {}  curly braces\n    []  square brackets\n    ()  parentheses\n    #   hash mark\n\t+\tplus sign\n\t-\tminus sign (hyphen)\n    .   dot\n    !   exclamation mark\n    \n> Source: [http://daringfireball.net/projects/markdown/syntax](http://daringfireball.net/projects/markdown/syntax)","slug":"markdown_syntax","published":1,"updated":"2016-08-03T13:24:07.827Z","_id":"cipnbu3dy000c8gv4amwly6jw","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<ul>\n<li><a href=\"#overview\">Overview</a><ul>\n<li><a href=\"#philosophy\">Philosophy</a></li>\n<li><a href=\"#html\">Inline HTML</a></li>\n<li><a href=\"#autoescape\">Automatic Escaping for Special Characters</a></li>\n</ul>\n</li>\n<li><a href=\"#block\">Block Elements</a><ul>\n<li><a href=\"#p\">Paragraphs and Line Breaks</a></li>\n<li><a href=\"#header\">Headers</a></li>\n<li><a href=\"#blockquote\">Blockquotes</a></li>\n<li><a href=\"#list\">Lists</a></li>\n<li><a href=\"#precode\">Code Blocks</a></li>\n<li><a href=\"#hr\">Horizontal Rules</a></li>\n</ul>\n</li>\n<li><a href=\"#span\">Span Elements</a><ul>\n<li><a href=\"#link\">Links</a></li>\n<li><a href=\"#em\">Emphasis</a></li>\n<li><a href=\"#code\">Code</a></li>\n<li><a href=\"#img\">Images</a></li>\n</ul>\n</li>\n<li><a href=\"#misc\">Miscellaneous</a><ul>\n<li><a href=\"#backslash\">Backslash Escapes</a></li>\n<li><a href=\"#autolink\">Automatic Links</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p><strong>Note:</strong> This document is itself written using Markdown; you can <a href=\"http://daringfireball.net/projects/markdown/syntax.text\" target=\"_blank\" rel=\"external\">see the source for it by adding ‘.text’ to the URL</a>.</p>\n<a id=\"more\"></a>\n<hr>\n<h2 id=\"overview\">Overview</h2>\n\n<h3 id=\"philosophy\">Philosophy</h3>\n\n<p>Markdown is intended to be as easy-to-read and easy-to-write as is feasible.</p>\n<p>Readability, however, is emphasized above all else. A Markdown-formatted document should be publishable as-is, as plain text, without looking like it’s been marked up with tags or formatting instructions. While Markdown’s syntax has been influenced by several existing text-to-HTML filters – including <a href=\"http://docutils.sourceforge.net/mirror/setext.html\" target=\"_blank\" rel=\"external\">Setext</a>, <a href=\"http://www.aaronsw.com/2002/atx/\" target=\"_blank\" rel=\"external\">atx</a>, <a href=\"http://textism.com/tools/textile/\" target=\"_blank\" rel=\"external\">Textile</a>, <a href=\"http://docutils.sourceforge.net/rst.html\" target=\"_blank\" rel=\"external\">reStructuredText</a>, <a href=\"http://www.triptico.com/software/grutatxt.html\" target=\"_blank\" rel=\"external\">Grutatext</a>, and <a href=\"http://ettext.taint.org/doc/\" target=\"_blank\" rel=\"external\">EtText</a> – the single biggest source of inspiration for Markdown’s syntax is the format of plain text email.</p>\n<p>To this end, Markdown’s syntax is comprised entirely of punctuation characters, which punctuation characters have been carefully chosen so as to look like what they mean. E.g., asterisks around a word actually look like *emphasis*. Markdown lists look like, well, lists. Even blockquotes look like quoted passages of text, assuming you’ve ever used email.</p>\n<h3 id=\"html\">Inline HTML</h3>\n\n<p>Markdown’s syntax is intended for one purpose: to be used as a format for <em>writing</em> for the web.</p>\n<p>Markdown is not a replacement for HTML, or even close to it. Its syntax is very small, corresponding only to a very small subset of HTML tags. The idea is <em>not</em> to create a syntax that makes it easier to insert HTML tags. In my opinion, HTML tags are already easy to insert. The idea for Markdown is to make it easy to read, write, and<br>edit prose. HTML is a <em>publishing</em> format; Markdown is a <em>writing</em> format. Thus, Markdown’s formatting syntax only addresses issues that can be conveyed in plain text.</p>\n<p>For any markup that is not covered by Markdown’s syntax, you simply use HTML itself. There’s no need to preface it or delimit it to indicate that you’re switching from Markdown to HTML; you just use the tags.</p>\n<p>The only restrictions are that block-level HTML elements – e.g. <code>&lt;div&gt;</code>, <code>&lt;table&gt;</code>, <code>&lt;pre&gt;</code>, <code>&lt;p&gt;</code>, etc. – must be separated from surrounding content by blank lines, and the start and end tags of the block should not be indented with tabs or spaces. Markdown is smart enough not to add extra (unwanted) <code>&lt;p&gt;</code> tags around HTML block-level tags.</p>\n<p>For example, to add an HTML table to a Markdown article:</p>\n<pre><code>This is a regular paragraph.\n\n&lt;table&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Foo&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n\nThis is another regular paragraph.\n</code></pre><p>Note that Markdown formatting syntax is not processed within block-level HTML tags. E.g., you can’t use Markdown-style <code>*emphasis*</code> inside an HTML block.</p>\n<p>Span-level HTML tags – e.g. <code>&lt;span&gt;</code>, <code>&lt;cite&gt;</code>, or <code>&lt;del&gt;</code> – can be used anywhere in a Markdown paragraph, list item, or header. If you want, you can even use HTML tags instead of Markdown formatting; e.g. if you’d prefer to use HTML <code>&lt;a&gt;</code> or <code>&lt;img&gt;</code> tags instead of Markdown’s link or image syntax, go right ahead.</p>\n<p>Unlike block-level HTML tags, Markdown syntax <em>is</em> processed within span-level tags.</p>\n<h3 id=\"autoescape\">Automatic Escaping for Special Characters</h3>\n\n<p>In HTML, there are two characters that demand special treatment: <code>&lt;</code> and <code>&amp;</code>. Left angle brackets are used to start tags; ampersands are used to denote HTML entities. If you want to use them as literal characters, you must escape them as entities, e.g. <code>&amp;lt;</code>, and <code>&amp;amp;</code>.</p>\n<p>Ampersands in particular are bedeviling for web writers. If you want to write about ‘AT&amp;T’, you need to write ‘<code>AT&amp;amp;T</code>‘. You even need to escape ampersands within URLs. Thus, if you want to link to:</p>\n<pre><code>http://images.google.com/images?num=30&amp;q=larry+bird\n</code></pre><p>you need to encode the URL as:</p>\n<pre><code>http://images.google.com/images?num=30&amp;amp;q=larry+bird\n</code></pre><p>in your anchor tag <code>href</code> attribute. Needless to say, this is easy to forget, and is probably the single most common source of HTML validation errors in otherwise well-marked-up web sites.</p>\n<p>Markdown allows you to use these characters naturally, taking care of all the necessary escaping for you. If you use an ampersand as part of an HTML entity, it remains unchanged; otherwise it will be translated into <code>&amp;amp;</code>.</p>\n<p>So, if you want to include a copyright symbol in your article, you can write:</p>\n<pre><code>&amp;copy;\n</code></pre><p>and Markdown will leave it alone. But if you write:</p>\n<pre><code>AT&amp;T\n</code></pre><p>Markdown will translate it to:</p>\n<pre><code>AT&amp;amp;T\n</code></pre><p>Similarly, because Markdown supports <a href=\"#html\">inline HTML</a>, if you use angle brackets as delimiters for HTML tags, Markdown will treat them as such. But if you write:</p>\n<pre><code>4 &lt; 5\n</code></pre><p>Markdown will translate it to:</p>\n<pre><code>4 &amp;lt; 5\n</code></pre><p>However, inside Markdown code spans and blocks, angle brackets and ampersands are <em>always</em> encoded automatically. This makes it easy to use Markdown to write about HTML code. (As opposed to raw HTML, which is a terrible format for writing about HTML syntax, because every single <code>&lt;</code> and <code>&amp;</code> in your example code needs to be escaped.)</p>\n<hr>\n<h2 id=\"block\">Block Elements</h2>\n\n<h3 id=\"p\">Paragraphs and Line Breaks</h3>\n\n<p>A paragraph is simply one or more consecutive lines of text, separated by one or more blank lines. (A blank line is any line that looks like a blank line – a line containing nothing but spaces or tabs is considered blank.) Normal paragraphs should not be indented with spaces or tabs.</p>\n<p>The implication of the “one or more consecutive lines of text” rule is that Markdown supports “hard-wrapped” text paragraphs. This differs significantly from most other text-to-HTML formatters (including Movable Type’s “Convert Line Breaks” option) which translate every line break character in a paragraph into a <code>&lt;br /&gt;</code> tag.</p>\n<p>When you <em>do</em> want to insert a <code>&lt;br /&gt;</code> break tag using Markdown, you end a line with two or more spaces, then type return.</p>\n<p>Yes, this takes a tad more effort to create a <code>&lt;br /&gt;</code>, but a simplistic “every line break is a <code>&lt;br /&gt;</code>“ rule wouldn’t work for Markdown. Markdown’s email-style <a href=\"#blockquote\">blockquoting</a> and multi-paragraph <a href=\"#list\">list items</a> work best – and look better – when you format them with hard breaks.</p>\n<h3 id=\"header\">Headers</h3>\n\n<p>Markdown supports two styles of headers, <a href=\"http://docutils.sourceforge.net/mirror/setext.html\" target=\"_blank\" rel=\"external\">Setext</a> and <a href=\"http://www.aaronsw.com/2002/atx/\" target=\"_blank\" rel=\"external\">atx</a>.</p>\n<p>Setext-style headers are “underlined” using equal signs (for first-level headers) and dashes (for second-level headers). For example:</p>\n<pre><code>This is an H1\n=============\n\nThis is an H2\n-------------\n</code></pre><p>Any number of underlining <code>=</code>‘s or <code>-</code>‘s will work.</p>\n<p>Atx-style headers use 1-6 hash characters at the start of the line, corresponding to header levels 1-6. For example:</p>\n<pre><code># This is an H1\n\n## This is an H2\n\n###### This is an H6\n</code></pre><p>Optionally, you may “close” atx-style headers. This is purely cosmetic – you can use this if you think it looks better. The closing hashes don’t even need to match the number of hashes used to open the header. (The number of opening hashes determines the header level.) :</p>\n<pre><code># This is an H1 #\n\n## This is an H2 ##\n\n### This is an H3 ######\n</code></pre><h3 id=\"blockquote\">Blockquotes</h3>\n\n<p>Markdown uses email-style <code>&gt;</code> characters for blockquoting. If you’re familiar with quoting passages of text in an email message, then you know how to create a blockquote in Markdown. It looks best if you hard wrap the text and put a <code>&gt;</code> before every line:</p>\n<pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\n&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\n&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n&gt; \n&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\n&gt; id sem consectetuer libero luctus adipiscing.\n</code></pre><p>Markdown allows you to be lazy and only put the <code>&gt;</code> before the first line of a hard-wrapped paragraph:</p>\n<pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\nconsectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\nVestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n\n&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\nid sem consectetuer libero luctus adipiscing.\n</code></pre><p>Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) by adding additional levels of <code>&gt;</code>:</p>\n<pre><code>&gt; This is the first level of quoting.\n&gt;\n&gt; &gt; This is nested blockquote.\n&gt;\n&gt; Back to the first level.\n</code></pre><p>Blockquotes can contain other Markdown elements, including headers, lists, and code blocks:</p>\n<pre><code>&gt; ## This is a header.\n&gt; \n&gt; 1.   This is the first list item.\n&gt; 2.   This is the second list item.\n&gt; \n&gt; Here&apos;s some example code:\n&gt; \n&gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);\n</code></pre><p>Any decent text editor should make email-style quoting easy. For example, with BBEdit, you can make a selection and choose Increase Quote Level from the Text menu.</p>\n<h3 id=\"list\">Lists</h3>\n\n<p>Markdown supports ordered (numbered) and unordered (bulleted) lists.</p>\n<p>Unordered lists use asterisks, pluses, and hyphens – interchangably<br>– as list markers:</p>\n<pre><code>*   Red\n*   Green\n*   Blue\n</code></pre><p>is equivalent to:</p>\n<pre><code>+   Red\n+   Green\n+   Blue\n</code></pre><p>and:</p>\n<pre><code>-   Red\n-   Green\n-   Blue\n</code></pre><p>Ordered lists use numbers followed by periods:</p>\n<pre><code>1.  Bird\n2.  McHale\n3.  Parish\n</code></pre><p>It’s important to note that the actual numbers you use to mark the list have no effect on the HTML output Markdown produces. The HTML Markdown produces from the above list is:</p>\n<pre><code>&lt;ol&gt;\n&lt;li&gt;Bird&lt;/li&gt;\n&lt;li&gt;McHale&lt;/li&gt;\n&lt;li&gt;Parish&lt;/li&gt;\n&lt;/ol&gt;\n</code></pre><p>If you instead wrote the list in Markdown like this:</p>\n<pre><code>1.  Bird\n1.  McHale\n1.  Parish\n</code></pre><p>or even:</p>\n<pre><code>3. Bird\n1. McHale\n8. Parish\n</code></pre><p>you’d get the exact same HTML output. The point is, if you want to,  you can use ordinal numbers in your ordered Markdown lists, so that the numbers in your source match the numbers in your published HTML. But if you want to be lazy, you don’t have to.</p>\n<p>If you do use lazy list numbering, however, you should still start the list with the number 1. At some point in the future, Markdown may support starting ordered lists at an arbitrary number.</p>\n<p>List markers typically start at the left margin, but may be indented by up to three spaces. List markers must be followed by one or more spaces or a tab.</p>\n<p>To make lists look nice, you can wrap items with hanging indents:</p>\n<pre><code>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\n    viverra nec, fringilla in, laoreet vitae, risus.\n*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\n    Suspendisse id sem consectetuer libero luctus adipiscing.\n</code></pre><p>But if you want to be lazy, you don’t have to:</p>\n<pre><code>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\nAliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\nviverra nec, fringilla in, laoreet vitae, risus.\n*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\nSuspendisse id sem consectetuer libero luctus adipiscing.\n</code></pre><p>If list items are separated by blank lines, Markdown will wrap the items in <code>&lt;p&gt;</code> tags in the HTML output. For example, this input:</p>\n<pre><code>*   Bird\n*   Magic\n</code></pre><p>will turn into:</p>\n<pre><code>&lt;ul&gt;\n&lt;li&gt;Bird&lt;/li&gt;\n&lt;li&gt;Magic&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre><p>But this:</p>\n<pre><code>*   Bird\n\n*   Magic\n</code></pre><p>will turn into:</p>\n<pre><code>&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Bird&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Magic&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre><p>List items may consist of multiple paragraphs. Each subsequent paragraph in a list item must be indented by either 4 spaces or one tab:</p>\n<pre><code>1.  This is a list item with two paragraphs. Lorem ipsum dolor\n    sit amet, consectetuer adipiscing elit. Aliquam hendrerit\n    mi posuere lectus.\n\n    Vestibulum enim wisi, viverra nec, fringilla in, laoreet\n    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum\n    sit amet velit.\n\n2.  Suspendisse id sem consectetuer libero luctus adipiscing.\n</code></pre><p>It looks nice if you indent every line of the subsequent paragraphs, but here again, Markdown will allow you to be lazy:</p>\n<pre><code>*   This is a list item with two paragraphs.\n\n    This is the second paragraph in the list item. You&apos;re\nonly required to indent the first line. Lorem ipsum dolor\nsit amet, consectetuer adipiscing elit.\n\n*   Another item in the same list.\n</code></pre><p>To put a blockquote within a list item, the blockquote’s <code>&gt;</code> delimiters need to be indented:</p>\n<pre><code>*   A list item with a blockquote:\n\n    &gt; This is a blockquote\n    &gt; inside a list item.\n</code></pre><p>To put a code block within a list item, the code block needs to be indented <em>twice</em> – 8 spaces or two tabs:</p>\n<pre><code>*   A list item with a code block:\n\n        &lt;code goes here&gt;\n</code></pre><p>It’s worth noting that it’s possible to trigger an ordered list by accident, by writing something like this:</p>\n<pre><code>1986. What a great season.\n</code></pre><p>In other words, a <em>number-period-space</em> sequence at the beginning of a line. To avoid this, you can backslash-escape the period:</p>\n<pre><code>1986\\. What a great season.\n</code></pre><h3 id=\"precode\">Code Blocks</h3>\n\n<p>Pre-formatted code blocks are used for writing about programming or markup source code. Rather than forming normal paragraphs, the lines of a code block are interpreted literally. Markdown wraps a code block in both <code>&lt;pre&gt;</code> and <code>&lt;code&gt;</code> tags.</p>\n<p>To produce a code block in Markdown, simply indent every line of the block by at least 4 spaces or 1 tab. For example, given this input:</p>\n<pre><code>This is a normal paragraph:\n\n    This is a code block.\n</code></pre><p>Markdown will generate:</p>\n<pre><code>&lt;p&gt;This is a normal paragraph:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;This is a code block.\n&lt;/code&gt;&lt;/pre&gt;\n</code></pre><p>One level of indentation – 4 spaces or 1 tab – is removed from each line of the code block. For example, this:</p>\n<pre><code>Here is an example of AppleScript:\n\n    tell application &quot;Foo&quot;\n        beep\n    end tell\n</code></pre><p>will turn into:</p>\n<pre><code>&lt;p&gt;Here is an example of AppleScript:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;tell application &quot;Foo&quot;\n    beep\nend tell\n&lt;/code&gt;&lt;/pre&gt;\n</code></pre><p>A code block continues until it reaches a line that is not indented (or the end of the article).</p>\n<p>Within a code block, ampersands (<code>&amp;</code>) and angle brackets (<code>&lt;</code> and <code>&gt;</code>) are automatically converted into HTML entities. This makes it very easy to include example HTML source code using Markdown – just paste it and indent it, and Markdown will handle the hassle of encoding the ampersands and angle brackets. For example, this:</p>\n<pre><code>&lt;div class=&quot;footer&quot;&gt;\n    &amp;copy; 2004 Foo Corporation\n&lt;/div&gt;\n</code></pre><p>will turn into:</p>\n<pre><code>&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&quot;footer&quot;&amp;gt;\n    &amp;amp;copy; 2004 Foo Corporation\n&amp;lt;/div&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n</code></pre><p>Regular Markdown syntax is not processed within code blocks. E.g., asterisks are just literal asterisks within a code block. This means it’s also easy to use Markdown to write about Markdown’s own syntax.</p>\n<h3 id=\"hr\">Horizontal Rules</h3>\n\n<p>You can produce a horizontal rule tag (<code>&lt;hr /&gt;</code>) by placing three or more hyphens, asterisks, or underscores on a line by themselves. If you wish, you may use spaces between the hyphens or asterisks. Each of the following lines will produce a horizontal rule:</p>\n<pre><code>* * *\n\n***\n\n*****\n\n- - -\n\n---------------------------------------\n</code></pre><hr>\n<h2 id=\"span\">Span Elements</h2>\n\n<h3 id=\"link\">Links</h3>\n\n<p>Markdown supports two style of links: <em>inline</em> and <em>reference</em>.</p>\n<p>In both styles, the link text is delimited by [square brackets].</p>\n<p>To create an inline link, use a set of regular parentheses immediately after the link text’s closing square bracket. Inside the parentheses, put the URL where you want the link to point, along with an <em>optional</em> title for the link, surrounded in quotes. For example:</p>\n<pre><code>This is [an example](http://example.com/ &quot;Title&quot;) inline link.\n\n[This link](http://example.net/) has no title attribute.\n</code></pre><p>Will produce:</p>\n<pre><code>&lt;p&gt;This is &lt;a href=&quot;http://example.com/&quot; title=&quot;Title&quot;&gt;\nan example&lt;/a&gt; inline link.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://example.net/&quot;&gt;This link&lt;/a&gt; has no\ntitle attribute.&lt;/p&gt;\n</code></pre><p>If you’re referring to a local resource on the same server, you can use relative paths:</p>\n<pre><code>See my [About](/about/) page for details.   \n</code></pre><p>Reference-style links use a second set of square brackets, inside which you place a label of your choosing to identify the link:</p>\n<pre><code>This is [an example][id] reference-style link.\n</code></pre><p>You can optionally use a space to separate the sets of brackets:</p>\n<pre><code>This is [an example] [id] reference-style link.\n</code></pre><p>Then, anywhere in the document, you define your link label like this, on a line by itself:</p>\n<pre><code>[id]: http://example.com/  &quot;Optional Title Here&quot;\n</code></pre><p>That is:</p>\n<ul>\n<li>Square brackets containing the link identifier (optionally<br>indented from the left margin using up to three spaces);</li>\n<li>followed by a colon;</li>\n<li>followed by one or more spaces (or tabs);</li>\n<li>followed by the URL for the link;</li>\n<li>optionally followed by a title attribute for the link, enclosed<br>in double or single quotes, or enclosed in parentheses.</li>\n</ul>\n<p>The following three link definitions are equivalent:</p>\n<pre><code>[foo]: http://example.com/  &quot;Optional Title Here&quot;\n[foo]: http://example.com/  &apos;Optional Title Here&apos;\n[foo]: http://example.com/  (Optional Title Here)\n</code></pre><p><strong>Note:</strong> There is a known bug in Markdown.pl 1.0.1 which prevents single quotes from being used to delimit link titles.</p>\n<p>The link URL may, optionally, be surrounded by angle brackets:</p>\n<pre><code>[id]: &lt;http://example.com/&gt;  &quot;Optional Title Here&quot;\n</code></pre><p>You can put the title attribute on the next line and use extra spaces or tabs for padding, which tends to look better with longer URLs:</p>\n<pre><code>[id]: http://example.com/longish/path/to/resource/here\n    &quot;Optional Title Here&quot;\n</code></pre><p>Link definitions are only used for creating links during Markdown processing, and are stripped from your document in the HTML output.</p>\n<p>Link definition names may consist of letters, numbers, spaces, and punctuation – but they are <em>not</em> case sensitive. E.g. these two links:</p>\n<pre><code>[link text][a]\n[link text][A]\n</code></pre><p>are equivalent.</p>\n<p>The <em>implicit link name</em> shortcut allows you to omit the name of the link, in which case the link text itself is used as the name. Just use an empty set of square brackets – e.g., to link the word “Google” to the google.com web site, you could simply write:</p>\n<pre><code>[Google][]\n</code></pre><p>And then define the link:</p>\n<pre><code>[Google]: http://google.com/\n</code></pre><p>Because link names may contain spaces, this shortcut even works for multiple words in the link text:</p>\n<pre><code>Visit [Daring Fireball][] for more information.\n</code></pre><p>And then define the link:</p>\n<pre><code>[Daring Fireball]: http://daringfireball.net/\n</code></pre><p>Link definitions can be placed anywhere in your Markdown document. I tend to put them immediately after each paragraph in which they’re used, but if you want, you can put them all at the end of your document, sort of like footnotes.</p>\n<p>Here’s an example of reference links in action:</p>\n<pre><code>I get 10 times more traffic from [Google] [1] than from\n[Yahoo] [2] or [MSN] [3].\n\n  [1]: http://google.com/        &quot;Google&quot;\n  [2]: http://search.yahoo.com/  &quot;Yahoo Search&quot;\n  [3]: http://search.msn.com/    &quot;MSN Search&quot;\n</code></pre><p>Using the implicit link name shortcut, you could instead write:</p>\n<pre><code>I get 10 times more traffic from [Google][] than from\n[Yahoo][] or [MSN][].\n\n  [google]: http://google.com/        &quot;Google&quot;\n  [yahoo]:  http://search.yahoo.com/  &quot;Yahoo Search&quot;\n  [msn]:    http://search.msn.com/    &quot;MSN Search&quot;\n</code></pre><p>Both of the above examples will produce the following HTML output:</p>\n<pre><code>&lt;p&gt;I get 10 times more traffic from &lt;a href=&quot;http://google.com/&quot;\ntitle=&quot;Google&quot;&gt;Google&lt;/a&gt; than from\n&lt;a href=&quot;http://search.yahoo.com/&quot; title=&quot;Yahoo Search&quot;&gt;Yahoo&lt;/a&gt;\nor &lt;a href=&quot;http://search.msn.com/&quot; title=&quot;MSN Search&quot;&gt;MSN&lt;/a&gt;.&lt;/p&gt;\n</code></pre><p>For comparison, here is the same paragraph written using Markdown’s inline link style:</p>\n<pre><code>I get 10 times more traffic from [Google](http://google.com/ &quot;Google&quot;)\nthan from [Yahoo](http://search.yahoo.com/ &quot;Yahoo Search&quot;) or\n[MSN](http://search.msn.com/ &quot;MSN Search&quot;).\n</code></pre><p>The point of reference-style links is not that they’re easier to write. The point is that with reference-style links, your document source is vastly more readable. Compare the above examples: using reference-style links, the paragraph itself is only 81 characters long; with inline-style links, it’s 176 characters; and as raw HTML, it’s 234 characters. In the raw HTML, there’s more markup than there is text.</p>\n<p>With Markdown’s reference-style links, a source document much more closely resembles the final output, as rendered in a browser. By allowing you to move the markup-related metadata out of the paragraph, you can add links without interrupting the narrative flow of your prose.</p>\n<h3 id=\"em\">Emphasis</h3>\n\n<p>Markdown treats asterisks (<code>*</code>) and underscores (<code>_</code>) as indicators of emphasis. Text wrapped with one <code>*</code> or <code>_</code> will be wrapped with an HTML <code>&lt;em&gt;</code> tag; double <code>*</code>‘s or <code>_</code>‘s will be wrapped with an HTML <code>&lt;strong&gt;</code> tag. E.g., this input:</p>\n<pre><code>*single asterisks*\n\n_single underscores_\n\n**double asterisks**\n\n__double underscores__\n</code></pre><p>will produce:</p>\n<pre><code>&lt;em&gt;single asterisks&lt;/em&gt;\n\n&lt;em&gt;single underscores&lt;/em&gt;\n\n&lt;strong&gt;double asterisks&lt;/strong&gt;\n\n&lt;strong&gt;double underscores&lt;/strong&gt;\n</code></pre><p>You can use whichever style you prefer; the lone restriction is that the same character must be used to open and close an emphasis span.</p>\n<p>Emphasis can be used in the middle of a word:</p>\n<pre><code>un*frigging*believable\n</code></pre><p>But if you surround an <code>*</code> or <code>_</code> with spaces, it’ll be treated as a literal asterisk or underscore.</p>\n<p>To produce a literal asterisk or underscore at a position where it would otherwise be used as an emphasis delimiter, you can backslash escape it:</p>\n<pre><code>\\*this text is surrounded by literal asterisks\\*\n</code></pre><h3 id=\"code\">Code</h3>\n\n<p>To indicate a span of code, wrap it with backtick quotes (<code>` </code>). Unlike a pre-formatted code block, a code span indicates code within a normal paragraph. For example:</p>\n<pre><code>Use the `printf()` function.\n</code></pre><p>will produce:</p>\n<pre><code>&lt;p&gt;Use the &lt;code&gt;printf()&lt;/code&gt; function.&lt;/p&gt;\n</code></pre><p>To include a literal backtick character within a code span, you can use multiple backticks as the opening and closing delimiters:</p>\n<pre><code>``There is a literal backtick (`) here.``\n</code></pre><p>which will produce this:</p>\n<pre><code>&lt;p&gt;&lt;code&gt;There is a literal backtick (`) here.&lt;/code&gt;&lt;/p&gt;\n</code></pre><p>The backtick delimiters surrounding a code span may include spaces – one after the opening, one before the closing. This allows you to place literal backtick characters at the beginning or end of a code span:</p>\n<pre><code>A single backtick in a code span: `` ` ``\n\nA backtick-delimited string in a code span: `` `foo` ``\n</code></pre><p>will produce:</p>\n<pre><code>&lt;p&gt;A single backtick in a code span: &lt;code&gt;`&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;A backtick-delimited string in a code span: &lt;code&gt;`foo`&lt;/code&gt;&lt;/p&gt;\n</code></pre><p>With a code span, ampersands and angle brackets are encoded as HTML entities automatically, which makes it easy to include example HTML tags. Markdown will turn this:</p>\n<pre><code>Please don&apos;t use any `&lt;blink&gt;` tags.\n</code></pre><p>into:</p>\n<pre><code>&lt;p&gt;Please don&apos;t use any &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;\n</code></pre><p>You can write this:</p>\n<pre><code>`&amp;#8212;` is the decimal-encoded equivalent of `&amp;mdash;`.\n</code></pre><p>to produce:</p>\n<pre><code>&lt;p&gt;&lt;code&gt;&amp;amp;#8212;&lt;/code&gt; is the decimal-encoded\nequivalent of &lt;code&gt;&amp;amp;mdash;&lt;/code&gt;.&lt;/p&gt;\n</code></pre><h3 id=\"img\">Images</h3>\n\n<p>Admittedly, it’s fairly difficult to devise a “natural” syntax for placing images into a plain text document format.</p>\n<p>Markdown uses an image syntax that is intended to resemble the syntax for links, allowing for two styles: <em>inline</em> and <em>reference</em>.</p>\n<p>Inline image syntax looks like this:</p>\n<pre><code>![Alt text](/path/to/img.jpg)\n\n![Alt text](/path/to/img.jpg &quot;Optional title&quot;)\n</code></pre><p>That is:</p>\n<ul>\n<li>An exclamation mark: <code>!</code>;</li>\n<li>followed by a set of square brackets, containing the <code>alt</code><br>attribute text for the image;</li>\n<li>followed by a set of parentheses, containing the URL or path to<br>the image, and an optional <code>title</code> attribute enclosed in double<br>or single quotes.</li>\n</ul>\n<p>Reference-style image syntax looks like this:</p>\n<pre><code>![Alt text][id]\n</code></pre><p>Where “id” is the name of a defined image reference. Image references are defined using syntax identical to link references:</p>\n<pre><code>[id]: url/to/image  &quot;Optional title attribute&quot;\n</code></pre><p>As of this writing, Markdown has no syntax for specifying the dimensions of an image; if this is important to you, you can simply use regular HTML <code>&lt;img&gt;</code> tags.</p>\n<hr>\n<h2 id=\"misc\">Miscellaneous</h2>\n\n<h3 id=\"autolink\">Automatic Links</h3>\n\n<p>Markdown supports a shortcut style for creating “automatic” links for URLs and email addresses: simply surround the URL or email address with angle brackets. What this means is that if you want to show the actual text of a URL or email address, and also have it be a clickable link, you can do this:</p>\n<pre><code>&lt;http://example.com/&gt;\n</code></pre><p>Markdown will turn this into:</p>\n<pre><code>&lt;a href=&quot;http://example.com/&quot;&gt;http://example.com/&lt;/a&gt;\n</code></pre><p>Automatic links for email addresses work similarly, except that Markdown will also perform a bit of randomized decimal and hex entity-encoding to help obscure your address from address-harvesting spambots. For example, Markdown will turn this:</p>\n<pre><code>&lt;address@example.com&gt;\n</code></pre><p>into something like this:</p>\n<pre><code>&lt;a href=&quot;&amp;#x6D;&amp;#x61;i&amp;#x6C;&amp;#x74;&amp;#x6F;:&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;\n&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;\n&amp;#109;&quot;&gt;&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;\n&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;\n</code></pre><p>which will render in a browser as a clickable link to “address@example.com”.</p>\n<p>(This sort of entity-encoding trick will indeed fool many, if not most, address-harvesting bots, but it definitely won’t fool all of them. It’s better than nothing, but an address published in this way will probably eventually start receiving spam.)</p>\n<h3 id=\"backslash\">Backslash Escapes</h3>\n\n<p>Markdown allows you to use backslash escapes to generate literal characters which would otherwise have special meaning in Markdown’s formatting syntax. For example, if you wanted to surround a word with literal asterisks (instead of an HTML <code>&lt;em&gt;</code> tag), you can use backslashes before the asterisks, like this:</p>\n<pre><code>\\*literal asterisks\\*\n</code></pre><p>Markdown provides backslash escapes for the following characters:</p>\n<pre><code>\\   backslash\n`   backtick\n*   asterisk\n_   underscore\n{}  curly braces\n[]  square brackets\n()  parentheses\n#   hash mark\n+    plus sign\n-    minus sign (hyphen)\n.   dot\n!   exclamation mark\n</code></pre><blockquote>\n<p>Source: <a href=\"http://daringfireball.net/projects/markdown/syntax\" target=\"_blank\" rel=\"external\">http://daringfireball.net/projects/markdown/syntax</a></p>\n</blockquote>\n","excerpt":"<blockquote>\n<ul>\n<li><a href=\"#overview\">Overview</a><ul>\n<li><a href=\"#philosophy\">Philosophy</a></li>\n<li><a href=\"#html\">Inline HTML</a></li>\n<li><a href=\"#autoescape\">Automatic Escaping for Special Characters</a></li>\n</ul>\n</li>\n<li><a href=\"#block\">Block Elements</a><ul>\n<li><a href=\"#p\">Paragraphs and Line Breaks</a></li>\n<li><a href=\"#header\">Headers</a></li>\n<li><a href=\"#blockquote\">Blockquotes</a></li>\n<li><a href=\"#list\">Lists</a></li>\n<li><a href=\"#precode\">Code Blocks</a></li>\n<li><a href=\"#hr\">Horizontal Rules</a></li>\n</ul>\n</li>\n<li><a href=\"#span\">Span Elements</a><ul>\n<li><a href=\"#link\">Links</a></li>\n<li><a href=\"#em\">Emphasis</a></li>\n<li><a href=\"#code\">Code</a></li>\n<li><a href=\"#img\">Images</a></li>\n</ul>\n</li>\n<li><a href=\"#misc\">Miscellaneous</a><ul>\n<li><a href=\"#backslash\">Backslash Escapes</a></li>\n<li><a href=\"#autolink\">Automatic Links</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p><strong>Note:</strong> This document is itself written using Markdown; you can <a href=\"http://daringfireball.net/projects/markdown/syntax.text\">see the source for it by adding ‘.text’ to the URL</a>.</p>","more":"<hr>\n<h2 id=\"overview\">Overview</h2>\n\n<h3 id=\"philosophy\">Philosophy</h3>\n\n<p>Markdown is intended to be as easy-to-read and easy-to-write as is feasible.</p>\n<p>Readability, however, is emphasized above all else. A Markdown-formatted document should be publishable as-is, as plain text, without looking like it’s been marked up with tags or formatting instructions. While Markdown’s syntax has been influenced by several existing text-to-HTML filters – including <a href=\"http://docutils.sourceforge.net/mirror/setext.html\">Setext</a>, <a href=\"http://www.aaronsw.com/2002/atx/\">atx</a>, <a href=\"http://textism.com/tools/textile/\">Textile</a>, <a href=\"http://docutils.sourceforge.net/rst.html\">reStructuredText</a>, <a href=\"http://www.triptico.com/software/grutatxt.html\">Grutatext</a>, and <a href=\"http://ettext.taint.org/doc/\">EtText</a> – the single biggest source of inspiration for Markdown’s syntax is the format of plain text email.</p>\n<p>To this end, Markdown’s syntax is comprised entirely of punctuation characters, which punctuation characters have been carefully chosen so as to look like what they mean. E.g., asterisks around a word actually look like *emphasis*. Markdown lists look like, well, lists. Even blockquotes look like quoted passages of text, assuming you’ve ever used email.</p>\n<h3 id=\"html\">Inline HTML</h3>\n\n<p>Markdown’s syntax is intended for one purpose: to be used as a format for <em>writing</em> for the web.</p>\n<p>Markdown is not a replacement for HTML, or even close to it. Its syntax is very small, corresponding only to a very small subset of HTML tags. The idea is <em>not</em> to create a syntax that makes it easier to insert HTML tags. In my opinion, HTML tags are already easy to insert. The idea for Markdown is to make it easy to read, write, and<br>edit prose. HTML is a <em>publishing</em> format; Markdown is a <em>writing</em> format. Thus, Markdown’s formatting syntax only addresses issues that can be conveyed in plain text.</p>\n<p>For any markup that is not covered by Markdown’s syntax, you simply use HTML itself. There’s no need to preface it or delimit it to indicate that you’re switching from Markdown to HTML; you just use the tags.</p>\n<p>The only restrictions are that block-level HTML elements – e.g. <code>&lt;div&gt;</code>, <code>&lt;table&gt;</code>, <code>&lt;pre&gt;</code>, <code>&lt;p&gt;</code>, etc. – must be separated from surrounding content by blank lines, and the start and end tags of the block should not be indented with tabs or spaces. Markdown is smart enough not to add extra (unwanted) <code>&lt;p&gt;</code> tags around HTML block-level tags.</p>\n<p>For example, to add an HTML table to a Markdown article:</p>\n<pre><code>This is a regular paragraph.\n\n&lt;table&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Foo&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n\nThis is another regular paragraph.\n</code></pre><p>Note that Markdown formatting syntax is not processed within block-level HTML tags. E.g., you can’t use Markdown-style <code>*emphasis*</code> inside an HTML block.</p>\n<p>Span-level HTML tags – e.g. <code>&lt;span&gt;</code>, <code>&lt;cite&gt;</code>, or <code>&lt;del&gt;</code> – can be used anywhere in a Markdown paragraph, list item, or header. If you want, you can even use HTML tags instead of Markdown formatting; e.g. if you’d prefer to use HTML <code>&lt;a&gt;</code> or <code>&lt;img&gt;</code> tags instead of Markdown’s link or image syntax, go right ahead.</p>\n<p>Unlike block-level HTML tags, Markdown syntax <em>is</em> processed within span-level tags.</p>\n<h3 id=\"autoescape\">Automatic Escaping for Special Characters</h3>\n\n<p>In HTML, there are two characters that demand special treatment: <code>&lt;</code> and <code>&amp;</code>. Left angle brackets are used to start tags; ampersands are used to denote HTML entities. If you want to use them as literal characters, you must escape them as entities, e.g. <code>&amp;lt;</code>, and <code>&amp;amp;</code>.</p>\n<p>Ampersands in particular are bedeviling for web writers. If you want to write about ‘AT&amp;T’, you need to write ‘<code>AT&amp;amp;T</code>‘. You even need to escape ampersands within URLs. Thus, if you want to link to:</p>\n<pre><code>http://images.google.com/images?num=30&amp;q=larry+bird\n</code></pre><p>you need to encode the URL as:</p>\n<pre><code>http://images.google.com/images?num=30&amp;amp;q=larry+bird\n</code></pre><p>in your anchor tag <code>href</code> attribute. Needless to say, this is easy to forget, and is probably the single most common source of HTML validation errors in otherwise well-marked-up web sites.</p>\n<p>Markdown allows you to use these characters naturally, taking care of all the necessary escaping for you. If you use an ampersand as part of an HTML entity, it remains unchanged; otherwise it will be translated into <code>&amp;amp;</code>.</p>\n<p>So, if you want to include a copyright symbol in your article, you can write:</p>\n<pre><code>&amp;copy;\n</code></pre><p>and Markdown will leave it alone. But if you write:</p>\n<pre><code>AT&amp;T\n</code></pre><p>Markdown will translate it to:</p>\n<pre><code>AT&amp;amp;T\n</code></pre><p>Similarly, because Markdown supports <a href=\"#html\">inline HTML</a>, if you use angle brackets as delimiters for HTML tags, Markdown will treat them as such. But if you write:</p>\n<pre><code>4 &lt; 5\n</code></pre><p>Markdown will translate it to:</p>\n<pre><code>4 &amp;lt; 5\n</code></pre><p>However, inside Markdown code spans and blocks, angle brackets and ampersands are <em>always</em> encoded automatically. This makes it easy to use Markdown to write about HTML code. (As opposed to raw HTML, which is a terrible format for writing about HTML syntax, because every single <code>&lt;</code> and <code>&amp;</code> in your example code needs to be escaped.)</p>\n<hr>\n<h2 id=\"block\">Block Elements</h2>\n\n<h3 id=\"p\">Paragraphs and Line Breaks</h3>\n\n<p>A paragraph is simply one or more consecutive lines of text, separated by one or more blank lines. (A blank line is any line that looks like a blank line – a line containing nothing but spaces or tabs is considered blank.) Normal paragraphs should not be indented with spaces or tabs.</p>\n<p>The implication of the “one or more consecutive lines of text” rule is that Markdown supports “hard-wrapped” text paragraphs. This differs significantly from most other text-to-HTML formatters (including Movable Type’s “Convert Line Breaks” option) which translate every line break character in a paragraph into a <code>&lt;br /&gt;</code> tag.</p>\n<p>When you <em>do</em> want to insert a <code>&lt;br /&gt;</code> break tag using Markdown, you end a line with two or more spaces, then type return.</p>\n<p>Yes, this takes a tad more effort to create a <code>&lt;br /&gt;</code>, but a simplistic “every line break is a <code>&lt;br /&gt;</code>“ rule wouldn’t work for Markdown. Markdown’s email-style <a href=\"#blockquote\">blockquoting</a> and multi-paragraph <a href=\"#list\">list items</a> work best – and look better – when you format them with hard breaks.</p>\n<h3 id=\"header\">Headers</h3>\n\n<p>Markdown supports two styles of headers, <a href=\"http://docutils.sourceforge.net/mirror/setext.html\">Setext</a> and <a href=\"http://www.aaronsw.com/2002/atx/\">atx</a>.</p>\n<p>Setext-style headers are “underlined” using equal signs (for first-level headers) and dashes (for second-level headers). For example:</p>\n<pre><code>This is an H1\n=============\n\nThis is an H2\n-------------\n</code></pre><p>Any number of underlining <code>=</code>‘s or <code>-</code>‘s will work.</p>\n<p>Atx-style headers use 1-6 hash characters at the start of the line, corresponding to header levels 1-6. For example:</p>\n<pre><code># This is an H1\n\n## This is an H2\n\n###### This is an H6\n</code></pre><p>Optionally, you may “close” atx-style headers. This is purely cosmetic – you can use this if you think it looks better. The closing hashes don’t even need to match the number of hashes used to open the header. (The number of opening hashes determines the header level.) :</p>\n<pre><code># This is an H1 #\n\n## This is an H2 ##\n\n### This is an H3 ######\n</code></pre><h3 id=\"blockquote\">Blockquotes</h3>\n\n<p>Markdown uses email-style <code>&gt;</code> characters for blockquoting. If you’re familiar with quoting passages of text in an email message, then you know how to create a blockquote in Markdown. It looks best if you hard wrap the text and put a <code>&gt;</code> before every line:</p>\n<pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\n&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\n&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n&gt; \n&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\n&gt; id sem consectetuer libero luctus adipiscing.\n</code></pre><p>Markdown allows you to be lazy and only put the <code>&gt;</code> before the first line of a hard-wrapped paragraph:</p>\n<pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\nconsectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\nVestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n\n&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\nid sem consectetuer libero luctus adipiscing.\n</code></pre><p>Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) by adding additional levels of <code>&gt;</code>:</p>\n<pre><code>&gt; This is the first level of quoting.\n&gt;\n&gt; &gt; This is nested blockquote.\n&gt;\n&gt; Back to the first level.\n</code></pre><p>Blockquotes can contain other Markdown elements, including headers, lists, and code blocks:</p>\n<pre><code>&gt; ## This is a header.\n&gt; \n&gt; 1.   This is the first list item.\n&gt; 2.   This is the second list item.\n&gt; \n&gt; Here&apos;s some example code:\n&gt; \n&gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);\n</code></pre><p>Any decent text editor should make email-style quoting easy. For example, with BBEdit, you can make a selection and choose Increase Quote Level from the Text menu.</p>\n<h3 id=\"list\">Lists</h3>\n\n<p>Markdown supports ordered (numbered) and unordered (bulleted) lists.</p>\n<p>Unordered lists use asterisks, pluses, and hyphens – interchangably<br>– as list markers:</p>\n<pre><code>*   Red\n*   Green\n*   Blue\n</code></pre><p>is equivalent to:</p>\n<pre><code>+   Red\n+   Green\n+   Blue\n</code></pre><p>and:</p>\n<pre><code>-   Red\n-   Green\n-   Blue\n</code></pre><p>Ordered lists use numbers followed by periods:</p>\n<pre><code>1.  Bird\n2.  McHale\n3.  Parish\n</code></pre><p>It’s important to note that the actual numbers you use to mark the list have no effect on the HTML output Markdown produces. The HTML Markdown produces from the above list is:</p>\n<pre><code>&lt;ol&gt;\n&lt;li&gt;Bird&lt;/li&gt;\n&lt;li&gt;McHale&lt;/li&gt;\n&lt;li&gt;Parish&lt;/li&gt;\n&lt;/ol&gt;\n</code></pre><p>If you instead wrote the list in Markdown like this:</p>\n<pre><code>1.  Bird\n1.  McHale\n1.  Parish\n</code></pre><p>or even:</p>\n<pre><code>3. Bird\n1. McHale\n8. Parish\n</code></pre><p>you’d get the exact same HTML output. The point is, if you want to,  you can use ordinal numbers in your ordered Markdown lists, so that the numbers in your source match the numbers in your published HTML. But if you want to be lazy, you don’t have to.</p>\n<p>If you do use lazy list numbering, however, you should still start the list with the number 1. At some point in the future, Markdown may support starting ordered lists at an arbitrary number.</p>\n<p>List markers typically start at the left margin, but may be indented by up to three spaces. List markers must be followed by one or more spaces or a tab.</p>\n<p>To make lists look nice, you can wrap items with hanging indents:</p>\n<pre><code>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\n    viverra nec, fringilla in, laoreet vitae, risus.\n*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\n    Suspendisse id sem consectetuer libero luctus adipiscing.\n</code></pre><p>But if you want to be lazy, you don’t have to:</p>\n<pre><code>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\nAliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\nviverra nec, fringilla in, laoreet vitae, risus.\n*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\nSuspendisse id sem consectetuer libero luctus adipiscing.\n</code></pre><p>If list items are separated by blank lines, Markdown will wrap the items in <code>&lt;p&gt;</code> tags in the HTML output. For example, this input:</p>\n<pre><code>*   Bird\n*   Magic\n</code></pre><p>will turn into:</p>\n<pre><code>&lt;ul&gt;\n&lt;li&gt;Bird&lt;/li&gt;\n&lt;li&gt;Magic&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre><p>But this:</p>\n<pre><code>*   Bird\n\n*   Magic\n</code></pre><p>will turn into:</p>\n<pre><code>&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Bird&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Magic&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre><p>List items may consist of multiple paragraphs. Each subsequent paragraph in a list item must be indented by either 4 spaces or one tab:</p>\n<pre><code>1.  This is a list item with two paragraphs. Lorem ipsum dolor\n    sit amet, consectetuer adipiscing elit. Aliquam hendrerit\n    mi posuere lectus.\n\n    Vestibulum enim wisi, viverra nec, fringilla in, laoreet\n    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum\n    sit amet velit.\n\n2.  Suspendisse id sem consectetuer libero luctus adipiscing.\n</code></pre><p>It looks nice if you indent every line of the subsequent paragraphs, but here again, Markdown will allow you to be lazy:</p>\n<pre><code>*   This is a list item with two paragraphs.\n\n    This is the second paragraph in the list item. You&apos;re\nonly required to indent the first line. Lorem ipsum dolor\nsit amet, consectetuer adipiscing elit.\n\n*   Another item in the same list.\n</code></pre><p>To put a blockquote within a list item, the blockquote’s <code>&gt;</code> delimiters need to be indented:</p>\n<pre><code>*   A list item with a blockquote:\n\n    &gt; This is a blockquote\n    &gt; inside a list item.\n</code></pre><p>To put a code block within a list item, the code block needs to be indented <em>twice</em> – 8 spaces or two tabs:</p>\n<pre><code>*   A list item with a code block:\n\n        &lt;code goes here&gt;\n</code></pre><p>It’s worth noting that it’s possible to trigger an ordered list by accident, by writing something like this:</p>\n<pre><code>1986. What a great season.\n</code></pre><p>In other words, a <em>number-period-space</em> sequence at the beginning of a line. To avoid this, you can backslash-escape the period:</p>\n<pre><code>1986\\. What a great season.\n</code></pre><h3 id=\"precode\">Code Blocks</h3>\n\n<p>Pre-formatted code blocks are used for writing about programming or markup source code. Rather than forming normal paragraphs, the lines of a code block are interpreted literally. Markdown wraps a code block in both <code>&lt;pre&gt;</code> and <code>&lt;code&gt;</code> tags.</p>\n<p>To produce a code block in Markdown, simply indent every line of the block by at least 4 spaces or 1 tab. For example, given this input:</p>\n<pre><code>This is a normal paragraph:\n\n    This is a code block.\n</code></pre><p>Markdown will generate:</p>\n<pre><code>&lt;p&gt;This is a normal paragraph:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;This is a code block.\n&lt;/code&gt;&lt;/pre&gt;\n</code></pre><p>One level of indentation – 4 spaces or 1 tab – is removed from each line of the code block. For example, this:</p>\n<pre><code>Here is an example of AppleScript:\n\n    tell application &quot;Foo&quot;\n        beep\n    end tell\n</code></pre><p>will turn into:</p>\n<pre><code>&lt;p&gt;Here is an example of AppleScript:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;tell application &quot;Foo&quot;\n    beep\nend tell\n&lt;/code&gt;&lt;/pre&gt;\n</code></pre><p>A code block continues until it reaches a line that is not indented (or the end of the article).</p>\n<p>Within a code block, ampersands (<code>&amp;</code>) and angle brackets (<code>&lt;</code> and <code>&gt;</code>) are automatically converted into HTML entities. This makes it very easy to include example HTML source code using Markdown – just paste it and indent it, and Markdown will handle the hassle of encoding the ampersands and angle brackets. For example, this:</p>\n<pre><code>&lt;div class=&quot;footer&quot;&gt;\n    &amp;copy; 2004 Foo Corporation\n&lt;/div&gt;\n</code></pre><p>will turn into:</p>\n<pre><code>&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&quot;footer&quot;&amp;gt;\n    &amp;amp;copy; 2004 Foo Corporation\n&amp;lt;/div&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n</code></pre><p>Regular Markdown syntax is not processed within code blocks. E.g., asterisks are just literal asterisks within a code block. This means it’s also easy to use Markdown to write about Markdown’s own syntax.</p>\n<h3 id=\"hr\">Horizontal Rules</h3>\n\n<p>You can produce a horizontal rule tag (<code>&lt;hr /&gt;</code>) by placing three or more hyphens, asterisks, or underscores on a line by themselves. If you wish, you may use spaces between the hyphens or asterisks. Each of the following lines will produce a horizontal rule:</p>\n<pre><code>* * *\n\n***\n\n*****\n\n- - -\n\n---------------------------------------\n</code></pre><hr>\n<h2 id=\"span\">Span Elements</h2>\n\n<h3 id=\"link\">Links</h3>\n\n<p>Markdown supports two style of links: <em>inline</em> and <em>reference</em>.</p>\n<p>In both styles, the link text is delimited by [square brackets].</p>\n<p>To create an inline link, use a set of regular parentheses immediately after the link text’s closing square bracket. Inside the parentheses, put the URL where you want the link to point, along with an <em>optional</em> title for the link, surrounded in quotes. For example:</p>\n<pre><code>This is [an example](http://example.com/ &quot;Title&quot;) inline link.\n\n[This link](http://example.net/) has no title attribute.\n</code></pre><p>Will produce:</p>\n<pre><code>&lt;p&gt;This is &lt;a href=&quot;http://example.com/&quot; title=&quot;Title&quot;&gt;\nan example&lt;/a&gt; inline link.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://example.net/&quot;&gt;This link&lt;/a&gt; has no\ntitle attribute.&lt;/p&gt;\n</code></pre><p>If you’re referring to a local resource on the same server, you can use relative paths:</p>\n<pre><code>See my [About](/about/) page for details.   \n</code></pre><p>Reference-style links use a second set of square brackets, inside which you place a label of your choosing to identify the link:</p>\n<pre><code>This is [an example][id] reference-style link.\n</code></pre><p>You can optionally use a space to separate the sets of brackets:</p>\n<pre><code>This is [an example] [id] reference-style link.\n</code></pre><p>Then, anywhere in the document, you define your link label like this, on a line by itself:</p>\n<pre><code>[id]: http://example.com/  &quot;Optional Title Here&quot;\n</code></pre><p>That is:</p>\n<ul>\n<li>Square brackets containing the link identifier (optionally<br>indented from the left margin using up to three spaces);</li>\n<li>followed by a colon;</li>\n<li>followed by one or more spaces (or tabs);</li>\n<li>followed by the URL for the link;</li>\n<li>optionally followed by a title attribute for the link, enclosed<br>in double or single quotes, or enclosed in parentheses.</li>\n</ul>\n<p>The following three link definitions are equivalent:</p>\n<pre><code>[foo]: http://example.com/  &quot;Optional Title Here&quot;\n[foo]: http://example.com/  &apos;Optional Title Here&apos;\n[foo]: http://example.com/  (Optional Title Here)\n</code></pre><p><strong>Note:</strong> There is a known bug in Markdown.pl 1.0.1 which prevents single quotes from being used to delimit link titles.</p>\n<p>The link URL may, optionally, be surrounded by angle brackets:</p>\n<pre><code>[id]: &lt;http://example.com/&gt;  &quot;Optional Title Here&quot;\n</code></pre><p>You can put the title attribute on the next line and use extra spaces or tabs for padding, which tends to look better with longer URLs:</p>\n<pre><code>[id]: http://example.com/longish/path/to/resource/here\n    &quot;Optional Title Here&quot;\n</code></pre><p>Link definitions are only used for creating links during Markdown processing, and are stripped from your document in the HTML output.</p>\n<p>Link definition names may consist of letters, numbers, spaces, and punctuation – but they are <em>not</em> case sensitive. E.g. these two links:</p>\n<pre><code>[link text][a]\n[link text][A]\n</code></pre><p>are equivalent.</p>\n<p>The <em>implicit link name</em> shortcut allows you to omit the name of the link, in which case the link text itself is used as the name. Just use an empty set of square brackets – e.g., to link the word “Google” to the google.com web site, you could simply write:</p>\n<pre><code>[Google][]\n</code></pre><p>And then define the link:</p>\n<pre><code>[Google]: http://google.com/\n</code></pre><p>Because link names may contain spaces, this shortcut even works for multiple words in the link text:</p>\n<pre><code>Visit [Daring Fireball][] for more information.\n</code></pre><p>And then define the link:</p>\n<pre><code>[Daring Fireball]: http://daringfireball.net/\n</code></pre><p>Link definitions can be placed anywhere in your Markdown document. I tend to put them immediately after each paragraph in which they’re used, but if you want, you can put them all at the end of your document, sort of like footnotes.</p>\n<p>Here’s an example of reference links in action:</p>\n<pre><code>I get 10 times more traffic from [Google] [1] than from\n[Yahoo] [2] or [MSN] [3].\n\n  [1]: http://google.com/        &quot;Google&quot;\n  [2]: http://search.yahoo.com/  &quot;Yahoo Search&quot;\n  [3]: http://search.msn.com/    &quot;MSN Search&quot;\n</code></pre><p>Using the implicit link name shortcut, you could instead write:</p>\n<pre><code>I get 10 times more traffic from [Google][] than from\n[Yahoo][] or [MSN][].\n\n  [google]: http://google.com/        &quot;Google&quot;\n  [yahoo]:  http://search.yahoo.com/  &quot;Yahoo Search&quot;\n  [msn]:    http://search.msn.com/    &quot;MSN Search&quot;\n</code></pre><p>Both of the above examples will produce the following HTML output:</p>\n<pre><code>&lt;p&gt;I get 10 times more traffic from &lt;a href=&quot;http://google.com/&quot;\ntitle=&quot;Google&quot;&gt;Google&lt;/a&gt; than from\n&lt;a href=&quot;http://search.yahoo.com/&quot; title=&quot;Yahoo Search&quot;&gt;Yahoo&lt;/a&gt;\nor &lt;a href=&quot;http://search.msn.com/&quot; title=&quot;MSN Search&quot;&gt;MSN&lt;/a&gt;.&lt;/p&gt;\n</code></pre><p>For comparison, here is the same paragraph written using Markdown’s inline link style:</p>\n<pre><code>I get 10 times more traffic from [Google](http://google.com/ &quot;Google&quot;)\nthan from [Yahoo](http://search.yahoo.com/ &quot;Yahoo Search&quot;) or\n[MSN](http://search.msn.com/ &quot;MSN Search&quot;).\n</code></pre><p>The point of reference-style links is not that they’re easier to write. The point is that with reference-style links, your document source is vastly more readable. Compare the above examples: using reference-style links, the paragraph itself is only 81 characters long; with inline-style links, it’s 176 characters; and as raw HTML, it’s 234 characters. In the raw HTML, there’s more markup than there is text.</p>\n<p>With Markdown’s reference-style links, a source document much more closely resembles the final output, as rendered in a browser. By allowing you to move the markup-related metadata out of the paragraph, you can add links without interrupting the narrative flow of your prose.</p>\n<h3 id=\"em\">Emphasis</h3>\n\n<p>Markdown treats asterisks (<code>*</code>) and underscores (<code>_</code>) as indicators of emphasis. Text wrapped with one <code>*</code> or <code>_</code> will be wrapped with an HTML <code>&lt;em&gt;</code> tag; double <code>*</code>‘s or <code>_</code>‘s will be wrapped with an HTML <code>&lt;strong&gt;</code> tag. E.g., this input:</p>\n<pre><code>*single asterisks*\n\n_single underscores_\n\n**double asterisks**\n\n__double underscores__\n</code></pre><p>will produce:</p>\n<pre><code>&lt;em&gt;single asterisks&lt;/em&gt;\n\n&lt;em&gt;single underscores&lt;/em&gt;\n\n&lt;strong&gt;double asterisks&lt;/strong&gt;\n\n&lt;strong&gt;double underscores&lt;/strong&gt;\n</code></pre><p>You can use whichever style you prefer; the lone restriction is that the same character must be used to open and close an emphasis span.</p>\n<p>Emphasis can be used in the middle of a word:</p>\n<pre><code>un*frigging*believable\n</code></pre><p>But if you surround an <code>*</code> or <code>_</code> with spaces, it’ll be treated as a literal asterisk or underscore.</p>\n<p>To produce a literal asterisk or underscore at a position where it would otherwise be used as an emphasis delimiter, you can backslash escape it:</p>\n<pre><code>\\*this text is surrounded by literal asterisks\\*\n</code></pre><h3 id=\"code\">Code</h3>\n\n<p>To indicate a span of code, wrap it with backtick quotes (<code>` </code>). Unlike a pre-formatted code block, a code span indicates code within a normal paragraph. For example:</p>\n<pre><code>Use the `printf()` function.\n</code></pre><p>will produce:</p>\n<pre><code>&lt;p&gt;Use the &lt;code&gt;printf()&lt;/code&gt; function.&lt;/p&gt;\n</code></pre><p>To include a literal backtick character within a code span, you can use multiple backticks as the opening and closing delimiters:</p>\n<pre><code>``There is a literal backtick (`) here.``\n</code></pre><p>which will produce this:</p>\n<pre><code>&lt;p&gt;&lt;code&gt;There is a literal backtick (`) here.&lt;/code&gt;&lt;/p&gt;\n</code></pre><p>The backtick delimiters surrounding a code span may include spaces – one after the opening, one before the closing. This allows you to place literal backtick characters at the beginning or end of a code span:</p>\n<pre><code>A single backtick in a code span: `` ` ``\n\nA backtick-delimited string in a code span: `` `foo` ``\n</code></pre><p>will produce:</p>\n<pre><code>&lt;p&gt;A single backtick in a code span: &lt;code&gt;`&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;A backtick-delimited string in a code span: &lt;code&gt;`foo`&lt;/code&gt;&lt;/p&gt;\n</code></pre><p>With a code span, ampersands and angle brackets are encoded as HTML entities automatically, which makes it easy to include example HTML tags. Markdown will turn this:</p>\n<pre><code>Please don&apos;t use any `&lt;blink&gt;` tags.\n</code></pre><p>into:</p>\n<pre><code>&lt;p&gt;Please don&apos;t use any &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;\n</code></pre><p>You can write this:</p>\n<pre><code>`&amp;#8212;` is the decimal-encoded equivalent of `&amp;mdash;`.\n</code></pre><p>to produce:</p>\n<pre><code>&lt;p&gt;&lt;code&gt;&amp;amp;#8212;&lt;/code&gt; is the decimal-encoded\nequivalent of &lt;code&gt;&amp;amp;mdash;&lt;/code&gt;.&lt;/p&gt;\n</code></pre><h3 id=\"img\">Images</h3>\n\n<p>Admittedly, it’s fairly difficult to devise a “natural” syntax for placing images into a plain text document format.</p>\n<p>Markdown uses an image syntax that is intended to resemble the syntax for links, allowing for two styles: <em>inline</em> and <em>reference</em>.</p>\n<p>Inline image syntax looks like this:</p>\n<pre><code>![Alt text](/path/to/img.jpg)\n\n![Alt text](/path/to/img.jpg &quot;Optional title&quot;)\n</code></pre><p>That is:</p>\n<ul>\n<li>An exclamation mark: <code>!</code>;</li>\n<li>followed by a set of square brackets, containing the <code>alt</code><br>attribute text for the image;</li>\n<li>followed by a set of parentheses, containing the URL or path to<br>the image, and an optional <code>title</code> attribute enclosed in double<br>or single quotes.</li>\n</ul>\n<p>Reference-style image syntax looks like this:</p>\n<pre><code>![Alt text][id]\n</code></pre><p>Where “id” is the name of a defined image reference. Image references are defined using syntax identical to link references:</p>\n<pre><code>[id]: url/to/image  &quot;Optional title attribute&quot;\n</code></pre><p>As of this writing, Markdown has no syntax for specifying the dimensions of an image; if this is important to you, you can simply use regular HTML <code>&lt;img&gt;</code> tags.</p>\n<hr>\n<h2 id=\"misc\">Miscellaneous</h2>\n\n<h3 id=\"autolink\">Automatic Links</h3>\n\n<p>Markdown supports a shortcut style for creating “automatic” links for URLs and email addresses: simply surround the URL or email address with angle brackets. What this means is that if you want to show the actual text of a URL or email address, and also have it be a clickable link, you can do this:</p>\n<pre><code>&lt;http://example.com/&gt;\n</code></pre><p>Markdown will turn this into:</p>\n<pre><code>&lt;a href=&quot;http://example.com/&quot;&gt;http://example.com/&lt;/a&gt;\n</code></pre><p>Automatic links for email addresses work similarly, except that Markdown will also perform a bit of randomized decimal and hex entity-encoding to help obscure your address from address-harvesting spambots. For example, Markdown will turn this:</p>\n<pre><code>&lt;address@example.com&gt;\n</code></pre><p>into something like this:</p>\n<pre><code>&lt;a href=&quot;&amp;#x6D;&amp;#x61;i&amp;#x6C;&amp;#x74;&amp;#x6F;:&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;\n&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;\n&amp;#109;&quot;&gt;&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;\n&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;\n</code></pre><p>which will render in a browser as a clickable link to “address@example.com”.</p>\n<p>(This sort of entity-encoding trick will indeed fool many, if not most, address-harvesting bots, but it definitely won’t fool all of them. It’s better than nothing, but an address published in this way will probably eventually start receiving spam.)</p>\n<h3 id=\"backslash\">Backslash Escapes</h3>\n\n<p>Markdown allows you to use backslash escapes to generate literal characters which would otherwise have special meaning in Markdown’s formatting syntax. For example, if you wanted to surround a word with literal asterisks (instead of an HTML <code>&lt;em&gt;</code> tag), you can use backslashes before the asterisks, like this:</p>\n<pre><code>\\*literal asterisks\\*\n</code></pre><p>Markdown provides backslash escapes for the following characters:</p>\n<pre><code>\\   backslash\n`   backtick\n*   asterisk\n_   underscore\n{}  curly braces\n[]  square brackets\n()  parentheses\n#   hash mark\n+    plus sign\n-    minus sign (hyphen)\n.   dot\n!   exclamation mark\n</code></pre><blockquote>\n<p>Source: <a href=\"http://daringfireball.net/projects/markdown/syntax\">http://daringfireball.net/projects/markdown/syntax</a></p>\n</blockquote>"},{"title":"Canvas for Network visualization","date":"2016-06-05T16:00:00.000Z","_content":"\n> [Downloads the demo example](https://github.com/xieguigang/VisualBasic_AppFramework/releases/tag/v0.16-update)\n> [Downloads the latest source code from github](https://github.com/xieguigang/VisualBasic_AppFramework/tree/master/Datavisualization/Datavisualization.Network)\n\n![](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Datavisualization.Network/Previews.gif)\n<!--more-->\n\n![](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Datavisualization.Network/net_test/xcb-main.png)\n\n## Introduction and background\nIn my recent work on the GCModeller, I want to developing a module for the biological network data visualization.\nOne of the solution is using d3js for this data visualization and the another solution is the Cytoscape software.\n\nThe [Cytoscape](http://cytoscape.org/) software is doing the best in the network visualization as it provides a lot of style mapping and data imports and exports function. And in my recent work, the cytoscape software was used for visualize the biological network data frequently. But there is problem that the cytoscape software can only generate the statics image of the network, and just can only export a interactive output in web app format. And the cytoscape software is also can not programming with VB.NET. And as I want to build a inner interactive module for the biological network visualization, so that I should try another way for the job. There is another important tools for visualize the network data in the HTML programming: [d3js](https://github.com/d3/d3). And the d3js is one of my favorite tools in the data visualization.\n\nHere is my most favorite project from Mr. whichlight's work: a project for visualize the reddit discussion network by using d3js.\n\n>![](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Datavisualization.Network/tumblr_inline_mqvdlydGCp1qz4rgp.png)\n>[Reddit Discussion Network Visualization](https://github.com/whichlight/reddit-network-vis)\n\nAnd the d3js is my first choice in this work. And here is the force directed graphic engine that I write with d3js hybrid programming with VB.NET (whole source cdoe and example can be download from [here](https://github.com/SMRUCC/GCModeller.Workbench/tree/master/d3js/Force-Directed%20Graph/js)):\n\n```javascript\nfunction d3Network(jsonFile, width, height) {\n\n    var color = d3.scale.category20();\n    var force = d3.layout.force()\n        .charge(-120)\n        .linkDistance(30)\n        .size([width, height]);\n\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"fill\", \"#DBF3FF\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .attr(\"class\", \"chart\");\n\n    d3.json(jsonFile, function (error, graph) {\n        if (error) throw error;\n\n        force\n            .nodes(graph.nodes)\n            .links(graph.links)\n            .start();\n\n        var link = svg.selectAll(\".link\")\n            .data(graph.links)\n            .enter().append(\"line\")\n            .attr(\"class\", \"link\")\n            .style(\"stroke-width\", 0.5);\n\n        var node = svg.selectAll(\".node\")\n            .data(graph.nodes)\n            .enter().append(\"circle\")\n            .attr(\"class\", \"node\")\n            .attr(\"r\", function (d) {\n                return Math.sqrt(d.size)+1;\n            })\n            .style(\"fill\", function (d) {\n                return color(d.group);\n            })\n            .style(\"opacity\", 0.8)\n            .call(force.drag);\n\n        node.append(\"title\")\n            .attr(\"class\", \"tooltip\")\n            .style(\"font-size\", 16)\n            .html(function (d) {\n                return \"name:\\t\" + d.name + \"\\ntype:\\t\" + d.type + \"\\nlinks:\\t\" + d.size;\n            });\n\n        force.on(\"tick\", function () {\n            link.attr(\"x1\", function (d) { return d.source.x; })\n                .attr(\"y1\", function (d) { return d.source.y; })\n                .attr(\"x2\", function (d) { return d.target.x; })\n                .attr(\"y2\", function (d) { return d.target.y; });\n\n            node.attr(\"cx\", function (d) { return d.x; })\n                .attr(\"cy\", function (d) { return d.y; });\n        });\n    });\n}\n```\n\nThe VB.NET language was programming hybrids with javascript as the server side on the local client. And by using WinForm web browser control, that we can display the network visualization data. But as the .NET Webbrowser control is based on the IE browser and not support d3js well, so that I have to changes the .NET Webbrowser control to the opensource Firefox browser or Google chrome. And by using Firefox in the project, it actually works, but the problem is that we needs deploy our application with the Chrome kernel(~100MB) and Firefox kernel(~50MB). This is not so convenient and friendly for my customer clients.\n\nAnd after search on the github, I found a solution for this interactive network visualization work in the .NET language its own way.\n\n\n\n![](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Datavisualization.Network/canvas_screenshot.png)\n\nThis network canvas library is majority based on the work of [Mr. Woong Gyu La](http://www.codeproject.com/Articles/833043/EpForceDirectedGraph-cs-A-D-D-force-directed-gra)\n\n### Overviews\nThis canvas library is consist with 4 parts majority:\n\n1. [Force Directed layout engine](https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Datavisualization.Network/Datavisualization.Network/Layouts/ForceDirected/Layout/ForceDirected.vb)\n2. [Canvas control for WinForm](https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Datavisualization.Network/NetworkCanvas/Canvas.vb)\n3. [InputDevice for user mouse events](https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Datavisualization.Network/NetworkCanvas/InputDevice.vb)\n4. [Renderer for the graphics rendering of the network data](https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Datavisualization.Network/NetworkCanvas/Renderer.vb)\n\n### Code in details\n\n##### Force Directed layout engine\nThe force directed network layout engine which is available at type [**Microsoft.VisualBasic.DataVisualization.Network.Layouts.ForceDirected2D**](https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Datavisualization.Network/Datavisualization.Network/Layouts/ForceDirected/Layout/ForceDirected.vb)\nThe introduction for this layout provider is available at Mr. Woong Gyu La's article: [\"EpForceDirectedGraph.cs- A 2D/3D force directed graph algorithm in C#\"](http://www.codeproject.com/Articles/833043/EpForceDirectedGraph-cs-A-D-D-force-directed-gra)\n\n##### Canvas control for WinForm\nThe canvas control providers the user interface and rendering task thread for the layout engine.\nSet up the network data just by using the **Canvas.Graph** property:\n\n```vbnet\n    Public Property Graph As NetworkGraph\n        Get\n            If net Is Nothing Then\n                Call __invokeSet(New NetworkGraph)\n            End If\n\n            Return net\n        End Get\n        Set(value As NetworkGraph)\n            Call __invokeSet(value)\n        End Set\n    End Property\n\n    Private Sub __invokeSet(g As NetworkGraph)\n        net = g\n        fdgPhysics = New ForceDirected2D(net, FdgArgs.Stiffness, FdgArgs.Repulsion, FdgArgs.Damping)\n        fdgRenderer = New Renderer(\n            Function() paper,\n            Function() New Rectangle(New Point, Size),\n            fdgPhysics)\n        inputs = New InputDevice(Me)\n        fdgRenderer.Asynchronous = False\n    End Sub\n```\n\nAnd these components is using for the layout engine and rendering of the image:\n\n```vbnet\n    ''' <summary>\n    ''' The network data model for the visualization\n    ''' </summary>\n    Dim net As NetworkGraph\n    ''' <summary>\n    ''' Layout provider engine\n    ''' </summary>\n    Protected Friend fdgPhysics As ForceDirected2D\n    ''' <summary>\n    ''' The graphics updates thread.\n    ''' </summary>\n    Protected Friend timer As New UpdateThread(30, AddressOf __invokePaint)\n    ''' <summary>\n    ''' The graphics rendering provider\n    ''' </summary>\n    Protected Friend fdgRenderer As Renderer\n    ''' <summary>\n    ''' GDI+ interface for the canvas control.\n    ''' </summary>\n    Dim paper As Graphics\n```\n\nAll of the rendering work is starting from the **timer** object:\n\n```vbnet\n''' <summary>\n''' The graphics updates thread.\n''' </summary>\nProtected Friend timer As New UpdateThread(30, AddressOf __invokePaint)\n\n    Private Sub __invokePaint()\n    Call Me.Invoke(Sub() Invalidate())\nEnd Sub\n```\n\nBy notifying the Windows message that the control needs to be update in periodic in the timer thread, and then the event **Paint** will be trigged, and then we are able to use the graphics gdi+ interface in the rendering engine for the network visualization. As you can see, this event function provides the required gdi+ interface for the rendering engine and invoke updates the network layout and the control graphics image.\n\n```vbnet\nPrivate Sub Canvas_Paint(sender As Object, e As PaintEventArgs) Handles Me.Paint\n    paper = e.Graphics\n    paper.CompositingQuality = Drawing2D.CompositingQuality.HighQuality\n    paper.SmoothingMode = Drawing2D.SmoothingMode.HighQuality\n\n    Call fdgRenderer.Draw(0.05F)\nEnd Sub\n```\n\nHere is the same function that implements in javascript:\n```javascript\nforce.on(\"tick\", function () {\n     link.attr(\"x1\", function (d) { return d.source.x; })\n         .attr(\"y1\", function (d) { return d.source.y; })\n         .attr(\"x2\", function (d) { return d.target.x; })\n         .attr(\"y2\", function (d) { return d.target.y; });\n\n     node.attr(\"cx\", function (d) { return d.x; })\n         .attr(\"cy\", function (d) { return d.y; });\n    });\n```\n\n##### InputDevice for user mouse events\n\nThe graphics node in the d3js visualization can be drag by the mouse by binding the mouse event to each node object:\n\n```javascript\nvar node = svg.selectAll(\".node\")\n      .data(graph.nodes)\n      .enter().append(\"circle\")\n      .attr(\"class\", \"node\")\n      .attr(\"r\", function (d) {\n            return Math.sqrt(d.size)+1;\n      })\n      .style(\"fill\", function (d) {\n            return color(d.group);\n      })\n      .style(\"opacity\", 0.8)\n      .call(force.drag);\n```\n\nAnd this input device class is implements the same function as the code **.call(force.drag)** in javascript:\n\nFirst, when our mouse move on the control, will trigger a mouse move event. And for drag a node on the control, a mouse down event will be triggered. When finish the drag, the mouse up event will be triggered.\nAnd both of these events have a **MouseEventArgs** parameter, which we can using this argument value for the node detectes and node drags.\n\nFrom the very beginning, we start to drag a node, then we can set the drag event start and knowing which node is clicked by using **__getNode(Point)** function:\n```vbnet\n    Private Sub Canvas_MouseDown(sender As Object, e As MouseEventArgs) Handles Canvas.MouseDown\n        drag = True\n        dragNode = __getNode(e.Location)\n    End Sub\n```\nThe **__getNode(Point)** function loops on the nodes in the network, and detected the mouse location is located in which nodes region by using **System.Drawing.Rectangle.Contains(System.Drawing.Point) As Boolean** method, due to the reason of the node location is the location in the data mode, can not be used on the user client directly, so that a function **Canvas.fdgRenderer.GraphToScreen** for the projection between the data model and user interface is used in this function:\n\n```vbnet\n    Private Function __getNode(p As Point) As Node\n        For Each node As Node In Canvas.Graph.nodes\n            Dim r As Single = node.Data.radius\n            Dim npt As Point =\n                Canvas.fdgRenderer.GraphToScreen(\n                Canvas.fdgPhysics.GetPoint(node).position)\n            Dim pt As New Point(npt.X - r / 2, npt.Y - r / 2)\n            Dim rect As New Rectangle(pt, New Size(r, r))\n\n            If rect.Contains(p) Then\n                Return node\n            End If\n        Next\n\n        Return Nothing\n    End Function\n```\n\nThen by start the mouse move we are able to move the location of the draged node:\n```vbnet\n    Private Sub Canvas_MouseMove(sender As Object, e As MouseEventArgs) Handles Canvas.MouseMove\n        If Not drag Then\n            Return\n        End If\n\n        If dragNode IsNot Nothing Then\n            Dim vec As FDGVector2 =\n                    Canvas.fdgRenderer.ScreenToGraph(\n                    New Point(e.Location.X, e.Location.Y))\n\n            dragNode.Pinned = True\n            Canvas.fdgPhysics.GetPoint(dragNode).position = vec\n        Else\n            dragNode = __getNode(e.Location)\n        End If\n    End Sub\n```\n\nIf is in the drag mode, then we are set the location of the draged node to the mouse current location, then are we implements the drag events. When we finish the drag event, a mouse up event will be trigged, we release the drag node at here:\n```vbnet\n    Private Sub Canvas_MouseUp(sender As Object, e As MouseEventArgs) Handles Canvas.MouseUp\n        drag = False\n        If dragNode IsNot Nothing Then\n            dragNode.Pinned = False\n            dragNode = Nothing\n        End If\n    End Sub\n```\n\n\n##### Renderer for the graphics rendering of the network data\nAs we mentioned above, the world between the inner data model and the user interface is different, so that we needs two function for the projection between the inner data model world and the outside user world:\n\n```vbnet\n    ''' <summary>\n    ''' Projects the data model to our screen for display.\n    ''' </summary>\n    ''' <param name=\"iPos\"></param>\n    ''' <returns></returns>\n    Public Function GraphToScreen(iPos As FDGVector2) As Point\n        Dim rect = __regionProvider()\n        Dim x = CInt(Math.Truncate(iPos.x + (CSng(rect.Right - rect.Left) / 2.0F)))\n        Dim y = CInt(Math.Truncate(iPos.y + (CSng(rect.Bottom - rect.Top) / 2.0F)))\n        Return New Point(x, y)\n    End Function\n```\n```vbnet\n    ''' <summary>\n    ''' Projects the client graphics data to the data model. \n    ''' </summary>\n    ''' <param name=\"iScreenPos\"></param>\n    ''' <returns></returns>\n    Public Function ScreenToGraph(iScreenPos As Point) As FDGVector2\n        Dim retVec As New FDGVector2()\n        Dim rect = __regionProvider()\n        retVec.x = CSng(iScreenPos.X) - (CSng(rect.Right - rect.Left) / 2.0F)\n        retVec.y = CSng(iScreenPos.Y) - (CSng(rect.Bottom - rect.Top) / 2.0F)\n        Return retVec\n    End Function\n```\n\nAnd these two project function required of a graphics region on the client controls, which the data source is provides by a lambda expression in the canvas control:\n\n```vbnet\nImports System.Collections.Generic\nImports System.Linq\nImports System.Text\nImports Microsoft.VisualBasic.DataVisualization.Network.Graph\nImports Microsoft.VisualBasic.DataVisualization.Network.Layouts\nImports Microsoft.VisualBasic.DataVisualization.Network.Layouts.Interfaces\n\nPublic Class Renderer\n    Inherits AbstractRenderer\n\n    ''' <summary>\n    ''' Gets the graphics source\n    ''' </summary>\n    Dim __graphicsProvider As Func(Of Graphics)\n    ''' <summary>\n    ''' gets the graphics region for the projections: <see cref=\"GraphToScreen\"/> and <see cref=\"ScreenToGraph\"/>\n    ''' </summary>\n    Dim __regionProvider As Func(Of Rectangle)\n```\n\nThe lambda expression in the constructor provides the required client data for the data visualization renderer:\n\n```vbnet\n    Private Sub __invokeSet(g As NetworkGraph)\n        net = g\n        fdgPhysics = New ForceDirected2D(net, FdgArgs.Stiffness, FdgArgs.Repulsion, FdgArgs.Damping)\n        fdgRenderer = New Renderer(\n            Function() paper,\n            Function() New Rectangle(New Point, Size),\n            fdgPhysics)\n        inputs = New InputDevice(Me)\n        fdgRenderer.Asynchronous = False\n    End Sub\n```\n\nThen by using the **GraphToScreen** function, we are knowing where the node should be draw and using **ScreenToGraph** we can update the draged node its location into the data model.\n\nFor draw a edge, we just using the **Graphics.DrawLine(pen As Pen, x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer)** function, and by using the function **Graphics.FillPie(brush As Brush, rect As Rectangle, startAngle As Single, sweepAngle As Single)** that we can draw a node on the canvas.\n\n### How to use?\nJust create a empty form, and then put the canvas control in your form like this:\n\n```vbnet\n    Imports System.Windows.Forms\n    Imports Microsoft.VisualBasic.DataVisualization.Network.Canvas\n    Imports Microsoft.VisualBasic.DataVisualization.Network.FileStream\n\n    Public Class Form1\n\n        Dim canvas As New Canvas With {\n            .Dock = DockStyle.Fill\n        }\n\n        Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load\n            Call Me.Controls.Add(canvas)\n\n            canvas.Graph = CytoscapeExportAsGraph(\n                App.HOME & \"\\Resources\\xcb-main-Edges.csv\",\n                App.HOME & \"\\Resources\\xcb-main-Nodes.csv\")\n        End Sub\n    End Class\n```\n\n### Performance issue\nBoth VisualBasic and C# have the performance issue of the gdi+ graphics on large image rendering, as all of the gdi+ graphics work is on the CPU. This tools works well on the small network, but it get stuck when trying to rendering a large scale network data, and the graphics display is not so smoothly.\n\nPlanning changes the graphics engine from gdi+ to Microsoft Win2D or OpenGL in the future work.\n\n### Running the Test\nThe testing project source code can be download from the [github](https://github.com/xieguigang/VisualBasic_AppFramework/tree/master/Datavisualization/Datavisualization.Network/Test) and here is the [example release program](https://github.com/xieguigang/VisualBasic_AppFramework/releases/tag/v0.16-update).\n![](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Datavisualization.Network/canvas_screenshot.png)","source":"_posts/net_canvas.md","raw":"---\ntitle: Canvas for Network visualization\ntags: [d3js,vb.net,my works,前端, javascript, force directed]\ndate: 2016.06.06\n---\n\n> [Downloads the demo example](https://github.com/xieguigang/VisualBasic_AppFramework/releases/tag/v0.16-update)\n> [Downloads the latest source code from github](https://github.com/xieguigang/VisualBasic_AppFramework/tree/master/Datavisualization/Datavisualization.Network)\n\n![](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Datavisualization.Network/Previews.gif)\n<!--more-->\n\n![](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Datavisualization.Network/net_test/xcb-main.png)\n\n## Introduction and background\nIn my recent work on the GCModeller, I want to developing a module for the biological network data visualization.\nOne of the solution is using d3js for this data visualization and the another solution is the Cytoscape software.\n\nThe [Cytoscape](http://cytoscape.org/) software is doing the best in the network visualization as it provides a lot of style mapping and data imports and exports function. And in my recent work, the cytoscape software was used for visualize the biological network data frequently. But there is problem that the cytoscape software can only generate the statics image of the network, and just can only export a interactive output in web app format. And the cytoscape software is also can not programming with VB.NET. And as I want to build a inner interactive module for the biological network visualization, so that I should try another way for the job. There is another important tools for visualize the network data in the HTML programming: [d3js](https://github.com/d3/d3). And the d3js is one of my favorite tools in the data visualization.\n\nHere is my most favorite project from Mr. whichlight's work: a project for visualize the reddit discussion network by using d3js.\n\n>![](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Datavisualization.Network/tumblr_inline_mqvdlydGCp1qz4rgp.png)\n>[Reddit Discussion Network Visualization](https://github.com/whichlight/reddit-network-vis)\n\nAnd the d3js is my first choice in this work. And here is the force directed graphic engine that I write with d3js hybrid programming with VB.NET (whole source cdoe and example can be download from [here](https://github.com/SMRUCC/GCModeller.Workbench/tree/master/d3js/Force-Directed%20Graph/js)):\n\n```javascript\nfunction d3Network(jsonFile, width, height) {\n\n    var color = d3.scale.category20();\n    var force = d3.layout.force()\n        .charge(-120)\n        .linkDistance(30)\n        .size([width, height]);\n\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"fill\", \"#DBF3FF\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .attr(\"class\", \"chart\");\n\n    d3.json(jsonFile, function (error, graph) {\n        if (error) throw error;\n\n        force\n            .nodes(graph.nodes)\n            .links(graph.links)\n            .start();\n\n        var link = svg.selectAll(\".link\")\n            .data(graph.links)\n            .enter().append(\"line\")\n            .attr(\"class\", \"link\")\n            .style(\"stroke-width\", 0.5);\n\n        var node = svg.selectAll(\".node\")\n            .data(graph.nodes)\n            .enter().append(\"circle\")\n            .attr(\"class\", \"node\")\n            .attr(\"r\", function (d) {\n                return Math.sqrt(d.size)+1;\n            })\n            .style(\"fill\", function (d) {\n                return color(d.group);\n            })\n            .style(\"opacity\", 0.8)\n            .call(force.drag);\n\n        node.append(\"title\")\n            .attr(\"class\", \"tooltip\")\n            .style(\"font-size\", 16)\n            .html(function (d) {\n                return \"name:\\t\" + d.name + \"\\ntype:\\t\" + d.type + \"\\nlinks:\\t\" + d.size;\n            });\n\n        force.on(\"tick\", function () {\n            link.attr(\"x1\", function (d) { return d.source.x; })\n                .attr(\"y1\", function (d) { return d.source.y; })\n                .attr(\"x2\", function (d) { return d.target.x; })\n                .attr(\"y2\", function (d) { return d.target.y; });\n\n            node.attr(\"cx\", function (d) { return d.x; })\n                .attr(\"cy\", function (d) { return d.y; });\n        });\n    });\n}\n```\n\nThe VB.NET language was programming hybrids with javascript as the server side on the local client. And by using WinForm web browser control, that we can display the network visualization data. But as the .NET Webbrowser control is based on the IE browser and not support d3js well, so that I have to changes the .NET Webbrowser control to the opensource Firefox browser or Google chrome. And by using Firefox in the project, it actually works, but the problem is that we needs deploy our application with the Chrome kernel(~100MB) and Firefox kernel(~50MB). This is not so convenient and friendly for my customer clients.\n\nAnd after search on the github, I found a solution for this interactive network visualization work in the .NET language its own way.\n\n\n\n![](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Datavisualization.Network/canvas_screenshot.png)\n\nThis network canvas library is majority based on the work of [Mr. Woong Gyu La](http://www.codeproject.com/Articles/833043/EpForceDirectedGraph-cs-A-D-D-force-directed-gra)\n\n### Overviews\nThis canvas library is consist with 4 parts majority:\n\n1. [Force Directed layout engine](https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Datavisualization.Network/Datavisualization.Network/Layouts/ForceDirected/Layout/ForceDirected.vb)\n2. [Canvas control for WinForm](https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Datavisualization.Network/NetworkCanvas/Canvas.vb)\n3. [InputDevice for user mouse events](https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Datavisualization.Network/NetworkCanvas/InputDevice.vb)\n4. [Renderer for the graphics rendering of the network data](https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Datavisualization.Network/NetworkCanvas/Renderer.vb)\n\n### Code in details\n\n##### Force Directed layout engine\nThe force directed network layout engine which is available at type [**Microsoft.VisualBasic.DataVisualization.Network.Layouts.ForceDirected2D**](https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Datavisualization.Network/Datavisualization.Network/Layouts/ForceDirected/Layout/ForceDirected.vb)\nThe introduction for this layout provider is available at Mr. Woong Gyu La's article: [\"EpForceDirectedGraph.cs- A 2D/3D force directed graph algorithm in C#\"](http://www.codeproject.com/Articles/833043/EpForceDirectedGraph-cs-A-D-D-force-directed-gra)\n\n##### Canvas control for WinForm\nThe canvas control providers the user interface and rendering task thread for the layout engine.\nSet up the network data just by using the **Canvas.Graph** property:\n\n```vbnet\n    Public Property Graph As NetworkGraph\n        Get\n            If net Is Nothing Then\n                Call __invokeSet(New NetworkGraph)\n            End If\n\n            Return net\n        End Get\n        Set(value As NetworkGraph)\n            Call __invokeSet(value)\n        End Set\n    End Property\n\n    Private Sub __invokeSet(g As NetworkGraph)\n        net = g\n        fdgPhysics = New ForceDirected2D(net, FdgArgs.Stiffness, FdgArgs.Repulsion, FdgArgs.Damping)\n        fdgRenderer = New Renderer(\n            Function() paper,\n            Function() New Rectangle(New Point, Size),\n            fdgPhysics)\n        inputs = New InputDevice(Me)\n        fdgRenderer.Asynchronous = False\n    End Sub\n```\n\nAnd these components is using for the layout engine and rendering of the image:\n\n```vbnet\n    ''' <summary>\n    ''' The network data model for the visualization\n    ''' </summary>\n    Dim net As NetworkGraph\n    ''' <summary>\n    ''' Layout provider engine\n    ''' </summary>\n    Protected Friend fdgPhysics As ForceDirected2D\n    ''' <summary>\n    ''' The graphics updates thread.\n    ''' </summary>\n    Protected Friend timer As New UpdateThread(30, AddressOf __invokePaint)\n    ''' <summary>\n    ''' The graphics rendering provider\n    ''' </summary>\n    Protected Friend fdgRenderer As Renderer\n    ''' <summary>\n    ''' GDI+ interface for the canvas control.\n    ''' </summary>\n    Dim paper As Graphics\n```\n\nAll of the rendering work is starting from the **timer** object:\n\n```vbnet\n''' <summary>\n''' The graphics updates thread.\n''' </summary>\nProtected Friend timer As New UpdateThread(30, AddressOf __invokePaint)\n\n    Private Sub __invokePaint()\n    Call Me.Invoke(Sub() Invalidate())\nEnd Sub\n```\n\nBy notifying the Windows message that the control needs to be update in periodic in the timer thread, and then the event **Paint** will be trigged, and then we are able to use the graphics gdi+ interface in the rendering engine for the network visualization. As you can see, this event function provides the required gdi+ interface for the rendering engine and invoke updates the network layout and the control graphics image.\n\n```vbnet\nPrivate Sub Canvas_Paint(sender As Object, e As PaintEventArgs) Handles Me.Paint\n    paper = e.Graphics\n    paper.CompositingQuality = Drawing2D.CompositingQuality.HighQuality\n    paper.SmoothingMode = Drawing2D.SmoothingMode.HighQuality\n\n    Call fdgRenderer.Draw(0.05F)\nEnd Sub\n```\n\nHere is the same function that implements in javascript:\n```javascript\nforce.on(\"tick\", function () {\n     link.attr(\"x1\", function (d) { return d.source.x; })\n         .attr(\"y1\", function (d) { return d.source.y; })\n         .attr(\"x2\", function (d) { return d.target.x; })\n         .attr(\"y2\", function (d) { return d.target.y; });\n\n     node.attr(\"cx\", function (d) { return d.x; })\n         .attr(\"cy\", function (d) { return d.y; });\n    });\n```\n\n##### InputDevice for user mouse events\n\nThe graphics node in the d3js visualization can be drag by the mouse by binding the mouse event to each node object:\n\n```javascript\nvar node = svg.selectAll(\".node\")\n      .data(graph.nodes)\n      .enter().append(\"circle\")\n      .attr(\"class\", \"node\")\n      .attr(\"r\", function (d) {\n            return Math.sqrt(d.size)+1;\n      })\n      .style(\"fill\", function (d) {\n            return color(d.group);\n      })\n      .style(\"opacity\", 0.8)\n      .call(force.drag);\n```\n\nAnd this input device class is implements the same function as the code **.call(force.drag)** in javascript:\n\nFirst, when our mouse move on the control, will trigger a mouse move event. And for drag a node on the control, a mouse down event will be triggered. When finish the drag, the mouse up event will be triggered.\nAnd both of these events have a **MouseEventArgs** parameter, which we can using this argument value for the node detectes and node drags.\n\nFrom the very beginning, we start to drag a node, then we can set the drag event start and knowing which node is clicked by using **__getNode(Point)** function:\n```vbnet\n    Private Sub Canvas_MouseDown(sender As Object, e As MouseEventArgs) Handles Canvas.MouseDown\n        drag = True\n        dragNode = __getNode(e.Location)\n    End Sub\n```\nThe **__getNode(Point)** function loops on the nodes in the network, and detected the mouse location is located in which nodes region by using **System.Drawing.Rectangle.Contains(System.Drawing.Point) As Boolean** method, due to the reason of the node location is the location in the data mode, can not be used on the user client directly, so that a function **Canvas.fdgRenderer.GraphToScreen** for the projection between the data model and user interface is used in this function:\n\n```vbnet\n    Private Function __getNode(p As Point) As Node\n        For Each node As Node In Canvas.Graph.nodes\n            Dim r As Single = node.Data.radius\n            Dim npt As Point =\n                Canvas.fdgRenderer.GraphToScreen(\n                Canvas.fdgPhysics.GetPoint(node).position)\n            Dim pt As New Point(npt.X - r / 2, npt.Y - r / 2)\n            Dim rect As New Rectangle(pt, New Size(r, r))\n\n            If rect.Contains(p) Then\n                Return node\n            End If\n        Next\n\n        Return Nothing\n    End Function\n```\n\nThen by start the mouse move we are able to move the location of the draged node:\n```vbnet\n    Private Sub Canvas_MouseMove(sender As Object, e As MouseEventArgs) Handles Canvas.MouseMove\n        If Not drag Then\n            Return\n        End If\n\n        If dragNode IsNot Nothing Then\n            Dim vec As FDGVector2 =\n                    Canvas.fdgRenderer.ScreenToGraph(\n                    New Point(e.Location.X, e.Location.Y))\n\n            dragNode.Pinned = True\n            Canvas.fdgPhysics.GetPoint(dragNode).position = vec\n        Else\n            dragNode = __getNode(e.Location)\n        End If\n    End Sub\n```\n\nIf is in the drag mode, then we are set the location of the draged node to the mouse current location, then are we implements the drag events. When we finish the drag event, a mouse up event will be trigged, we release the drag node at here:\n```vbnet\n    Private Sub Canvas_MouseUp(sender As Object, e As MouseEventArgs) Handles Canvas.MouseUp\n        drag = False\n        If dragNode IsNot Nothing Then\n            dragNode.Pinned = False\n            dragNode = Nothing\n        End If\n    End Sub\n```\n\n\n##### Renderer for the graphics rendering of the network data\nAs we mentioned above, the world between the inner data model and the user interface is different, so that we needs two function for the projection between the inner data model world and the outside user world:\n\n```vbnet\n    ''' <summary>\n    ''' Projects the data model to our screen for display.\n    ''' </summary>\n    ''' <param name=\"iPos\"></param>\n    ''' <returns></returns>\n    Public Function GraphToScreen(iPos As FDGVector2) As Point\n        Dim rect = __regionProvider()\n        Dim x = CInt(Math.Truncate(iPos.x + (CSng(rect.Right - rect.Left) / 2.0F)))\n        Dim y = CInt(Math.Truncate(iPos.y + (CSng(rect.Bottom - rect.Top) / 2.0F)))\n        Return New Point(x, y)\n    End Function\n```\n```vbnet\n    ''' <summary>\n    ''' Projects the client graphics data to the data model. \n    ''' </summary>\n    ''' <param name=\"iScreenPos\"></param>\n    ''' <returns></returns>\n    Public Function ScreenToGraph(iScreenPos As Point) As FDGVector2\n        Dim retVec As New FDGVector2()\n        Dim rect = __regionProvider()\n        retVec.x = CSng(iScreenPos.X) - (CSng(rect.Right - rect.Left) / 2.0F)\n        retVec.y = CSng(iScreenPos.Y) - (CSng(rect.Bottom - rect.Top) / 2.0F)\n        Return retVec\n    End Function\n```\n\nAnd these two project function required of a graphics region on the client controls, which the data source is provides by a lambda expression in the canvas control:\n\n```vbnet\nImports System.Collections.Generic\nImports System.Linq\nImports System.Text\nImports Microsoft.VisualBasic.DataVisualization.Network.Graph\nImports Microsoft.VisualBasic.DataVisualization.Network.Layouts\nImports Microsoft.VisualBasic.DataVisualization.Network.Layouts.Interfaces\n\nPublic Class Renderer\n    Inherits AbstractRenderer\n\n    ''' <summary>\n    ''' Gets the graphics source\n    ''' </summary>\n    Dim __graphicsProvider As Func(Of Graphics)\n    ''' <summary>\n    ''' gets the graphics region for the projections: <see cref=\"GraphToScreen\"/> and <see cref=\"ScreenToGraph\"/>\n    ''' </summary>\n    Dim __regionProvider As Func(Of Rectangle)\n```\n\nThe lambda expression in the constructor provides the required client data for the data visualization renderer:\n\n```vbnet\n    Private Sub __invokeSet(g As NetworkGraph)\n        net = g\n        fdgPhysics = New ForceDirected2D(net, FdgArgs.Stiffness, FdgArgs.Repulsion, FdgArgs.Damping)\n        fdgRenderer = New Renderer(\n            Function() paper,\n            Function() New Rectangle(New Point, Size),\n            fdgPhysics)\n        inputs = New InputDevice(Me)\n        fdgRenderer.Asynchronous = False\n    End Sub\n```\n\nThen by using the **GraphToScreen** function, we are knowing where the node should be draw and using **ScreenToGraph** we can update the draged node its location into the data model.\n\nFor draw a edge, we just using the **Graphics.DrawLine(pen As Pen, x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer)** function, and by using the function **Graphics.FillPie(brush As Brush, rect As Rectangle, startAngle As Single, sweepAngle As Single)** that we can draw a node on the canvas.\n\n### How to use?\nJust create a empty form, and then put the canvas control in your form like this:\n\n```vbnet\n    Imports System.Windows.Forms\n    Imports Microsoft.VisualBasic.DataVisualization.Network.Canvas\n    Imports Microsoft.VisualBasic.DataVisualization.Network.FileStream\n\n    Public Class Form1\n\n        Dim canvas As New Canvas With {\n            .Dock = DockStyle.Fill\n        }\n\n        Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load\n            Call Me.Controls.Add(canvas)\n\n            canvas.Graph = CytoscapeExportAsGraph(\n                App.HOME & \"\\Resources\\xcb-main-Edges.csv\",\n                App.HOME & \"\\Resources\\xcb-main-Nodes.csv\")\n        End Sub\n    End Class\n```\n\n### Performance issue\nBoth VisualBasic and C# have the performance issue of the gdi+ graphics on large image rendering, as all of the gdi+ graphics work is on the CPU. This tools works well on the small network, but it get stuck when trying to rendering a large scale network data, and the graphics display is not so smoothly.\n\nPlanning changes the graphics engine from gdi+ to Microsoft Win2D or OpenGL in the future work.\n\n### Running the Test\nThe testing project source code can be download from the [github](https://github.com/xieguigang/VisualBasic_AppFramework/tree/master/Datavisualization/Datavisualization.Network/Test) and here is the [example release program](https://github.com/xieguigang/VisualBasic_AppFramework/releases/tag/v0.16-update).\n![](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Datavisualization.Network/canvas_screenshot.png)","slug":"net_canvas","published":1,"updated":"2016-08-03T13:23:46.659Z","_id":"cipnbu3e3000d8gv4kfmc7qv3","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/releases/tag/v0.16-update\" target=\"_blank\" rel=\"external\">Downloads the demo example</a><br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/tree/master/Datavisualization/Datavisualization.Network\" target=\"_blank\" rel=\"external\">Downloads the latest source code from github</a></p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Datavisualization.Network/Previews.gif\" alt=\"\"><br><a id=\"more\"></a></p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Datavisualization.Network/net_test/xcb-main.png\" alt=\"\"></p>\n<h2 id=\"Introduction-and-background\"><a href=\"#Introduction-and-background\" class=\"headerlink\" title=\"Introduction and background\"></a>Introduction and background</h2><p>In my recent work on the GCModeller, I want to developing a module for the biological network data visualization.<br>One of the solution is using d3js for this data visualization and the another solution is the Cytoscape software.</p>\n<p>The <a href=\"http://cytoscape.org/\" target=\"_blank\" rel=\"external\">Cytoscape</a> software is doing the best in the network visualization as it provides a lot of style mapping and data imports and exports function. And in my recent work, the cytoscape software was used for visualize the biological network data frequently. But there is problem that the cytoscape software can only generate the statics image of the network, and just can only export a interactive output in web app format. And the cytoscape software is also can not programming with VB.NET. And as I want to build a inner interactive module for the biological network visualization, so that I should try another way for the job. There is another important tools for visualize the network data in the HTML programming: <a href=\"https://github.com/d3/d3\" target=\"_blank\" rel=\"external\">d3js</a>. And the d3js is one of my favorite tools in the data visualization.</p>\n<p>Here is my most favorite project from Mr. whichlight’s work: a project for visualize the reddit discussion network by using d3js.</p>\n<blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Datavisualization.Network/tumblr_inline_mqvdlydGCp1qz4rgp.png\" alt=\"\"><br><a href=\"https://github.com/whichlight/reddit-network-vis\" target=\"_blank\" rel=\"external\">Reddit Discussion Network Visualization</a></p>\n</blockquote>\n<p>And the d3js is my first choice in this work. And here is the force directed graphic engine that I write with d3js hybrid programming with VB.NET (whole source cdoe and example can be download from <a href=\"https://github.com/SMRUCC/GCModeller.Workbench/tree/master/d3js/Force-Directed%20Graph/js\" target=\"_blank\" rel=\"external\">here</a>):</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">d3Network</span>(<span class=\"params\">jsonFile, width, height</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> color = d3.scale.category20();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> force = d3.layout.force()</span><br><span class=\"line\">        .charge(<span class=\"number\">-120</span>)</span><br><span class=\"line\">        .linkDistance(<span class=\"number\">30</span>)</span><br><span class=\"line\">        .size([width, height]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> svg = d3.select(<span class=\"string\">\"body\"</span>).append(<span class=\"string\">\"svg\"</span>)</span><br><span class=\"line\">        .attr(<span class=\"string\">\"fill\"</span>, <span class=\"string\">\"#DBF3FF\"</span>)</span><br><span class=\"line\">        .attr(<span class=\"string\">\"width\"</span>, width)</span><br><span class=\"line\">        .attr(<span class=\"string\">\"height\"</span>, height)</span><br><span class=\"line\">        .attr(<span class=\"string\">\"class\"</span>, <span class=\"string\">\"chart\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    d3.json(jsonFile, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, graph</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (error) <span class=\"keyword\">throw</span> error;</span><br><span class=\"line\"></span><br><span class=\"line\">        force</span><br><span class=\"line\">            .nodes(graph.nodes)</span><br><span class=\"line\">            .links(graph.links)</span><br><span class=\"line\">            .start();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> link = svg.selectAll(<span class=\"string\">\".link\"</span>)</span><br><span class=\"line\">            .data(graph.links)</span><br><span class=\"line\">            .enter().append(<span class=\"string\">\"line\"</span>)</span><br><span class=\"line\">            .attr(<span class=\"string\">\"class\"</span>, <span class=\"string\">\"link\"</span>)</span><br><span class=\"line\">            .style(<span class=\"string\">\"stroke-width\"</span>, <span class=\"number\">0.5</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> node = svg.selectAll(<span class=\"string\">\".node\"</span>)</span><br><span class=\"line\">            .data(graph.nodes)</span><br><span class=\"line\">            .enter().append(<span class=\"string\">\"circle\"</span>)</span><br><span class=\"line\">            .attr(<span class=\"string\">\"class\"</span>, <span class=\"string\">\"node\"</span>)</span><br><span class=\"line\">            .attr(<span class=\"string\">\"r\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.sqrt(d.size)+<span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            .style(<span class=\"string\">\"fill\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> color(d.group);</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            .style(<span class=\"string\">\"opacity\"</span>, <span class=\"number\">0.8</span>)</span><br><span class=\"line\">            .call(force.drag);</span><br><span class=\"line\"></span><br><span class=\"line\">        node.append(<span class=\"string\">\"title\"</span>)</span><br><span class=\"line\">            .attr(<span class=\"string\">\"class\"</span>, <span class=\"string\">\"tooltip\"</span>)</span><br><span class=\"line\">            .style(<span class=\"string\">\"font-size\"</span>, <span class=\"number\">16</span>)</span><br><span class=\"line\">            .html(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">\"name:\\t\"</span> + d.name + <span class=\"string\">\"\\ntype:\\t\"</span> + d.type + <span class=\"string\">\"\\nlinks:\\t\"</span> + d.size;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        force.on(<span class=\"string\">\"tick\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            link.attr(<span class=\"string\">\"x1\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.source.x; &#125;)</span><br><span class=\"line\">                .attr(<span class=\"string\">\"y1\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.source.y; &#125;)</span><br><span class=\"line\">                .attr(<span class=\"string\">\"x2\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.target.x; &#125;)</span><br><span class=\"line\">                .attr(<span class=\"string\">\"y2\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.target.y; &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">            node.attr(<span class=\"string\">\"cx\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.x; &#125;)</span><br><span class=\"line\">                .attr(<span class=\"string\">\"cy\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.y; &#125;);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>The VB.NET language was programming hybrids with javascript as the server side on the local client. And by using WinForm web browser control, that we can display the network visualization data. But as the .NET Webbrowser control is based on the IE browser and not support d3js well, so that I have to changes the .NET Webbrowser control to the opensource Firefox browser or Google chrome. And by using Firefox in the project, it actually works, but the problem is that we needs deploy our application with the Chrome kernel(~100MB) and Firefox kernel(~50MB). This is not so convenient and friendly for my customer clients.</p>\n<p>And after search on the github, I found a solution for this interactive network visualization work in the .NET language its own way.</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Datavisualization.Network/canvas_screenshot.png\" alt=\"\"></p>\n<p>This network canvas library is majority based on the work of <a href=\"http://www.codeproject.com/Articles/833043/EpForceDirectedGraph-cs-A-D-D-force-directed-gra\" target=\"_blank\" rel=\"external\">Mr. Woong Gyu La</a></p>\n<h3 id=\"Overviews\"><a href=\"#Overviews\" class=\"headerlink\" title=\"Overviews\"></a>Overviews</h3><p>This canvas library is consist with 4 parts majority:</p>\n<ol>\n<li><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Datavisualization.Network/Datavisualization.Network/Layouts/ForceDirected/Layout/ForceDirected.vb\" target=\"_blank\" rel=\"external\">Force Directed layout engine</a></li>\n<li><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Datavisualization.Network/NetworkCanvas/Canvas.vb\" target=\"_blank\" rel=\"external\">Canvas control for WinForm</a></li>\n<li><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Datavisualization.Network/NetworkCanvas/InputDevice.vb\" target=\"_blank\" rel=\"external\">InputDevice for user mouse events</a></li>\n<li><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Datavisualization.Network/NetworkCanvas/Renderer.vb\" target=\"_blank\" rel=\"external\">Renderer for the graphics rendering of the network data</a></li>\n</ol>\n<h3 id=\"Code-in-details\"><a href=\"#Code-in-details\" class=\"headerlink\" title=\"Code in details\"></a>Code in details</h3><h5 id=\"Force-Directed-layout-engine\"><a href=\"#Force-Directed-layout-engine\" class=\"headerlink\" title=\"Force Directed layout engine\"></a>Force Directed layout engine</h5><p>The force directed network layout engine which is available at type <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Datavisualization.Network/Datavisualization.Network/Layouts/ForceDirected/Layout/ForceDirected.vb\" target=\"_blank\" rel=\"external\"><strong>Microsoft.VisualBasic.DataVisualization.Network.Layouts.ForceDirected2D</strong></a><br>The introduction for this layout provider is available at Mr. Woong Gyu La’s article: <a href=\"http://www.codeproject.com/Articles/833043/EpForceDirectedGraph-cs-A-D-D-force-directed-gra\" target=\"_blank\" rel=\"external\">“EpForceDirectedGraph.cs- A 2D/3D force directed graph algorithm in C#”</a></p>\n<h5 id=\"Canvas-control-for-WinForm\"><a href=\"#Canvas-control-for-WinForm\" class=\"headerlink\" title=\"Canvas control for WinForm\"></a>Canvas control for WinForm</h5><p>The canvas control providers the user interface and rendering task thread for the layout engine.<br>Set up the network data just by using the <strong>Canvas.Graph</strong> property:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> Graph <span class=\"keyword\">As</span> NetworkGraph</span><br><span class=\"line\">    <span class=\"keyword\">Get</span></span><br><span class=\"line\">        <span class=\"keyword\">If</span> net <span class=\"keyword\">Is</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">Then</span></span><br><span class=\"line\">            <span class=\"keyword\">Call</span> __invokeSet(<span class=\"keyword\">New</span> NetworkGraph)</span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> net</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Get</span></span><br><span class=\"line\">    <span class=\"keyword\">Set</span>(value <span class=\"keyword\">As</span> NetworkGraph)</span><br><span class=\"line\">        <span class=\"keyword\">Call</span> __invokeSet(value)</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Set</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Property</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> __invokeSet(g <span class=\"keyword\">As</span> NetworkGraph)</span><br><span class=\"line\">    net = g</span><br><span class=\"line\">    fdgPhysics = <span class=\"keyword\">New</span> ForceDirected2D(net, FdgArgs.Stiffness, FdgArgs.Repulsion, FdgArgs.Damping)</span><br><span class=\"line\">    fdgRenderer = <span class=\"keyword\">New</span> Renderer(</span><br><span class=\"line\">        <span class=\"keyword\">Function</span>() paper,</span><br><span class=\"line\">        <span class=\"keyword\">Function</span>() <span class=\"keyword\">New</span> Rectangle(<span class=\"keyword\">New</span> Point, Size),</span><br><span class=\"line\">        fdgPhysics)</span><br><span class=\"line\">    inputs = <span class=\"keyword\">New</span> InputDevice(<span class=\"keyword\">Me</span>)</span><br><span class=\"line\">    fdgRenderer.Asynchronous = <span class=\"literal\">False</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br></pre></td></tr></table></figure>\n<p>And these components is using for the layout engine and rendering of the image:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> The network data model for the visualization</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> net <span class=\"keyword\">As</span> NetworkGraph</span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Layout provider engine</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Protected</span> <span class=\"keyword\">Friend</span> fdgPhysics <span class=\"keyword\">As</span> ForceDirected2D</span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> The graphics updates thread.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Protected</span> <span class=\"keyword\">Friend</span> timer <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> UpdateThread(<span class=\"number\">30</span>, <span class=\"keyword\">AddressOf</span> __invokePaint)</span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> The graphics rendering provider</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Protected</span> <span class=\"keyword\">Friend</span> fdgRenderer <span class=\"keyword\">As</span> Renderer</span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> GDI+ interface for the canvas control.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> paper <span class=\"keyword\">As</span> Graphics</span><br></pre></td></tr></table></figure>\n<p>All of the rendering work is starting from the <strong>timer</strong> object:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> The graphics updates thread.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Protected</span> <span class=\"keyword\">Friend</span> timer <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> UpdateThread(<span class=\"number\">30</span>, <span class=\"keyword\">AddressOf</span> __invokePaint)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> __invokePaint()</span><br><span class=\"line\">    <span class=\"keyword\">Call</span> <span class=\"keyword\">Me</span>.Invoke(<span class=\"keyword\">Sub</span>() Invalidate())</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br></pre></td></tr></table></figure>\n<p>By notifying the Windows message that the control needs to be update in periodic in the timer thread, and then the event <strong>Paint</strong> will be trigged, and then we are able to use the graphics gdi+ interface in the rendering engine for the network visualization. As you can see, this event function provides the required gdi+ interface for the rendering engine and invoke updates the network layout and the control graphics image.</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> Canvas_Paint(sender <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span>, e <span class=\"keyword\">As</span> PaintEventArgs) <span class=\"keyword\">Handles</span> <span class=\"keyword\">Me</span>.Paint</span><br><span class=\"line\">    paper = e.Graphics</span><br><span class=\"line\">    paper.CompositingQuality = Drawing2D.CompositingQuality.HighQuality</span><br><span class=\"line\">    paper.SmoothingMode = Drawing2D.SmoothingMode.HighQuality</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Call</span> fdgRenderer.Draw(<span class=\"number\">0.05</span>F)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br></pre></td></tr></table></figure>\n<p>Here is the same function that implements in javascript:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">force.on(<span class=\"string\">\"tick\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">     link.attr(<span class=\"string\">\"x1\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.source.x; &#125;)</span><br><span class=\"line\">         .attr(<span class=\"string\">\"y1\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.source.y; &#125;)</span><br><span class=\"line\">         .attr(<span class=\"string\">\"x2\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.target.x; &#125;)</span><br><span class=\"line\">         .attr(<span class=\"string\">\"y2\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.target.y; &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">     node.attr(<span class=\"string\">\"cx\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.x; &#125;)</span><br><span class=\"line\">         .attr(<span class=\"string\">\"cy\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.y; &#125;);</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"InputDevice-for-user-mouse-events\"><a href=\"#InputDevice-for-user-mouse-events\" class=\"headerlink\" title=\"InputDevice for user mouse events\"></a>InputDevice for user mouse events</h5><p>The graphics node in the d3js visualization can be drag by the mouse by binding the mouse event to each node object:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> node = svg.selectAll(<span class=\"string\">\".node\"</span>)</span><br><span class=\"line\">      .data(graph.nodes)</span><br><span class=\"line\">      .enter().append(<span class=\"string\">\"circle\"</span>)</span><br><span class=\"line\">      .attr(<span class=\"string\">\"class\"</span>, <span class=\"string\">\"node\"</span>)</span><br><span class=\"line\">      .attr(<span class=\"string\">\"r\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.sqrt(d.size)+<span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      .style(<span class=\"string\">\"fill\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> color(d.group);</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      .style(<span class=\"string\">\"opacity\"</span>, <span class=\"number\">0.8</span>)</span><br><span class=\"line\">      .call(force.drag);</span><br></pre></td></tr></table></figure>\n<p>And this input device class is implements the same function as the code <strong>.call(force.drag)</strong> in javascript:</p>\n<p>First, when our mouse move on the control, will trigger a mouse move event. And for drag a node on the control, a mouse down event will be triggered. When finish the drag, the mouse up event will be triggered.<br>And both of these events have a <strong>MouseEventArgs</strong> parameter, which we can using this argument value for the node detectes and node drags.</p>\n<p>From the very beginning, we start to drag a node, then we can set the drag event start and knowing which node is clicked by using <strong>__getNode(Point)</strong> function:<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> Canvas_MouseDown(sender <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span>, e <span class=\"keyword\">As</span> MouseEventArgs) <span class=\"keyword\">Handles</span> Canvas.MouseDown</span><br><span class=\"line\">    drag = <span class=\"literal\">True</span></span><br><span class=\"line\">    dragNode = __getNode(e.Location)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br></pre></td></tr></table></figure></p>\n<p>The <strong>__getNode(Point)</strong> function loops on the nodes in the network, and detected the mouse location is located in which nodes region by using <strong>System.Drawing.Rectangle.Contains(System.Drawing.Point) As Boolean</strong> method, due to the reason of the node location is the location in the data mode, can not be used on the user client directly, so that a function <strong>Canvas.fdgRenderer.GraphToScreen</strong> for the projection between the data model and user interface is used in this function:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Private</span> <span class=\"keyword\">Function</span> __getNode(p <span class=\"keyword\">As</span> Point) <span class=\"keyword\">As</span> Node</span><br><span class=\"line\">    <span class=\"keyword\">For</span> <span class=\"keyword\">Each</span> node <span class=\"keyword\">As</span> Node <span class=\"keyword\">In</span> Canvas.Graph.nodes</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> r <span class=\"keyword\">As</span> <span class=\"built_in\">Single</span> = node.Data.radius</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> npt <span class=\"keyword\">As</span> Point =</span><br><span class=\"line\">            Canvas.fdgRenderer.GraphToScreen(</span><br><span class=\"line\">            Canvas.fdgPhysics.GetPoint(node).position)</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> pt <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> Point(npt.X - r / <span class=\"number\">2</span>, npt.Y - r / <span class=\"number\">2</span>)</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> rect <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> Rectangle(pt, <span class=\"keyword\">New</span> Size(r, r))</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">If</span> rect.Contains(p) <span class=\"keyword\">Then</span></span><br><span class=\"line\">            <span class=\"keyword\">Return</span> node</span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">    <span class=\"keyword\">Next</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Return</span> <span class=\"literal\">Nothing</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure>\n<p>Then by start the mouse move we are able to move the location of the draged node:<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> Canvas_MouseMove(sender <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span>, e <span class=\"keyword\">As</span> MouseEventArgs) <span class=\"keyword\">Handles</span> Canvas.MouseMove</span><br><span class=\"line\">    <span class=\"keyword\">If</span> <span class=\"keyword\">Not</span> drag <span class=\"keyword\">Then</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">If</span> dragNode <span class=\"keyword\">IsNot</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">Then</span></span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> vec <span class=\"keyword\">As</span> FDGVector2 =</span><br><span class=\"line\">                Canvas.fdgRenderer.ScreenToGraph(</span><br><span class=\"line\">                <span class=\"keyword\">New</span> Point(e.Location.X, e.Location.Y))</span><br><span class=\"line\"></span><br><span class=\"line\">        dragNode.Pinned = <span class=\"literal\">True</span></span><br><span class=\"line\">        Canvas.fdgPhysics.GetPoint(dragNode).position = vec</span><br><span class=\"line\">    <span class=\"keyword\">Else</span></span><br><span class=\"line\">        dragNode = __getNode(e.Location)</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br></pre></td></tr></table></figure></p>\n<p>If is in the drag mode, then we are set the location of the draged node to the mouse current location, then are we implements the drag events. When we finish the drag event, a mouse up event will be trigged, we release the drag node at here:<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> Canvas_MouseUp(sender <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span>, e <span class=\"keyword\">As</span> MouseEventArgs) <span class=\"keyword\">Handles</span> Canvas.MouseUp</span><br><span class=\"line\">    drag = <span class=\"literal\">False</span></span><br><span class=\"line\">    <span class=\"keyword\">If</span> dragNode <span class=\"keyword\">IsNot</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">Then</span></span><br><span class=\"line\">        dragNode.Pinned = <span class=\"literal\">False</span></span><br><span class=\"line\">        dragNode = <span class=\"literal\">Nothing</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br></pre></td></tr></table></figure></p>\n<h5 id=\"Renderer-for-the-graphics-rendering-of-the-network-data\"><a href=\"#Renderer-for-the-graphics-rendering-of-the-network-data\" class=\"headerlink\" title=\"Renderer for the graphics rendering of the network data\"></a>Renderer for the graphics rendering of the network data</h5><p>As we mentioned above, the world between the inner data model and the user interface is different, so that we needs two function for the projection between the inner data model world and the outside user world:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Projects the data model to our screen for display.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"iPos\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> GraphToScreen(iPos <span class=\"keyword\">As</span> FDGVector2) <span class=\"keyword\">As</span> Point</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> rect = __regionProvider()</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> x = <span class=\"built_in\">CInt</span>(Math.Truncate(iPos.x + (<span class=\"built_in\">CSng</span>(rect.Right - rect.Left) / <span class=\"number\">2.0</span>F)))</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> y = <span class=\"built_in\">CInt</span>(Math.Truncate(iPos.y + (<span class=\"built_in\">CSng</span>(rect.Bottom - rect.Top) / <span class=\"number\">2.0</span>F)))</span><br><span class=\"line\">    <span class=\"keyword\">Return</span> <span class=\"keyword\">New</span> Point(x, y)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Projects the client graphics data to the data model. </span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"iScreenPos\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> ScreenToGraph(iScreenPos <span class=\"keyword\">As</span> Point) <span class=\"keyword\">As</span> FDGVector2</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> retVec <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> FDGVector2()</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> rect = __regionProvider()</span><br><span class=\"line\">    retVec.x = <span class=\"built_in\">CSng</span>(iScreenPos.X) - (<span class=\"built_in\">CSng</span>(rect.Right - rect.Left) / <span class=\"number\">2.0</span>F)</span><br><span class=\"line\">    retVec.y = <span class=\"built_in\">CSng</span>(iScreenPos.Y) - (<span class=\"built_in\">CSng</span>(rect.Bottom - rect.Top) / <span class=\"number\">2.0</span>F)</span><br><span class=\"line\">    <span class=\"keyword\">Return</span> retVec</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure>\n<p>And these two project function required of a graphics region on the client controls, which the data source is provides by a lambda expression in the canvas control:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Imports</span> System.Collections.Generic</span><br><span class=\"line\"><span class=\"keyword\">Imports</span> System.Linq</span><br><span class=\"line\"><span class=\"keyword\">Imports</span> System.<span class=\"keyword\">Text</span></span><br><span class=\"line\"><span class=\"keyword\">Imports</span> Microsoft.VisualBasic.DataVisualization.Network.Graph</span><br><span class=\"line\"><span class=\"keyword\">Imports</span> Microsoft.VisualBasic.DataVisualization.Network.Layouts</span><br><span class=\"line\"><span class=\"keyword\">Imports</span> Microsoft.VisualBasic.DataVisualization.Network.Layouts.Interfaces</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> Renderer</span><br><span class=\"line\">    <span class=\"keyword\">Inherits</span> AbstractRenderer</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Gets the graphics source</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> __graphicsProvider <span class=\"keyword\">As</span> Func(<span class=\"keyword\">Of</span> Graphics)</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> gets the graphics region for the projections: <span class=\"doctag\">&lt;see cref=\"GraphToScreen\"/&gt;</span> and <span class=\"doctag\">&lt;see cref=\"ScreenToGraph\"/&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> __regionProvider <span class=\"keyword\">As</span> Func(<span class=\"keyword\">Of</span> Rectangle)</span><br></pre></td></tr></table></figure>\n<p>The lambda expression in the constructor provides the required client data for the data visualization renderer:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> __invokeSet(g <span class=\"keyword\">As</span> NetworkGraph)</span><br><span class=\"line\">    net = g</span><br><span class=\"line\">    fdgPhysics = <span class=\"keyword\">New</span> ForceDirected2D(net, FdgArgs.Stiffness, FdgArgs.Repulsion, FdgArgs.Damping)</span><br><span class=\"line\">    fdgRenderer = <span class=\"keyword\">New</span> Renderer(</span><br><span class=\"line\">        <span class=\"keyword\">Function</span>() paper,</span><br><span class=\"line\">        <span class=\"keyword\">Function</span>() <span class=\"keyword\">New</span> Rectangle(<span class=\"keyword\">New</span> Point, Size),</span><br><span class=\"line\">        fdgPhysics)</span><br><span class=\"line\">    inputs = <span class=\"keyword\">New</span> InputDevice(<span class=\"keyword\">Me</span>)</span><br><span class=\"line\">    fdgRenderer.Asynchronous = <span class=\"literal\">False</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br></pre></td></tr></table></figure>\n<p>Then by using the <strong>GraphToScreen</strong> function, we are knowing where the node should be draw and using <strong>ScreenToGraph</strong> we can update the draged node its location into the data model.</p>\n<p>For draw a edge, we just using the <strong>Graphics.DrawLine(pen As Pen, x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer)</strong> function, and by using the function <strong>Graphics.FillPie(brush As Brush, rect As Rectangle, startAngle As Single, sweepAngle As Single)</strong> that we can draw a node on the canvas.</p>\n<h3 id=\"How-to-use\"><a href=\"#How-to-use\" class=\"headerlink\" title=\"How to use?\"></a>How to use?</h3><p>Just create a empty form, and then put the canvas control in your form like this:</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Imports System.Windows.Forms</span><br><span class=\"line\">Imports Microsoft.VisualBasic.DataVisualization.Network.Canvas</span><br><span class=\"line\">Imports Microsoft.VisualBasic.DataVisualization.Network.FileStream</span><br><span class=\"line\"></span><br><span class=\"line\">Public Class Form1</span><br><span class=\"line\"></span><br><span class=\"line\">    Dim canvas As New Canvas With &#123;</span><br><span class=\"line\">        .Dock = DockStyle.Fill</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load</span><br><span class=\"line\">        Call Me.Controls.Add(canvas)</span><br><span class=\"line\"></span><br><span class=\"line\">        canvas.Graph = CytoscapeExportAsGraph(</span><br><span class=\"line\">            App.HOME &amp; \"\\Resources\\xcb-main-Edges.csv\",</span><br><span class=\"line\">            App.HOME &amp; \"\\Resources\\xcb-main-Nodes.csv\")</span><br><span class=\"line\">    End Sub</span><br><span class=\"line\">End Class</span><br></pre></td></tr></table></figure>\n<h3 id=\"Performance-issue\"><a href=\"#Performance-issue\" class=\"headerlink\" title=\"Performance issue\"></a>Performance issue</h3><p>Both VisualBasic and C# have the performance issue of the gdi+ graphics on large image rendering, as all of the gdi+ graphics work is on the CPU. This tools works well on the small network, but it get stuck when trying to rendering a large scale network data, and the graphics display is not so smoothly.</p>\n<p>Planning changes the graphics engine from gdi+ to Microsoft Win2D or OpenGL in the future work.</p>\n<h3 id=\"Running-the-Test\"><a href=\"#Running-the-Test\" class=\"headerlink\" title=\"Running the Test\"></a>Running the Test</h3><p>The testing project source code can be download from the <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/tree/master/Datavisualization/Datavisualization.Network/Test\" target=\"_blank\" rel=\"external\">github</a> and here is the <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/releases/tag/v0.16-update\" target=\"_blank\" rel=\"external\">example release program</a>.<br><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Datavisualization.Network/canvas_screenshot.png\" alt=\"\"></p>\n","excerpt":"<blockquote>\n<p><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/releases/tag/v0.16-update\">Downloads the demo example</a><br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/tree/master/Datavisualization/Datavisualization.Network\">Downloads the latest source code from github</a></p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Datavisualization.Network/Previews.gif\" alt=\"\"><br>","more":"</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Datavisualization.Network/net_test/xcb-main.png\" alt=\"\"></p>\n<h2 id=\"Introduction-and-background\"><a href=\"#Introduction-and-background\" class=\"headerlink\" title=\"Introduction and background\"></a>Introduction and background</h2><p>In my recent work on the GCModeller, I want to developing a module for the biological network data visualization.<br>One of the solution is using d3js for this data visualization and the another solution is the Cytoscape software.</p>\n<p>The <a href=\"http://cytoscape.org/\">Cytoscape</a> software is doing the best in the network visualization as it provides a lot of style mapping and data imports and exports function. And in my recent work, the cytoscape software was used for visualize the biological network data frequently. But there is problem that the cytoscape software can only generate the statics image of the network, and just can only export a interactive output in web app format. And the cytoscape software is also can not programming with VB.NET. And as I want to build a inner interactive module for the biological network visualization, so that I should try another way for the job. There is another important tools for visualize the network data in the HTML programming: <a href=\"https://github.com/d3/d3\">d3js</a>. And the d3js is one of my favorite tools in the data visualization.</p>\n<p>Here is my most favorite project from Mr. whichlight’s work: a project for visualize the reddit discussion network by using d3js.</p>\n<blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Datavisualization.Network/tumblr_inline_mqvdlydGCp1qz4rgp.png\" alt=\"\"><br><a href=\"https://github.com/whichlight/reddit-network-vis\">Reddit Discussion Network Visualization</a></p>\n</blockquote>\n<p>And the d3js is my first choice in this work. And here is the force directed graphic engine that I write with d3js hybrid programming with VB.NET (whole source cdoe and example can be download from <a href=\"https://github.com/SMRUCC/GCModeller.Workbench/tree/master/d3js/Force-Directed%20Graph/js\">here</a>):</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">d3Network</span>(<span class=\"params\">jsonFile, width, height</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> color = d3.scale.category20();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> force = d3.layout.force()</span><br><span class=\"line\">        .charge(<span class=\"number\">-120</span>)</span><br><span class=\"line\">        .linkDistance(<span class=\"number\">30</span>)</span><br><span class=\"line\">        .size([width, height]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> svg = d3.select(<span class=\"string\">\"body\"</span>).append(<span class=\"string\">\"svg\"</span>)</span><br><span class=\"line\">        .attr(<span class=\"string\">\"fill\"</span>, <span class=\"string\">\"#DBF3FF\"</span>)</span><br><span class=\"line\">        .attr(<span class=\"string\">\"width\"</span>, width)</span><br><span class=\"line\">        .attr(<span class=\"string\">\"height\"</span>, height)</span><br><span class=\"line\">        .attr(<span class=\"string\">\"class\"</span>, <span class=\"string\">\"chart\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    d3.json(jsonFile, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, graph</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (error) <span class=\"keyword\">throw</span> error;</span><br><span class=\"line\"></span><br><span class=\"line\">        force</span><br><span class=\"line\">            .nodes(graph.nodes)</span><br><span class=\"line\">            .links(graph.links)</span><br><span class=\"line\">            .start();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> link = svg.selectAll(<span class=\"string\">\".link\"</span>)</span><br><span class=\"line\">            .data(graph.links)</span><br><span class=\"line\">            .enter().append(<span class=\"string\">\"line\"</span>)</span><br><span class=\"line\">            .attr(<span class=\"string\">\"class\"</span>, <span class=\"string\">\"link\"</span>)</span><br><span class=\"line\">            .style(<span class=\"string\">\"stroke-width\"</span>, <span class=\"number\">0.5</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> node = svg.selectAll(<span class=\"string\">\".node\"</span>)</span><br><span class=\"line\">            .data(graph.nodes)</span><br><span class=\"line\">            .enter().append(<span class=\"string\">\"circle\"</span>)</span><br><span class=\"line\">            .attr(<span class=\"string\">\"class\"</span>, <span class=\"string\">\"node\"</span>)</span><br><span class=\"line\">            .attr(<span class=\"string\">\"r\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.sqrt(d.size)+<span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            .style(<span class=\"string\">\"fill\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> color(d.group);</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            .style(<span class=\"string\">\"opacity\"</span>, <span class=\"number\">0.8</span>)</span><br><span class=\"line\">            .call(force.drag);</span><br><span class=\"line\"></span><br><span class=\"line\">        node.append(<span class=\"string\">\"title\"</span>)</span><br><span class=\"line\">            .attr(<span class=\"string\">\"class\"</span>, <span class=\"string\">\"tooltip\"</span>)</span><br><span class=\"line\">            .style(<span class=\"string\">\"font-size\"</span>, <span class=\"number\">16</span>)</span><br><span class=\"line\">            .html(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">\"name:\\t\"</span> + d.name + <span class=\"string\">\"\\ntype:\\t\"</span> + d.type + <span class=\"string\">\"\\nlinks:\\t\"</span> + d.size;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        force.on(<span class=\"string\">\"tick\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            link.attr(<span class=\"string\">\"x1\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.source.x; &#125;)</span><br><span class=\"line\">                .attr(<span class=\"string\">\"y1\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.source.y; &#125;)</span><br><span class=\"line\">                .attr(<span class=\"string\">\"x2\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.target.x; &#125;)</span><br><span class=\"line\">                .attr(<span class=\"string\">\"y2\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.target.y; &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">            node.attr(<span class=\"string\">\"cx\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.x; &#125;)</span><br><span class=\"line\">                .attr(<span class=\"string\">\"cy\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.y; &#125;);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>The VB.NET language was programming hybrids with javascript as the server side on the local client. And by using WinForm web browser control, that we can display the network visualization data. But as the .NET Webbrowser control is based on the IE browser and not support d3js well, so that I have to changes the .NET Webbrowser control to the opensource Firefox browser or Google chrome. And by using Firefox in the project, it actually works, but the problem is that we needs deploy our application with the Chrome kernel(~100MB) and Firefox kernel(~50MB). This is not so convenient and friendly for my customer clients.</p>\n<p>And after search on the github, I found a solution for this interactive network visualization work in the .NET language its own way.</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Datavisualization.Network/canvas_screenshot.png\" alt=\"\"></p>\n<p>This network canvas library is majority based on the work of <a href=\"http://www.codeproject.com/Articles/833043/EpForceDirectedGraph-cs-A-D-D-force-directed-gra\">Mr. Woong Gyu La</a></p>\n<h3 id=\"Overviews\"><a href=\"#Overviews\" class=\"headerlink\" title=\"Overviews\"></a>Overviews</h3><p>This canvas library is consist with 4 parts majority:</p>\n<ol>\n<li><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Datavisualization.Network/Datavisualization.Network/Layouts/ForceDirected/Layout/ForceDirected.vb\">Force Directed layout engine</a></li>\n<li><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Datavisualization.Network/NetworkCanvas/Canvas.vb\">Canvas control for WinForm</a></li>\n<li><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Datavisualization.Network/NetworkCanvas/InputDevice.vb\">InputDevice for user mouse events</a></li>\n<li><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Datavisualization.Network/NetworkCanvas/Renderer.vb\">Renderer for the graphics rendering of the network data</a></li>\n</ol>\n<h3 id=\"Code-in-details\"><a href=\"#Code-in-details\" class=\"headerlink\" title=\"Code in details\"></a>Code in details</h3><h5 id=\"Force-Directed-layout-engine\"><a href=\"#Force-Directed-layout-engine\" class=\"headerlink\" title=\"Force Directed layout engine\"></a>Force Directed layout engine</h5><p>The force directed network layout engine which is available at type <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Datavisualization.Network/Datavisualization.Network/Layouts/ForceDirected/Layout/ForceDirected.vb\"><strong>Microsoft.VisualBasic.DataVisualization.Network.Layouts.ForceDirected2D</strong></a><br>The introduction for this layout provider is available at Mr. Woong Gyu La’s article: <a href=\"http://www.codeproject.com/Articles/833043/EpForceDirectedGraph-cs-A-D-D-force-directed-gra\">“EpForceDirectedGraph.cs- A 2D/3D force directed graph algorithm in C#”</a></p>\n<h5 id=\"Canvas-control-for-WinForm\"><a href=\"#Canvas-control-for-WinForm\" class=\"headerlink\" title=\"Canvas control for WinForm\"></a>Canvas control for WinForm</h5><p>The canvas control providers the user interface and rendering task thread for the layout engine.<br>Set up the network data just by using the <strong>Canvas.Graph</strong> property:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> Graph <span class=\"keyword\">As</span> NetworkGraph</span><br><span class=\"line\">    <span class=\"keyword\">Get</span></span><br><span class=\"line\">        <span class=\"keyword\">If</span> net <span class=\"keyword\">Is</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">Then</span></span><br><span class=\"line\">            <span class=\"keyword\">Call</span> __invokeSet(<span class=\"keyword\">New</span> NetworkGraph)</span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> net</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Get</span></span><br><span class=\"line\">    <span class=\"keyword\">Set</span>(value <span class=\"keyword\">As</span> NetworkGraph)</span><br><span class=\"line\">        <span class=\"keyword\">Call</span> __invokeSet(value)</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Set</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Property</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> __invokeSet(g <span class=\"keyword\">As</span> NetworkGraph)</span><br><span class=\"line\">    net = g</span><br><span class=\"line\">    fdgPhysics = <span class=\"keyword\">New</span> ForceDirected2D(net, FdgArgs.Stiffness, FdgArgs.Repulsion, FdgArgs.Damping)</span><br><span class=\"line\">    fdgRenderer = <span class=\"keyword\">New</span> Renderer(</span><br><span class=\"line\">        <span class=\"keyword\">Function</span>() paper,</span><br><span class=\"line\">        <span class=\"keyword\">Function</span>() <span class=\"keyword\">New</span> Rectangle(<span class=\"keyword\">New</span> Point, Size),</span><br><span class=\"line\">        fdgPhysics)</span><br><span class=\"line\">    inputs = <span class=\"keyword\">New</span> InputDevice(<span class=\"keyword\">Me</span>)</span><br><span class=\"line\">    fdgRenderer.Asynchronous = <span class=\"literal\">False</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br></pre></td></tr></table></figure>\n<p>And these components is using for the layout engine and rendering of the image:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> The network data model for the visualization</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> net <span class=\"keyword\">As</span> NetworkGraph</span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Layout provider engine</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Protected</span> <span class=\"keyword\">Friend</span> fdgPhysics <span class=\"keyword\">As</span> ForceDirected2D</span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> The graphics updates thread.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Protected</span> <span class=\"keyword\">Friend</span> timer <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> UpdateThread(<span class=\"number\">30</span>, <span class=\"keyword\">AddressOf</span> __invokePaint)</span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> The graphics rendering provider</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Protected</span> <span class=\"keyword\">Friend</span> fdgRenderer <span class=\"keyword\">As</span> Renderer</span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> GDI+ interface for the canvas control.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> paper <span class=\"keyword\">As</span> Graphics</span><br></pre></td></tr></table></figure>\n<p>All of the rendering work is starting from the <strong>timer</strong> object:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> The graphics updates thread.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Protected</span> <span class=\"keyword\">Friend</span> timer <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> UpdateThread(<span class=\"number\">30</span>, <span class=\"keyword\">AddressOf</span> __invokePaint)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> __invokePaint()</span><br><span class=\"line\">    <span class=\"keyword\">Call</span> <span class=\"keyword\">Me</span>.Invoke(<span class=\"keyword\">Sub</span>() Invalidate())</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br></pre></td></tr></table></figure>\n<p>By notifying the Windows message that the control needs to be update in periodic in the timer thread, and then the event <strong>Paint</strong> will be trigged, and then we are able to use the graphics gdi+ interface in the rendering engine for the network visualization. As you can see, this event function provides the required gdi+ interface for the rendering engine and invoke updates the network layout and the control graphics image.</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> Canvas_Paint(sender <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span>, e <span class=\"keyword\">As</span> PaintEventArgs) <span class=\"keyword\">Handles</span> <span class=\"keyword\">Me</span>.Paint</span><br><span class=\"line\">    paper = e.Graphics</span><br><span class=\"line\">    paper.CompositingQuality = Drawing2D.CompositingQuality.HighQuality</span><br><span class=\"line\">    paper.SmoothingMode = Drawing2D.SmoothingMode.HighQuality</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Call</span> fdgRenderer.Draw(<span class=\"number\">0.05</span>F)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br></pre></td></tr></table></figure>\n<p>Here is the same function that implements in javascript:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">force.on(<span class=\"string\">\"tick\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">     link.attr(<span class=\"string\">\"x1\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.source.x; &#125;)</span><br><span class=\"line\">         .attr(<span class=\"string\">\"y1\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.source.y; &#125;)</span><br><span class=\"line\">         .attr(<span class=\"string\">\"x2\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.target.x; &#125;)</span><br><span class=\"line\">         .attr(<span class=\"string\">\"y2\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.target.y; &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">     node.attr(<span class=\"string\">\"cx\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.x; &#125;)</span><br><span class=\"line\">         .attr(<span class=\"string\">\"cy\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.y; &#125;);</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"InputDevice-for-user-mouse-events\"><a href=\"#InputDevice-for-user-mouse-events\" class=\"headerlink\" title=\"InputDevice for user mouse events\"></a>InputDevice for user mouse events</h5><p>The graphics node in the d3js visualization can be drag by the mouse by binding the mouse event to each node object:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> node = svg.selectAll(<span class=\"string\">\".node\"</span>)</span><br><span class=\"line\">      .data(graph.nodes)</span><br><span class=\"line\">      .enter().append(<span class=\"string\">\"circle\"</span>)</span><br><span class=\"line\">      .attr(<span class=\"string\">\"class\"</span>, <span class=\"string\">\"node\"</span>)</span><br><span class=\"line\">      .attr(<span class=\"string\">\"r\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.sqrt(d.size)+<span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      .style(<span class=\"string\">\"fill\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">d</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> color(d.group);</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      .style(<span class=\"string\">\"opacity\"</span>, <span class=\"number\">0.8</span>)</span><br><span class=\"line\">      .call(force.drag);</span><br></pre></td></tr></table></figure>\n<p>And this input device class is implements the same function as the code <strong>.call(force.drag)</strong> in javascript:</p>\n<p>First, when our mouse move on the control, will trigger a mouse move event. And for drag a node on the control, a mouse down event will be triggered. When finish the drag, the mouse up event will be triggered.<br>And both of these events have a <strong>MouseEventArgs</strong> parameter, which we can using this argument value for the node detectes and node drags.</p>\n<p>From the very beginning, we start to drag a node, then we can set the drag event start and knowing which node is clicked by using <strong>__getNode(Point)</strong> function:<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> Canvas_MouseDown(sender <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span>, e <span class=\"keyword\">As</span> MouseEventArgs) <span class=\"keyword\">Handles</span> Canvas.MouseDown</span><br><span class=\"line\">    drag = <span class=\"literal\">True</span></span><br><span class=\"line\">    dragNode = __getNode(e.Location)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br></pre></td></tr></table></figure></p>\n<p>The <strong>__getNode(Point)</strong> function loops on the nodes in the network, and detected the mouse location is located in which nodes region by using <strong>System.Drawing.Rectangle.Contains(System.Drawing.Point) As Boolean</strong> method, due to the reason of the node location is the location in the data mode, can not be used on the user client directly, so that a function <strong>Canvas.fdgRenderer.GraphToScreen</strong> for the projection between the data model and user interface is used in this function:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Private</span> <span class=\"keyword\">Function</span> __getNode(p <span class=\"keyword\">As</span> Point) <span class=\"keyword\">As</span> Node</span><br><span class=\"line\">    <span class=\"keyword\">For</span> <span class=\"keyword\">Each</span> node <span class=\"keyword\">As</span> Node <span class=\"keyword\">In</span> Canvas.Graph.nodes</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> r <span class=\"keyword\">As</span> <span class=\"built_in\">Single</span> = node.Data.radius</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> npt <span class=\"keyword\">As</span> Point =</span><br><span class=\"line\">            Canvas.fdgRenderer.GraphToScreen(</span><br><span class=\"line\">            Canvas.fdgPhysics.GetPoint(node).position)</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> pt <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> Point(npt.X - r / <span class=\"number\">2</span>, npt.Y - r / <span class=\"number\">2</span>)</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> rect <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> Rectangle(pt, <span class=\"keyword\">New</span> Size(r, r))</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">If</span> rect.Contains(p) <span class=\"keyword\">Then</span></span><br><span class=\"line\">            <span class=\"keyword\">Return</span> node</span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">    <span class=\"keyword\">Next</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Return</span> <span class=\"literal\">Nothing</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure>\n<p>Then by start the mouse move we are able to move the location of the draged node:<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> Canvas_MouseMove(sender <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span>, e <span class=\"keyword\">As</span> MouseEventArgs) <span class=\"keyword\">Handles</span> Canvas.MouseMove</span><br><span class=\"line\">    <span class=\"keyword\">If</span> <span class=\"keyword\">Not</span> drag <span class=\"keyword\">Then</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">If</span> dragNode <span class=\"keyword\">IsNot</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">Then</span></span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> vec <span class=\"keyword\">As</span> FDGVector2 =</span><br><span class=\"line\">                Canvas.fdgRenderer.ScreenToGraph(</span><br><span class=\"line\">                <span class=\"keyword\">New</span> Point(e.Location.X, e.Location.Y))</span><br><span class=\"line\"></span><br><span class=\"line\">        dragNode.Pinned = <span class=\"literal\">True</span></span><br><span class=\"line\">        Canvas.fdgPhysics.GetPoint(dragNode).position = vec</span><br><span class=\"line\">    <span class=\"keyword\">Else</span></span><br><span class=\"line\">        dragNode = __getNode(e.Location)</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br></pre></td></tr></table></figure></p>\n<p>If is in the drag mode, then we are set the location of the draged node to the mouse current location, then are we implements the drag events. When we finish the drag event, a mouse up event will be trigged, we release the drag node at here:<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> Canvas_MouseUp(sender <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span>, e <span class=\"keyword\">As</span> MouseEventArgs) <span class=\"keyword\">Handles</span> Canvas.MouseUp</span><br><span class=\"line\">    drag = <span class=\"literal\">False</span></span><br><span class=\"line\">    <span class=\"keyword\">If</span> dragNode <span class=\"keyword\">IsNot</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">Then</span></span><br><span class=\"line\">        dragNode.Pinned = <span class=\"literal\">False</span></span><br><span class=\"line\">        dragNode = <span class=\"literal\">Nothing</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br></pre></td></tr></table></figure></p>\n<h5 id=\"Renderer-for-the-graphics-rendering-of-the-network-data\"><a href=\"#Renderer-for-the-graphics-rendering-of-the-network-data\" class=\"headerlink\" title=\"Renderer for the graphics rendering of the network data\"></a>Renderer for the graphics rendering of the network data</h5><p>As we mentioned above, the world between the inner data model and the user interface is different, so that we needs two function for the projection between the inner data model world and the outside user world:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Projects the data model to our screen for display.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"iPos\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> GraphToScreen(iPos <span class=\"keyword\">As</span> FDGVector2) <span class=\"keyword\">As</span> Point</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> rect = __regionProvider()</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> x = <span class=\"built_in\">CInt</span>(Math.Truncate(iPos.x + (<span class=\"built_in\">CSng</span>(rect.Right - rect.Left) / <span class=\"number\">2.0</span>F)))</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> y = <span class=\"built_in\">CInt</span>(Math.Truncate(iPos.y + (<span class=\"built_in\">CSng</span>(rect.Bottom - rect.Top) / <span class=\"number\">2.0</span>F)))</span><br><span class=\"line\">    <span class=\"keyword\">Return</span> <span class=\"keyword\">New</span> Point(x, y)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Projects the client graphics data to the data model. </span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"iScreenPos\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> ScreenToGraph(iScreenPos <span class=\"keyword\">As</span> Point) <span class=\"keyword\">As</span> FDGVector2</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> retVec <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> FDGVector2()</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> rect = __regionProvider()</span><br><span class=\"line\">    retVec.x = <span class=\"built_in\">CSng</span>(iScreenPos.X) - (<span class=\"built_in\">CSng</span>(rect.Right - rect.Left) / <span class=\"number\">2.0</span>F)</span><br><span class=\"line\">    retVec.y = <span class=\"built_in\">CSng</span>(iScreenPos.Y) - (<span class=\"built_in\">CSng</span>(rect.Bottom - rect.Top) / <span class=\"number\">2.0</span>F)</span><br><span class=\"line\">    <span class=\"keyword\">Return</span> retVec</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure>\n<p>And these two project function required of a graphics region on the client controls, which the data source is provides by a lambda expression in the canvas control:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Imports</span> System.Collections.Generic</span><br><span class=\"line\"><span class=\"keyword\">Imports</span> System.Linq</span><br><span class=\"line\"><span class=\"keyword\">Imports</span> System.<span class=\"keyword\">Text</span></span><br><span class=\"line\"><span class=\"keyword\">Imports</span> Microsoft.VisualBasic.DataVisualization.Network.Graph</span><br><span class=\"line\"><span class=\"keyword\">Imports</span> Microsoft.VisualBasic.DataVisualization.Network.Layouts</span><br><span class=\"line\"><span class=\"keyword\">Imports</span> Microsoft.VisualBasic.DataVisualization.Network.Layouts.Interfaces</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> Renderer</span><br><span class=\"line\">    <span class=\"keyword\">Inherits</span> AbstractRenderer</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Gets the graphics source</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> __graphicsProvider <span class=\"keyword\">As</span> Func(<span class=\"keyword\">Of</span> Graphics)</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> gets the graphics region for the projections: <span class=\"doctag\">&lt;see cref=\"GraphToScreen\"/&gt;</span> and <span class=\"doctag\">&lt;see cref=\"ScreenToGraph\"/&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> __regionProvider <span class=\"keyword\">As</span> Func(<span class=\"keyword\">Of</span> Rectangle)</span><br></pre></td></tr></table></figure>\n<p>The lambda expression in the constructor provides the required client data for the data visualization renderer:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> __invokeSet(g <span class=\"keyword\">As</span> NetworkGraph)</span><br><span class=\"line\">    net = g</span><br><span class=\"line\">    fdgPhysics = <span class=\"keyword\">New</span> ForceDirected2D(net, FdgArgs.Stiffness, FdgArgs.Repulsion, FdgArgs.Damping)</span><br><span class=\"line\">    fdgRenderer = <span class=\"keyword\">New</span> Renderer(</span><br><span class=\"line\">        <span class=\"keyword\">Function</span>() paper,</span><br><span class=\"line\">        <span class=\"keyword\">Function</span>() <span class=\"keyword\">New</span> Rectangle(<span class=\"keyword\">New</span> Point, Size),</span><br><span class=\"line\">        fdgPhysics)</span><br><span class=\"line\">    inputs = <span class=\"keyword\">New</span> InputDevice(<span class=\"keyword\">Me</span>)</span><br><span class=\"line\">    fdgRenderer.Asynchronous = <span class=\"literal\">False</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br></pre></td></tr></table></figure>\n<p>Then by using the <strong>GraphToScreen</strong> function, we are knowing where the node should be draw and using <strong>ScreenToGraph</strong> we can update the draged node its location into the data model.</p>\n<p>For draw a edge, we just using the <strong>Graphics.DrawLine(pen As Pen, x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer)</strong> function, and by using the function <strong>Graphics.FillPie(brush As Brush, rect As Rectangle, startAngle As Single, sweepAngle As Single)</strong> that we can draw a node on the canvas.</p>\n<h3 id=\"How-to-use\"><a href=\"#How-to-use\" class=\"headerlink\" title=\"How to use?\"></a>How to use?</h3><p>Just create a empty form, and then put the canvas control in your form like this:</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Imports System.Windows.Forms</span><br><span class=\"line\">Imports Microsoft.VisualBasic.DataVisualization.Network.Canvas</span><br><span class=\"line\">Imports Microsoft.VisualBasic.DataVisualization.Network.FileStream</span><br><span class=\"line\"></span><br><span class=\"line\">Public Class Form1</span><br><span class=\"line\"></span><br><span class=\"line\">    Dim canvas As New Canvas With &#123;</span><br><span class=\"line\">        .Dock = DockStyle.Fill</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load</span><br><span class=\"line\">        Call Me.Controls.Add(canvas)</span><br><span class=\"line\"></span><br><span class=\"line\">        canvas.Graph = CytoscapeExportAsGraph(</span><br><span class=\"line\">            App.HOME &amp; \"\\Resources\\xcb-main-Edges.csv\",</span><br><span class=\"line\">            App.HOME &amp; \"\\Resources\\xcb-main-Nodes.csv\")</span><br><span class=\"line\">    End Sub</span><br><span class=\"line\">End Class</span><br></pre></td></tr></table></figure>\n<h3 id=\"Performance-issue\"><a href=\"#Performance-issue\" class=\"headerlink\" title=\"Performance issue\"></a>Performance issue</h3><p>Both VisualBasic and C# have the performance issue of the gdi+ graphics on large image rendering, as all of the gdi+ graphics work is on the CPU. This tools works well on the small network, but it get stuck when trying to rendering a large scale network data, and the graphics display is not so smoothly.</p>\n<p>Planning changes the graphics engine from gdi+ to Microsoft Win2D or OpenGL in the future work.</p>\n<h3 id=\"Running-the-Test\"><a href=\"#Running-the-Test\" class=\"headerlink\" title=\"Running the Test\"></a>Running the Test</h3><p>The testing project source code can be download from the <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/tree/master/Datavisualization/Datavisualization.Network/Test\">github</a> and here is the <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/releases/tag/v0.16-update\">example release program</a>.<br><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/Datavisualization/Datavisualization.Network/canvas_screenshot.png\" alt=\"\"></p>"},{"title":"关于NodeJS的单线程和异步IO","date":"2016-06-03T16:00:00.000Z","_content":"\n###### 引用文 摘自 IBM 刘欣 个人公众号：码农翻身\n\n美丽的七侠镇上有一条美食街，很多著名的饭店都开在这里，有老字号的Apache,PHP,最近几年火热的Ruby on Rail,还有那些重量级的餐饮集团Websphere,Weblogic等。这些饭店老板根据自己的实力，或多或少的雇佣了一些店小二来招待来客，这些小二干活都非常殷勤，没有一个偷懒耍滑，把顾客招待的舒舒服服，所以平日里饭馆运转的还不错，相安无事。\n但是随着《武林外传》的拍摄和播放，七侠镇旅游业大爆发，游客像潮水一样蜂拥而至，现有的店小二招待不过来了，到了饭点，每家的门前都排起了长队，游客们吃不上饭，个个怨声载道。看到这种情况，有些老板咬了咬牙，在人工费不断上涨的情况下，多雇了一些小二来帮忙，无奈总是赶不上顾客增长的速度。\n\n<!--more-->\n\n某一天有个美国老外来到七侠镇上旅游，也看到了吃不上饭的问题，他仔细分析了一番后发现了一个秘密：原来这些店都采用了同一套叫做“全程贴心服务”的模式，这个模式很有意思：\n\n>客人来了以后，马上有个店小二殷勤迎上去，带着找座位，点菜，给后厨下单\n>由于后厨做菜需要很长时间，店小二就在客人的旁边等着。\n>后厨一摇铃铛，大喊一声：上菜，店小二马上端到客人面前，然后站在一边等着客人吃完\n>客人说：结账，小二收钱，找钱，送客，迎接下一位。\n\n通常这个时候门口都排成了好几百人了！\n这个VIP服务实在是太贴心了！导致的结果很明显，饭店有几个店小二，就只能同时接待几个顾客。(当然，现实中是没有饭店是这么做的，否则就等着关门吧)\n\n老外一声不吭的回去了。\n\n过了几个月，美食一条街上出现了一个巨火无比的饭馆：**Node.js**\n虽然这个饭店中人满为患，可门口竟然没有排队的！\n更让人吃惊的是，这个店里声称：我只需要一个店小二！\n\nNode.js这个美国老外开的饭店确实只用了一个店小二，只不过这个小二干活的方式与众不同，他把所有的工作分为两类：\n> **A**.  马上就能干完的，例如迎客，点菜，找座，下单 等等\n> **B**.  需要等待别人干完才能干的活，例如上菜，结账 等\n\n+ 对 **A** 这个小二马上干活\n+ 对 **B** 店小二不会等待，他只是告诉别人说，你弄完了告诉我一声，我会接着干， 然后马上去做第一类工作\n\n\n>客人来了以后，这个店小二殷勤迎上去，带着找座位，点菜，给后厨下单\n由于后厨做菜需要很长时间，店小二闪电般的离开，去干别的活了，可能是迎客，点菜，找座等，总之是那些不用等待，迅速干完的活。\n后厨大喊一声：上菜，这个小二马上端到客人面前，然后离开，干其他活。\n客人说：结账，小二收钱，找钱，然后还是迅速闪人，干其他活。\n\n**这个唯一的店小二的能力被发挥到了极致，一刻不停，闪电般的在饭店里跑来跑去，因为老板明确的告诉他：不要等！**\n\nNode.js饭店的基础设施很强大，一旦那些耗时的操作完成，店小二立刻就能知道，飞奔过来马上接着干，如果遇到新的耗时的操作，小二毫不留情的离开。就这么简单，Node.js饭店火了，它同时接待客人的数量大大增加，而服务质量保持基本不变。\n\n这是我杜撰出来的一个不成熟的故事，帮助我来理解Node.js的特点：只用一个线程来处理所有请求，事件驱动编程。\n\n如果我们回过头来再以计算机的视角看一下会更加清楚：\n>店小二：线程\n顾客：http请求\n第一类工作(迎客，找座，下单):在服务器端的代码，能够快速执行\n后厨做菜，客人吃饭：耗时的I/O操作\n后厨大喊一声：上菜：这是一个长时间I/O操作完成的后所发出的事件\n客人说：结账：另外一个长时间I/O操作完成的后所发出的事件\n\n第二类工作(上菜，结账):同样是能快速执行的代码，但是他们需要等待那些耗时的I/O操作完成才能开始，确切的来说，收到了系统发出的事件以后才开始执行。在Node.js中实际上是在回调函数中来执行的\n\n下面是Node.js服务模式的伪代码：\n```javascript\n迎客();\n找座();\n下单();\n后厨处理(\"做菜完成事件\", function() {\n    上菜处理()；\n    客人吃饭(\"吃饭完成事件\", function() {\n        结账处理();\n        送客();\n    });\n});\n```\n\n需要引起注意的是：\n>**后厨处理()**这个函数接受两个参数，一个是事件名，另外一个是匿名的回调函数，事件发生，回调函数才会执行。**客人吃饭()**函数也是类似。\nNode.js使用的JavaScript作为服务器端的编程语言，这种回调的方式对于javascript程序员来说，是非常自然的事情，同时从代码的角度来讲，也显得非常清晰。另外Node.js使用Chrome的V8引擎来执行javascript,效率非常高\n\n\n我们能不能把代码写成这样？\n\n```javascript\n迎客();\n找座();\n下单();\n后厨处理(\"做菜完成事件\", function() {\n    上菜处理()；\n    客人吃饭(\"吃饭完成事件\", function() {\n    \t结账处理();\n    }\n});\n送客();\n```\n\n肯定不行！因为Node.js执行**后厨处理()**函数时，只是安插了一个匿名的回调函数在那里，并不会等待（_非阻塞I/O_），反而马上会执行**客人吃饭()**函数，所以上述的写法会引起逻辑上的错误：还没上菜就开始吃饭了！\n所以写惯了_**顺序阻塞I/O**_的我们需要改变一下思维方式，进入到事件驱动的世界中来。\n\n如果某个操作例如**上菜处理**是个CPU密集型的计算任务，Node.js那个唯一的线程就会忙于执行这个计算任务而被阻塞住，就无法响应其他的请求了，带来的后果很严重，整个服务器都无法响应了！这个时候，需要考虑把这样的代码进行异步处理，也变成node.js所擅长的事件驱动的方式。","source":"_posts/nodejs.md","raw":"---\ntitle: 关于NodeJS的单线程和异步IO\ntags: [nodejs,转载搬运, javascript]\ndate: 2016.06.04\n---\n\n###### 引用文 摘自 IBM 刘欣 个人公众号：码农翻身\n\n美丽的七侠镇上有一条美食街，很多著名的饭店都开在这里，有老字号的Apache,PHP,最近几年火热的Ruby on Rail,还有那些重量级的餐饮集团Websphere,Weblogic等。这些饭店老板根据自己的实力，或多或少的雇佣了一些店小二来招待来客，这些小二干活都非常殷勤，没有一个偷懒耍滑，把顾客招待的舒舒服服，所以平日里饭馆运转的还不错，相安无事。\n但是随着《武林外传》的拍摄和播放，七侠镇旅游业大爆发，游客像潮水一样蜂拥而至，现有的店小二招待不过来了，到了饭点，每家的门前都排起了长队，游客们吃不上饭，个个怨声载道。看到这种情况，有些老板咬了咬牙，在人工费不断上涨的情况下，多雇了一些小二来帮忙，无奈总是赶不上顾客增长的速度。\n\n<!--more-->\n\n某一天有个美国老外来到七侠镇上旅游，也看到了吃不上饭的问题，他仔细分析了一番后发现了一个秘密：原来这些店都采用了同一套叫做“全程贴心服务”的模式，这个模式很有意思：\n\n>客人来了以后，马上有个店小二殷勤迎上去，带着找座位，点菜，给后厨下单\n>由于后厨做菜需要很长时间，店小二就在客人的旁边等着。\n>后厨一摇铃铛，大喊一声：上菜，店小二马上端到客人面前，然后站在一边等着客人吃完\n>客人说：结账，小二收钱，找钱，送客，迎接下一位。\n\n通常这个时候门口都排成了好几百人了！\n这个VIP服务实在是太贴心了！导致的结果很明显，饭店有几个店小二，就只能同时接待几个顾客。(当然，现实中是没有饭店是这么做的，否则就等着关门吧)\n\n老外一声不吭的回去了。\n\n过了几个月，美食一条街上出现了一个巨火无比的饭馆：**Node.js**\n虽然这个饭店中人满为患，可门口竟然没有排队的！\n更让人吃惊的是，这个店里声称：我只需要一个店小二！\n\nNode.js这个美国老外开的饭店确实只用了一个店小二，只不过这个小二干活的方式与众不同，他把所有的工作分为两类：\n> **A**.  马上就能干完的，例如迎客，点菜，找座，下单 等等\n> **B**.  需要等待别人干完才能干的活，例如上菜，结账 等\n\n+ 对 **A** 这个小二马上干活\n+ 对 **B** 店小二不会等待，他只是告诉别人说，你弄完了告诉我一声，我会接着干， 然后马上去做第一类工作\n\n\n>客人来了以后，这个店小二殷勤迎上去，带着找座位，点菜，给后厨下单\n由于后厨做菜需要很长时间，店小二闪电般的离开，去干别的活了，可能是迎客，点菜，找座等，总之是那些不用等待，迅速干完的活。\n后厨大喊一声：上菜，这个小二马上端到客人面前，然后离开，干其他活。\n客人说：结账，小二收钱，找钱，然后还是迅速闪人，干其他活。\n\n**这个唯一的店小二的能力被发挥到了极致，一刻不停，闪电般的在饭店里跑来跑去，因为老板明确的告诉他：不要等！**\n\nNode.js饭店的基础设施很强大，一旦那些耗时的操作完成，店小二立刻就能知道，飞奔过来马上接着干，如果遇到新的耗时的操作，小二毫不留情的离开。就这么简单，Node.js饭店火了，它同时接待客人的数量大大增加，而服务质量保持基本不变。\n\n这是我杜撰出来的一个不成熟的故事，帮助我来理解Node.js的特点：只用一个线程来处理所有请求，事件驱动编程。\n\n如果我们回过头来再以计算机的视角看一下会更加清楚：\n>店小二：线程\n顾客：http请求\n第一类工作(迎客，找座，下单):在服务器端的代码，能够快速执行\n后厨做菜，客人吃饭：耗时的I/O操作\n后厨大喊一声：上菜：这是一个长时间I/O操作完成的后所发出的事件\n客人说：结账：另外一个长时间I/O操作完成的后所发出的事件\n\n第二类工作(上菜，结账):同样是能快速执行的代码，但是他们需要等待那些耗时的I/O操作完成才能开始，确切的来说，收到了系统发出的事件以后才开始执行。在Node.js中实际上是在回调函数中来执行的\n\n下面是Node.js服务模式的伪代码：\n```javascript\n迎客();\n找座();\n下单();\n后厨处理(\"做菜完成事件\", function() {\n    上菜处理()；\n    客人吃饭(\"吃饭完成事件\", function() {\n        结账处理();\n        送客();\n    });\n});\n```\n\n需要引起注意的是：\n>**后厨处理()**这个函数接受两个参数，一个是事件名，另外一个是匿名的回调函数，事件发生，回调函数才会执行。**客人吃饭()**函数也是类似。\nNode.js使用的JavaScript作为服务器端的编程语言，这种回调的方式对于javascript程序员来说，是非常自然的事情，同时从代码的角度来讲，也显得非常清晰。另外Node.js使用Chrome的V8引擎来执行javascript,效率非常高\n\n\n我们能不能把代码写成这样？\n\n```javascript\n迎客();\n找座();\n下单();\n后厨处理(\"做菜完成事件\", function() {\n    上菜处理()；\n    客人吃饭(\"吃饭完成事件\", function() {\n    \t结账处理();\n    }\n});\n送客();\n```\n\n肯定不行！因为Node.js执行**后厨处理()**函数时，只是安插了一个匿名的回调函数在那里，并不会等待（_非阻塞I/O_），反而马上会执行**客人吃饭()**函数，所以上述的写法会引起逻辑上的错误：还没上菜就开始吃饭了！\n所以写惯了_**顺序阻塞I/O**_的我们需要改变一下思维方式，进入到事件驱动的世界中来。\n\n如果某个操作例如**上菜处理**是个CPU密集型的计算任务，Node.js那个唯一的线程就会忙于执行这个计算任务而被阻塞住，就无法响应其他的请求了，带来的后果很严重，整个服务器都无法响应了！这个时候，需要考虑把这样的代码进行异步处理，也变成node.js所擅长的事件驱动的方式。","slug":"nodejs","published":1,"updated":"2016-08-03T13:23:15.308Z","_id":"cipnbu3ea000f8gv4mv2zzqv1","comments":1,"layout":"post","photos":[],"link":"","content":"<h6 id=\"引用文-摘自-IBM-刘欣-个人公众号：码农翻身\"><a href=\"#引用文-摘自-IBM-刘欣-个人公众号：码农翻身\" class=\"headerlink\" title=\"引用文 摘自 IBM 刘欣 个人公众号：码农翻身\"></a>引用文 摘自 IBM 刘欣 个人公众号：码农翻身</h6><p>美丽的七侠镇上有一条美食街，很多著名的饭店都开在这里，有老字号的Apache,PHP,最近几年火热的Ruby on Rail,还有那些重量级的餐饮集团Websphere,Weblogic等。这些饭店老板根据自己的实力，或多或少的雇佣了一些店小二来招待来客，这些小二干活都非常殷勤，没有一个偷懒耍滑，把顾客招待的舒舒服服，所以平日里饭馆运转的还不错，相安无事。<br>但是随着《武林外传》的拍摄和播放，七侠镇旅游业大爆发，游客像潮水一样蜂拥而至，现有的店小二招待不过来了，到了饭点，每家的门前都排起了长队，游客们吃不上饭，个个怨声载道。看到这种情况，有些老板咬了咬牙，在人工费不断上涨的情况下，多雇了一些小二来帮忙，无奈总是赶不上顾客增长的速度。</p>\n<a id=\"more\"></a>\n<p>某一天有个美国老外来到七侠镇上旅游，也看到了吃不上饭的问题，他仔细分析了一番后发现了一个秘密：原来这些店都采用了同一套叫做“全程贴心服务”的模式，这个模式很有意思：</p>\n<blockquote>\n<p>客人来了以后，马上有个店小二殷勤迎上去，带着找座位，点菜，给后厨下单<br>由于后厨做菜需要很长时间，店小二就在客人的旁边等着。<br>后厨一摇铃铛，大喊一声：上菜，店小二马上端到客人面前，然后站在一边等着客人吃完<br>客人说：结账，小二收钱，找钱，送客，迎接下一位。</p>\n</blockquote>\n<p>通常这个时候门口都排成了好几百人了！<br>这个VIP服务实在是太贴心了！导致的结果很明显，饭店有几个店小二，就只能同时接待几个顾客。(当然，现实中是没有饭店是这么做的，否则就等着关门吧)</p>\n<p>老外一声不吭的回去了。</p>\n<p>过了几个月，美食一条街上出现了一个巨火无比的饭馆：<strong>Node.js</strong><br>虽然这个饭店中人满为患，可门口竟然没有排队的！<br>更让人吃惊的是，这个店里声称：我只需要一个店小二！</p>\n<p>Node.js这个美国老外开的饭店确实只用了一个店小二，只不过这个小二干活的方式与众不同，他把所有的工作分为两类：</p>\n<blockquote>\n<p><strong>A</strong>.  马上就能干完的，例如迎客，点菜，找座，下单 等等<br><strong>B</strong>.  需要等待别人干完才能干的活，例如上菜，结账 等</p>\n</blockquote>\n<ul>\n<li>对 <strong>A</strong> 这个小二马上干活</li>\n<li>对 <strong>B</strong> 店小二不会等待，他只是告诉别人说，你弄完了告诉我一声，我会接着干， 然后马上去做第一类工作</li>\n</ul>\n<blockquote>\n<p>客人来了以后，这个店小二殷勤迎上去，带着找座位，点菜，给后厨下单<br>由于后厨做菜需要很长时间，店小二闪电般的离开，去干别的活了，可能是迎客，点菜，找座等，总之是那些不用等待，迅速干完的活。<br>后厨大喊一声：上菜，这个小二马上端到客人面前，然后离开，干其他活。<br>客人说：结账，小二收钱，找钱，然后还是迅速闪人，干其他活。</p>\n</blockquote>\n<p><strong>这个唯一的店小二的能力被发挥到了极致，一刻不停，闪电般的在饭店里跑来跑去，因为老板明确的告诉他：不要等！</strong></p>\n<p>Node.js饭店的基础设施很强大，一旦那些耗时的操作完成，店小二立刻就能知道，飞奔过来马上接着干，如果遇到新的耗时的操作，小二毫不留情的离开。就这么简单，Node.js饭店火了，它同时接待客人的数量大大增加，而服务质量保持基本不变。</p>\n<p>这是我杜撰出来的一个不成熟的故事，帮助我来理解Node.js的特点：只用一个线程来处理所有请求，事件驱动编程。</p>\n<p>如果我们回过头来再以计算机的视角看一下会更加清楚：</p>\n<blockquote>\n<p>店小二：线程<br>顾客：http请求<br>第一类工作(迎客，找座，下单):在服务器端的代码，能够快速执行<br>后厨做菜，客人吃饭：耗时的I/O操作<br>后厨大喊一声：上菜：这是一个长时间I/O操作完成的后所发出的事件<br>客人说：结账：另外一个长时间I/O操作完成的后所发出的事件</p>\n</blockquote>\n<p>第二类工作(上菜，结账):同样是能快速执行的代码，但是他们需要等待那些耗时的I/O操作完成才能开始，确切的来说，收到了系统发出的事件以后才开始执行。在Node.js中实际上是在回调函数中来执行的</p>\n<p>下面是Node.js服务模式的伪代码：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">迎客();</span><br><span class=\"line\">找座();</span><br><span class=\"line\">下单();</span><br><span class=\"line\">后厨处理(<span class=\"string\">\"做菜完成事件\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    上菜处理()；</span><br><span class=\"line\">    客人吃饭(<span class=\"string\">\"吃饭完成事件\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        结账处理();</span><br><span class=\"line\">        送客();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>需要引起注意的是：</p>\n<blockquote>\n<p><strong>后厨处理()</strong>这个函数接受两个参数，一个是事件名，另外一个是匿名的回调函数，事件发生，回调函数才会执行。<strong>客人吃饭()</strong>函数也是类似。<br>Node.js使用的JavaScript作为服务器端的编程语言，这种回调的方式对于javascript程序员来说，是非常自然的事情，同时从代码的角度来讲，也显得非常清晰。另外Node.js使用Chrome的V8引擎来执行javascript,效率非常高</p>\n</blockquote>\n<p>我们能不能把代码写成这样？</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">迎客();</span><br><span class=\"line\">找座();</span><br><span class=\"line\">下单();</span><br><span class=\"line\">后厨处理(<span class=\"string\">\"做菜完成事件\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    上菜处理()；</span><br><span class=\"line\">    客人吃饭(<span class=\"string\">\"吃饭完成事件\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    \t结账处理();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">送客();</span><br></pre></td></tr></table></figure>\n<p>肯定不行！因为Node.js执行<strong>后厨处理()</strong>函数时，只是安插了一个匿名的回调函数在那里，并不会等待（<em>非阻塞I/O</em>），反而马上会执行<strong>客人吃饭()</strong>函数，所以上述的写法会引起逻辑上的错误：还没上菜就开始吃饭了！<br>所以写惯了<em><strong>顺序阻塞I/O</strong></em>的我们需要改变一下思维方式，进入到事件驱动的世界中来。</p>\n<p>如果某个操作例如<strong>上菜处理</strong>是个CPU密集型的计算任务，Node.js那个唯一的线程就会忙于执行这个计算任务而被阻塞住，就无法响应其他的请求了，带来的后果很严重，整个服务器都无法响应了！这个时候，需要考虑把这样的代码进行异步处理，也变成node.js所擅长的事件驱动的方式。</p>\n","excerpt":"<h6 id=\"引用文-摘自-IBM-刘欣-个人公众号：码农翻身\"><a href=\"#引用文-摘自-IBM-刘欣-个人公众号：码农翻身\" class=\"headerlink\" title=\"引用文 摘自 IBM 刘欣 个人公众号：码农翻身\"></a>引用文 摘自 IBM 刘欣 个人公众号：码农翻身</h6><p>美丽的七侠镇上有一条美食街，很多著名的饭店都开在这里，有老字号的Apache,PHP,最近几年火热的Ruby on Rail,还有那些重量级的餐饮集团Websphere,Weblogic等。这些饭店老板根据自己的实力，或多或少的雇佣了一些店小二来招待来客，这些小二干活都非常殷勤，没有一个偷懒耍滑，把顾客招待的舒舒服服，所以平日里饭馆运转的还不错，相安无事。<br>但是随着《武林外传》的拍摄和播放，七侠镇旅游业大爆发，游客像潮水一样蜂拥而至，现有的店小二招待不过来了，到了饭点，每家的门前都排起了长队，游客们吃不上饭，个个怨声载道。看到这种情况，有些老板咬了咬牙，在人工费不断上涨的情况下，多雇了一些小二来帮忙，无奈总是赶不上顾客增长的速度。</p>","more":"<p>某一天有个美国老外来到七侠镇上旅游，也看到了吃不上饭的问题，他仔细分析了一番后发现了一个秘密：原来这些店都采用了同一套叫做“全程贴心服务”的模式，这个模式很有意思：</p>\n<blockquote>\n<p>客人来了以后，马上有个店小二殷勤迎上去，带着找座位，点菜，给后厨下单<br>由于后厨做菜需要很长时间，店小二就在客人的旁边等着。<br>后厨一摇铃铛，大喊一声：上菜，店小二马上端到客人面前，然后站在一边等着客人吃完<br>客人说：结账，小二收钱，找钱，送客，迎接下一位。</p>\n</blockquote>\n<p>通常这个时候门口都排成了好几百人了！<br>这个VIP服务实在是太贴心了！导致的结果很明显，饭店有几个店小二，就只能同时接待几个顾客。(当然，现实中是没有饭店是这么做的，否则就等着关门吧)</p>\n<p>老外一声不吭的回去了。</p>\n<p>过了几个月，美食一条街上出现了一个巨火无比的饭馆：<strong>Node.js</strong><br>虽然这个饭店中人满为患，可门口竟然没有排队的！<br>更让人吃惊的是，这个店里声称：我只需要一个店小二！</p>\n<p>Node.js这个美国老外开的饭店确实只用了一个店小二，只不过这个小二干活的方式与众不同，他把所有的工作分为两类：</p>\n<blockquote>\n<p><strong>A</strong>.  马上就能干完的，例如迎客，点菜，找座，下单 等等<br><strong>B</strong>.  需要等待别人干完才能干的活，例如上菜，结账 等</p>\n</blockquote>\n<ul>\n<li>对 <strong>A</strong> 这个小二马上干活</li>\n<li>对 <strong>B</strong> 店小二不会等待，他只是告诉别人说，你弄完了告诉我一声，我会接着干， 然后马上去做第一类工作</li>\n</ul>\n<blockquote>\n<p>客人来了以后，这个店小二殷勤迎上去，带着找座位，点菜，给后厨下单<br>由于后厨做菜需要很长时间，店小二闪电般的离开，去干别的活了，可能是迎客，点菜，找座等，总之是那些不用等待，迅速干完的活。<br>后厨大喊一声：上菜，这个小二马上端到客人面前，然后离开，干其他活。<br>客人说：结账，小二收钱，找钱，然后还是迅速闪人，干其他活。</p>\n</blockquote>\n<p><strong>这个唯一的店小二的能力被发挥到了极致，一刻不停，闪电般的在饭店里跑来跑去，因为老板明确的告诉他：不要等！</strong></p>\n<p>Node.js饭店的基础设施很强大，一旦那些耗时的操作完成，店小二立刻就能知道，飞奔过来马上接着干，如果遇到新的耗时的操作，小二毫不留情的离开。就这么简单，Node.js饭店火了，它同时接待客人的数量大大增加，而服务质量保持基本不变。</p>\n<p>这是我杜撰出来的一个不成熟的故事，帮助我来理解Node.js的特点：只用一个线程来处理所有请求，事件驱动编程。</p>\n<p>如果我们回过头来再以计算机的视角看一下会更加清楚：</p>\n<blockquote>\n<p>店小二：线程<br>顾客：http请求<br>第一类工作(迎客，找座，下单):在服务器端的代码，能够快速执行<br>后厨做菜，客人吃饭：耗时的I/O操作<br>后厨大喊一声：上菜：这是一个长时间I/O操作完成的后所发出的事件<br>客人说：结账：另外一个长时间I/O操作完成的后所发出的事件</p>\n</blockquote>\n<p>第二类工作(上菜，结账):同样是能快速执行的代码，但是他们需要等待那些耗时的I/O操作完成才能开始，确切的来说，收到了系统发出的事件以后才开始执行。在Node.js中实际上是在回调函数中来执行的</p>\n<p>下面是Node.js服务模式的伪代码：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">迎客();</span><br><span class=\"line\">找座();</span><br><span class=\"line\">下单();</span><br><span class=\"line\">后厨处理(<span class=\"string\">\"做菜完成事件\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    上菜处理()；</span><br><span class=\"line\">    客人吃饭(<span class=\"string\">\"吃饭完成事件\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        结账处理();</span><br><span class=\"line\">        送客();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>需要引起注意的是：</p>\n<blockquote>\n<p><strong>后厨处理()</strong>这个函数接受两个参数，一个是事件名，另外一个是匿名的回调函数，事件发生，回调函数才会执行。<strong>客人吃饭()</strong>函数也是类似。<br>Node.js使用的JavaScript作为服务器端的编程语言，这种回调的方式对于javascript程序员来说，是非常自然的事情，同时从代码的角度来讲，也显得非常清晰。另外Node.js使用Chrome的V8引擎来执行javascript,效率非常高</p>\n</blockquote>\n<p>我们能不能把代码写成这样？</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">迎客();</span><br><span class=\"line\">找座();</span><br><span class=\"line\">下单();</span><br><span class=\"line\">后厨处理(<span class=\"string\">\"做菜完成事件\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    上菜处理()；</span><br><span class=\"line\">    客人吃饭(<span class=\"string\">\"吃饭完成事件\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    \t结账处理();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">送客();</span><br></pre></td></tr></table></figure>\n<p>肯定不行！因为Node.js执行<strong>后厨处理()</strong>函数时，只是安插了一个匿名的回调函数在那里，并不会等待（<em>非阻塞I/O</em>），反而马上会执行<strong>客人吃饭()</strong>函数，所以上述的写法会引起逻辑上的错误：还没上菜就开始吃饭了！<br>所以写惯了<em><strong>顺序阻塞I/O</strong></em>的我们需要改变一下思维方式，进入到事件驱动的世界中来。</p>\n<p>如果某个操作例如<strong>上菜处理</strong>是个CPU密集型的计算任务，Node.js那个唯一的线程就会忙于执行这个计算任务而被阻塞住，就无法响应其他的请求了，带来的后果很严重，整个服务器都无法响应了！这个时候，需要考虑把这样的代码进行异步处理，也变成node.js所擅长的事件驱动的方式。</p>"},{"title":"Simple SVG","date":"2016-06-10T16:00:00.000Z","_content":"\nRecently I works on a [**network visualization solution**](http://www.codeproject.com/Articles/1104741/NET-Canvas-for-Network-visualization) in vb.net language, and want to export the image of my network in svg document format as the high quality publication material. And as the svg image is a kind of XML file, so that by using xml serialization technology, this makes the svg image generates so easily.\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/SVG_TestOutput.png)\nExample svg output on github: https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Datavisualization.Network/SVG_TestOutput.svg\n\nWikipedia: https://en.wikipedia.org/wiki/Scalable_Vector_Graphics\n\n> Scalable Vector Graphics (SVG) is an XML-based vector image format for two-dimensional graphics with support for interactivity and animation. The SVG specification is an open standard developed by the World Wide Web Consortium (W3C) since 1999.\n\n> SVG images and their behaviors are defined in XML text files. This means that they can be searched, indexed, scripted, and compressed. As XML files, SVG images can be created and edited with any text editor, but are more often created with drawing software.\n\n> All major modern web browsers—including Mozilla Firefox, Internet Explorer, Google Chrome, Opera, Safari, and Microsoft Edge—have at least some degree of SVG rendering support.\n\nHere is a tips of how to generate the svg image in a very simple way.\n\n<!--more-->\n\nAs the svg image is a XML document file, so that we can create a xml class object to modelling the SVG image, and then just using xml serialization to creates the SVG images as the high quantity published image for your document.\n\nMajority, the svg just behavior likes the HTML, it can be consists of two major section:\n\n1. Vector Diagram parts to defines the image\n2. CSS styles to tweaks on the diagram styles\n\n## Part1: Vector diagram object\nAs you can treating the svg document as html file, and we can tweaks on the diagram by using CSS, so that we can definite a basically SVG node element in the SVG Xml document:\n\n```vbnet\n    ''' <summary>\n    ''' The basically SVG XML document node, it can be tweaks on the style by using CSS\n    ''' </summary>\n    Public MustInherit Class node\n\n        ''' <summary>\n        ''' CSS style definition\n        ''' </summary>\n        ''' <returns></returns>\n        <XmlAttribute> Public Property style As String\n        ''' <summary>\n        ''' node class id, just like the id in HTML, you can also using this attribute to tweaks on the style by CSS.\n        ''' </summary>\n        ''' <returns></returns>\n        <XmlAttribute> Public Property [class] As String\n\n        Public Overrides Function ToString() As String\n            Return MyClass.GetJson\n        End Function\n    End Class\n```\n\nIn the above code, the **style** property can overrides the global css style or complement the style definition for the specific node object. The **class** property defines the class id of the node element in the XML or HTML, which is can be applied the global css style through this class id property.\nIn my network canvas project, i used circle to visualize node and line object to visualize the edges, and here is the object definition:\n```vbnet\nPublic Class circle : Inherits node\n    <XmlAttribute> Public Property cy As Double\n    <XmlAttribute> Public Property cx As Double\n    <XmlAttribute> Public Property r As Double\n    Public Property title As title\nEnd Class\n\nPublic Class line : Inherits node\n    <XmlAttribute> Public Property y2 As Double\n    <XmlAttribute> Public Property x2 As Double\n    <XmlAttribute> Public Property y1 As Double\n    <XmlAttribute> Public Property x1 As Double\nEnd Class\n```\n\nAlmost all of the diagram object includes the circle and line object that used in the d3js svg is defined in the namespace: **Microsoft.VisualBasic.Imaging.SVG**, and you can found the entire source code at here: **[Microsoft.VisualBasic.Imaging/SVG/Xml.vb](https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Microsoft.VisualBasic.Imaging/SVG/Xml.vb)**.\n\nBy define these graphics diagram object for the xml serialization, that this makes the program generates the svg image by simply using two Linq expression, and here is the code of generates the svg image for my network visualize canvas object:\n\n```vbnet\nImports System.Runtime.CompilerServices\nImports Microsoft.VisualBasic.DataVisualization.Network.Graph\nImports Microsoft.VisualBasic.DataVisualization.Network.Layouts\nImports Microsoft.VisualBasic.Imaging\nImports Microsoft.VisualBasic.Imaging.SVG\nImports Microsoft.VisualBasic.Imaging.SVG.CSS\nImports Microsoft.VisualBasic.Language\nImports Microsoft.VisualBasic.MarkupLanguage.HTML\nImports Microsoft.VisualBasic.Language.UnixBash\nImports Microsoft.VisualBasic.DataVisualization.Network.Layouts.Interfaces\n\n''' <summary>\n'''\n''' </summary>\n''' <param name=\"graph\"></param>\n''' <param name=\"style\">Default value is <see cref=\"DefaultStyle\"/></param>\n''' <param name=\"size\">The export canvas size</param>\n''' <returns></returns>\n<Extension>\nPublic Function ToSVG(graph As NetworkGraph, size As Size, Optional style As CSS.DirectedForceGraph = Nothing) As SVGXml\n    Dim rect As New Rectangle(New Point, size)\n    Dim nodes As SVG.circle() =\n        LinqAPI.Exec(Of SVG.circle) <= From n As Graph.Node\n                                       In graph.nodes\n                                       Let pos As Point = Renderer.GraphToScreen(TryCast(n.Data.initialPostion, FDGVector2), rect)\n                                       Let c As Color = If(\n                                           TypeOf n.Data.Color Is SolidBrush,\n                                           DirectCast(n.Data.Color, SolidBrush).Color,\n                                           Color.Black)\n                                       Let r As Single = n.__getRadius\n                                       Let pt = New Point(CInt(pos.X - r / 2), CInt(pos.Y - r / 2))\n                                       Select New circle With {\n                                           .class = \"node\",\n                                           .cx = pt.X,\n                                           .cy = pt.Y,\n                                           .r = r,\n                                           .style = $\"fill: rgb({c.R}, {c.G}, {c.B});\"\n                                       }\n    Dim links As line() =\n        LinqAPI.Exec(Of line) <= From edge As Edge\n                                 In graph.edges\n                                 Let source As Graph.Node = edge.Source\n                                 Let target As Graph.Node = edge.Target\n                                 Let pts As Point = Renderer.GraphToScreen(TryCast(source.Data.initialPostion, FDGVector2), rect)\n                                 Let ptt As Point = Renderer.GraphToScreen(TryCast(target.Data.initialPostion, FDGVector2), rect)\n                                 Let rs As Single = source.__getRadius / 2,\n                                     rt As Single = target.__getRadius / 2\n                                 Select New line With {\n                                     .class = \"link\",\n                                     .x1 = pts.X - rs,\n                                     .x2 = ptt.X - rt,\n                                     .y1 = pts.Y - rs,\n                                     .y2 = ptt.Y - rt\n                                 }\n    Dim svg As New SVGXml With {\n        .defs = New CSSStyles With {\n            .styles = {\n                New XmlMeta.CSS With {\n                    .style = If(style Is Nothing, DefaultStyle(), style).ToString\n                }\n            }\n        },\n        .width = size.Width & \"px\",\n        .height = size.Height & \"px\",\n        .lines = links,\n        .circles = nodes,\n        .fill = \"#dbf3ff\"\n    }\n\n    Return svg\nEnd Function\n```\n\n## Part2: CSS style\nThe svg CSS can be define using HTML css object in VisualBasic:\n\n```vbnet\nPublic Class CSSStyles\n    <XmlElement(\"style\")> Public Property styles As XmlMeta.CSS()\nEnd Class\n```\n\nAnd the **XmlMeta.CSS** object is a simple object define the css styles data in namespace [Microsoft.VisualBasic.HTML.XmlMeta](https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/DocumentFormats/VB_HTML/VB_HTML/HTML/Xml/Meta.vb):\n\n```vbnet\nImports System.Xml.Serialization\nImports Microsoft.VisualBasic.Serialization\n\nNamespace HTML.XmlMeta\n\n    Public Class CSS\n\n        <XmlAttribute> Public Property type As String\n            Get\n                Return \"text/css\"\n            End Get\n            Set(value As String)\n                ' ReadOnly, Do Nothing\n            End Set\n        End Property\n\n        <XmlText> Public Property style As String\n\n        Public Overrides Function ToString() As String\n            Return Me.GetJson\n        End Function\n    End Class\nEnd Namespace\n```\n\nDefine the CSS style is based on your specific application situation, and here is the CSS generated code for the network canvas objects in my work: nodes and edges:\n\n```vbnet\nImports System.Text\nImports Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps\nImports Microsoft.VisualBasic.Language\nImports Microsoft.VisualBasic.MarkupLanguage.HTML\n\nNamespace SVG.CSS\n\n    ''' <summary>\n    ''' Style generator for the value of <see cref=\"XmlMeta.CSS.style\"/>\n    ''' </summary>\n    Public Class DirectedForceGraph\n        Public Property node As CssValue\n        Public Property link As CssValue\n\n        Public Overrides Function ToString() As String\n            Dim sb As New StringBuilder\n\n            Call sb.AppendLine(\".node {\")\n            Call sb.AppendLine(node.ToString)\n            Call sb.AppendLine(\"}\")\n            Call sb.AppendLine(\".link {\")\n            Call sb.AppendLine(link.ToString)\n            Call sb.AppendLine(\"}\")\n\n            Return sb.ToString\n        End Function\n    End Class\n\n    Public Class CssValue : Inherits ClassObject\n        <DataFrameColumn> Public Property stroke As String\n        <DataFrameColumn(\"stroke-width\")> Public Property strokeWidth As String\n        <DataFrameColumn(\"stroke-opacity\")> Public Property strokeOpacity As String\n        <DataFrameColumn> Public Property opacity As String\n\n        Public Overrides Function ToString() As String\n            Dim sb As New StringBuilder\n\n            For Each prop In DataFrameColumnAttribute.LoadMapping(Of CssValue).Values\n                Dim value As Object = prop.GetValue(Me)\n                If Not value Is Nothing Then\n                    Call sb.AppendLine(\"    \" & $\"{prop.Identity}: {Scripting.ToString(value)};\")\n                End If\n            Next\n\n            Return sb.ToString\n        End Function\n    End Class\nEnd Namespace\n```\n\nWhich it defines the HTML element styles, and this HTML CSS definition is also works in SVG. The source show above generates such CSS definition for rendering the elements which it has a class id named **\"node\" or \"link\"**:\n\n```java\n    Public Function DefaultStyle() As CSS.DirectedForceGraph\n        Return New DirectedForceGraph With {\n            .link = New CssValue With {\n                .stroke = \"#CCC\",\n                .strokeOpacity = \"0.85\",\n                .strokeWidth = \"6\"\n            },\n            .node = New CssValue With {\n                .strokeWidth = \"0.5px\",\n                .strokeOpacity = \"0.8\",\n                .stroke = \"#FFF\",\n                .opacity = \"0.85\"\n            }\n        }\n    End Function\n```\n```html\n<defs>\n    <style type=\"text/css\">\n.node {\n    opacity: 0.85;\n    stroke: #FFF;\n    strokeOpacity: 0.8;\n    strokeWidth: 0.5px;\n}\n.link {\n    stroke: #CCC;\n    strokeOpacity: 0.85;\n    strokeWidth: 6;\n}\n</style>\n</defs>\n\n...\n<circle style=\"fill: rgb(176, 196, 222);\" class=\"node\" cy=\"356\" cx=\"1118\" r=\"10\" />\n<line class=\"link\" y2=\"967\" x2=\"1014\" y1=\"997\" x1=\"1047\" />\n```\n\n\n## Save the SVG document\n\nSo that we can define a basically svg document object consist with these two part of data: which it has a css style property named defs and inherits from graphics object, which its element name in svg is g and contains the property definition of graphics diagram objects, such as circles, lines, rectangle, texts, etc:\n```vbnet\n''' <summary>\n''' The svg vector graphics in Xml document format.\n''' </summary>\n<XmlType(\"svg\")> Public Class SVGXml : Inherits g\n    Implements ISaveHandle\n\n#Region \"xml root property\"\n    <XmlAttribute> Public Property width As String\n    <XmlAttribute> Public Property height As String\n    <XmlAttribute> Public Property version As String\n#End Region\n\n    ''' <summary>\n    ''' Style definition of the xml node in this svg document.\n    ''' you can define the style by using css and set the class\n    ''' attribute for the specific node to controls the\n    ''' visualize style.\n    ''' </summary>\n    ''' <returns></returns>\n    Public Property defs As CSSStyles\n......\nEnd Class\n\nPublic Class g : Inherits node\n    .......\n    <XmlElement(\"line\")> Public Property lines As line()\n    <XmlElement(\"circle\")> Public Property circles As circle()\n    <XmlAttribute> Public Property fill As String\nEnd Class\n```\nDue to the reason of xml serialization in the vb.net is in the utf-16 encoding and using the default xml namespace, so that we should manually modify the xml encodings to utf-8, modified the xml namespace to svg namespace: http://www.w3.org/2000/svg, and add a xlink namespace from: http://www.w3.org/1999/xlink.\n\nHere is the code example of save the SVG xml document:\n\n```vbnet\n''' <summary>\n''' Save this svg document object into the file system.\n''' </summary>\n''' <param name=\"Path\"></param>\n''' <param name=\"encoding\"></param>\n''' <returns></returns>\nPrivate Function SaveAsXml(Optional Path As String = \"\", Optional encoding As Encoding = Nothing) As Boolean Implements ISaveHandle.Save\n    Dim xml As New XmlDoc(Me.GetXml)\n    xml.encoding = XmlEncodings.UTF8\n    xml.standalone = False\n    xml.xmlns.Set(\"xlink\", \"http://www.w3.org/1999/xlink\")\n    xml.xmlns.xmlns = \"http://www.w3.org/2000/svg\"\n\n    Return xml.SaveTo(Path, encoding)\nEnd Function\n\n''' <summary>\n''' Save this svg document object into the file system.\n''' </summary>\n''' <param name=\"Path\"></param>\n''' <param name=\"encoding\"></param>\n''' <returns></returns>\nPublic Function SaveAsXml(Optional Path As String = \"\", Optional encoding As Encodings = Encodings.UTF8) As Boolean Implements ISaveHandle.Save\n    Return SaveAsXml(Path, encoding.GetEncodings)\nEnd Function\n```\n\nAfter the xml file save operation, you can click on your generated svg image and displayed in your browser:\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/2016-06-11.png)","source":"_posts/simple_svg.md","raw":"---\ntitle: Simple SVG\ntags: [vb.net, note, svg, document, d3js]\ndate: 2016-06-11\n---\n\nRecently I works on a [**network visualization solution**](http://www.codeproject.com/Articles/1104741/NET-Canvas-for-Network-visualization) in vb.net language, and want to export the image of my network in svg document format as the high quality publication material. And as the svg image is a kind of XML file, so that by using xml serialization technology, this makes the svg image generates so easily.\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/SVG_TestOutput.png)\nExample svg output on github: https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Datavisualization.Network/SVG_TestOutput.svg\n\nWikipedia: https://en.wikipedia.org/wiki/Scalable_Vector_Graphics\n\n> Scalable Vector Graphics (SVG) is an XML-based vector image format for two-dimensional graphics with support for interactivity and animation. The SVG specification is an open standard developed by the World Wide Web Consortium (W3C) since 1999.\n\n> SVG images and their behaviors are defined in XML text files. This means that they can be searched, indexed, scripted, and compressed. As XML files, SVG images can be created and edited with any text editor, but are more often created with drawing software.\n\n> All major modern web browsers—including Mozilla Firefox, Internet Explorer, Google Chrome, Opera, Safari, and Microsoft Edge—have at least some degree of SVG rendering support.\n\nHere is a tips of how to generate the svg image in a very simple way.\n\n<!--more-->\n\nAs the svg image is a XML document file, so that we can create a xml class object to modelling the SVG image, and then just using xml serialization to creates the SVG images as the high quantity published image for your document.\n\nMajority, the svg just behavior likes the HTML, it can be consists of two major section:\n\n1. Vector Diagram parts to defines the image\n2. CSS styles to tweaks on the diagram styles\n\n## Part1: Vector diagram object\nAs you can treating the svg document as html file, and we can tweaks on the diagram by using CSS, so that we can definite a basically SVG node element in the SVG Xml document:\n\n```vbnet\n    ''' <summary>\n    ''' The basically SVG XML document node, it can be tweaks on the style by using CSS\n    ''' </summary>\n    Public MustInherit Class node\n\n        ''' <summary>\n        ''' CSS style definition\n        ''' </summary>\n        ''' <returns></returns>\n        <XmlAttribute> Public Property style As String\n        ''' <summary>\n        ''' node class id, just like the id in HTML, you can also using this attribute to tweaks on the style by CSS.\n        ''' </summary>\n        ''' <returns></returns>\n        <XmlAttribute> Public Property [class] As String\n\n        Public Overrides Function ToString() As String\n            Return MyClass.GetJson\n        End Function\n    End Class\n```\n\nIn the above code, the **style** property can overrides the global css style or complement the style definition for the specific node object. The **class** property defines the class id of the node element in the XML or HTML, which is can be applied the global css style through this class id property.\nIn my network canvas project, i used circle to visualize node and line object to visualize the edges, and here is the object definition:\n```vbnet\nPublic Class circle : Inherits node\n    <XmlAttribute> Public Property cy As Double\n    <XmlAttribute> Public Property cx As Double\n    <XmlAttribute> Public Property r As Double\n    Public Property title As title\nEnd Class\n\nPublic Class line : Inherits node\n    <XmlAttribute> Public Property y2 As Double\n    <XmlAttribute> Public Property x2 As Double\n    <XmlAttribute> Public Property y1 As Double\n    <XmlAttribute> Public Property x1 As Double\nEnd Class\n```\n\nAlmost all of the diagram object includes the circle and line object that used in the d3js svg is defined in the namespace: **Microsoft.VisualBasic.Imaging.SVG**, and you can found the entire source code at here: **[Microsoft.VisualBasic.Imaging/SVG/Xml.vb](https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Microsoft.VisualBasic.Imaging/SVG/Xml.vb)**.\n\nBy define these graphics diagram object for the xml serialization, that this makes the program generates the svg image by simply using two Linq expression, and here is the code of generates the svg image for my network visualize canvas object:\n\n```vbnet\nImports System.Runtime.CompilerServices\nImports Microsoft.VisualBasic.DataVisualization.Network.Graph\nImports Microsoft.VisualBasic.DataVisualization.Network.Layouts\nImports Microsoft.VisualBasic.Imaging\nImports Microsoft.VisualBasic.Imaging.SVG\nImports Microsoft.VisualBasic.Imaging.SVG.CSS\nImports Microsoft.VisualBasic.Language\nImports Microsoft.VisualBasic.MarkupLanguage.HTML\nImports Microsoft.VisualBasic.Language.UnixBash\nImports Microsoft.VisualBasic.DataVisualization.Network.Layouts.Interfaces\n\n''' <summary>\n'''\n''' </summary>\n''' <param name=\"graph\"></param>\n''' <param name=\"style\">Default value is <see cref=\"DefaultStyle\"/></param>\n''' <param name=\"size\">The export canvas size</param>\n''' <returns></returns>\n<Extension>\nPublic Function ToSVG(graph As NetworkGraph, size As Size, Optional style As CSS.DirectedForceGraph = Nothing) As SVGXml\n    Dim rect As New Rectangle(New Point, size)\n    Dim nodes As SVG.circle() =\n        LinqAPI.Exec(Of SVG.circle) <= From n As Graph.Node\n                                       In graph.nodes\n                                       Let pos As Point = Renderer.GraphToScreen(TryCast(n.Data.initialPostion, FDGVector2), rect)\n                                       Let c As Color = If(\n                                           TypeOf n.Data.Color Is SolidBrush,\n                                           DirectCast(n.Data.Color, SolidBrush).Color,\n                                           Color.Black)\n                                       Let r As Single = n.__getRadius\n                                       Let pt = New Point(CInt(pos.X - r / 2), CInt(pos.Y - r / 2))\n                                       Select New circle With {\n                                           .class = \"node\",\n                                           .cx = pt.X,\n                                           .cy = pt.Y,\n                                           .r = r,\n                                           .style = $\"fill: rgb({c.R}, {c.G}, {c.B});\"\n                                       }\n    Dim links As line() =\n        LinqAPI.Exec(Of line) <= From edge As Edge\n                                 In graph.edges\n                                 Let source As Graph.Node = edge.Source\n                                 Let target As Graph.Node = edge.Target\n                                 Let pts As Point = Renderer.GraphToScreen(TryCast(source.Data.initialPostion, FDGVector2), rect)\n                                 Let ptt As Point = Renderer.GraphToScreen(TryCast(target.Data.initialPostion, FDGVector2), rect)\n                                 Let rs As Single = source.__getRadius / 2,\n                                     rt As Single = target.__getRadius / 2\n                                 Select New line With {\n                                     .class = \"link\",\n                                     .x1 = pts.X - rs,\n                                     .x2 = ptt.X - rt,\n                                     .y1 = pts.Y - rs,\n                                     .y2 = ptt.Y - rt\n                                 }\n    Dim svg As New SVGXml With {\n        .defs = New CSSStyles With {\n            .styles = {\n                New XmlMeta.CSS With {\n                    .style = If(style Is Nothing, DefaultStyle(), style).ToString\n                }\n            }\n        },\n        .width = size.Width & \"px\",\n        .height = size.Height & \"px\",\n        .lines = links,\n        .circles = nodes,\n        .fill = \"#dbf3ff\"\n    }\n\n    Return svg\nEnd Function\n```\n\n## Part2: CSS style\nThe svg CSS can be define using HTML css object in VisualBasic:\n\n```vbnet\nPublic Class CSSStyles\n    <XmlElement(\"style\")> Public Property styles As XmlMeta.CSS()\nEnd Class\n```\n\nAnd the **XmlMeta.CSS** object is a simple object define the css styles data in namespace [Microsoft.VisualBasic.HTML.XmlMeta](https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/DocumentFormats/VB_HTML/VB_HTML/HTML/Xml/Meta.vb):\n\n```vbnet\nImports System.Xml.Serialization\nImports Microsoft.VisualBasic.Serialization\n\nNamespace HTML.XmlMeta\n\n    Public Class CSS\n\n        <XmlAttribute> Public Property type As String\n            Get\n                Return \"text/css\"\n            End Get\n            Set(value As String)\n                ' ReadOnly, Do Nothing\n            End Set\n        End Property\n\n        <XmlText> Public Property style As String\n\n        Public Overrides Function ToString() As String\n            Return Me.GetJson\n        End Function\n    End Class\nEnd Namespace\n```\n\nDefine the CSS style is based on your specific application situation, and here is the CSS generated code for the network canvas objects in my work: nodes and edges:\n\n```vbnet\nImports System.Text\nImports Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps\nImports Microsoft.VisualBasic.Language\nImports Microsoft.VisualBasic.MarkupLanguage.HTML\n\nNamespace SVG.CSS\n\n    ''' <summary>\n    ''' Style generator for the value of <see cref=\"XmlMeta.CSS.style\"/>\n    ''' </summary>\n    Public Class DirectedForceGraph\n        Public Property node As CssValue\n        Public Property link As CssValue\n\n        Public Overrides Function ToString() As String\n            Dim sb As New StringBuilder\n\n            Call sb.AppendLine(\".node {\")\n            Call sb.AppendLine(node.ToString)\n            Call sb.AppendLine(\"}\")\n            Call sb.AppendLine(\".link {\")\n            Call sb.AppendLine(link.ToString)\n            Call sb.AppendLine(\"}\")\n\n            Return sb.ToString\n        End Function\n    End Class\n\n    Public Class CssValue : Inherits ClassObject\n        <DataFrameColumn> Public Property stroke As String\n        <DataFrameColumn(\"stroke-width\")> Public Property strokeWidth As String\n        <DataFrameColumn(\"stroke-opacity\")> Public Property strokeOpacity As String\n        <DataFrameColumn> Public Property opacity As String\n\n        Public Overrides Function ToString() As String\n            Dim sb As New StringBuilder\n\n            For Each prop In DataFrameColumnAttribute.LoadMapping(Of CssValue).Values\n                Dim value As Object = prop.GetValue(Me)\n                If Not value Is Nothing Then\n                    Call sb.AppendLine(\"    \" & $\"{prop.Identity}: {Scripting.ToString(value)};\")\n                End If\n            Next\n\n            Return sb.ToString\n        End Function\n    End Class\nEnd Namespace\n```\n\nWhich it defines the HTML element styles, and this HTML CSS definition is also works in SVG. The source show above generates such CSS definition for rendering the elements which it has a class id named **\"node\" or \"link\"**:\n\n```java\n    Public Function DefaultStyle() As CSS.DirectedForceGraph\n        Return New DirectedForceGraph With {\n            .link = New CssValue With {\n                .stroke = \"#CCC\",\n                .strokeOpacity = \"0.85\",\n                .strokeWidth = \"6\"\n            },\n            .node = New CssValue With {\n                .strokeWidth = \"0.5px\",\n                .strokeOpacity = \"0.8\",\n                .stroke = \"#FFF\",\n                .opacity = \"0.85\"\n            }\n        }\n    End Function\n```\n```html\n<defs>\n    <style type=\"text/css\">\n.node {\n    opacity: 0.85;\n    stroke: #FFF;\n    strokeOpacity: 0.8;\n    strokeWidth: 0.5px;\n}\n.link {\n    stroke: #CCC;\n    strokeOpacity: 0.85;\n    strokeWidth: 6;\n}\n</style>\n</defs>\n\n...\n<circle style=\"fill: rgb(176, 196, 222);\" class=\"node\" cy=\"356\" cx=\"1118\" r=\"10\" />\n<line class=\"link\" y2=\"967\" x2=\"1014\" y1=\"997\" x1=\"1047\" />\n```\n\n\n## Save the SVG document\n\nSo that we can define a basically svg document object consist with these two part of data: which it has a css style property named defs and inherits from graphics object, which its element name in svg is g and contains the property definition of graphics diagram objects, such as circles, lines, rectangle, texts, etc:\n```vbnet\n''' <summary>\n''' The svg vector graphics in Xml document format.\n''' </summary>\n<XmlType(\"svg\")> Public Class SVGXml : Inherits g\n    Implements ISaveHandle\n\n#Region \"xml root property\"\n    <XmlAttribute> Public Property width As String\n    <XmlAttribute> Public Property height As String\n    <XmlAttribute> Public Property version As String\n#End Region\n\n    ''' <summary>\n    ''' Style definition of the xml node in this svg document.\n    ''' you can define the style by using css and set the class\n    ''' attribute for the specific node to controls the\n    ''' visualize style.\n    ''' </summary>\n    ''' <returns></returns>\n    Public Property defs As CSSStyles\n......\nEnd Class\n\nPublic Class g : Inherits node\n    .......\n    <XmlElement(\"line\")> Public Property lines As line()\n    <XmlElement(\"circle\")> Public Property circles As circle()\n    <XmlAttribute> Public Property fill As String\nEnd Class\n```\nDue to the reason of xml serialization in the vb.net is in the utf-16 encoding and using the default xml namespace, so that we should manually modify the xml encodings to utf-8, modified the xml namespace to svg namespace: http://www.w3.org/2000/svg, and add a xlink namespace from: http://www.w3.org/1999/xlink.\n\nHere is the code example of save the SVG xml document:\n\n```vbnet\n''' <summary>\n''' Save this svg document object into the file system.\n''' </summary>\n''' <param name=\"Path\"></param>\n''' <param name=\"encoding\"></param>\n''' <returns></returns>\nPrivate Function SaveAsXml(Optional Path As String = \"\", Optional encoding As Encoding = Nothing) As Boolean Implements ISaveHandle.Save\n    Dim xml As New XmlDoc(Me.GetXml)\n    xml.encoding = XmlEncodings.UTF8\n    xml.standalone = False\n    xml.xmlns.Set(\"xlink\", \"http://www.w3.org/1999/xlink\")\n    xml.xmlns.xmlns = \"http://www.w3.org/2000/svg\"\n\n    Return xml.SaveTo(Path, encoding)\nEnd Function\n\n''' <summary>\n''' Save this svg document object into the file system.\n''' </summary>\n''' <param name=\"Path\"></param>\n''' <param name=\"encoding\"></param>\n''' <returns></returns>\nPublic Function SaveAsXml(Optional Path As String = \"\", Optional encoding As Encodings = Encodings.UTF8) As Boolean Implements ISaveHandle.Save\n    Return SaveAsXml(Path, encoding.GetEncodings)\nEnd Function\n```\n\nAfter the xml file save operation, you can click on your generated svg image and displayed in your browser:\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/2016-06-11.png)","slug":"simple_svg","published":1,"updated":"2016-06-11T05:00:00.313Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cipnbu3eg000h8gv4oob3mwty","content":"<p>Recently I works on a <a href=\"http://www.codeproject.com/Articles/1104741/NET-Canvas-for-Network-visualization\" target=\"_blank\" rel=\"external\"><strong>network visualization solution</strong></a> in vb.net language, and want to export the image of my network in svg document format as the high quality publication material. And as the svg image is a kind of XML file, so that by using xml serialization technology, this makes the svg image generates so easily.</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/SVG_TestOutput.png\" alt=\"\"><br>Example svg output on github: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Datavisualization.Network/SVG_TestOutput.svg\" target=\"_blank\" rel=\"external\">https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Datavisualization.Network/SVG_TestOutput.svg</a></p>\n<p>Wikipedia: <a href=\"https://en.wikipedia.org/wiki/Scalable_Vector_Graphics\" target=\"_blank\" rel=\"external\">https://en.wikipedia.org/wiki/Scalable_Vector_Graphics</a></p>\n<blockquote>\n<p>Scalable Vector Graphics (SVG) is an XML-based vector image format for two-dimensional graphics with support for interactivity and animation. The SVG specification is an open standard developed by the World Wide Web Consortium (W3C) since 1999.</p>\n<p>SVG images and their behaviors are defined in XML text files. This means that they can be searched, indexed, scripted, and compressed. As XML files, SVG images can be created and edited with any text editor, but are more often created with drawing software.</p>\n<p>All major modern web browsers—including Mozilla Firefox, Internet Explorer, Google Chrome, Opera, Safari, and Microsoft Edge—have at least some degree of SVG rendering support.</p>\n</blockquote>\n<p>Here is a tips of how to generate the svg image in a very simple way.</p>\n<a id=\"more\"></a>\n<p>As the svg image is a XML document file, so that we can create a xml class object to modelling the SVG image, and then just using xml serialization to creates the SVG images as the high quantity published image for your document.</p>\n<p>Majority, the svg just behavior likes the HTML, it can be consists of two major section:</p>\n<ol>\n<li>Vector Diagram parts to defines the image</li>\n<li>CSS styles to tweaks on the diagram styles</li>\n</ol>\n<h2 id=\"Part1-Vector-diagram-object\"><a href=\"#Part1-Vector-diagram-object\" class=\"headerlink\" title=\"Part1: Vector diagram object\"></a>Part1: Vector diagram object</h2><p>As you can treating the svg document as html file, and we can tweaks on the diagram by using CSS, so that we can definite a basically SVG node element in the SVG Xml document:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> The basically SVG XML document node, it can be tweaks on the style by using CSS</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">MustInherit</span> <span class=\"keyword\">Class</span> node</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> CSS style definition</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    &lt;XmlAttribute&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> style <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> node class id, just like the id in HTML, you can also using this attribute to tweaks on the style by CSS.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    &lt;XmlAttribute&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> [<span class=\"keyword\">class</span>] <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> ToString() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> <span class=\"keyword\">MyClass</span>.GetJson</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<p>In the above code, the <strong>style</strong> property can overrides the global css style or complement the style definition for the specific node object. The <strong>class</strong> property defines the class id of the node element in the XML or HTML, which is can be applied the global css style through this class id property.<br>In my network canvas project, i used circle to visualize node and line object to visualize the edges, and here is the object definition:<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> circle : <span class=\"keyword\">Inherits</span> node</span><br><span class=\"line\">    &lt;XmlAttribute&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> cy <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\">    &lt;XmlAttribute&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> cx <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\">    &lt;XmlAttribute&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> r <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> title <span class=\"keyword\">As</span> title</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> line : <span class=\"keyword\">Inherits</span> node</span><br><span class=\"line\">    &lt;XmlAttribute&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> y2 <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\">    &lt;XmlAttribute&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> x2 <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\">    &lt;XmlAttribute&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> y1 <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\">    &lt;XmlAttribute&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> x1 <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure></p>\n<p>Almost all of the diagram object includes the circle and line object that used in the d3js svg is defined in the namespace: <strong>Microsoft.VisualBasic.Imaging.SVG</strong>, and you can found the entire source code at here: <strong><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Microsoft.VisualBasic.Imaging/SVG/Xml.vb\" target=\"_blank\" rel=\"external\">Microsoft.VisualBasic.Imaging/SVG/Xml.vb</a></strong>.</p>\n<p>By define these graphics diagram object for the xml serialization, that this makes the program generates the svg image by simply using two Linq expression, and here is the code of generates the svg image for my network visualize canvas object:</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Imports System.Runtime.CompilerServices</span><br><span class=\"line\">Imports Microsoft.VisualBasic.DataVisualization.Network.Graph</span><br><span class=\"line\">Imports Microsoft.VisualBasic.DataVisualization.Network.Layouts</span><br><span class=\"line\">Imports Microsoft.VisualBasic.Imaging</span><br><span class=\"line\">Imports Microsoft.VisualBasic.Imaging.SVG</span><br><span class=\"line\">Imports Microsoft.VisualBasic.Imaging.SVG.CSS</span><br><span class=\"line\">Imports Microsoft.VisualBasic.Language</span><br><span class=\"line\">Imports Microsoft.VisualBasic.MarkupLanguage.HTML</span><br><span class=\"line\">Imports Microsoft.VisualBasic.Language.UnixBash</span><br><span class=\"line\">Imports Microsoft.VisualBasic.DataVisualization.Network.Layouts.Interfaces</span><br><span class=\"line\"></span><br><span class=\"line\">''' &lt;summary&gt;</span><br><span class=\"line\">'''</span><br><span class=\"line\">''' &lt;/summary&gt;</span><br><span class=\"line\">''' &lt;param name=\"graph\"&gt;&lt;/param&gt;</span><br><span class=\"line\">''' &lt;param name=\"style\"&gt;Default value is &lt;see cref=\"DefaultStyle\"/&gt;&lt;/param&gt;</span><br><span class=\"line\">''' &lt;param name=\"size\"&gt;The export canvas size&lt;/param&gt;</span><br><span class=\"line\">''' &lt;returns&gt;&lt;/returns&gt;</span><br><span class=\"line\">&lt;Extension&gt;</span><br><span class=\"line\">Public Function ToSVG(graph As NetworkGraph, size As Size, Optional style As CSS.DirectedForceGraph = Nothing) As SVGXml</span><br><span class=\"line\">    Dim rect As New Rectangle(New Point, size)</span><br><span class=\"line\">    Dim nodes As SVG.circle() =</span><br><span class=\"line\">        LinqAPI.Exec(Of SVG.circle) &lt;= From n As Graph.Node</span><br><span class=\"line\">                                       In graph.nodes</span><br><span class=\"line\">                                       Let pos As Point = Renderer.GraphToScreen(TryCast(n.Data.initialPostion, FDGVector2), rect)</span><br><span class=\"line\">                                       Let c As Color = If(</span><br><span class=\"line\">                                           TypeOf n.Data.Color Is SolidBrush,</span><br><span class=\"line\">                                           DirectCast(n.Data.Color, SolidBrush).Color,</span><br><span class=\"line\">                                           Color.Black)</span><br><span class=\"line\">                                       Let r As Single = n.__getRadius</span><br><span class=\"line\">                                       Let pt = New Point(CInt(pos.X - r / 2), CInt(pos.Y - r / 2))</span><br><span class=\"line\">                                       Select New circle With &#123;</span><br><span class=\"line\">                                           .class = \"node\",</span><br><span class=\"line\">                                           .cx = pt.X,</span><br><span class=\"line\">                                           .cy = pt.Y,</span><br><span class=\"line\">                                           .r = r,</span><br><span class=\"line\">                                           .style = $\"fill: rgb(&#123;c.R&#125;, &#123;c.G&#125;, &#123;c.B&#125;);\"</span><br><span class=\"line\">                                       &#125;</span><br><span class=\"line\">    Dim links As line() =</span><br><span class=\"line\">        LinqAPI.Exec(Of line) &lt;= From edge As Edge</span><br><span class=\"line\">                                 In graph.edges</span><br><span class=\"line\">                                 Let source As Graph.Node = edge.Source</span><br><span class=\"line\">                                 Let target As Graph.Node = edge.Target</span><br><span class=\"line\">                                 Let pts As Point = Renderer.GraphToScreen(TryCast(source.Data.initialPostion, FDGVector2), rect)</span><br><span class=\"line\">                                 Let ptt As Point = Renderer.GraphToScreen(TryCast(target.Data.initialPostion, FDGVector2), rect)</span><br><span class=\"line\">                                 Let rs As Single = source.__getRadius / 2,</span><br><span class=\"line\">                                     rt As Single = target.__getRadius / 2</span><br><span class=\"line\">                                 Select New line With &#123;</span><br><span class=\"line\">                                     .class = \"link\",</span><br><span class=\"line\">                                     .x1 = pts.X - rs,</span><br><span class=\"line\">                                     .x2 = ptt.X - rt,</span><br><span class=\"line\">                                     .y1 = pts.Y - rs,</span><br><span class=\"line\">                                     .y2 = ptt.Y - rt</span><br><span class=\"line\">                                 &#125;</span><br><span class=\"line\">    Dim svg As New SVGXml With &#123;</span><br><span class=\"line\">        .defs = New CSSStyles With &#123;</span><br><span class=\"line\">            .styles = &#123;</span><br><span class=\"line\">                New XmlMeta.CSS With &#123;</span><br><span class=\"line\">                    .style = If(style Is Nothing, DefaultStyle(), style).ToString</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        .width = size.Width &amp; \"px\",</span><br><span class=\"line\">        .height = size.Height &amp; \"px\",</span><br><span class=\"line\">        .lines = links,</span><br><span class=\"line\">        .circles = nodes,</span><br><span class=\"line\">        .fill = \"#dbf3ff\"</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    Return svg</span><br><span class=\"line\">End Function</span><br></pre></td></tr></table></figure>\n<h2 id=\"Part2-CSS-style\"><a href=\"#Part2-CSS-style\" class=\"headerlink\" title=\"Part2: CSS style\"></a>Part2: CSS style</h2><p>The svg CSS can be define using HTML css object in VisualBasic:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> CSSStyles</span><br><span class=\"line\">    &lt;XmlElement(<span class=\"string\">\"style\"</span>)&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> styles <span class=\"keyword\">As</span> XmlMeta.CSS()</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<p>And the <strong>XmlMeta.CSS</strong> object is a simple object define the css styles data in namespace <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/DocumentFormats/VB_HTML/VB_HTML/HTML/Xml/Meta.vb\" target=\"_blank\" rel=\"external\">Microsoft.VisualBasic.HTML.XmlMeta</a>:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Imports</span> System.Xml.Serialization</span><br><span class=\"line\"><span class=\"keyword\">Imports</span> Microsoft.VisualBasic.Serialization</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Namespace</span> HTML.XmlMeta</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> CSS</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;XmlAttribute&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> type <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">            <span class=\"keyword\">Get</span></span><br><span class=\"line\">                <span class=\"keyword\">Return</span> <span class=\"string\">\"text/css\"</span></span><br><span class=\"line\">            <span class=\"keyword\">End</span> <span class=\"keyword\">Get</span></span><br><span class=\"line\">            <span class=\"keyword\">Set</span>(value <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>)</span><br><span class=\"line\">                <span class=\"comment\">' ReadOnly, Do Nothing</span></span><br><span class=\"line\">            <span class=\"keyword\">End</span> <span class=\"keyword\">Set</span></span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">Property</span></span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;XmlText&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> style <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">Public</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> ToString() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">            <span class=\"keyword\">Return</span> <span class=\"keyword\">Me</span>.GetJson</span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Namespace</span></span><br></pre></td></tr></table></figure>\n<p>Define the CSS style is based on your specific application situation, and here is the CSS generated code for the network canvas objects in my work: nodes and edges:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Imports</span> System.<span class=\"keyword\">Text</span></span><br><span class=\"line\"><span class=\"keyword\">Imports</span> Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps</span><br><span class=\"line\"><span class=\"keyword\">Imports</span> Microsoft.VisualBasic.Language</span><br><span class=\"line\"><span class=\"keyword\">Imports</span> Microsoft.VisualBasic.MarkupLanguage.HTML</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Namespace</span> SVG.CSS</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Style generator for the value of <span class=\"doctag\">&lt;see cref=\"XmlMeta.CSS.style\"/&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> DirectedForceGraph</span><br><span class=\"line\">        <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> node <span class=\"keyword\">As</span> CssValue</span><br><span class=\"line\">        <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> link <span class=\"keyword\">As</span> CssValue</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">Public</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> ToString() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">            <span class=\"keyword\">Dim</span> sb <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> StringBuilder</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">Call</span> sb.AppendLine(<span class=\"string\">\".node &#123;\"</span>)</span><br><span class=\"line\">            <span class=\"keyword\">Call</span> sb.AppendLine(node.ToString)</span><br><span class=\"line\">            <span class=\"keyword\">Call</span> sb.AppendLine(<span class=\"string\">\"&#125;\"</span>)</span><br><span class=\"line\">            <span class=\"keyword\">Call</span> sb.AppendLine(<span class=\"string\">\".link &#123;\"</span>)</span><br><span class=\"line\">            <span class=\"keyword\">Call</span> sb.AppendLine(link.ToString)</span><br><span class=\"line\">            <span class=\"keyword\">Call</span> sb.AppendLine(<span class=\"string\">\"&#125;\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">Return</span> sb.ToString</span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> CssValue : <span class=\"keyword\">Inherits</span> ClassObject</span><br><span class=\"line\">        &lt;DataFrameColumn&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> stroke <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        &lt;DataFrameColumn(<span class=\"string\">\"stroke-width\"</span>)&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> strokeWidth <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        &lt;DataFrameColumn(<span class=\"string\">\"stroke-opacity\"</span>)&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> strokeOpacity <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        &lt;DataFrameColumn&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> opacity <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">Public</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> ToString() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">            <span class=\"keyword\">Dim</span> sb <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> StringBuilder</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">For</span> <span class=\"keyword\">Each</span> prop <span class=\"keyword\">In</span> DataFrameColumnAttribute.LoadMapping(<span class=\"keyword\">Of</span> CssValue).Values</span><br><span class=\"line\">                <span class=\"keyword\">Dim</span> value <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span> = prop.GetValue(<span class=\"keyword\">Me</span>)</span><br><span class=\"line\">                <span class=\"keyword\">If</span> <span class=\"keyword\">Not</span> value <span class=\"keyword\">Is</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">Then</span></span><br><span class=\"line\">                    <span class=\"keyword\">Call</span> sb.AppendLine(<span class=\"string\">\"    \"</span> &amp; $<span class=\"string\">\"&#123;prop.Identity&#125;: &#123;Scripting.ToString(value)&#125;;\"</span>)</span><br><span class=\"line\">                <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">            <span class=\"keyword\">Next</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">Return</span> sb.ToString</span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Namespace</span></span><br></pre></td></tr></table></figure>\n<p>Which it defines the HTML element styles, and this HTML CSS definition is also works in SVG. The source show above generates such CSS definition for rendering the elements which it has a class id named <strong>“node” or “link”</strong>:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">Public Function <span class=\"title\">DefaultStyle</span><span class=\"params\">()</span> As CSS.DirectedForceGraph</span><br><span class=\"line\">    Return New DirectedForceGraph With </span>&#123;</span><br><span class=\"line\">        .link = New CssValue With &#123;</span><br><span class=\"line\">            .stroke = <span class=\"string\">\"#CCC\"</span>,</span><br><span class=\"line\">            .strokeOpacity = <span class=\"string\">\"0.85\"</span>,</span><br><span class=\"line\">            .strokeWidth = <span class=\"string\">\"6\"</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        .node = New CssValue With &#123;</span><br><span class=\"line\">            .strokeWidth = <span class=\"string\">\"0.5px\"</span>,</span><br><span class=\"line\">            .strokeOpacity = <span class=\"string\">\"0.8\"</span>,</span><br><span class=\"line\">            .stroke = <span class=\"string\">\"#FFF\"</span>,</span><br><span class=\"line\">            .opacity = <span class=\"string\">\"0.85\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">End Function</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">defs</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"undefined\"></span><br><span class=\"line\">.node &#123;</span><br><span class=\"line\">    opacity: 0.85;</span><br><span class=\"line\">    stroke: #FFF;</span><br><span class=\"line\">    strokeOpacity: 0.8;</span><br><span class=\"line\">    strokeWidth: 0.5px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.link &#123;</span><br><span class=\"line\">    stroke: #CCC;</span><br><span class=\"line\">    strokeOpacity: 0.85;</span><br><span class=\"line\">    strokeWidth: 6;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">defs</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">circle</span> <span class=\"attr\">style</span>=<span class=\"string\">\"fill: rgb(176, 196, 222);\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"node\"</span> <span class=\"attr\">cy</span>=<span class=\"string\">\"356\"</span> <span class=\"attr\">cx</span>=<span class=\"string\">\"1118\"</span> <span class=\"attr\">r</span>=<span class=\"string\">\"10\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">line</span> <span class=\"attr\">class</span>=<span class=\"string\">\"link\"</span> <span class=\"attr\">y2</span>=<span class=\"string\">\"967\"</span> <span class=\"attr\">x2</span>=<span class=\"string\">\"1014\"</span> <span class=\"attr\">y1</span>=<span class=\"string\">\"997\"</span> <span class=\"attr\">x1</span>=<span class=\"string\">\"1047\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Save-the-SVG-document\"><a href=\"#Save-the-SVG-document\" class=\"headerlink\" title=\"Save the SVG document\"></a>Save the SVG document</h2><p>So that we can define a basically svg document object consist with these two part of data: which it has a css style property named defs and inherits from graphics object, which its element name in svg is g and contains the property definition of graphics diagram objects, such as circles, lines, rectangle, texts, etc:<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> The svg vector graphics in Xml document format.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">&lt;XmlType(<span class=\"string\">\"svg\"</span>)&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> SVGXml : <span class=\"keyword\">Inherits</span> g</span><br><span class=\"line\">    <span class=\"keyword\">Implements</span> ISaveHandle</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">Region</span> \"xml root property\"</span></span><br><span class=\"line\">    &lt;XmlAttribute&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> width <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">    &lt;XmlAttribute&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> height <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">    &lt;XmlAttribute&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> version <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">End</span> <span class=\"meta-keyword\">Region</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Style definition of the xml node in this svg document.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> you can define the style by using css and set the class</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> attribute for the specific node to controls the</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> visualize style.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> defs <span class=\"keyword\">As</span> CSSStyles</span><br><span class=\"line\">......</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> g : <span class=\"keyword\">Inherits</span> node</span><br><span class=\"line\">    .......</span><br><span class=\"line\">    &lt;XmlElement(<span class=\"string\">\"line\"</span>)&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> lines <span class=\"keyword\">As</span> line()</span><br><span class=\"line\">    &lt;XmlElement(<span class=\"string\">\"circle\"</span>)&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> circles <span class=\"keyword\">As</span> circle()</span><br><span class=\"line\">    &lt;XmlAttribute&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> fill <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure></p>\n<p>Due to the reason of xml serialization in the vb.net is in the utf-16 encoding and using the default xml namespace, so that we should manually modify the xml encodings to utf-8, modified the xml namespace to svg namespace: <a href=\"http://www.w3.org/2000/svg\" target=\"_blank\" rel=\"external\">http://www.w3.org/2000/svg</a>, and add a xlink namespace from: <a href=\"http://www.w3.org/1999/xlink\" target=\"_blank\" rel=\"external\">http://www.w3.org/1999/xlink</a>.</p>\n<p>Here is the code example of save the SVG xml document:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Save this svg document object into the file system.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"Path\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"encoding\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Private</span> <span class=\"keyword\">Function</span> SaveAsXml(<span class=\"keyword\">Optional</span> Path <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"string\">\"\"</span>, <span class=\"keyword\">Optional</span> encoding <span class=\"keyword\">As</span> Encoding = <span class=\"literal\">Nothing</span>) <span class=\"keyword\">As</span> <span class=\"built_in\">Boolean</span> <span class=\"keyword\">Implements</span> ISaveHandle.Save</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> xml <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> XmlDoc(<span class=\"keyword\">Me</span>.GetXml)</span><br><span class=\"line\">    xml.encoding = XmlEncodings.UTF8</span><br><span class=\"line\">    xml.standalone = <span class=\"literal\">False</span></span><br><span class=\"line\">    xml.xmlns.<span class=\"keyword\">Set</span>(<span class=\"string\">\"xlink\"</span>, <span class=\"string\">\"http://www.w3.org/1999/xlink\"</span>)</span><br><span class=\"line\">    xml.xmlns.xmlns = <span class=\"string\">\"http://www.w3.org/2000/svg\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Return</span> xml.SaveTo(Path, encoding)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Save this svg document object into the file system.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"Path\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"encoding\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> SaveAsXml(<span class=\"keyword\">Optional</span> Path <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"string\">\"\"</span>, <span class=\"keyword\">Optional</span> encoding <span class=\"keyword\">As</span> Encodings = Encodings.UTF8) <span class=\"keyword\">As</span> <span class=\"built_in\">Boolean</span> <span class=\"keyword\">Implements</span> ISaveHandle.Save</span><br><span class=\"line\">    <span class=\"keyword\">Return</span> SaveAsXml(Path, encoding.GetEncodings)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure>\n<p>After the xml file save operation, you can click on your generated svg image and displayed in your browser:<br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/2016-06-11.png\" alt=\"\"></p>\n","excerpt":"<p>Recently I works on a <a href=\"http://www.codeproject.com/Articles/1104741/NET-Canvas-for-Network-visualization\"><strong>network visualization solution</strong></a> in vb.net language, and want to export the image of my network in svg document format as the high quality publication material. And as the svg image is a kind of XML file, so that by using xml serialization technology, this makes the svg image generates so easily.</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/SVG_TestOutput.png\" alt=\"\"><br>Example svg output on github: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Datavisualization.Network/SVG_TestOutput.svg\">https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Datavisualization.Network/SVG_TestOutput.svg</a></p>\n<p>Wikipedia: <a href=\"https://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">https://en.wikipedia.org/wiki/Scalable_Vector_Graphics</a></p>\n<blockquote>\n<p>Scalable Vector Graphics (SVG) is an XML-based vector image format for two-dimensional graphics with support for interactivity and animation. The SVG specification is an open standard developed by the World Wide Web Consortium (W3C) since 1999.</p>\n<p>SVG images and their behaviors are defined in XML text files. This means that they can be searched, indexed, scripted, and compressed. As XML files, SVG images can be created and edited with any text editor, but are more often created with drawing software.</p>\n<p>All major modern web browsers—including Mozilla Firefox, Internet Explorer, Google Chrome, Opera, Safari, and Microsoft Edge—have at least some degree of SVG rendering support.</p>\n</blockquote>\n<p>Here is a tips of how to generate the svg image in a very simple way.</p>","more":"<p>As the svg image is a XML document file, so that we can create a xml class object to modelling the SVG image, and then just using xml serialization to creates the SVG images as the high quantity published image for your document.</p>\n<p>Majority, the svg just behavior likes the HTML, it can be consists of two major section:</p>\n<ol>\n<li>Vector Diagram parts to defines the image</li>\n<li>CSS styles to tweaks on the diagram styles</li>\n</ol>\n<h2 id=\"Part1-Vector-diagram-object\"><a href=\"#Part1-Vector-diagram-object\" class=\"headerlink\" title=\"Part1: Vector diagram object\"></a>Part1: Vector diagram object</h2><p>As you can treating the svg document as html file, and we can tweaks on the diagram by using CSS, so that we can definite a basically SVG node element in the SVG Xml document:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> The basically SVG XML document node, it can be tweaks on the style by using CSS</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">MustInherit</span> <span class=\"keyword\">Class</span> node</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> CSS style definition</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    &lt;XmlAttribute&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> style <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> node class id, just like the id in HTML, you can also using this attribute to tweaks on the style by CSS.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    &lt;XmlAttribute&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> [<span class=\"keyword\">class</span>] <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> ToString() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> <span class=\"keyword\">MyClass</span>.GetJson</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<p>In the above code, the <strong>style</strong> property can overrides the global css style or complement the style definition for the specific node object. The <strong>class</strong> property defines the class id of the node element in the XML or HTML, which is can be applied the global css style through this class id property.<br>In my network canvas project, i used circle to visualize node and line object to visualize the edges, and here is the object definition:<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> circle : <span class=\"keyword\">Inherits</span> node</span><br><span class=\"line\">    &lt;XmlAttribute&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> cy <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\">    &lt;XmlAttribute&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> cx <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\">    &lt;XmlAttribute&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> r <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> title <span class=\"keyword\">As</span> title</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> line : <span class=\"keyword\">Inherits</span> node</span><br><span class=\"line\">    &lt;XmlAttribute&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> y2 <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\">    &lt;XmlAttribute&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> x2 <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\">    &lt;XmlAttribute&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> y1 <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\">    &lt;XmlAttribute&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> x1 <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure></p>\n<p>Almost all of the diagram object includes the circle and line object that used in the d3js svg is defined in the namespace: <strong>Microsoft.VisualBasic.Imaging.SVG</strong>, and you can found the entire source code at here: <strong><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Datavisualization/Microsoft.VisualBasic.Imaging/SVG/Xml.vb\">Microsoft.VisualBasic.Imaging/SVG/Xml.vb</a></strong>.</p>\n<p>By define these graphics diagram object for the xml serialization, that this makes the program generates the svg image by simply using two Linq expression, and here is the code of generates the svg image for my network visualize canvas object:</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Imports System.Runtime.CompilerServices</span><br><span class=\"line\">Imports Microsoft.VisualBasic.DataVisualization.Network.Graph</span><br><span class=\"line\">Imports Microsoft.VisualBasic.DataVisualization.Network.Layouts</span><br><span class=\"line\">Imports Microsoft.VisualBasic.Imaging</span><br><span class=\"line\">Imports Microsoft.VisualBasic.Imaging.SVG</span><br><span class=\"line\">Imports Microsoft.VisualBasic.Imaging.SVG.CSS</span><br><span class=\"line\">Imports Microsoft.VisualBasic.Language</span><br><span class=\"line\">Imports Microsoft.VisualBasic.MarkupLanguage.HTML</span><br><span class=\"line\">Imports Microsoft.VisualBasic.Language.UnixBash</span><br><span class=\"line\">Imports Microsoft.VisualBasic.DataVisualization.Network.Layouts.Interfaces</span><br><span class=\"line\"></span><br><span class=\"line\">''' &lt;summary&gt;</span><br><span class=\"line\">'''</span><br><span class=\"line\">''' &lt;/summary&gt;</span><br><span class=\"line\">''' &lt;param name=\"graph\"&gt;&lt;/param&gt;</span><br><span class=\"line\">''' &lt;param name=\"style\"&gt;Default value is &lt;see cref=\"DefaultStyle\"/&gt;&lt;/param&gt;</span><br><span class=\"line\">''' &lt;param name=\"size\"&gt;The export canvas size&lt;/param&gt;</span><br><span class=\"line\">''' &lt;returns&gt;&lt;/returns&gt;</span><br><span class=\"line\">&lt;Extension&gt;</span><br><span class=\"line\">Public Function ToSVG(graph As NetworkGraph, size As Size, Optional style As CSS.DirectedForceGraph = Nothing) As SVGXml</span><br><span class=\"line\">    Dim rect As New Rectangle(New Point, size)</span><br><span class=\"line\">    Dim nodes As SVG.circle() =</span><br><span class=\"line\">        LinqAPI.Exec(Of SVG.circle) &lt;= From n As Graph.Node</span><br><span class=\"line\">                                       In graph.nodes</span><br><span class=\"line\">                                       Let pos As Point = Renderer.GraphToScreen(TryCast(n.Data.initialPostion, FDGVector2), rect)</span><br><span class=\"line\">                                       Let c As Color = If(</span><br><span class=\"line\">                                           TypeOf n.Data.Color Is SolidBrush,</span><br><span class=\"line\">                                           DirectCast(n.Data.Color, SolidBrush).Color,</span><br><span class=\"line\">                                           Color.Black)</span><br><span class=\"line\">                                       Let r As Single = n.__getRadius</span><br><span class=\"line\">                                       Let pt = New Point(CInt(pos.X - r / 2), CInt(pos.Y - r / 2))</span><br><span class=\"line\">                                       Select New circle With &#123;</span><br><span class=\"line\">                                           .class = \"node\",</span><br><span class=\"line\">                                           .cx = pt.X,</span><br><span class=\"line\">                                           .cy = pt.Y,</span><br><span class=\"line\">                                           .r = r,</span><br><span class=\"line\">                                           .style = $\"fill: rgb(&#123;c.R&#125;, &#123;c.G&#125;, &#123;c.B&#125;);\"</span><br><span class=\"line\">                                       &#125;</span><br><span class=\"line\">    Dim links As line() =</span><br><span class=\"line\">        LinqAPI.Exec(Of line) &lt;= From edge As Edge</span><br><span class=\"line\">                                 In graph.edges</span><br><span class=\"line\">                                 Let source As Graph.Node = edge.Source</span><br><span class=\"line\">                                 Let target As Graph.Node = edge.Target</span><br><span class=\"line\">                                 Let pts As Point = Renderer.GraphToScreen(TryCast(source.Data.initialPostion, FDGVector2), rect)</span><br><span class=\"line\">                                 Let ptt As Point = Renderer.GraphToScreen(TryCast(target.Data.initialPostion, FDGVector2), rect)</span><br><span class=\"line\">                                 Let rs As Single = source.__getRadius / 2,</span><br><span class=\"line\">                                     rt As Single = target.__getRadius / 2</span><br><span class=\"line\">                                 Select New line With &#123;</span><br><span class=\"line\">                                     .class = \"link\",</span><br><span class=\"line\">                                     .x1 = pts.X - rs,</span><br><span class=\"line\">                                     .x2 = ptt.X - rt,</span><br><span class=\"line\">                                     .y1 = pts.Y - rs,</span><br><span class=\"line\">                                     .y2 = ptt.Y - rt</span><br><span class=\"line\">                                 &#125;</span><br><span class=\"line\">    Dim svg As New SVGXml With &#123;</span><br><span class=\"line\">        .defs = New CSSStyles With &#123;</span><br><span class=\"line\">            .styles = &#123;</span><br><span class=\"line\">                New XmlMeta.CSS With &#123;</span><br><span class=\"line\">                    .style = If(style Is Nothing, DefaultStyle(), style).ToString</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        .width = size.Width &amp; \"px\",</span><br><span class=\"line\">        .height = size.Height &amp; \"px\",</span><br><span class=\"line\">        .lines = links,</span><br><span class=\"line\">        .circles = nodes,</span><br><span class=\"line\">        .fill = \"#dbf3ff\"</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    Return svg</span><br><span class=\"line\">End Function</span><br></pre></td></tr></table></figure>\n<h2 id=\"Part2-CSS-style\"><a href=\"#Part2-CSS-style\" class=\"headerlink\" title=\"Part2: CSS style\"></a>Part2: CSS style</h2><p>The svg CSS can be define using HTML css object in VisualBasic:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> CSSStyles</span><br><span class=\"line\">    &lt;XmlElement(<span class=\"string\">\"style\"</span>)&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> styles <span class=\"keyword\">As</span> XmlMeta.CSS()</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<p>And the <strong>XmlMeta.CSS</strong> object is a simple object define the css styles data in namespace <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/DocumentFormats/VB_HTML/VB_HTML/HTML/Xml/Meta.vb\">Microsoft.VisualBasic.HTML.XmlMeta</a>:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Imports</span> System.Xml.Serialization</span><br><span class=\"line\"><span class=\"keyword\">Imports</span> Microsoft.VisualBasic.Serialization</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Namespace</span> HTML.XmlMeta</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> CSS</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;XmlAttribute&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> type <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">            <span class=\"keyword\">Get</span></span><br><span class=\"line\">                <span class=\"keyword\">Return</span> <span class=\"string\">\"text/css\"</span></span><br><span class=\"line\">            <span class=\"keyword\">End</span> <span class=\"keyword\">Get</span></span><br><span class=\"line\">            <span class=\"keyword\">Set</span>(value <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>)</span><br><span class=\"line\">                <span class=\"comment\">' ReadOnly, Do Nothing</span></span><br><span class=\"line\">            <span class=\"keyword\">End</span> <span class=\"keyword\">Set</span></span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">Property</span></span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;XmlText&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> style <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">Public</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> ToString() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">            <span class=\"keyword\">Return</span> <span class=\"keyword\">Me</span>.GetJson</span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Namespace</span></span><br></pre></td></tr></table></figure>\n<p>Define the CSS style is based on your specific application situation, and here is the CSS generated code for the network canvas objects in my work: nodes and edges:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Imports</span> System.<span class=\"keyword\">Text</span></span><br><span class=\"line\"><span class=\"keyword\">Imports</span> Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps</span><br><span class=\"line\"><span class=\"keyword\">Imports</span> Microsoft.VisualBasic.Language</span><br><span class=\"line\"><span class=\"keyword\">Imports</span> Microsoft.VisualBasic.MarkupLanguage.HTML</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Namespace</span> SVG.CSS</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Style generator for the value of <span class=\"doctag\">&lt;see cref=\"XmlMeta.CSS.style\"/&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> DirectedForceGraph</span><br><span class=\"line\">        <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> node <span class=\"keyword\">As</span> CssValue</span><br><span class=\"line\">        <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> link <span class=\"keyword\">As</span> CssValue</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">Public</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> ToString() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">            <span class=\"keyword\">Dim</span> sb <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> StringBuilder</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">Call</span> sb.AppendLine(<span class=\"string\">\".node &#123;\"</span>)</span><br><span class=\"line\">            <span class=\"keyword\">Call</span> sb.AppendLine(node.ToString)</span><br><span class=\"line\">            <span class=\"keyword\">Call</span> sb.AppendLine(<span class=\"string\">\"&#125;\"</span>)</span><br><span class=\"line\">            <span class=\"keyword\">Call</span> sb.AppendLine(<span class=\"string\">\".link &#123;\"</span>)</span><br><span class=\"line\">            <span class=\"keyword\">Call</span> sb.AppendLine(link.ToString)</span><br><span class=\"line\">            <span class=\"keyword\">Call</span> sb.AppendLine(<span class=\"string\">\"&#125;\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">Return</span> sb.ToString</span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> CssValue : <span class=\"keyword\">Inherits</span> ClassObject</span><br><span class=\"line\">        &lt;DataFrameColumn&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> stroke <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        &lt;DataFrameColumn(<span class=\"string\">\"stroke-width\"</span>)&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> strokeWidth <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        &lt;DataFrameColumn(<span class=\"string\">\"stroke-opacity\"</span>)&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> strokeOpacity <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        &lt;DataFrameColumn&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> opacity <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">Public</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> ToString() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">            <span class=\"keyword\">Dim</span> sb <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> StringBuilder</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">For</span> <span class=\"keyword\">Each</span> prop <span class=\"keyword\">In</span> DataFrameColumnAttribute.LoadMapping(<span class=\"keyword\">Of</span> CssValue).Values</span><br><span class=\"line\">                <span class=\"keyword\">Dim</span> value <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span> = prop.GetValue(<span class=\"keyword\">Me</span>)</span><br><span class=\"line\">                <span class=\"keyword\">If</span> <span class=\"keyword\">Not</span> value <span class=\"keyword\">Is</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">Then</span></span><br><span class=\"line\">                    <span class=\"keyword\">Call</span> sb.AppendLine(<span class=\"string\">\"    \"</span> &amp; $<span class=\"string\">\"&#123;prop.Identity&#125;: &#123;Scripting.ToString(value)&#125;;\"</span>)</span><br><span class=\"line\">                <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">            <span class=\"keyword\">Next</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">Return</span> sb.ToString</span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Namespace</span></span><br></pre></td></tr></table></figure>\n<p>Which it defines the HTML element styles, and this HTML CSS definition is also works in SVG. The source show above generates such CSS definition for rendering the elements which it has a class id named <strong>“node” or “link”</strong>:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">Public Function <span class=\"title\">DefaultStyle</span><span class=\"params\">()</span> As CSS.DirectedForceGraph</span><br><span class=\"line\">    Return New DirectedForceGraph With </span>&#123;</span><br><span class=\"line\">        .link = New CssValue With &#123;</span><br><span class=\"line\">            .stroke = <span class=\"string\">\"#CCC\"</span>,</span><br><span class=\"line\">            .strokeOpacity = <span class=\"string\">\"0.85\"</span>,</span><br><span class=\"line\">            .strokeWidth = <span class=\"string\">\"6\"</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        .node = New CssValue With &#123;</span><br><span class=\"line\">            .strokeWidth = <span class=\"string\">\"0.5px\"</span>,</span><br><span class=\"line\">            .strokeOpacity = <span class=\"string\">\"0.8\"</span>,</span><br><span class=\"line\">            .stroke = <span class=\"string\">\"#FFF\"</span>,</span><br><span class=\"line\">            .opacity = <span class=\"string\">\"0.85\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">End Function</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">defs</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"undefined\"></span><br><span class=\"line\">.node &#123;</span><br><span class=\"line\">    opacity: 0.85;</span><br><span class=\"line\">    stroke: #FFF;</span><br><span class=\"line\">    strokeOpacity: 0.8;</span><br><span class=\"line\">    strokeWidth: 0.5px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.link &#123;</span><br><span class=\"line\">    stroke: #CCC;</span><br><span class=\"line\">    strokeOpacity: 0.85;</span><br><span class=\"line\">    strokeWidth: 6;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">defs</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">circle</span> <span class=\"attr\">style</span>=<span class=\"string\">\"fill: rgb(176, 196, 222);\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"node\"</span> <span class=\"attr\">cy</span>=<span class=\"string\">\"356\"</span> <span class=\"attr\">cx</span>=<span class=\"string\">\"1118\"</span> <span class=\"attr\">r</span>=<span class=\"string\">\"10\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">line</span> <span class=\"attr\">class</span>=<span class=\"string\">\"link\"</span> <span class=\"attr\">y2</span>=<span class=\"string\">\"967\"</span> <span class=\"attr\">x2</span>=<span class=\"string\">\"1014\"</span> <span class=\"attr\">y1</span>=<span class=\"string\">\"997\"</span> <span class=\"attr\">x1</span>=<span class=\"string\">\"1047\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Save-the-SVG-document\"><a href=\"#Save-the-SVG-document\" class=\"headerlink\" title=\"Save the SVG document\"></a>Save the SVG document</h2><p>So that we can define a basically svg document object consist with these two part of data: which it has a css style property named defs and inherits from graphics object, which its element name in svg is g and contains the property definition of graphics diagram objects, such as circles, lines, rectangle, texts, etc:<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> The svg vector graphics in Xml document format.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">&lt;XmlType(<span class=\"string\">\"svg\"</span>)&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> SVGXml : <span class=\"keyword\">Inherits</span> g</span><br><span class=\"line\">    <span class=\"keyword\">Implements</span> ISaveHandle</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">Region</span> \"xml root property\"</span></span><br><span class=\"line\">    &lt;XmlAttribute&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> width <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">    &lt;XmlAttribute&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> height <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">    &lt;XmlAttribute&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> version <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">End</span> <span class=\"meta-keyword\">Region</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Style definition of the xml node in this svg document.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> you can define the style by using css and set the class</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> attribute for the specific node to controls the</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> visualize style.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> defs <span class=\"keyword\">As</span> CSSStyles</span><br><span class=\"line\">......</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> g : <span class=\"keyword\">Inherits</span> node</span><br><span class=\"line\">    .......</span><br><span class=\"line\">    &lt;XmlElement(<span class=\"string\">\"line\"</span>)&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> lines <span class=\"keyword\">As</span> line()</span><br><span class=\"line\">    &lt;XmlElement(<span class=\"string\">\"circle\"</span>)&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> circles <span class=\"keyword\">As</span> circle()</span><br><span class=\"line\">    &lt;XmlAttribute&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> fill <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure></p>\n<p>Due to the reason of xml serialization in the vb.net is in the utf-16 encoding and using the default xml namespace, so that we should manually modify the xml encodings to utf-8, modified the xml namespace to svg namespace: <a href=\"http://www.w3.org/2000/svg\">http://www.w3.org/2000/svg</a>, and add a xlink namespace from: <a href=\"http://www.w3.org/1999/xlink\">http://www.w3.org/1999/xlink</a>.</p>\n<p>Here is the code example of save the SVG xml document:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Save this svg document object into the file system.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"Path\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"encoding\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Private</span> <span class=\"keyword\">Function</span> SaveAsXml(<span class=\"keyword\">Optional</span> Path <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"string\">\"\"</span>, <span class=\"keyword\">Optional</span> encoding <span class=\"keyword\">As</span> Encoding = <span class=\"literal\">Nothing</span>) <span class=\"keyword\">As</span> <span class=\"built_in\">Boolean</span> <span class=\"keyword\">Implements</span> ISaveHandle.Save</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> xml <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> XmlDoc(<span class=\"keyword\">Me</span>.GetXml)</span><br><span class=\"line\">    xml.encoding = XmlEncodings.UTF8</span><br><span class=\"line\">    xml.standalone = <span class=\"literal\">False</span></span><br><span class=\"line\">    xml.xmlns.<span class=\"keyword\">Set</span>(<span class=\"string\">\"xlink\"</span>, <span class=\"string\">\"http://www.w3.org/1999/xlink\"</span>)</span><br><span class=\"line\">    xml.xmlns.xmlns = <span class=\"string\">\"http://www.w3.org/2000/svg\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Return</span> xml.SaveTo(Path, encoding)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Save this svg document object into the file system.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"Path\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"encoding\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> SaveAsXml(<span class=\"keyword\">Optional</span> Path <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"string\">\"\"</span>, <span class=\"keyword\">Optional</span> encoding <span class=\"keyword\">As</span> Encodings = Encodings.UTF8) <span class=\"keyword\">As</span> <span class=\"built_in\">Boolean</span> <span class=\"keyword\">Implements</span> ISaveHandle.Save</span><br><span class=\"line\">    <span class=\"keyword\">Return</span> SaveAsXml(Path, encoding.GetEncodings)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure>\n<p>After the xml file save operation, you can click on your generated svg image and displayed in your browser:<br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/2016-06-11.png\" alt=\"\"></p>"},{"title":"The tricks of IsNullOrEmpty","date":"2016-06-19T16:00:00.000Z","_content":"\nI'm usually using a shared function from string type ``String.IsNullOrEmpty`` to determined that the user input string is nothing or is a empty string. And by works with the collection type, some time this ``String.IsNullOrEmpty`` liked operation is necessary as well:\n\n+ In most of situation of my data processing, such as text data parser, some text field is not exists in the source line, so that the parser may returns a empty string collection or nothing due to the exception\n+ In the object deserialization operations of the Xml, YAML or JSON, collection type as property may be nothing or is a empty collection after the serialization\n\nSo that a extension method ``IsNullOrEmpty`` of collection type is required for deal with these situation.\n\n<!--more-->\n\n## The init edition for collection\n\nIn the early time of my programming, I'm using the ``IsNullOrEmpty`` like this:\n\n```vbnet\n''' <summary>\n''' This object collection is a null object or contains zero count items.\n''' NOTE: Do not applied this function on the Linq Expression due to the performance issue.\n''' (判断某一个对象集合是否为空，请注意，由于在这里是使用了集合的Count进行判断是否有元素，\n''' 所以这个函数可能不是太适合用于Linq的非立即查询)\n''' </summary>\n''' <typeparam name=\"T\"></typeparam>\n''' <param name=\"source\"></param>\n''' <returns></returns>\n''' <remarks></remarks>\n<Extension>\nPublic Function IsNullOrEmpty(Of T)(source As IEnumerable(Of T)) As Boolean\n    Return source Is Nothing OrElse source.Count = 0\nEnd Function\n```\n\nAs in the early time of my programming, **collection type just involve in array, list, and dictionary**. And the extension function show above just works fine, as the ``Count`` extension method just iterate the elements and give back the elements number.\n\n### Things get worse on Linq\n\nThe Linq expression results of two effects: **``LinqAPI.Exec(of T)`` in VisualBasic results a data collection, and the expression of linq just results a data producer.**\n\n+ When iterate on the data collection, you just enumerate the datas, so that this iteration operation is just very rapid; \n+ When iterate on the data producer, you are not only enumerate all of the datas, and also producing new datas as your result data source.\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/TwoLinq.png)\n\nAnd this initial version ``IsNullOrEmpty`` is still works fine on the first Linq expression as ``source`` is a data collection, and ``Count`` method just enumerate the datas, and the procedure is very fast; But things get worsening on the second Linq expression, as the second expression result a data producer, you are not only enumerate the result datas, and also needs the expression to produce new objects as your result source. So that the ``Count`` function will enumerate the entire producer source and then reutrns the element counts, and this makes the program performance very worst.\n\n## Solved with For loop\n\nAs we can using ``For Each`` loop to enumerate all of the elements in the collection, and if the collection have not object, then the ``For`` loop will not happened, so that we can using a ``For`` loop to determined that the source collection have element or not without enumerate the entired collection, Here is the second edition for the generic collection ``IsNullOrEmpty``:\n\n```vbnet\n''' <summary>\n''' This object collection is a null object or contains zero count items.\n''' </summary>\n''' <typeparam name=\"T\"></typeparam>\n''' <param name=\"source\"></param>\n''' <returns></returns>\n''' <remarks></remarks>\n<Extension> Public Function IsNullOrEmpty(Of T)(source As IEnumerable(Of T)) As Boolean\n    If source Is Nothing Then Return True\n\n    Dim i As Integer = -1\n\n    For Each x As T In source\n        i += 1   ' 假若是存在元素的，则i的值会为零\n        Return False  ' If is not empty, then this For loop will be used.\n    Next\n\n    ' 由于没有元素，所以For循环没有进行，i变量的值没有发生变化\n    If i = -1 Then ' 使用count拓展进行判断或导致Linq被执行两次，现在使用FirstOrDefault来判断，主需要查看第一个元素而不是便利整个Linq查询枚举，从而提高了效率\n        Return True  ' Due to the reason of source is empty, no elements, so that i value is not changed as the For loop didn't used.\n    Else\n        Return False\n    End If\n\n    Return False\nEnd Function\n```\n\nNow using ``IsNullOrEmpty`` just works happy again with all of the enumeration collection type, both data collection and data producer works well with this extension method:\n\n> As at the first of the function, we just detecting that target is nothing or not?\n> And then we using a ``For`` loop just needs iterate the first element in the source, instead of using ``Count`` method to enumerate all of the elements, so that this is works perfect for the two linq expression type.\n> In the ``For`` loop, if the source collection is empty, then the ``For`` loop will never happend, and the value of variable ``i`` will not changed. So that we can determined that in this situation the source collection is Empty.\n\nAnd here I have add some extensions method for the common specific cllection types, for the code performance improvements.\n\n```vbnet\n    <Extension> Public Function IsNullOrEmpty(Of TKey, TValue)(dict As Dictionary(Of TKey, TValue)) As Boolean\n        If dict Is Nothing Then\n            Return True\n        End If\n        Return dict.Count = 0\n    End Function\n\n    <Extension> Public Function IsNullOrEmpty(Of T)(queue As Queue(Of T)) As Boolean\n        If queue Is Nothing Then\n            Return True\n        End If\n        Return queue.Count = 0\n    End Function\n\n    <Extension> Public Function IsNullOrEmpty(Of T)(list As List(Of T)) As Boolean\n        If list Is Nothing Then\n            Return True\n        End If\n        Return list.Count = 0\n    End Function\n\n    ''' <summary>\n    ''' This object array is a null object or contains zero count items.(判断某一个对象数组是否为空)\n    ''' </summary>\n    ''' <typeparam name=\"T\"></typeparam>\n    ''' <returns></returns>\n    ''' <remarks></remarks>\n    <Extension> Public Function IsNullOrEmpty(Of T)(array As T()) As Boolean\n        Return array Is Nothing OrElse array.Length = 0\n    End Function\n```","source":"_posts/tricks_of_IsNullOrEmpty.md","raw":"---\ntitle: The tricks of IsNullOrEmpty\ntags: [vb.net, tricks, note, Linq]\ndate: 2016-06-20\n---\n\nI'm usually using a shared function from string type ``String.IsNullOrEmpty`` to determined that the user input string is nothing or is a empty string. And by works with the collection type, some time this ``String.IsNullOrEmpty`` liked operation is necessary as well:\n\n+ In most of situation of my data processing, such as text data parser, some text field is not exists in the source line, so that the parser may returns a empty string collection or nothing due to the exception\n+ In the object deserialization operations of the Xml, YAML or JSON, collection type as property may be nothing or is a empty collection after the serialization\n\nSo that a extension method ``IsNullOrEmpty`` of collection type is required for deal with these situation.\n\n<!--more-->\n\n## The init edition for collection\n\nIn the early time of my programming, I'm using the ``IsNullOrEmpty`` like this:\n\n```vbnet\n''' <summary>\n''' This object collection is a null object or contains zero count items.\n''' NOTE: Do not applied this function on the Linq Expression due to the performance issue.\n''' (判断某一个对象集合是否为空，请注意，由于在这里是使用了集合的Count进行判断是否有元素，\n''' 所以这个函数可能不是太适合用于Linq的非立即查询)\n''' </summary>\n''' <typeparam name=\"T\"></typeparam>\n''' <param name=\"source\"></param>\n''' <returns></returns>\n''' <remarks></remarks>\n<Extension>\nPublic Function IsNullOrEmpty(Of T)(source As IEnumerable(Of T)) As Boolean\n    Return source Is Nothing OrElse source.Count = 0\nEnd Function\n```\n\nAs in the early time of my programming, **collection type just involve in array, list, and dictionary**. And the extension function show above just works fine, as the ``Count`` extension method just iterate the elements and give back the elements number.\n\n### Things get worse on Linq\n\nThe Linq expression results of two effects: **``LinqAPI.Exec(of T)`` in VisualBasic results a data collection, and the expression of linq just results a data producer.**\n\n+ When iterate on the data collection, you just enumerate the datas, so that this iteration operation is just very rapid; \n+ When iterate on the data producer, you are not only enumerate all of the datas, and also producing new datas as your result data source.\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/TwoLinq.png)\n\nAnd this initial version ``IsNullOrEmpty`` is still works fine on the first Linq expression as ``source`` is a data collection, and ``Count`` method just enumerate the datas, and the procedure is very fast; But things get worsening on the second Linq expression, as the second expression result a data producer, you are not only enumerate the result datas, and also needs the expression to produce new objects as your result source. So that the ``Count`` function will enumerate the entire producer source and then reutrns the element counts, and this makes the program performance very worst.\n\n## Solved with For loop\n\nAs we can using ``For Each`` loop to enumerate all of the elements in the collection, and if the collection have not object, then the ``For`` loop will not happened, so that we can using a ``For`` loop to determined that the source collection have element or not without enumerate the entired collection, Here is the second edition for the generic collection ``IsNullOrEmpty``:\n\n```vbnet\n''' <summary>\n''' This object collection is a null object or contains zero count items.\n''' </summary>\n''' <typeparam name=\"T\"></typeparam>\n''' <param name=\"source\"></param>\n''' <returns></returns>\n''' <remarks></remarks>\n<Extension> Public Function IsNullOrEmpty(Of T)(source As IEnumerable(Of T)) As Boolean\n    If source Is Nothing Then Return True\n\n    Dim i As Integer = -1\n\n    For Each x As T In source\n        i += 1   ' 假若是存在元素的，则i的值会为零\n        Return False  ' If is not empty, then this For loop will be used.\n    Next\n\n    ' 由于没有元素，所以For循环没有进行，i变量的值没有发生变化\n    If i = -1 Then ' 使用count拓展进行判断或导致Linq被执行两次，现在使用FirstOrDefault来判断，主需要查看第一个元素而不是便利整个Linq查询枚举，从而提高了效率\n        Return True  ' Due to the reason of source is empty, no elements, so that i value is not changed as the For loop didn't used.\n    Else\n        Return False\n    End If\n\n    Return False\nEnd Function\n```\n\nNow using ``IsNullOrEmpty`` just works happy again with all of the enumeration collection type, both data collection and data producer works well with this extension method:\n\n> As at the first of the function, we just detecting that target is nothing or not?\n> And then we using a ``For`` loop just needs iterate the first element in the source, instead of using ``Count`` method to enumerate all of the elements, so that this is works perfect for the two linq expression type.\n> In the ``For`` loop, if the source collection is empty, then the ``For`` loop will never happend, and the value of variable ``i`` will not changed. So that we can determined that in this situation the source collection is Empty.\n\nAnd here I have add some extensions method for the common specific cllection types, for the code performance improvements.\n\n```vbnet\n    <Extension> Public Function IsNullOrEmpty(Of TKey, TValue)(dict As Dictionary(Of TKey, TValue)) As Boolean\n        If dict Is Nothing Then\n            Return True\n        End If\n        Return dict.Count = 0\n    End Function\n\n    <Extension> Public Function IsNullOrEmpty(Of T)(queue As Queue(Of T)) As Boolean\n        If queue Is Nothing Then\n            Return True\n        End If\n        Return queue.Count = 0\n    End Function\n\n    <Extension> Public Function IsNullOrEmpty(Of T)(list As List(Of T)) As Boolean\n        If list Is Nothing Then\n            Return True\n        End If\n        Return list.Count = 0\n    End Function\n\n    ''' <summary>\n    ''' This object array is a null object or contains zero count items.(判断某一个对象数组是否为空)\n    ''' </summary>\n    ''' <typeparam name=\"T\"></typeparam>\n    ''' <returns></returns>\n    ''' <remarks></remarks>\n    <Extension> Public Function IsNullOrEmpty(Of T)(array As T()) As Boolean\n        Return array Is Nothing OrElse array.Length = 0\n    End Function\n```","slug":"tricks_of_IsNullOrEmpty","published":1,"updated":"2016-06-20T04:35:03.511Z","_id":"cipnbu3ek000k8gv48bqdyz4p","comments":1,"layout":"post","photos":[],"link":"","content":"<p>I’m usually using a shared function from string type <code>String.IsNullOrEmpty</code> to determined that the user input string is nothing or is a empty string. And by works with the collection type, some time this <code>String.IsNullOrEmpty</code> liked operation is necessary as well:</p>\n<ul>\n<li>In most of situation of my data processing, such as text data parser, some text field is not exists in the source line, so that the parser may returns a empty string collection or nothing due to the exception</li>\n<li>In the object deserialization operations of the Xml, YAML or JSON, collection type as property may be nothing or is a empty collection after the serialization</li>\n</ul>\n<p>So that a extension method <code>IsNullOrEmpty</code> of collection type is required for deal with these situation.</p>\n<a id=\"more\"></a>\n<h2 id=\"The-init-edition-for-collection\"><a href=\"#The-init-edition-for-collection\" class=\"headerlink\" title=\"The init edition for collection\"></a>The init edition for collection</h2><p>In the early time of my programming, I’m using the <code>IsNullOrEmpty</code> like this:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> This object collection is a null object or contains zero count items.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">NOTE:</span> Do not applied this function on the Linq Expression due to the performance issue.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> (判断某一个对象集合是否为空，请注意，由于在这里是使用了集合的Count进行判断是否有元素，</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> 所以这个函数可能不是太适合用于Linq的非立即查询)</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;typeparam name=\"T\"&gt;</span><span class=\"doctag\">&lt;/typeparam&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"source\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;remarks&gt;</span><span class=\"doctag\">&lt;/remarks&gt;</span></span></span><br><span class=\"line\">&lt;Extension&gt;</span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> IsNullOrEmpty(<span class=\"keyword\">Of</span> T)(source <span class=\"keyword\">As</span> IEnumerable(<span class=\"keyword\">Of</span> T)) <span class=\"keyword\">As</span> <span class=\"built_in\">Boolean</span></span><br><span class=\"line\">    <span class=\"keyword\">Return</span> source <span class=\"keyword\">Is</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">OrElse</span> source.Count = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure>\n<p>As in the early time of my programming, <strong>collection type just involve in array, list, and dictionary</strong>. And the extension function show above just works fine, as the <code>Count</code> extension method just iterate the elements and give back the elements number.</p>\n<h3 id=\"Things-get-worse-on-Linq\"><a href=\"#Things-get-worse-on-Linq\" class=\"headerlink\" title=\"Things get worse on Linq\"></a>Things get worse on Linq</h3><p>The Linq expression results of two effects: <strong><code>LinqAPI.Exec(of T)</code> in VisualBasic results a data collection, and the expression of linq just results a data producer.</strong></p>\n<ul>\n<li>When iterate on the data collection, you just enumerate the datas, so that this iteration operation is just very rapid; </li>\n<li>When iterate on the data producer, you are not only enumerate all of the datas, and also producing new datas as your result data source.</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/TwoLinq.png\" alt=\"\"></p>\n<p>And this initial version <code>IsNullOrEmpty</code> is still works fine on the first Linq expression as <code>source</code> is a data collection, and <code>Count</code> method just enumerate the datas, and the procedure is very fast; But things get worsening on the second Linq expression, as the second expression result a data producer, you are not only enumerate the result datas, and also needs the expression to produce new objects as your result source. So that the <code>Count</code> function will enumerate the entire producer source and then reutrns the element counts, and this makes the program performance very worst.</p>\n<h2 id=\"Solved-with-For-loop\"><a href=\"#Solved-with-For-loop\" class=\"headerlink\" title=\"Solved with For loop\"></a>Solved with For loop</h2><p>As we can using <code>For Each</code> loop to enumerate all of the elements in the collection, and if the collection have not object, then the <code>For</code> loop will not happened, so that we can using a <code>For</code> loop to determined that the source collection have element or not without enumerate the entired collection, Here is the second edition for the generic collection <code>IsNullOrEmpty</code>:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> This object collection is a null object or contains zero count items.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;typeparam name=\"T\"&gt;</span><span class=\"doctag\">&lt;/typeparam&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"source\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;remarks&gt;</span><span class=\"doctag\">&lt;/remarks&gt;</span></span></span><br><span class=\"line\">&lt;Extension&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> IsNullOrEmpty(<span class=\"keyword\">Of</span> T)(source <span class=\"keyword\">As</span> IEnumerable(<span class=\"keyword\">Of</span> T)) <span class=\"keyword\">As</span> <span class=\"built_in\">Boolean</span></span><br><span class=\"line\">    <span class=\"keyword\">If</span> source <span class=\"keyword\">Is</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">Then</span> <span class=\"keyword\">Return</span> <span class=\"literal\">True</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> i <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">-1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">For</span> <span class=\"keyword\">Each</span> x <span class=\"keyword\">As</span> T <span class=\"keyword\">In</span> source</span><br><span class=\"line\">        i += <span class=\"number\">1</span>   <span class=\"comment\">' 假若是存在元素的，则i的值会为零</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> <span class=\"literal\">False</span>  <span class=\"comment\">' If is not empty, then this For loop will be used.</span></span><br><span class=\"line\">    <span class=\"keyword\">Next</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">' 由于没有元素，所以For循环没有进行，i变量的值没有发生变化</span></span><br><span class=\"line\">    <span class=\"keyword\">If</span> i = <span class=\"number\">-1</span> <span class=\"keyword\">Then</span> <span class=\"comment\">' 使用count拓展进行判断或导致Linq被执行两次，现在使用FirstOrDefault来判断，主需要查看第一个元素而不是便利整个Linq查询枚举，从而提高了效率</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> <span class=\"literal\">True</span>  <span class=\"comment\">' Due to the reason of source is empty, no elements, so that i value is not changed as the For loop didn't used.</span></span><br><span class=\"line\">    <span class=\"keyword\">Else</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure>\n<p>Now using <code>IsNullOrEmpty</code> just works happy again with all of the enumeration collection type, both data collection and data producer works well with this extension method:</p>\n<blockquote>\n<p>As at the first of the function, we just detecting that target is nothing or not?<br>And then we using a <code>For</code> loop just needs iterate the first element in the source, instead of using <code>Count</code> method to enumerate all of the elements, so that this is works perfect for the two linq expression type.<br>In the <code>For</code> loop, if the source collection is empty, then the <code>For</code> loop will never happend, and the value of variable <code>i</code> will not changed. So that we can determined that in this situation the source collection is Empty.</p>\n</blockquote>\n<p>And here I have add some extensions method for the common specific cllection types, for the code performance improvements.</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Extension&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> IsNullOrEmpty(<span class=\"keyword\">Of</span> TKey, TValue)(dict <span class=\"keyword\">As</span> Dictionary(<span class=\"keyword\">Of</span> TKey, TValue)) <span class=\"keyword\">As</span> <span class=\"built_in\">Boolean</span></span><br><span class=\"line\">    <span class=\"keyword\">If</span> dict <span class=\"keyword\">Is</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">Then</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">    <span class=\"keyword\">Return</span> dict.Count = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;Extension&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> IsNullOrEmpty(<span class=\"keyword\">Of</span> T)(queue <span class=\"keyword\">As</span> Queue(<span class=\"keyword\">Of</span> T)) <span class=\"keyword\">As</span> <span class=\"built_in\">Boolean</span></span><br><span class=\"line\">    <span class=\"keyword\">If</span> queue <span class=\"keyword\">Is</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">Then</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">    <span class=\"keyword\">Return</span> queue.Count = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;Extension&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> IsNullOrEmpty(<span class=\"keyword\">Of</span> T)(list <span class=\"keyword\">As</span> List(<span class=\"keyword\">Of</span> T)) <span class=\"keyword\">As</span> <span class=\"built_in\">Boolean</span></span><br><span class=\"line\">    <span class=\"keyword\">If</span> list <span class=\"keyword\">Is</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">Then</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">    <span class=\"keyword\">Return</span> list.Count = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> This object array is a null object or contains zero count items.(判断某一个对象数组是否为空)</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;typeparam name=\"T\"&gt;</span><span class=\"doctag\">&lt;/typeparam&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;remarks&gt;</span><span class=\"doctag\">&lt;/remarks&gt;</span></span></span><br><span class=\"line\">&lt;Extension&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> IsNullOrEmpty(<span class=\"keyword\">Of</span> T)(array <span class=\"keyword\">As</span> T()) <span class=\"keyword\">As</span> <span class=\"built_in\">Boolean</span></span><br><span class=\"line\">    <span class=\"keyword\">Return</span> array <span class=\"keyword\">Is</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">OrElse</span> array.Length = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure>","excerpt":"<p>I’m usually using a shared function from string type <code>String.IsNullOrEmpty</code> to determined that the user input string is nothing or is a empty string. And by works with the collection type, some time this <code>String.IsNullOrEmpty</code> liked operation is necessary as well:</p>\n<ul>\n<li>In most of situation of my data processing, such as text data parser, some text field is not exists in the source line, so that the parser may returns a empty string collection or nothing due to the exception</li>\n<li>In the object deserialization operations of the Xml, YAML or JSON, collection type as property may be nothing or is a empty collection after the serialization</li>\n</ul>\n<p>So that a extension method <code>IsNullOrEmpty</code> of collection type is required for deal with these situation.</p>","more":"<h2 id=\"The-init-edition-for-collection\"><a href=\"#The-init-edition-for-collection\" class=\"headerlink\" title=\"The init edition for collection\"></a>The init edition for collection</h2><p>In the early time of my programming, I’m using the <code>IsNullOrEmpty</code> like this:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> This object collection is a null object or contains zero count items.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">NOTE:</span> Do not applied this function on the Linq Expression due to the performance issue.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> (判断某一个对象集合是否为空，请注意，由于在这里是使用了集合的Count进行判断是否有元素，</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> 所以这个函数可能不是太适合用于Linq的非立即查询)</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;typeparam name=\"T\"&gt;</span><span class=\"doctag\">&lt;/typeparam&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"source\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;remarks&gt;</span><span class=\"doctag\">&lt;/remarks&gt;</span></span></span><br><span class=\"line\">&lt;Extension&gt;</span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> IsNullOrEmpty(<span class=\"keyword\">Of</span> T)(source <span class=\"keyword\">As</span> IEnumerable(<span class=\"keyword\">Of</span> T)) <span class=\"keyword\">As</span> <span class=\"built_in\">Boolean</span></span><br><span class=\"line\">    <span class=\"keyword\">Return</span> source <span class=\"keyword\">Is</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">OrElse</span> source.Count = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure>\n<p>As in the early time of my programming, <strong>collection type just involve in array, list, and dictionary</strong>. And the extension function show above just works fine, as the <code>Count</code> extension method just iterate the elements and give back the elements number.</p>\n<h3 id=\"Things-get-worse-on-Linq\"><a href=\"#Things-get-worse-on-Linq\" class=\"headerlink\" title=\"Things get worse on Linq\"></a>Things get worse on Linq</h3><p>The Linq expression results of two effects: <strong><code>LinqAPI.Exec(of T)</code> in VisualBasic results a data collection, and the expression of linq just results a data producer.</strong></p>\n<ul>\n<li>When iterate on the data collection, you just enumerate the datas, so that this iteration operation is just very rapid; </li>\n<li>When iterate on the data producer, you are not only enumerate all of the datas, and also producing new datas as your result data source.</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/TwoLinq.png\" alt=\"\"></p>\n<p>And this initial version <code>IsNullOrEmpty</code> is still works fine on the first Linq expression as <code>source</code> is a data collection, and <code>Count</code> method just enumerate the datas, and the procedure is very fast; But things get worsening on the second Linq expression, as the second expression result a data producer, you are not only enumerate the result datas, and also needs the expression to produce new objects as your result source. So that the <code>Count</code> function will enumerate the entire producer source and then reutrns the element counts, and this makes the program performance very worst.</p>\n<h2 id=\"Solved-with-For-loop\"><a href=\"#Solved-with-For-loop\" class=\"headerlink\" title=\"Solved with For loop\"></a>Solved with For loop</h2><p>As we can using <code>For Each</code> loop to enumerate all of the elements in the collection, and if the collection have not object, then the <code>For</code> loop will not happened, so that we can using a <code>For</code> loop to determined that the source collection have element or not without enumerate the entired collection, Here is the second edition for the generic collection <code>IsNullOrEmpty</code>:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> This object collection is a null object or contains zero count items.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;typeparam name=\"T\"&gt;</span><span class=\"doctag\">&lt;/typeparam&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"source\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;remarks&gt;</span><span class=\"doctag\">&lt;/remarks&gt;</span></span></span><br><span class=\"line\">&lt;Extension&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> IsNullOrEmpty(<span class=\"keyword\">Of</span> T)(source <span class=\"keyword\">As</span> IEnumerable(<span class=\"keyword\">Of</span> T)) <span class=\"keyword\">As</span> <span class=\"built_in\">Boolean</span></span><br><span class=\"line\">    <span class=\"keyword\">If</span> source <span class=\"keyword\">Is</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">Then</span> <span class=\"keyword\">Return</span> <span class=\"literal\">True</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> i <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">-1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">For</span> <span class=\"keyword\">Each</span> x <span class=\"keyword\">As</span> T <span class=\"keyword\">In</span> source</span><br><span class=\"line\">        i += <span class=\"number\">1</span>   <span class=\"comment\">' 假若是存在元素的，则i的值会为零</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> <span class=\"literal\">False</span>  <span class=\"comment\">' If is not empty, then this For loop will be used.</span></span><br><span class=\"line\">    <span class=\"keyword\">Next</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">' 由于没有元素，所以For循环没有进行，i变量的值没有发生变化</span></span><br><span class=\"line\">    <span class=\"keyword\">If</span> i = <span class=\"number\">-1</span> <span class=\"keyword\">Then</span> <span class=\"comment\">' 使用count拓展进行判断或导致Linq被执行两次，现在使用FirstOrDefault来判断，主需要查看第一个元素而不是便利整个Linq查询枚举，从而提高了效率</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> <span class=\"literal\">True</span>  <span class=\"comment\">' Due to the reason of source is empty, no elements, so that i value is not changed as the For loop didn't used.</span></span><br><span class=\"line\">    <span class=\"keyword\">Else</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure>\n<p>Now using <code>IsNullOrEmpty</code> just works happy again with all of the enumeration collection type, both data collection and data producer works well with this extension method:</p>\n<blockquote>\n<p>As at the first of the function, we just detecting that target is nothing or not?<br>And then we using a <code>For</code> loop just needs iterate the first element in the source, instead of using <code>Count</code> method to enumerate all of the elements, so that this is works perfect for the two linq expression type.<br>In the <code>For</code> loop, if the source collection is empty, then the <code>For</code> loop will never happend, and the value of variable <code>i</code> will not changed. So that we can determined that in this situation the source collection is Empty.</p>\n</blockquote>\n<p>And here I have add some extensions method for the common specific cllection types, for the code performance improvements.</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Extension&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> IsNullOrEmpty(<span class=\"keyword\">Of</span> TKey, TValue)(dict <span class=\"keyword\">As</span> Dictionary(<span class=\"keyword\">Of</span> TKey, TValue)) <span class=\"keyword\">As</span> <span class=\"built_in\">Boolean</span></span><br><span class=\"line\">    <span class=\"keyword\">If</span> dict <span class=\"keyword\">Is</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">Then</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">    <span class=\"keyword\">Return</span> dict.Count = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;Extension&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> IsNullOrEmpty(<span class=\"keyword\">Of</span> T)(queue <span class=\"keyword\">As</span> Queue(<span class=\"keyword\">Of</span> T)) <span class=\"keyword\">As</span> <span class=\"built_in\">Boolean</span></span><br><span class=\"line\">    <span class=\"keyword\">If</span> queue <span class=\"keyword\">Is</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">Then</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">    <span class=\"keyword\">Return</span> queue.Count = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;Extension&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> IsNullOrEmpty(<span class=\"keyword\">Of</span> T)(list <span class=\"keyword\">As</span> List(<span class=\"keyword\">Of</span> T)) <span class=\"keyword\">As</span> <span class=\"built_in\">Boolean</span></span><br><span class=\"line\">    <span class=\"keyword\">If</span> list <span class=\"keyword\">Is</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">Then</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">    <span class=\"keyword\">Return</span> list.Count = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> This object array is a null object or contains zero count items.(判断某一个对象数组是否为空)</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;typeparam name=\"T\"&gt;</span><span class=\"doctag\">&lt;/typeparam&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;remarks&gt;</span><span class=\"doctag\">&lt;/remarks&gt;</span></span></span><br><span class=\"line\">&lt;Extension&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> IsNullOrEmpty(<span class=\"keyword\">Of</span> T)(array <span class=\"keyword\">As</span> T()) <span class=\"keyword\">As</span> <span class=\"built_in\">Boolean</span></span><br><span class=\"line\">    <span class=\"keyword\">Return</span> array <span class=\"keyword\">Is</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">OrElse</span> array.Length = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure>"},{"title":"Code style guidelines for Microsoft VisualBasic","date":"2016-06-03T16:00:00.000Z","_content":"\n## Code Architecture of a VisualBasic CLI program\n\nThere is a VisualBasic application helper module that define in the namespace:\n[Microsoft.VisualBasic.App](https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Microsoft.VisualBasic.Architecture.Framework/Extensions/App.vb)\n\n**A special function named _main_ is the starting point of execution for all VisualBasic programs**. A VisualBasic CLI application should define the **Main** entry point in a Module which is named _Program_ and running from a Integer Function Main. By using the name of Program for the entry point module, this will makes more easily recognize of your program's entry point.\n\n```vbnet\nModule Program\n\n    ''' <summary>\n    ''' This is the main entry point of your VisualBasic application.\n    ''' </summary>\n    ''' <returns></returns>\n    Public Function Main() As Integer\n        Return GetType(CLI).RunCLI(App.CommandLine)\n    End Function\nEnd Module\n```\n\nBy using a **Integer** _Function_ instead of _Sub_ in VisualBasic, this makes your code style is more standard compare with the main function from C++.\n\n```c\n\tint main(int argc, char *argv[]) {\n\t\t// blablabla...\n\t}\n```\n\nWhere, the type **CLI** is the CLI interface which it is a module that contains all of the CLI command of your application. And the extension function **RunCLI** is a CLI extension method from the VisualBasic App helper: [Microsoft.VisualBasic.App](https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Microsoft.VisualBasic.Architecture.Framework/Extensions/App.vb). The property value of **App.CommandLine** is the commandline argument of current application that user used for start this application and calling for some _CLI_ command which is exposed in **CLI** module.\n\n<!--more-->\n\n### How to define the CLI module?\nA **Module** is a static _Class_ type in the VisualBasic, and it usually used for _the API exportation and common method definition for a set of similarity or functional correlated utility functions_.\n\nAnd then so that the CLI module in the VisualBasic can be explained as: **A module for exposed the CLI interface API to your user.**\n\nHere is a example:\n\n```vbnet\nPartial Module CLI\n\n    <ExportAPI(\"/Print\", Usage:=\"/Print /in <inDIR> [/ext <ext> /out <out.Csv>]\")>\n    Public Function Print(args As CommandLine.CommandLine) As Integer\n        Dim ext As String = args.GetValue(\"/ext\", \"*.*\")\n        Dim inDIR As String = args - \"/in\"\n        Dim out As String = args.GetValue(\"/out\", inDIR.TrimDIR & \".contents.Csv\")\n        Dim files As IEnumerable(Of String) =\n            ls - l - r - wildcards(ext) <= inDIR\n        Dim content As NamedValue(Of String)() =\n            LinqAPI.Exec(Of NamedValue(Of String)) <= From file As String\n                                                      In files\n                                                      Let name As String = file.BaseName\n                                                      Let genome As String = file.ParentDirName\n                                                      Select New NamedValue(Of String)(genome, name)\n        Return content.SaveTo(out).CLICode\n    End Function\nEnd Module\n```\n\nThis example code can be found at: [github](https://github.com/SMRUCC/ncbi-localblast/tree/master/Tools/CLI)\n\n### How to expose the CLI interface API in your application?\n\nA wrapper for parsing the commandline from your user is already been defined in namespace: [**Microsoft.VisualBasic.CommandLine**](https://github.com/xieguigang/VisualBasic_AppFramework/tree/master/Microsoft.VisualBasic.Architecture.Framework/CommandLine)\n\nAnd the **CLI** interface should define as in the format of this example:\n\n```vbnet\nImports Microsoft.VisualBasic.CommandLine\nImports Microsoft.VisualBasic.CommandLine.Reflection\n\n<ExportAPI(\"/Print\", Usage:=\"/Print /in <inDIR> [/ext <ext> /out <out.Csv>]\")>\nPublic Function CLI_API(args As CommandLine) As Integer\n```\n\n### Using the VisualBasic CommandLine Parser\nFor learn how to using the CommandLine Parser, we first lean the syntax of the VisualBasic commandline arguments.\nA typical commandline arguments in VisualBasic is consist of two parts:\n1. _Command Name_\n2. _Arguments_\n\nHere is a simple example:\n\n\tApp.exe /API1 /test /msg \"Hello World!!!\" /test2-enable /test3-enable\n\nWhere in this CLI, token **App.exe** is the executable file name of your application; And **/API1** token, is the **Command Name**; And then the last tokens are the parameter arguments, using the commandline in VisualBasic just like function programming in VisualBasic:\n\n```vbnet\nModule App\n    Public Function API1(test As Boolean, \n    \t\t\t msg As String, \n    \t\t\t test2Enable As Boolean, \n    \t\t\t test3Enable As Boolean) As Integer\nEnd Module\n```\n\nYou call your CLI command in the console terminal is just like call a function in the VisualBasic Code:\n\n```vbnet\n    Dim code As Integer = App.API1(True, \"Hello World!!!\", True, True)\n```\n\n**_NOTE:_ There is no order of the VisualBasic CLI arguments**, so that all of these CLI examples are equals to each other:\n\n    App.exe /API1 /msg \"Hello World!!!\" /test2-enable /test3-enable /test\n    App.exe /API1 /msg \"Hello World!!!\" /test /test2-enable /test3-enable\n    App.exe /API1 /test /test2-enable /test3-enable /msg \"Hello World!!!\"\n    App.exe /API1 /test2-enable /test /test3-enable /msg \"Hello World!!!\"\n\nSimple Example of VisualBasic CLI application(Example source code at [here](https://github.com/xieguigang/VisualBasic_AppFramework/tree/master/Example/CLI_Example)):\n\n```vbnet\nImports Microsoft.VisualBasic.CommandLine\nImports Microsoft.VisualBasic.CommandLine.Reflection\n\nModule Program\n\n    Public Function Main() As Integer\n        Return GetType(CLI).RunCLI(App.CommandLine)\n    End Function\nEnd Module\n\nModule CLI\n\n    <ExportAPI(\"/API1\",\n         Info:=\"Puts the brief description of this API command at here.\",\n         Usage:=\"/API1 /msg \"\"Puts the CLI usage syntax at here\"\"\",\n         Example:=\"/API1 /msg \"\"Hello world!!!\"\"\")>\n    Public Function API1(args As CommandLine) As Integer\n        Call Console.WriteLine(args(\"/msg\"))\n        Return 0\n    End Function\nEnd Module\n```\n\nHere are some mostly used function in VisualBasic CLI parser\nExample CLI is:\n\n\tApp.exe /Test-Example /b /n 52 /xml \"~/test.Xml\" /num_threads 96 /path \"~/tmp/test.log\"\n\n|Function|Usage|Example|\n|--------|-----|-------|\n|CommandLine.GetBoolean(String) As Boolean|Get a boolean flag argument from the CLI|Dim b As Boolean = args.GetBoolean(\"/b\")|\n|CommandLine.GetInt32(String) As Integer|Get a parameter value as Integer|Dim n As Integer = args.GetInt32(\"/n\")|\n|CommandLine.GetObject(Of T)(String, System.Func(Of String, T)) As T|Get a parameter string value and then apply a string parser on it for load an .NET object|Dim x As T = args.GetObject(of T)(\"/xml\", AddressOf LoadXml)|\n|CommandLine.GetValue(Of T)(String, T, System.Func(Of String, T)) As T|Get a parameter value, if the parameter is not exist, then default value will be returns, this method is usually used on optional value|Dim n As Long = args.GetValue(\"/num_threads\", 100L)|\n|CommandLine.Item(String) As String|Default readonly property for read string value of a specific parameter|Dim path As String = args(\"/file\")|\n\n-------------------------------------\n## List(Of T) operation in VisualBasic\nFor enable this language syntax feature and using the list feature in this section, you should imports the namespace **Microsoft.VisualBasic** at first\n\n```vbnet\n\tDim source As IEnumerable(Of <Type>)\n\tDim list As New List(of <Type>)(source)\n```\n\nFor Add a new instance\n\n```vbnet\n\tlist += New <Type> With {\n    \t.Property1 = value1,\n        .Property2 = value2\n    }\n```\n\nFor Add a sequence of new elements\n```vbnet\n\tlist += From x As T\n    \t\tIn source\n    \t\tWhere True = <test>\n            Select New <Type> With {\n            \t.Property1 = <expression>,\n                .Property2 = <expression>\n            }\n```\n\nif want to removes a specific element in the list\n```vbnet\n\tlist -= x\n```\nOr batch removes elements:\n```vbnet\n\tlist -= From x As T\n    \t\tIn source\n            Where True = <test>\n            Select x\n```\n\nHere is some example of the list **+** operator\n```vbnet\n    ' This add operation makes the code more easily to read and understand:\n    ' This function returns a list of RfamHit element and it also merge a\n    ' list of uncertainly elements into the result list at the same time\n    Public Function GetDataFrame() As RfamHit() Implements IRfamHits.GetDataFrame\n        Return hits.ToList(Function(x) New RfamHit(x, Me)) + From x As Hit\n                                                             In Uncertain\n                                                             Select New RfamHit(x, Me)\n    End Function\n```\nAnd using the **+** operator for add a new object into the list, this syntax can makes the code more readable instead of the poorly readable code from by using method **List(of T).Add**:\n```vbnet\n    genomes += New GenomeBrief With {\n        .Name = title,\n        .Size = last.Size,\n        .Y = h1\n    }\n\n    ' Using the + operator to instead of this poorly readable function code\n    genomes.Add(New GenomeBrief With {\n            .Name = title,\n            .Size = last.Size,\n            .Y = h1\n        })\n```\n\n## VisualBasic identifer names\n\n#### 1. Directory type\nIf possible, then all of the directory path variable can be **UPCASE**, such as:\n```vbnet\n\tDim DIR As String = \"/home/xieguigang/Downloads\"\n\tDim EXPORT As String = \"/usr/lib/GCModeller/\"\n```\n\n#### 2. Module variable\n+ All of the module variable should in format like **_lowerUpper** if the variable is _private_\n+ But if the variable is _Public_ or _Friend_ visible, then it should in format like **UpperUpper**\n\nHere is some example:\n```vbnet\n\t' Private\n\tDim _fileName As String\n\tDim _inDIR As Directory\n\n\t' Public\n\tPublic ReadOnly Property FileName As String\n\tPublic ReadOnly Property InDIR As Directory\n```\n\n#### 3. Local varaible and function parameter\nIf possible, all of the local varaible within a function or sub program and the parameters of a function, should be in format **lowerUpper**\n\n\n#### 4. Function And Type name\n\nFor **_Public_** member function, the function name is recommended in formats **UpperUpper**, but if the function is **_Private, Friend, or Protected_** visible, then your function is recommended start with two underlines, likes **\\_\\_lowerUpper**. The definition of the _Class, Structure_ names is in the same rule as function name.\n\nHere is some function name examples(Example picked from [here](https://github.com/SMRUCC/GCModeller.Core/Bio.Assembly/GenomicsContext/TFDensity.vb)):\n```vbnet\n\t' Private\n\tPrivate Function __worker(Of T As I_GeneBrief)(genome As IGenomicsContextProvider(Of T),\n                                               \tgetTF As Func(Of Strands, T()),\n                                               \tgetRelated As Func(Of T, T(), Integer, T()),\n                                               \tnumTotal As Integer,\n                                               \tranges As Integer) As Density()\n\t' Public\n\tPublic Function DensityCis(Of T As I_GeneBrief)(\n                              \tgenome As IGenomicsContextProvider(Of T),\n                              \tTF As IEnumerable(Of String),\n                              \tOptional ranges As Integer = 10000) As Density()\n```\n\n![](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/vb_codestyle/FunctionNames.png)\n\n+ Interface type name should start with a upcase character **I**, like _IEnumerable_, _IList_, etc\n+ Enum type name should end with a lower case character **s**, like _MethodTypes_, _FormatStyles_\n\nAt last, for improves of the code readable, try _**Make your identifier name short enough as possible**_\n\n\n![Code standard overview example](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/vb_codestyle/codeStandard.png)\n\n## String manipulate\n###### 1. String.Format\nFor formatted a string output, then recommended used **String.Format** function or string interpolate syntax in VisualBasic language.\nAnd by using the **String.Format** function, then format control string is recommended puts in a constant variable instead of directly used in the format function:\n\n```vbnet\n\tConst OutMsg As String = \"Hello world, {0}, Right?\"\n\t' blablabla.......\n\tDim msg As String = String.Format(OutMsg, name)\n```\n\n###### 2. String contacts\nFor contacts a large amount of string tokens, the **StringBuilder** is recommended used for this job, **not recommend directly using _& operator_ to contacts a large string collection due to the reason of performance issue**.\n```vbnet\n\t' Convert the input string to a byte array and compute the hash.\n\tDim data As Byte() = md5Hash.ComputeHash(input)\n\n    ' Create a new Stringbuilder to collect the bytes\n    ' and create a string.\n    Dim sBuilder As New StringBuilder()\n\n    ' Loop through each byte of the hashed data\n    ' and format each one as a hexadecimal string.\n    For i As Integer = 0 To data.Length - 1\n    \tsBuilder.Append(data(i).ToString(\"x2\"))\n    Next i\n\n    Return sBuilder.ToString() ' Return the hexadecimal string.\n```\n\nIf you just want to contact the string, then a shared method **String.Join** is recommended used.\nIf the string tokens will be join by a specific delimiter, then using **String.Join** instead of **StringBuilder.Append**\n\n```vbnet\n\tDim tokens As String()\n\tDim sb As New StringBuilder\n\n\tFor Each s As String In tokens\n\t\tCall sb.Append(s & \" \")\n\tNext\n\tCall sb.Remove(sb.Length -1)\n```\n\nOr just use **String.Join**, this method is more clean and readable than **StringBuilder.Append**:\n\n```vbnet\n\tDim tokens As String()\n\tDim out As String = String.Join(\" \", tokens)\n```\n\n###### 3. String interpolate\nThe string interpolate syntax in VisualBasic language is recommended used for **build _SQL_ statement and _CLI_ arguments as this syntax is very easily for understand and code readable**:\n\n```vbnet\n\tDim SQL As String = $\"SELECT * FROM table WHERE id='{id}' AND ppi>{ppi}\"\n\tDim CLI As String = $\"/start /port {port} /home {PathMapper.UserHOME}\"\n```\n\nSo, using this syntax feature makes your code very easy for reading and understand the code meaning, right?\n\n#### Linq Expression\nAll of the Linq Expression is recommended execute using [**LinqAPI**](https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Microsoft.VisualBasic.Architecture.Framework/Language/Linq.vb) if the output type of the expression is a known type:\n\n![](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/vb_codestyle/LinqStyle.png)\n\n#### Instantiation \nFor define a new object, a short format is recommended:\n```vbnet\nDim x As New <Type>\n```\n\nIf the type you want to create object instance can be initialize from its property, then the With keyword is recommended to used:\n\n```vbnet\nDim MyvaCog As MyvaCOG = \n    LinqAPI.Exec(Of MyvaCOG) <= From gene As GeneDumpInfo\n                                In GenomeBrief\n                                Select New MyvaCOG With {\n                                    .COG = gene.COG,\n                                    .QueryName = gene.LocusID,\n                                    .QueryLength = gene.Length\n                                }\n```\n\n\n## Appendix\n\nHere are tables of names that i used in my programming, and continues updated....\n\n\n#### Some common used name for common types\n\n<table class=\"table table-bordered table-striped table-condensed\">\n<thead>\n<tr><td>System.Type</td><td>Recommend Name</td><td>Example</td></tr>\n</thead>\n\t<tbody>\n        <tr>\n        <td>System.Text.StringBuilder</td>\n    \t<td>sb</td>\n        <td>\n```vbnet\nDim sb As New StringBuilder\n```\n</td>\n        </tr>\n        <tr>\n        <td>System.String</td>\n    \t<td>s, str, name, sId, id, x</td>\n        <td>\n```vbnet        \nDim s As String\nDim str As String\nDim name As String\nDim sId As String\nDim id As String\nDim x As String\n```\n    </td>\n    </tr>\n\t<tr><td>System.Integer, System.Long</td>\n    \t<td>i, j, n, x</td>\n        <td>\n```vbnet\nDim i As Integer\nDim j As Integer\nDim n As Integer\nDim x As Integer\n```\n</tr>\n\t<tr><td>System.Object</td>\n    \t<td>x, o, obj, value</td>\n        <td>\n```vbnet\nDim x As Object\nDim o As Object\nDim obj As Object\nDim value As Object\n```\n</td>\n\t</tr>\n\t\t</tbody>\n</table>\n\n#### Name for some meaning\n\n<table>\n   <tr><td>Meaning</td><td>Recommend Name</td><td>Example</td></tr>\n   <tr><td>Commandline arguments</td>\n       <td>args, CLI</td>\n       <td>\n```vbnet\nDim args As CommandLine\nDim CLI As String\nDim args As String()\n```\n</td></tr>\n\t<tr><td>SQL query</td>\n    \t<td>SQL, sql, query</td>\n        <td>\n```vbnet\nDim SQL As String = \"SELECT * FROM table LIMIT 1;\"\n```\n</td>\n    </tr>\n\t<tr><td>Iterator</td>\n    \t<td>i, j, k, l</td>\n        <td>\n```vbnet\nFor i As Integer = 0 to [stop]\n    For j As Integer = i to [stop]\n        For k As Integer = j to [stop]\n        Next\n    Next\nNext\n\nDim l As Integer = 100\n\nDo while l = 100\n    ' blablabla...\nLoop\n```\n</td>\n    </tr>\n    <tr><td>Linq query expression</td><td>LQuery</td><td>\n```vbnet\nDim LQuery = From path As String\n             In ls -l -r -wildcards(\"*.Xml\") <= DIR\n             Where InStr(path.BaseName, \"xcb\") = 1\n             Select path.LoadXml(Of KEGG.DBGET.Module)\n```\n</td>\n</tr>\n    <tr>\n    \t<td>Query Result/Function Returns</td><td>result, rtvl</td><td>\n```vbnet\nDim result As [Module] = \n    LinqAPI.Exec(Of [Module]) <= \n          From path As String\n          In ls -l -r -wildcards(\"*.Xml\") <= DIR\n          Where InStr(path.BaseName, \"xcb\") = 1\n          Select path.LoadXml(Of KEGG.DBGET.Module)\n        \nReturn result\n```\n</td>\n</tr>\n    <tr><td>Directory</td><td>DIR, out, inDIR</td><td>\n```vbnet\nDim files As IEnumerable(Of String) = \n    ls -l -r -wildcards(\"*.Xml\") <= DIR\n```\n</td>\n</tr>\n    <tr><td>json</td><td>json, JSON</td><td>\n```vbnet\nDim JSON As String = (ls -l -r -wildcards(\"*.json\") <= DIR).GetJson\n```\n</td>\n</tr>\n    <tr><td>data frame</td><td>df, ds, data</td><td>\n```vbnet\nDim df As DataFrame = DataFrame.CreateObject(path)\n```\n</td>\n</tr>\n    <tr><td>Network objects</td><td>net, network, node, nodes, edge, edges</td><td>\n```vbnet\nDim net As Network = Network.Load(DIR)\n\nnet += New Node With {\n    .Identifier = \"Linq\"\n}\nnet += New Edge With {\n    .FromNode = \"Linq\",\n    .ToNode = \"SQL\"\n}\nReturn net >> Open(\"./test.net/\")\n```\n</td>\n</tr>\n</table>","source":"_posts/vb_codestyle.md","raw":"---\ntitle: Code style guidelines for Microsoft VisualBasic\ntags: [vb.net,CodeProject,SDK document, note]\ndate: 2016.06.04\n---\n\n## Code Architecture of a VisualBasic CLI program\n\nThere is a VisualBasic application helper module that define in the namespace:\n[Microsoft.VisualBasic.App](https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Microsoft.VisualBasic.Architecture.Framework/Extensions/App.vb)\n\n**A special function named _main_ is the starting point of execution for all VisualBasic programs**. A VisualBasic CLI application should define the **Main** entry point in a Module which is named _Program_ and running from a Integer Function Main. By using the name of Program for the entry point module, this will makes more easily recognize of your program's entry point.\n\n```vbnet\nModule Program\n\n    ''' <summary>\n    ''' This is the main entry point of your VisualBasic application.\n    ''' </summary>\n    ''' <returns></returns>\n    Public Function Main() As Integer\n        Return GetType(CLI).RunCLI(App.CommandLine)\n    End Function\nEnd Module\n```\n\nBy using a **Integer** _Function_ instead of _Sub_ in VisualBasic, this makes your code style is more standard compare with the main function from C++.\n\n```c\n\tint main(int argc, char *argv[]) {\n\t\t// blablabla...\n\t}\n```\n\nWhere, the type **CLI** is the CLI interface which it is a module that contains all of the CLI command of your application. And the extension function **RunCLI** is a CLI extension method from the VisualBasic App helper: [Microsoft.VisualBasic.App](https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Microsoft.VisualBasic.Architecture.Framework/Extensions/App.vb). The property value of **App.CommandLine** is the commandline argument of current application that user used for start this application and calling for some _CLI_ command which is exposed in **CLI** module.\n\n<!--more-->\n\n### How to define the CLI module?\nA **Module** is a static _Class_ type in the VisualBasic, and it usually used for _the API exportation and common method definition for a set of similarity or functional correlated utility functions_.\n\nAnd then so that the CLI module in the VisualBasic can be explained as: **A module for exposed the CLI interface API to your user.**\n\nHere is a example:\n\n```vbnet\nPartial Module CLI\n\n    <ExportAPI(\"/Print\", Usage:=\"/Print /in <inDIR> [/ext <ext> /out <out.Csv>]\")>\n    Public Function Print(args As CommandLine.CommandLine) As Integer\n        Dim ext As String = args.GetValue(\"/ext\", \"*.*\")\n        Dim inDIR As String = args - \"/in\"\n        Dim out As String = args.GetValue(\"/out\", inDIR.TrimDIR & \".contents.Csv\")\n        Dim files As IEnumerable(Of String) =\n            ls - l - r - wildcards(ext) <= inDIR\n        Dim content As NamedValue(Of String)() =\n            LinqAPI.Exec(Of NamedValue(Of String)) <= From file As String\n                                                      In files\n                                                      Let name As String = file.BaseName\n                                                      Let genome As String = file.ParentDirName\n                                                      Select New NamedValue(Of String)(genome, name)\n        Return content.SaveTo(out).CLICode\n    End Function\nEnd Module\n```\n\nThis example code can be found at: [github](https://github.com/SMRUCC/ncbi-localblast/tree/master/Tools/CLI)\n\n### How to expose the CLI interface API in your application?\n\nA wrapper for parsing the commandline from your user is already been defined in namespace: [**Microsoft.VisualBasic.CommandLine**](https://github.com/xieguigang/VisualBasic_AppFramework/tree/master/Microsoft.VisualBasic.Architecture.Framework/CommandLine)\n\nAnd the **CLI** interface should define as in the format of this example:\n\n```vbnet\nImports Microsoft.VisualBasic.CommandLine\nImports Microsoft.VisualBasic.CommandLine.Reflection\n\n<ExportAPI(\"/Print\", Usage:=\"/Print /in <inDIR> [/ext <ext> /out <out.Csv>]\")>\nPublic Function CLI_API(args As CommandLine) As Integer\n```\n\n### Using the VisualBasic CommandLine Parser\nFor learn how to using the CommandLine Parser, we first lean the syntax of the VisualBasic commandline arguments.\nA typical commandline arguments in VisualBasic is consist of two parts:\n1. _Command Name_\n2. _Arguments_\n\nHere is a simple example:\n\n\tApp.exe /API1 /test /msg \"Hello World!!!\" /test2-enable /test3-enable\n\nWhere in this CLI, token **App.exe** is the executable file name of your application; And **/API1** token, is the **Command Name**; And then the last tokens are the parameter arguments, using the commandline in VisualBasic just like function programming in VisualBasic:\n\n```vbnet\nModule App\n    Public Function API1(test As Boolean, \n    \t\t\t msg As String, \n    \t\t\t test2Enable As Boolean, \n    \t\t\t test3Enable As Boolean) As Integer\nEnd Module\n```\n\nYou call your CLI command in the console terminal is just like call a function in the VisualBasic Code:\n\n```vbnet\n    Dim code As Integer = App.API1(True, \"Hello World!!!\", True, True)\n```\n\n**_NOTE:_ There is no order of the VisualBasic CLI arguments**, so that all of these CLI examples are equals to each other:\n\n    App.exe /API1 /msg \"Hello World!!!\" /test2-enable /test3-enable /test\n    App.exe /API1 /msg \"Hello World!!!\" /test /test2-enable /test3-enable\n    App.exe /API1 /test /test2-enable /test3-enable /msg \"Hello World!!!\"\n    App.exe /API1 /test2-enable /test /test3-enable /msg \"Hello World!!!\"\n\nSimple Example of VisualBasic CLI application(Example source code at [here](https://github.com/xieguigang/VisualBasic_AppFramework/tree/master/Example/CLI_Example)):\n\n```vbnet\nImports Microsoft.VisualBasic.CommandLine\nImports Microsoft.VisualBasic.CommandLine.Reflection\n\nModule Program\n\n    Public Function Main() As Integer\n        Return GetType(CLI).RunCLI(App.CommandLine)\n    End Function\nEnd Module\n\nModule CLI\n\n    <ExportAPI(\"/API1\",\n         Info:=\"Puts the brief description of this API command at here.\",\n         Usage:=\"/API1 /msg \"\"Puts the CLI usage syntax at here\"\"\",\n         Example:=\"/API1 /msg \"\"Hello world!!!\"\"\")>\n    Public Function API1(args As CommandLine) As Integer\n        Call Console.WriteLine(args(\"/msg\"))\n        Return 0\n    End Function\nEnd Module\n```\n\nHere are some mostly used function in VisualBasic CLI parser\nExample CLI is:\n\n\tApp.exe /Test-Example /b /n 52 /xml \"~/test.Xml\" /num_threads 96 /path \"~/tmp/test.log\"\n\n|Function|Usage|Example|\n|--------|-----|-------|\n|CommandLine.GetBoolean(String) As Boolean|Get a boolean flag argument from the CLI|Dim b As Boolean = args.GetBoolean(\"/b\")|\n|CommandLine.GetInt32(String) As Integer|Get a parameter value as Integer|Dim n As Integer = args.GetInt32(\"/n\")|\n|CommandLine.GetObject(Of T)(String, System.Func(Of String, T)) As T|Get a parameter string value and then apply a string parser on it for load an .NET object|Dim x As T = args.GetObject(of T)(\"/xml\", AddressOf LoadXml)|\n|CommandLine.GetValue(Of T)(String, T, System.Func(Of String, T)) As T|Get a parameter value, if the parameter is not exist, then default value will be returns, this method is usually used on optional value|Dim n As Long = args.GetValue(\"/num_threads\", 100L)|\n|CommandLine.Item(String) As String|Default readonly property for read string value of a specific parameter|Dim path As String = args(\"/file\")|\n\n-------------------------------------\n## List(Of T) operation in VisualBasic\nFor enable this language syntax feature and using the list feature in this section, you should imports the namespace **Microsoft.VisualBasic** at first\n\n```vbnet\n\tDim source As IEnumerable(Of <Type>)\n\tDim list As New List(of <Type>)(source)\n```\n\nFor Add a new instance\n\n```vbnet\n\tlist += New <Type> With {\n    \t.Property1 = value1,\n        .Property2 = value2\n    }\n```\n\nFor Add a sequence of new elements\n```vbnet\n\tlist += From x As T\n    \t\tIn source\n    \t\tWhere True = <test>\n            Select New <Type> With {\n            \t.Property1 = <expression>,\n                .Property2 = <expression>\n            }\n```\n\nif want to removes a specific element in the list\n```vbnet\n\tlist -= x\n```\nOr batch removes elements:\n```vbnet\n\tlist -= From x As T\n    \t\tIn source\n            Where True = <test>\n            Select x\n```\n\nHere is some example of the list **+** operator\n```vbnet\n    ' This add operation makes the code more easily to read and understand:\n    ' This function returns a list of RfamHit element and it also merge a\n    ' list of uncertainly elements into the result list at the same time\n    Public Function GetDataFrame() As RfamHit() Implements IRfamHits.GetDataFrame\n        Return hits.ToList(Function(x) New RfamHit(x, Me)) + From x As Hit\n                                                             In Uncertain\n                                                             Select New RfamHit(x, Me)\n    End Function\n```\nAnd using the **+** operator for add a new object into the list, this syntax can makes the code more readable instead of the poorly readable code from by using method **List(of T).Add**:\n```vbnet\n    genomes += New GenomeBrief With {\n        .Name = title,\n        .Size = last.Size,\n        .Y = h1\n    }\n\n    ' Using the + operator to instead of this poorly readable function code\n    genomes.Add(New GenomeBrief With {\n            .Name = title,\n            .Size = last.Size,\n            .Y = h1\n        })\n```\n\n## VisualBasic identifer names\n\n#### 1. Directory type\nIf possible, then all of the directory path variable can be **UPCASE**, such as:\n```vbnet\n\tDim DIR As String = \"/home/xieguigang/Downloads\"\n\tDim EXPORT As String = \"/usr/lib/GCModeller/\"\n```\n\n#### 2. Module variable\n+ All of the module variable should in format like **_lowerUpper** if the variable is _private_\n+ But if the variable is _Public_ or _Friend_ visible, then it should in format like **UpperUpper**\n\nHere is some example:\n```vbnet\n\t' Private\n\tDim _fileName As String\n\tDim _inDIR As Directory\n\n\t' Public\n\tPublic ReadOnly Property FileName As String\n\tPublic ReadOnly Property InDIR As Directory\n```\n\n#### 3. Local varaible and function parameter\nIf possible, all of the local varaible within a function or sub program and the parameters of a function, should be in format **lowerUpper**\n\n\n#### 4. Function And Type name\n\nFor **_Public_** member function, the function name is recommended in formats **UpperUpper**, but if the function is **_Private, Friend, or Protected_** visible, then your function is recommended start with two underlines, likes **\\_\\_lowerUpper**. The definition of the _Class, Structure_ names is in the same rule as function name.\n\nHere is some function name examples(Example picked from [here](https://github.com/SMRUCC/GCModeller.Core/Bio.Assembly/GenomicsContext/TFDensity.vb)):\n```vbnet\n\t' Private\n\tPrivate Function __worker(Of T As I_GeneBrief)(genome As IGenomicsContextProvider(Of T),\n                                               \tgetTF As Func(Of Strands, T()),\n                                               \tgetRelated As Func(Of T, T(), Integer, T()),\n                                               \tnumTotal As Integer,\n                                               \tranges As Integer) As Density()\n\t' Public\n\tPublic Function DensityCis(Of T As I_GeneBrief)(\n                              \tgenome As IGenomicsContextProvider(Of T),\n                              \tTF As IEnumerable(Of String),\n                              \tOptional ranges As Integer = 10000) As Density()\n```\n\n![](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/vb_codestyle/FunctionNames.png)\n\n+ Interface type name should start with a upcase character **I**, like _IEnumerable_, _IList_, etc\n+ Enum type name should end with a lower case character **s**, like _MethodTypes_, _FormatStyles_\n\nAt last, for improves of the code readable, try _**Make your identifier name short enough as possible**_\n\n\n![Code standard overview example](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/vb_codestyle/codeStandard.png)\n\n## String manipulate\n###### 1. String.Format\nFor formatted a string output, then recommended used **String.Format** function or string interpolate syntax in VisualBasic language.\nAnd by using the **String.Format** function, then format control string is recommended puts in a constant variable instead of directly used in the format function:\n\n```vbnet\n\tConst OutMsg As String = \"Hello world, {0}, Right?\"\n\t' blablabla.......\n\tDim msg As String = String.Format(OutMsg, name)\n```\n\n###### 2. String contacts\nFor contacts a large amount of string tokens, the **StringBuilder** is recommended used for this job, **not recommend directly using _& operator_ to contacts a large string collection due to the reason of performance issue**.\n```vbnet\n\t' Convert the input string to a byte array and compute the hash.\n\tDim data As Byte() = md5Hash.ComputeHash(input)\n\n    ' Create a new Stringbuilder to collect the bytes\n    ' and create a string.\n    Dim sBuilder As New StringBuilder()\n\n    ' Loop through each byte of the hashed data\n    ' and format each one as a hexadecimal string.\n    For i As Integer = 0 To data.Length - 1\n    \tsBuilder.Append(data(i).ToString(\"x2\"))\n    Next i\n\n    Return sBuilder.ToString() ' Return the hexadecimal string.\n```\n\nIf you just want to contact the string, then a shared method **String.Join** is recommended used.\nIf the string tokens will be join by a specific delimiter, then using **String.Join** instead of **StringBuilder.Append**\n\n```vbnet\n\tDim tokens As String()\n\tDim sb As New StringBuilder\n\n\tFor Each s As String In tokens\n\t\tCall sb.Append(s & \" \")\n\tNext\n\tCall sb.Remove(sb.Length -1)\n```\n\nOr just use **String.Join**, this method is more clean and readable than **StringBuilder.Append**:\n\n```vbnet\n\tDim tokens As String()\n\tDim out As String = String.Join(\" \", tokens)\n```\n\n###### 3. String interpolate\nThe string interpolate syntax in VisualBasic language is recommended used for **build _SQL_ statement and _CLI_ arguments as this syntax is very easily for understand and code readable**:\n\n```vbnet\n\tDim SQL As String = $\"SELECT * FROM table WHERE id='{id}' AND ppi>{ppi}\"\n\tDim CLI As String = $\"/start /port {port} /home {PathMapper.UserHOME}\"\n```\n\nSo, using this syntax feature makes your code very easy for reading and understand the code meaning, right?\n\n#### Linq Expression\nAll of the Linq Expression is recommended execute using [**LinqAPI**](https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Microsoft.VisualBasic.Architecture.Framework/Language/Linq.vb) if the output type of the expression is a known type:\n\n![](https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/vb_codestyle/LinqStyle.png)\n\n#### Instantiation \nFor define a new object, a short format is recommended:\n```vbnet\nDim x As New <Type>\n```\n\nIf the type you want to create object instance can be initialize from its property, then the With keyword is recommended to used:\n\n```vbnet\nDim MyvaCog As MyvaCOG = \n    LinqAPI.Exec(Of MyvaCOG) <= From gene As GeneDumpInfo\n                                In GenomeBrief\n                                Select New MyvaCOG With {\n                                    .COG = gene.COG,\n                                    .QueryName = gene.LocusID,\n                                    .QueryLength = gene.Length\n                                }\n```\n\n\n## Appendix\n\nHere are tables of names that i used in my programming, and continues updated....\n\n\n#### Some common used name for common types\n\n<table class=\"table table-bordered table-striped table-condensed\">\n<thead>\n<tr><td>System.Type</td><td>Recommend Name</td><td>Example</td></tr>\n</thead>\n\t<tbody>\n        <tr>\n        <td>System.Text.StringBuilder</td>\n    \t<td>sb</td>\n        <td>\n```vbnet\nDim sb As New StringBuilder\n```\n</td>\n        </tr>\n        <tr>\n        <td>System.String</td>\n    \t<td>s, str, name, sId, id, x</td>\n        <td>\n```vbnet        \nDim s As String\nDim str As String\nDim name As String\nDim sId As String\nDim id As String\nDim x As String\n```\n    </td>\n    </tr>\n\t<tr><td>System.Integer, System.Long</td>\n    \t<td>i, j, n, x</td>\n        <td>\n```vbnet\nDim i As Integer\nDim j As Integer\nDim n As Integer\nDim x As Integer\n```\n</tr>\n\t<tr><td>System.Object</td>\n    \t<td>x, o, obj, value</td>\n        <td>\n```vbnet\nDim x As Object\nDim o As Object\nDim obj As Object\nDim value As Object\n```\n</td>\n\t</tr>\n\t\t</tbody>\n</table>\n\n#### Name for some meaning\n\n<table>\n   <tr><td>Meaning</td><td>Recommend Name</td><td>Example</td></tr>\n   <tr><td>Commandline arguments</td>\n       <td>args, CLI</td>\n       <td>\n```vbnet\nDim args As CommandLine\nDim CLI As String\nDim args As String()\n```\n</td></tr>\n\t<tr><td>SQL query</td>\n    \t<td>SQL, sql, query</td>\n        <td>\n```vbnet\nDim SQL As String = \"SELECT * FROM table LIMIT 1;\"\n```\n</td>\n    </tr>\n\t<tr><td>Iterator</td>\n    \t<td>i, j, k, l</td>\n        <td>\n```vbnet\nFor i As Integer = 0 to [stop]\n    For j As Integer = i to [stop]\n        For k As Integer = j to [stop]\n        Next\n    Next\nNext\n\nDim l As Integer = 100\n\nDo while l = 100\n    ' blablabla...\nLoop\n```\n</td>\n    </tr>\n    <tr><td>Linq query expression</td><td>LQuery</td><td>\n```vbnet\nDim LQuery = From path As String\n             In ls -l -r -wildcards(\"*.Xml\") <= DIR\n             Where InStr(path.BaseName, \"xcb\") = 1\n             Select path.LoadXml(Of KEGG.DBGET.Module)\n```\n</td>\n</tr>\n    <tr>\n    \t<td>Query Result/Function Returns</td><td>result, rtvl</td><td>\n```vbnet\nDim result As [Module] = \n    LinqAPI.Exec(Of [Module]) <= \n          From path As String\n          In ls -l -r -wildcards(\"*.Xml\") <= DIR\n          Where InStr(path.BaseName, \"xcb\") = 1\n          Select path.LoadXml(Of KEGG.DBGET.Module)\n        \nReturn result\n```\n</td>\n</tr>\n    <tr><td>Directory</td><td>DIR, out, inDIR</td><td>\n```vbnet\nDim files As IEnumerable(Of String) = \n    ls -l -r -wildcards(\"*.Xml\") <= DIR\n```\n</td>\n</tr>\n    <tr><td>json</td><td>json, JSON</td><td>\n```vbnet\nDim JSON As String = (ls -l -r -wildcards(\"*.json\") <= DIR).GetJson\n```\n</td>\n</tr>\n    <tr><td>data frame</td><td>df, ds, data</td><td>\n```vbnet\nDim df As DataFrame = DataFrame.CreateObject(path)\n```\n</td>\n</tr>\n    <tr><td>Network objects</td><td>net, network, node, nodes, edge, edges</td><td>\n```vbnet\nDim net As Network = Network.Load(DIR)\n\nnet += New Node With {\n    .Identifier = \"Linq\"\n}\nnet += New Edge With {\n    .FromNode = \"Linq\",\n    .ToNode = \"SQL\"\n}\nReturn net >> Open(\"./test.net/\")\n```\n</td>\n</tr>\n</table>","slug":"vb_codestyle","published":1,"updated":"2016-08-03T13:22:12.236Z","_id":"cipnbu3eo000m8gv4t6bbf15s","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"Code-Architecture-of-a-VisualBasic-CLI-program\"><a href=\"#Code-Architecture-of-a-VisualBasic-CLI-program\" class=\"headerlink\" title=\"Code Architecture of a VisualBasic CLI program\"></a>Code Architecture of a VisualBasic CLI program</h2><p>There is a VisualBasic application helper module that define in the namespace:<br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Microsoft.VisualBasic.Architecture.Framework/Extensions/App.vb\" target=\"_blank\" rel=\"external\">Microsoft.VisualBasic.App</a></p>\n<p><strong>A special function named <em>main</em> is the starting point of execution for all VisualBasic programs</strong>. A VisualBasic CLI application should define the <strong>Main</strong> entry point in a Module which is named <em>Program</em> and running from a Integer Function Main. By using the name of Program for the entry point module, this will makes more easily recognize of your program’s entry point.</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Module</span> Program</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> This is the main entry point of your VisualBasic application.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> Main() <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> <span class=\"built_in\">GetType</span>(CLI).RunCLI(App.CommandLine)</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Module</span></span><br></pre></td></tr></table></figure>\n<p>By using a <strong>Integer</strong> <em>Function</em> instead of <em>Sub</em> in VisualBasic, this makes your code style is more standard compare with the main function from C++.</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// blablabla...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Where, the type <strong>CLI</strong> is the CLI interface which it is a module that contains all of the CLI command of your application. And the extension function <strong>RunCLI</strong> is a CLI extension method from the VisualBasic App helper: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Microsoft.VisualBasic.Architecture.Framework/Extensions/App.vb\" target=\"_blank\" rel=\"external\">Microsoft.VisualBasic.App</a>. The property value of <strong>App.CommandLine</strong> is the commandline argument of current application that user used for start this application and calling for some <em>CLI</em> command which is exposed in <strong>CLI</strong> module.</p>\n<a id=\"more\"></a>\n<h3 id=\"How-to-define-the-CLI-module\"><a href=\"#How-to-define-the-CLI-module\" class=\"headerlink\" title=\"How to define the CLI module?\"></a>How to define the CLI module?</h3><p>A <strong>Module</strong> is a static <em>Class</em> type in the VisualBasic, and it usually used for <em>the API exportation and common method definition for a set of similarity or functional correlated utility functions</em>.</p>\n<p>And then so that the CLI module in the VisualBasic can be explained as: <strong>A module for exposed the CLI interface API to your user.</strong></p>\n<p>Here is a example:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Partial</span> <span class=\"keyword\">Module</span> CLI</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;ExportAPI(<span class=\"string\">\"/Print\"</span>, Usage:=<span class=\"string\">\"/Print /in &lt;inDIR&gt; [/ext &lt;ext&gt; /out &lt;out.Csv&gt;]\"</span>)&gt;</span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> Print(args <span class=\"keyword\">As</span> CommandLine.CommandLine) <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> ext <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = args.GetValue(<span class=\"string\">\"/ext\"</span>, <span class=\"string\">\"*.*\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> inDIR <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = args - <span class=\"string\">\"/in\"</span></span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> out <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = args.GetValue(<span class=\"string\">\"/out\"</span>, inDIR.TrimDIR &amp; <span class=\"string\">\".contents.Csv\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> files <span class=\"keyword\">As</span> IEnumerable(<span class=\"keyword\">Of</span> <span class=\"built_in\">String</span>) =</span><br><span class=\"line\">            ls - l - r - wildcards(ext) &lt;= inDIR</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> content <span class=\"keyword\">As</span> NamedValue(<span class=\"keyword\">Of</span> <span class=\"built_in\">String</span>)() =</span><br><span class=\"line\">            LinqAPI.Exec(<span class=\"keyword\">Of</span> NamedValue(<span class=\"keyword\">Of</span> <span class=\"built_in\">String</span>)) &lt;= <span class=\"keyword\">From</span> file <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">                                                      <span class=\"keyword\">In</span> files</span><br><span class=\"line\">                                                      <span class=\"keyword\">Let</span> name <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = file.BaseName</span><br><span class=\"line\">                                                      <span class=\"keyword\">Let</span> genome <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = file.ParentDirName</span><br><span class=\"line\">                                                      <span class=\"keyword\">Select</span> <span class=\"keyword\">New</span> NamedValue(<span class=\"keyword\">Of</span> <span class=\"built_in\">String</span>)(genome, name)</span><br><span class=\"line\">        <span class=\"keyword\">Return</span> content.SaveTo(out).CLICode</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Module</span></span><br></pre></td></tr></table></figure>\n<p>This example code can be found at: <a href=\"https://github.com/SMRUCC/ncbi-localblast/tree/master/Tools/CLI\" target=\"_blank\" rel=\"external\">github</a></p>\n<h3 id=\"How-to-expose-the-CLI-interface-API-in-your-application\"><a href=\"#How-to-expose-the-CLI-interface-API-in-your-application\" class=\"headerlink\" title=\"How to expose the CLI interface API in your application?\"></a>How to expose the CLI interface API in your application?</h3><p>A wrapper for parsing the commandline from your user is already been defined in namespace: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/tree/master/Microsoft.VisualBasic.Architecture.Framework/CommandLine\" target=\"_blank\" rel=\"external\"><strong>Microsoft.VisualBasic.CommandLine</strong></a></p>\n<p>And the <strong>CLI</strong> interface should define as in the format of this example:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Imports</span> Microsoft.VisualBasic.CommandLine</span><br><span class=\"line\"><span class=\"keyword\">Imports</span> Microsoft.VisualBasic.CommandLine.Reflection</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;ExportAPI(<span class=\"string\">\"/Print\"</span>, Usage:=<span class=\"string\">\"/Print /in &lt;inDIR&gt; [/ext &lt;ext&gt; /out &lt;out.Csv&gt;]\"</span>)&gt;</span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> CLI_API(args <span class=\"keyword\">As</span> CommandLine) <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Using-the-VisualBasic-CommandLine-Parser\"><a href=\"#Using-the-VisualBasic-CommandLine-Parser\" class=\"headerlink\" title=\"Using the VisualBasic CommandLine Parser\"></a>Using the VisualBasic CommandLine Parser</h3><p>For learn how to using the CommandLine Parser, we first lean the syntax of the VisualBasic commandline arguments.<br>A typical commandline arguments in VisualBasic is consist of two parts:</p>\n<ol>\n<li><em>Command Name</em></li>\n<li><em>Arguments</em></li>\n</ol>\n<p>Here is a simple example:</p>\n<pre><code>App.exe /API1 /test /msg &quot;Hello World!!!&quot; /test2-enable /test3-enable\n</code></pre><p>Where in this CLI, token <strong>App.exe</strong> is the executable file name of your application; And <strong>/API1</strong> token, is the <strong>Command Name</strong>; And then the last tokens are the parameter arguments, using the commandline in VisualBasic just like function programming in VisualBasic:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Module</span> App</span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> API1(test <span class=\"keyword\">As</span> <span class=\"built_in\">Boolean</span>, </span><br><span class=\"line\">    \t\t\t msg <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>, </span><br><span class=\"line\">    \t\t\t test2Enable <span class=\"keyword\">As</span> <span class=\"built_in\">Boolean</span>, </span><br><span class=\"line\">    \t\t\t test3Enable <span class=\"keyword\">As</span> <span class=\"built_in\">Boolean</span>) <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Module</span></span><br></pre></td></tr></table></figure>\n<p>You call your CLI command in the console terminal is just like call a function in the VisualBasic Code:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> code <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = App.API1(<span class=\"literal\">True</span>, <span class=\"string\">\"Hello World!!!\"</span>, <span class=\"literal\">True</span>, <span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n<p><strong><em>NOTE:</em> There is no order of the VisualBasic CLI arguments</strong>, so that all of these CLI examples are equals to each other:</p>\n<pre><code>App.exe /API1 /msg &quot;Hello World!!!&quot; /test2-enable /test3-enable /test\nApp.exe /API1 /msg &quot;Hello World!!!&quot; /test /test2-enable /test3-enable\nApp.exe /API1 /test /test2-enable /test3-enable /msg &quot;Hello World!!!&quot;\nApp.exe /API1 /test2-enable /test /test3-enable /msg &quot;Hello World!!!&quot;\n</code></pre><p>Simple Example of VisualBasic CLI application(Example source code at <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/tree/master/Example/CLI_Example\" target=\"_blank\" rel=\"external\">here</a>):</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Imports</span> Microsoft.VisualBasic.CommandLine</span><br><span class=\"line\"><span class=\"keyword\">Imports</span> Microsoft.VisualBasic.CommandLine.Reflection</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Module</span> Program</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> Main() <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> <span class=\"built_in\">GetType</span>(CLI).RunCLI(App.CommandLine)</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Module</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Module</span> CLI</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;ExportAPI(<span class=\"string\">\"/API1\"</span>,</span><br><span class=\"line\">         Info:=<span class=\"string\">\"Puts the brief description of this API command at here.\"</span>,</span><br><span class=\"line\">         Usage:=<span class=\"string\">\"/API1 /msg \"\"Puts the CLI usage syntax at here\"\"\"</span>,</span><br><span class=\"line\">         Example:=<span class=\"string\">\"/API1 /msg \"\"Hello world!!!\"\"\"</span>)&gt;</span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> API1(args <span class=\"keyword\">As</span> CommandLine) <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\">        <span class=\"keyword\">Call</span> Console.WriteLine(args(<span class=\"string\">\"/msg\"</span>))</span><br><span class=\"line\">        <span class=\"keyword\">Return</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Module</span></span><br></pre></td></tr></table></figure>\n<p>Here are some mostly used function in VisualBasic CLI parser<br>Example CLI is:</p>\n<pre><code>App.exe /Test-Example /b /n 52 /xml &quot;~/test.Xml&quot; /num_threads 96 /path &quot;~/tmp/test.log&quot;\n</code></pre><table>\n<thead>\n<tr>\n<th>Function</th>\n<th>Usage</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CommandLine.GetBoolean(String) As Boolean</td>\n<td>Get a boolean flag argument from the CLI</td>\n<td>Dim b As Boolean = args.GetBoolean(“/b”)</td>\n</tr>\n<tr>\n<td>CommandLine.GetInt32(String) As Integer</td>\n<td>Get a parameter value as Integer</td>\n<td>Dim n As Integer = args.GetInt32(“/n”)</td>\n</tr>\n<tr>\n<td>CommandLine.GetObject(Of T)(String, System.Func(Of String, T)) As T</td>\n<td>Get a parameter string value and then apply a string parser on it for load an .NET object</td>\n<td>Dim x As T = args.GetObject(of T)(“/xml”, AddressOf LoadXml)</td>\n</tr>\n<tr>\n<td>CommandLine.GetValue(Of T)(String, T, System.Func(Of String, T)) As T</td>\n<td>Get a parameter value, if the parameter is not exist, then default value will be returns, this method is usually used on optional value</td>\n<td>Dim n As Long = args.GetValue(“/num_threads”, 100L)</td>\n</tr>\n<tr>\n<td>CommandLine.Item(String) As String</td>\n<td>Default readonly property for read string value of a specific parameter</td>\n<td>Dim path As String = args(“/file”)</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"List-Of-T-operation-in-VisualBasic\"><a href=\"#List-Of-T-operation-in-VisualBasic\" class=\"headerlink\" title=\"List(Of T) operation in VisualBasic\"></a>List(Of T) operation in VisualBasic</h2><p>For enable this language syntax feature and using the list feature in this section, you should imports the namespace <strong>Microsoft.VisualBasic</strong> at first</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> source <span class=\"keyword\">As</span> IEnumerable(<span class=\"keyword\">Of</span> &lt;Type&gt;)</span><br><span class=\"line\"><span class=\"keyword\">Dim</span> list <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> List(<span class=\"keyword\">of</span> &lt;Type&gt;)(source)</span><br></pre></td></tr></table></figure>\n<p>For Add a new instance</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">list += New &lt;Type&gt; With &#123;</span><br><span class=\"line\">   \t.Property1 = value1,</span><br><span class=\"line\">       .Property2 = value2</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>For Add a sequence of new elements<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">list += From x As T</span><br><span class=\"line\">   \t\tIn source</span><br><span class=\"line\">   \t\tWhere True = &lt;test&gt;</span><br><span class=\"line\">           Select New &lt;Type&gt; With &#123;</span><br><span class=\"line\">           \t.Property1 = &lt;expression&gt;,</span><br><span class=\"line\">               .Property2 = &lt;expression&gt;</span><br><span class=\"line\">           &#125;</span><br></pre></td></tr></table></figure></p>\n<p>if want to removes a specific element in the list<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">list -= x</span><br></pre></td></tr></table></figure></p>\n<p>Or batch removes elements:<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">list -= <span class=\"keyword\">From</span> x <span class=\"keyword\">As</span> T</span><br><span class=\"line\">   \t\t<span class=\"keyword\">In</span> source</span><br><span class=\"line\">           <span class=\"keyword\">Where</span> <span class=\"literal\">True</span> = &lt;test&gt;</span><br><span class=\"line\">           <span class=\"keyword\">Select</span> x</span><br></pre></td></tr></table></figure></p>\n<p>Here is some example of the list <strong>+</strong> operator<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">' This add operation makes the code more easily to read and understand:</span></span><br><span class=\"line\"><span class=\"comment\">' This function returns a list of RfamHit element and it also merge a</span></span><br><span class=\"line\"><span class=\"comment\">' list of uncertainly elements into the result list at the same time</span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> GetDataFrame() <span class=\"keyword\">As</span> RfamHit() <span class=\"keyword\">Implements</span> IRfamHits.GetDataFrame</span><br><span class=\"line\">    <span class=\"keyword\">Return</span> hits.ToList(<span class=\"keyword\">Function</span>(x) <span class=\"keyword\">New</span> RfamHit(x, <span class=\"keyword\">Me</span>)) + <span class=\"keyword\">From</span> x <span class=\"keyword\">As</span> Hit</span><br><span class=\"line\">                                                         <span class=\"keyword\">In</span> Uncertain</span><br><span class=\"line\">                                                         <span class=\"keyword\">Select</span> <span class=\"keyword\">New</span> RfamHit(x, <span class=\"keyword\">Me</span>)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure></p>\n<p>And using the <strong>+</strong> operator for add a new object into the list, this syntax can makes the code more readable instead of the poorly readable code from by using method <strong>List(of T).Add</strong>:<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">genomes += New GenomeBrief With &#123;</span><br><span class=\"line\">    .Name = title,</span><br><span class=\"line\">    .Size = last.Size,</span><br><span class=\"line\">    .Y = h1</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">' Using the + operator to instead of this poorly readable function code</span><br><span class=\"line\">genomes.Add(New GenomeBrief With &#123;</span><br><span class=\"line\">        .Name = title,</span><br><span class=\"line\">        .Size = last.Size,</span><br><span class=\"line\">        .Y = h1</span><br><span class=\"line\">    &#125;)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"VisualBasic-identifer-names\"><a href=\"#VisualBasic-identifer-names\" class=\"headerlink\" title=\"VisualBasic identifer names\"></a>VisualBasic identifer names</h2><h4 id=\"1-Directory-type\"><a href=\"#1-Directory-type\" class=\"headerlink\" title=\"1. Directory type\"></a>1. Directory type</h4><p>If possible, then all of the directory path variable can be <strong>UPCASE</strong>, such as:<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> DIR <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"string\">\"/home/xieguigang/Downloads\"</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> EXPORT <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"string\">\"/usr/lib/GCModeller/\"</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-Module-variable\"><a href=\"#2-Module-variable\" class=\"headerlink\" title=\"2. Module variable\"></a>2. Module variable</h4><ul>\n<li>All of the module variable should in format like <strong>_lowerUpper</strong> if the variable is <em>private</em></li>\n<li>But if the variable is <em>Public</em> or <em>Friend</em> visible, then it should in format like <strong>UpperUpper</strong></li>\n</ul>\n<p>Here is some example:<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">' Private</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> _fileName <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> _inDIR <span class=\"keyword\">As</span> Directory</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">' Public</span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">ReadOnly</span> <span class=\"keyword\">Property</span> FileName <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">ReadOnly</span> <span class=\"keyword\">Property</span> InDIR <span class=\"keyword\">As</span> Directory</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"3-Local-varaible-and-function-parameter\"><a href=\"#3-Local-varaible-and-function-parameter\" class=\"headerlink\" title=\"3. Local varaible and function parameter\"></a>3. Local varaible and function parameter</h4><p>If possible, all of the local varaible within a function or sub program and the parameters of a function, should be in format <strong>lowerUpper</strong></p>\n<h4 id=\"4-Function-And-Type-name\"><a href=\"#4-Function-And-Type-name\" class=\"headerlink\" title=\"4. Function And Type name\"></a>4. Function And Type name</h4><p>For <strong><em>Public</em></strong> member function, the function name is recommended in formats <strong>UpperUpper</strong>, but if the function is <strong><em>Private, Friend, or Protected</em></strong> visible, then your function is recommended start with two underlines, likes <strong>__lowerUpper</strong>. The definition of the <em>Class, Structure</em> names is in the same rule as function name.</p>\n<p>Here is some function name examples(Example picked from <a href=\"https://github.com/SMRUCC/GCModeller.Core/Bio.Assembly/GenomicsContext/TFDensity.vb\" target=\"_blank\" rel=\"external\">here</a>):<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">' Private</span></span><br><span class=\"line\"><span class=\"keyword\">Private</span> <span class=\"keyword\">Function</span> __worker(<span class=\"keyword\">Of</span> T <span class=\"keyword\">As</span> I_GeneBrief)(genome <span class=\"keyword\">As</span> IGenomicsContextProvider(<span class=\"keyword\">Of</span> T),</span><br><span class=\"line\">                                              \tgetTF <span class=\"keyword\">As</span> Func(<span class=\"keyword\">Of</span> Strands, T()),</span><br><span class=\"line\">                                              \tgetRelated <span class=\"keyword\">As</span> Func(<span class=\"keyword\">Of</span> T, T(), <span class=\"built_in\">Integer</span>, T()),</span><br><span class=\"line\">                                              \tnumTotal <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span>,</span><br><span class=\"line\">                                              \tranges <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span>) <span class=\"keyword\">As</span> Density()</span><br><span class=\"line\"><span class=\"comment\">' Public</span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> DensityCis(<span class=\"keyword\">Of</span> T <span class=\"keyword\">As</span> I_GeneBrief)(</span><br><span class=\"line\">                             \tgenome <span class=\"keyword\">As</span> IGenomicsContextProvider(<span class=\"keyword\">Of</span> T),</span><br><span class=\"line\">                             \tTF <span class=\"keyword\">As</span> IEnumerable(<span class=\"keyword\">Of</span> <span class=\"built_in\">String</span>),</span><br><span class=\"line\">                             \t<span class=\"keyword\">Optional</span> ranges <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">10000</span>) <span class=\"keyword\">As</span> Density()</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/vb_codestyle/FunctionNames.png\" alt=\"\"></p>\n<ul>\n<li>Interface type name should start with a upcase character <strong>I</strong>, like <em>IEnumerable</em>, <em>IList</em>, etc</li>\n<li>Enum type name should end with a lower case character <strong>s</strong>, like <em>MethodTypes</em>, <em>FormatStyles</em></li>\n</ul>\n<p>At last, for improves of the code readable, try <em><strong>Make your identifier name short enough as possible</strong></em></p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/vb_codestyle/codeStandard.png\" alt=\"Code standard overview example\"></p>\n<h2 id=\"String-manipulate\"><a href=\"#String-manipulate\" class=\"headerlink\" title=\"String manipulate\"></a>String manipulate</h2><h6 id=\"1-String-Format\"><a href=\"#1-String-Format\" class=\"headerlink\" title=\"1. String.Format\"></a>1. String.Format</h6><p>For formatted a string output, then recommended used <strong>String.Format</strong> function or string interpolate syntax in VisualBasic language.<br>And by using the <strong>String.Format</strong> function, then format control string is recommended puts in a constant variable instead of directly used in the format function:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Const</span> OutMsg <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"string\">\"Hello world, &#123;0&#125;, Right?\"</span></span><br><span class=\"line\"><span class=\"comment\">' blablabla.......</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> msg <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"built_in\">String</span>.Format(OutMsg, name)</span><br></pre></td></tr></table></figure>\n<h6 id=\"2-String-contacts\"><a href=\"#2-String-contacts\" class=\"headerlink\" title=\"2. String contacts\"></a>2. String contacts</h6><p>For contacts a large amount of string tokens, the <strong>StringBuilder</strong> is recommended used for this job, <strong>not recommend directly using <em>&amp; operator</em> to contacts a large string collection due to the reason of performance issue</strong>.<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">' Convert the input string to a byte array and compute the hash.</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> data <span class=\"keyword\">As</span> <span class=\"built_in\">Byte</span>() = md5Hash.ComputeHash(input)</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">' Create a new Stringbuilder to collect the bytes</span></span><br><span class=\"line\">   <span class=\"comment\">' and create a string.</span></span><br><span class=\"line\">   <span class=\"keyword\">Dim</span> sBuilder <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> StringBuilder()</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">' Loop through each byte of the hashed data</span></span><br><span class=\"line\">   <span class=\"comment\">' and format each one as a hexadecimal string.</span></span><br><span class=\"line\">   <span class=\"keyword\">For</span> i <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">0</span> <span class=\"keyword\">To</span> data.Length - <span class=\"number\">1</span></span><br><span class=\"line\">   \tsBuilder.Append(data(i).ToString(<span class=\"string\">\"x2\"</span>))</span><br><span class=\"line\">   <span class=\"keyword\">Next</span> i</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">Return</span> sBuilder.ToString() <span class=\"comment\">' Return the hexadecimal string.</span></span><br></pre></td></tr></table></figure></p>\n<p>If you just want to contact the string, then a shared method <strong>String.Join</strong> is recommended used.<br>If the string tokens will be join by a specific delimiter, then using <strong>String.Join</strong> instead of <strong>StringBuilder.Append</strong></p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> tokens <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>()</span><br><span class=\"line\"><span class=\"keyword\">Dim</span> sb <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> StringBuilder</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">For</span> <span class=\"keyword\">Each</span> s <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> <span class=\"keyword\">In</span> tokens</span><br><span class=\"line\">\t<span class=\"keyword\">Call</span> sb.Append(s &amp; <span class=\"string\">\" \"</span>)</span><br><span class=\"line\"><span class=\"keyword\">Next</span></span><br><span class=\"line\"><span class=\"keyword\">Call</span> sb.Remove(sb.Length <span class=\"number\">-1</span>)</span><br></pre></td></tr></table></figure>\n<p>Or just use <strong>String.Join</strong>, this method is more clean and readable than <strong>StringBuilder.Append</strong>:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> tokens <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>()</span><br><span class=\"line\"><span class=\"keyword\">Dim</span> out <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"built_in\">String</span>.<span class=\"keyword\">Join</span>(<span class=\"string\">\" \"</span>, tokens)</span><br></pre></td></tr></table></figure>\n<h6 id=\"3-String-interpolate\"><a href=\"#3-String-interpolate\" class=\"headerlink\" title=\"3. String interpolate\"></a>3. String interpolate</h6><p>The string interpolate syntax in VisualBasic language is recommended used for <strong>build <em>SQL</em> statement and <em>CLI</em> arguments as this syntax is very easily for understand and code readable</strong>:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> SQL <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = $<span class=\"string\">\"SELECT * FROM table WHERE id='&#123;id&#125;' AND ppi&gt;&#123;ppi&#125;\"</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> CLI <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = $<span class=\"string\">\"/start /port &#123;port&#125; /home &#123;PathMapper.UserHOME&#125;\"</span></span><br></pre></td></tr></table></figure>\n<p>So, using this syntax feature makes your code very easy for reading and understand the code meaning, right?</p>\n<h4 id=\"Linq-Expression\"><a href=\"#Linq-Expression\" class=\"headerlink\" title=\"Linq Expression\"></a>Linq Expression</h4><p>All of the Linq Expression is recommended execute using <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Microsoft.VisualBasic.Architecture.Framework/Language/Linq.vb\" target=\"_blank\" rel=\"external\"><strong>LinqAPI</strong></a> if the output type of the expression is a known type:</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/vb_codestyle/LinqStyle.png\" alt=\"\"></p>\n<h4 id=\"Instantiation\"><a href=\"#Instantiation\" class=\"headerlink\" title=\"Instantiation\"></a>Instantiation</h4><p>For define a new object, a short format is recommended:<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> x <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> &lt;Type&gt;</span><br></pre></td></tr></table></figure></p>\n<p>If the type you want to create object instance can be initialize from its property, then the With keyword is recommended to used:</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Dim MyvaCog As MyvaCOG = </span><br><span class=\"line\">    LinqAPI.Exec(Of MyvaCOG) &lt;= From gene As GeneDumpInfo</span><br><span class=\"line\">                                In GenomeBrief</span><br><span class=\"line\">                                Select New MyvaCOG With &#123;</span><br><span class=\"line\">                                    .COG = gene.COG,</span><br><span class=\"line\">                                    .QueryName = gene.LocusID,</span><br><span class=\"line\">                                    .QueryLength = gene.Length</span><br><span class=\"line\">                                &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Appendix\"><a href=\"#Appendix\" class=\"headerlink\" title=\"Appendix\"></a>Appendix</h2><p>Here are tables of names that i used in my programming, and continues updated….</p>\n<h4 id=\"Some-common-used-name-for-common-types\"><a href=\"#Some-common-used-name-for-common-types\" class=\"headerlink\" title=\"Some common used name for common types\"></a>Some common used name for common types</h4><table class=\"table table-bordered table-striped table-condensed\"><br><thead><br><tr><td>System.Type</td><td>Recommend Name</td><td>Example</td></tr><br></thead><br>    <tbody><br>        <tr><br>        <td>System.Text.StringBuilder</td><br>        <td>sb</td><br>        <td><br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> sb <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> StringBuilder</span><br></pre></td></tr></table></figure><br><br></td><br>        </tr><br>        <tr><br>        <td>System.String</td><br>        <td>s, str, name, sId, id, x</td><br>        <td><br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> s <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> str <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> name <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> sId <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> id <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> x <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br></pre></td></tr></table></figure><br><br>    </td><br>    </tr><br>    <tr><td>System.Integer, System.Long</td><br>        <td>i, j, n, x</td><br>        <td><br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> i <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> j <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> n <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> x <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br></pre></td></tr></table></figure><br><br></td></tr><br>    <tr><td>System.Object</td><br>        <td>x, o, obj, value</td><br>        <td><br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> x <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> o <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> obj <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> value <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span></span><br></pre></td></tr></table></figure><br><br></td><br>    </tr><br>        </tbody><br></table>\n\n<h4 id=\"Name-for-some-meaning\"><a href=\"#Name-for-some-meaning\" class=\"headerlink\" title=\"Name for some meaning\"></a>Name for some meaning</h4><table><br>   <tr><td>Meaning</td><td>Recommend Name</td><td>Example</td></tr><br>   <tr><td>Commandline arguments</td><br>       <td>args, CLI</td><br>       <td><br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> args <span class=\"keyword\">As</span> CommandLine</span><br><span class=\"line\"><span class=\"keyword\">Dim</span> CLI <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> args <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>()</span><br></pre></td></tr></table></figure><br><br></td></tr><br>    <tr><td>SQL query</td><br>        <td>SQL, sql, query</td><br>        <td><br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> SQL <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"string\">\"SELECT * FROM table LIMIT 1;\"</span></span><br></pre></td></tr></table></figure><br><br></td><br>    </tr><br>    <tr><td>Iterator</td><br>        <td>i, j, k, l</td><br>        <td><br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">For</span> i <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">0</span> <span class=\"keyword\">to</span> [<span class=\"keyword\">stop</span>]</span><br><span class=\"line\">    <span class=\"keyword\">For</span> j <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = i <span class=\"keyword\">to</span> [<span class=\"keyword\">stop</span>]</span><br><span class=\"line\">        <span class=\"keyword\">For</span> k <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = j <span class=\"keyword\">to</span> [<span class=\"keyword\">stop</span>]</span><br><span class=\"line\">        <span class=\"keyword\">Next</span></span><br><span class=\"line\">    <span class=\"keyword\">Next</span></span><br><span class=\"line\"><span class=\"keyword\">Next</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> l <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Do</span> <span class=\"keyword\">while</span> l = <span class=\"number\">100</span></span><br><span class=\"line\">    <span class=\"comment\">' blablabla...</span></span><br><span class=\"line\"><span class=\"keyword\">Loop</span></span><br></pre></td></tr></table></figure><br><br></td><br>    </tr><br>    <tr><td>Linq query expression</td><td>LQuery</td><td><br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> LQuery = <span class=\"keyword\">From</span> path <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">             <span class=\"keyword\">In</span> ls -l -r -wildcards(<span class=\"string\">\"*.Xml\"</span>) &lt;= DIR</span><br><span class=\"line\">             <span class=\"keyword\">Where</span> InStr(path.BaseName, <span class=\"string\">\"xcb\"</span>) = <span class=\"number\">1</span></span><br><span class=\"line\">             <span class=\"keyword\">Select</span> path.LoadXml(<span class=\"keyword\">Of</span> KEGG.DBGET.<span class=\"keyword\">Module</span>)</span><br></pre></td></tr></table></figure><br><br></td><br></tr><br>    <tr><br>        <td>Query Result/Function Returns</td><td>result, rtvl</td><td><br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> result <span class=\"keyword\">As</span> [<span class=\"keyword\">Module</span>] = </span><br><span class=\"line\">    LinqAPI.Exec(<span class=\"keyword\">Of</span> [<span class=\"keyword\">Module</span>]) &lt;= </span><br><span class=\"line\">          <span class=\"keyword\">From</span> path <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">          <span class=\"keyword\">In</span> ls -l -r -wildcards(<span class=\"string\">\"*.Xml\"</span>) &lt;= DIR</span><br><span class=\"line\">          <span class=\"keyword\">Where</span> InStr(path.BaseName, <span class=\"string\">\"xcb\"</span>) = <span class=\"number\">1</span></span><br><span class=\"line\">          <span class=\"keyword\">Select</span> path.LoadXml(<span class=\"keyword\">Of</span> KEGG.DBGET.<span class=\"keyword\">Module</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"keyword\">Return</span> result</span><br></pre></td></tr></table></figure><br><br></td><br></tr><br>    <tr><td>Directory</td><td>DIR, out, inDIR</td><td><br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> files <span class=\"keyword\">As</span> IEnumerable(<span class=\"keyword\">Of</span> <span class=\"built_in\">String</span>) = </span><br><span class=\"line\">    ls -l -r -wildcards(<span class=\"string\">\"*.Xml\"</span>) &lt;= DIR</span><br></pre></td></tr></table></figure><br><br></td><br></tr><br>    <tr><td>json</td><td>json, JSON</td><td><br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> JSON <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = (ls -l -r -wildcards(<span class=\"string\">\"*.json\"</span>) &lt;= DIR).GetJson</span><br></pre></td></tr></table></figure><br><br></td><br></tr><br>    <tr><td>data frame</td><td>df, ds, data</td><td><br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> df <span class=\"keyword\">As</span> DataFrame = DataFrame.CreateObject(path)</span><br></pre></td></tr></table></figure><br><br></td><br></tr><br>    <tr><td>Network objects</td><td>net, network, node, nodes, edge, edges</td><td><br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Dim net As Network = Network.Load(DIR)</span><br><span class=\"line\"></span><br><span class=\"line\">net += New Node With &#123;</span><br><span class=\"line\">    .Identifier = \"Linq\"</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">net += New Edge With &#123;</span><br><span class=\"line\">    .FromNode = \"Linq\",</span><br><span class=\"line\">    .ToNode = \"SQL\"</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Return net &gt;&gt; Open(\"./test.net/\")</span><br></pre></td></tr></table></figure><br><br></td><br></tr><br></table>","excerpt":"<h2 id=\"Code-Architecture-of-a-VisualBasic-CLI-program\"><a href=\"#Code-Architecture-of-a-VisualBasic-CLI-program\" class=\"headerlink\" title=\"Code Architecture of a VisualBasic CLI program\"></a>Code Architecture of a VisualBasic CLI program</h2><p>There is a VisualBasic application helper module that define in the namespace:<br><a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Microsoft.VisualBasic.Architecture.Framework/Extensions/App.vb\">Microsoft.VisualBasic.App</a></p>\n<p><strong>A special function named <em>main</em> is the starting point of execution for all VisualBasic programs</strong>. A VisualBasic CLI application should define the <strong>Main</strong> entry point in a Module which is named <em>Program</em> and running from a Integer Function Main. By using the name of Program for the entry point module, this will makes more easily recognize of your program’s entry point.</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Module</span> Program</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> This is the main entry point of your VisualBasic application.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> Main() <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> <span class=\"built_in\">GetType</span>(CLI).RunCLI(App.CommandLine)</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Module</span></span><br></pre></td></tr></table></figure>\n<p>By using a <strong>Integer</strong> <em>Function</em> instead of <em>Sub</em> in VisualBasic, this makes your code style is more standard compare with the main function from C++.</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// blablabla...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Where, the type <strong>CLI</strong> is the CLI interface which it is a module that contains all of the CLI command of your application. And the extension function <strong>RunCLI</strong> is a CLI extension method from the VisualBasic App helper: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Microsoft.VisualBasic.Architecture.Framework/Extensions/App.vb\">Microsoft.VisualBasic.App</a>. The property value of <strong>App.CommandLine</strong> is the commandline argument of current application that user used for start this application and calling for some <em>CLI</em> command which is exposed in <strong>CLI</strong> module.</p>","more":"<h3 id=\"How-to-define-the-CLI-module\"><a href=\"#How-to-define-the-CLI-module\" class=\"headerlink\" title=\"How to define the CLI module?\"></a>How to define the CLI module?</h3><p>A <strong>Module</strong> is a static <em>Class</em> type in the VisualBasic, and it usually used for <em>the API exportation and common method definition for a set of similarity or functional correlated utility functions</em>.</p>\n<p>And then so that the CLI module in the VisualBasic can be explained as: <strong>A module for exposed the CLI interface API to your user.</strong></p>\n<p>Here is a example:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Partial</span> <span class=\"keyword\">Module</span> CLI</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;ExportAPI(<span class=\"string\">\"/Print\"</span>, Usage:=<span class=\"string\">\"/Print /in &lt;inDIR&gt; [/ext &lt;ext&gt; /out &lt;out.Csv&gt;]\"</span>)&gt;</span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> Print(args <span class=\"keyword\">As</span> CommandLine.CommandLine) <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> ext <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = args.GetValue(<span class=\"string\">\"/ext\"</span>, <span class=\"string\">\"*.*\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> inDIR <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = args - <span class=\"string\">\"/in\"</span></span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> out <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = args.GetValue(<span class=\"string\">\"/out\"</span>, inDIR.TrimDIR &amp; <span class=\"string\">\".contents.Csv\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> files <span class=\"keyword\">As</span> IEnumerable(<span class=\"keyword\">Of</span> <span class=\"built_in\">String</span>) =</span><br><span class=\"line\">            ls - l - r - wildcards(ext) &lt;= inDIR</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> content <span class=\"keyword\">As</span> NamedValue(<span class=\"keyword\">Of</span> <span class=\"built_in\">String</span>)() =</span><br><span class=\"line\">            LinqAPI.Exec(<span class=\"keyword\">Of</span> NamedValue(<span class=\"keyword\">Of</span> <span class=\"built_in\">String</span>)) &lt;= <span class=\"keyword\">From</span> file <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">                                                      <span class=\"keyword\">In</span> files</span><br><span class=\"line\">                                                      <span class=\"keyword\">Let</span> name <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = file.BaseName</span><br><span class=\"line\">                                                      <span class=\"keyword\">Let</span> genome <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = file.ParentDirName</span><br><span class=\"line\">                                                      <span class=\"keyword\">Select</span> <span class=\"keyword\">New</span> NamedValue(<span class=\"keyword\">Of</span> <span class=\"built_in\">String</span>)(genome, name)</span><br><span class=\"line\">        <span class=\"keyword\">Return</span> content.SaveTo(out).CLICode</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Module</span></span><br></pre></td></tr></table></figure>\n<p>This example code can be found at: <a href=\"https://github.com/SMRUCC/ncbi-localblast/tree/master/Tools/CLI\">github</a></p>\n<h3 id=\"How-to-expose-the-CLI-interface-API-in-your-application\"><a href=\"#How-to-expose-the-CLI-interface-API-in-your-application\" class=\"headerlink\" title=\"How to expose the CLI interface API in your application?\"></a>How to expose the CLI interface API in your application?</h3><p>A wrapper for parsing the commandline from your user is already been defined in namespace: <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/tree/master/Microsoft.VisualBasic.Architecture.Framework/CommandLine\"><strong>Microsoft.VisualBasic.CommandLine</strong></a></p>\n<p>And the <strong>CLI</strong> interface should define as in the format of this example:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Imports</span> Microsoft.VisualBasic.CommandLine</span><br><span class=\"line\"><span class=\"keyword\">Imports</span> Microsoft.VisualBasic.CommandLine.Reflection</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;ExportAPI(<span class=\"string\">\"/Print\"</span>, Usage:=<span class=\"string\">\"/Print /in &lt;inDIR&gt; [/ext &lt;ext&gt; /out &lt;out.Csv&gt;]\"</span>)&gt;</span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> CLI_API(args <span class=\"keyword\">As</span> CommandLine) <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Using-the-VisualBasic-CommandLine-Parser\"><a href=\"#Using-the-VisualBasic-CommandLine-Parser\" class=\"headerlink\" title=\"Using the VisualBasic CommandLine Parser\"></a>Using the VisualBasic CommandLine Parser</h3><p>For learn how to using the CommandLine Parser, we first lean the syntax of the VisualBasic commandline arguments.<br>A typical commandline arguments in VisualBasic is consist of two parts:</p>\n<ol>\n<li><em>Command Name</em></li>\n<li><em>Arguments</em></li>\n</ol>\n<p>Here is a simple example:</p>\n<pre><code>App.exe /API1 /test /msg &quot;Hello World!!!&quot; /test2-enable /test3-enable\n</code></pre><p>Where in this CLI, token <strong>App.exe</strong> is the executable file name of your application; And <strong>/API1</strong> token, is the <strong>Command Name</strong>; And then the last tokens are the parameter arguments, using the commandline in VisualBasic just like function programming in VisualBasic:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Module</span> App</span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> API1(test <span class=\"keyword\">As</span> <span class=\"built_in\">Boolean</span>, </span><br><span class=\"line\">    \t\t\t msg <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>, </span><br><span class=\"line\">    \t\t\t test2Enable <span class=\"keyword\">As</span> <span class=\"built_in\">Boolean</span>, </span><br><span class=\"line\">    \t\t\t test3Enable <span class=\"keyword\">As</span> <span class=\"built_in\">Boolean</span>) <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Module</span></span><br></pre></td></tr></table></figure>\n<p>You call your CLI command in the console terminal is just like call a function in the VisualBasic Code:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> code <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = App.API1(<span class=\"literal\">True</span>, <span class=\"string\">\"Hello World!!!\"</span>, <span class=\"literal\">True</span>, <span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n<p><strong><em>NOTE:</em> There is no order of the VisualBasic CLI arguments</strong>, so that all of these CLI examples are equals to each other:</p>\n<pre><code>App.exe /API1 /msg &quot;Hello World!!!&quot; /test2-enable /test3-enable /test\nApp.exe /API1 /msg &quot;Hello World!!!&quot; /test /test2-enable /test3-enable\nApp.exe /API1 /test /test2-enable /test3-enable /msg &quot;Hello World!!!&quot;\nApp.exe /API1 /test2-enable /test /test3-enable /msg &quot;Hello World!!!&quot;\n</code></pre><p>Simple Example of VisualBasic CLI application(Example source code at <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/tree/master/Example/CLI_Example\">here</a>):</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Imports</span> Microsoft.VisualBasic.CommandLine</span><br><span class=\"line\"><span class=\"keyword\">Imports</span> Microsoft.VisualBasic.CommandLine.Reflection</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Module</span> Program</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> Main() <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> <span class=\"built_in\">GetType</span>(CLI).RunCLI(App.CommandLine)</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Module</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Module</span> CLI</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;ExportAPI(<span class=\"string\">\"/API1\"</span>,</span><br><span class=\"line\">         Info:=<span class=\"string\">\"Puts the brief description of this API command at here.\"</span>,</span><br><span class=\"line\">         Usage:=<span class=\"string\">\"/API1 /msg \"\"Puts the CLI usage syntax at here\"\"\"</span>,</span><br><span class=\"line\">         Example:=<span class=\"string\">\"/API1 /msg \"\"Hello world!!!\"\"\"</span>)&gt;</span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> API1(args <span class=\"keyword\">As</span> CommandLine) <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\">        <span class=\"keyword\">Call</span> Console.WriteLine(args(<span class=\"string\">\"/msg\"</span>))</span><br><span class=\"line\">        <span class=\"keyword\">Return</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Module</span></span><br></pre></td></tr></table></figure>\n<p>Here are some mostly used function in VisualBasic CLI parser<br>Example CLI is:</p>\n<pre><code>App.exe /Test-Example /b /n 52 /xml &quot;~/test.Xml&quot; /num_threads 96 /path &quot;~/tmp/test.log&quot;\n</code></pre><table>\n<thead>\n<tr>\n<th>Function</th>\n<th>Usage</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CommandLine.GetBoolean(String) As Boolean</td>\n<td>Get a boolean flag argument from the CLI</td>\n<td>Dim b As Boolean = args.GetBoolean(“/b”)</td>\n</tr>\n<tr>\n<td>CommandLine.GetInt32(String) As Integer</td>\n<td>Get a parameter value as Integer</td>\n<td>Dim n As Integer = args.GetInt32(“/n”)</td>\n</tr>\n<tr>\n<td>CommandLine.GetObject(Of T)(String, System.Func(Of String, T)) As T</td>\n<td>Get a parameter string value and then apply a string parser on it for load an .NET object</td>\n<td>Dim x As T = args.GetObject(of T)(“/xml”, AddressOf LoadXml)</td>\n</tr>\n<tr>\n<td>CommandLine.GetValue(Of T)(String, T, System.Func(Of String, T)) As T</td>\n<td>Get a parameter value, if the parameter is not exist, then default value will be returns, this method is usually used on optional value</td>\n<td>Dim n As Long = args.GetValue(“/num_threads”, 100L)</td>\n</tr>\n<tr>\n<td>CommandLine.Item(String) As String</td>\n<td>Default readonly property for read string value of a specific parameter</td>\n<td>Dim path As String = args(“/file”)</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"List-Of-T-operation-in-VisualBasic\"><a href=\"#List-Of-T-operation-in-VisualBasic\" class=\"headerlink\" title=\"List(Of T) operation in VisualBasic\"></a>List(Of T) operation in VisualBasic</h2><p>For enable this language syntax feature and using the list feature in this section, you should imports the namespace <strong>Microsoft.VisualBasic</strong> at first</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> source <span class=\"keyword\">As</span> IEnumerable(<span class=\"keyword\">Of</span> &lt;Type&gt;)</span><br><span class=\"line\"><span class=\"keyword\">Dim</span> list <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> List(<span class=\"keyword\">of</span> &lt;Type&gt;)(source)</span><br></pre></td></tr></table></figure>\n<p>For Add a new instance</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">list += New &lt;Type&gt; With &#123;</span><br><span class=\"line\">   \t.Property1 = value1,</span><br><span class=\"line\">       .Property2 = value2</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>For Add a sequence of new elements<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">list += From x As T</span><br><span class=\"line\">   \t\tIn source</span><br><span class=\"line\">   \t\tWhere True = &lt;test&gt;</span><br><span class=\"line\">           Select New &lt;Type&gt; With &#123;</span><br><span class=\"line\">           \t.Property1 = &lt;expression&gt;,</span><br><span class=\"line\">               .Property2 = &lt;expression&gt;</span><br><span class=\"line\">           &#125;</span><br></pre></td></tr></table></figure></p>\n<p>if want to removes a specific element in the list<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">list -= x</span><br></pre></td></tr></table></figure></p>\n<p>Or batch removes elements:<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">list -= <span class=\"keyword\">From</span> x <span class=\"keyword\">As</span> T</span><br><span class=\"line\">   \t\t<span class=\"keyword\">In</span> source</span><br><span class=\"line\">           <span class=\"keyword\">Where</span> <span class=\"literal\">True</span> = &lt;test&gt;</span><br><span class=\"line\">           <span class=\"keyword\">Select</span> x</span><br></pre></td></tr></table></figure></p>\n<p>Here is some example of the list <strong>+</strong> operator<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">' This add operation makes the code more easily to read and understand:</span></span><br><span class=\"line\"><span class=\"comment\">' This function returns a list of RfamHit element and it also merge a</span></span><br><span class=\"line\"><span class=\"comment\">' list of uncertainly elements into the result list at the same time</span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> GetDataFrame() <span class=\"keyword\">As</span> RfamHit() <span class=\"keyword\">Implements</span> IRfamHits.GetDataFrame</span><br><span class=\"line\">    <span class=\"keyword\">Return</span> hits.ToList(<span class=\"keyword\">Function</span>(x) <span class=\"keyword\">New</span> RfamHit(x, <span class=\"keyword\">Me</span>)) + <span class=\"keyword\">From</span> x <span class=\"keyword\">As</span> Hit</span><br><span class=\"line\">                                                         <span class=\"keyword\">In</span> Uncertain</span><br><span class=\"line\">                                                         <span class=\"keyword\">Select</span> <span class=\"keyword\">New</span> RfamHit(x, <span class=\"keyword\">Me</span>)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure></p>\n<p>And using the <strong>+</strong> operator for add a new object into the list, this syntax can makes the code more readable instead of the poorly readable code from by using method <strong>List(of T).Add</strong>:<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">genomes += New GenomeBrief With &#123;</span><br><span class=\"line\">    .Name = title,</span><br><span class=\"line\">    .Size = last.Size,</span><br><span class=\"line\">    .Y = h1</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">' Using the + operator to instead of this poorly readable function code</span><br><span class=\"line\">genomes.Add(New GenomeBrief With &#123;</span><br><span class=\"line\">        .Name = title,</span><br><span class=\"line\">        .Size = last.Size,</span><br><span class=\"line\">        .Y = h1</span><br><span class=\"line\">    &#125;)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"VisualBasic-identifer-names\"><a href=\"#VisualBasic-identifer-names\" class=\"headerlink\" title=\"VisualBasic identifer names\"></a>VisualBasic identifer names</h2><h4 id=\"1-Directory-type\"><a href=\"#1-Directory-type\" class=\"headerlink\" title=\"1. Directory type\"></a>1. Directory type</h4><p>If possible, then all of the directory path variable can be <strong>UPCASE</strong>, such as:<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> DIR <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"string\">\"/home/xieguigang/Downloads\"</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> EXPORT <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"string\">\"/usr/lib/GCModeller/\"</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-Module-variable\"><a href=\"#2-Module-variable\" class=\"headerlink\" title=\"2. Module variable\"></a>2. Module variable</h4><ul>\n<li>All of the module variable should in format like <strong>_lowerUpper</strong> if the variable is <em>private</em></li>\n<li>But if the variable is <em>Public</em> or <em>Friend</em> visible, then it should in format like <strong>UpperUpper</strong></li>\n</ul>\n<p>Here is some example:<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">' Private</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> _fileName <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> _inDIR <span class=\"keyword\">As</span> Directory</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">' Public</span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">ReadOnly</span> <span class=\"keyword\">Property</span> FileName <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">ReadOnly</span> <span class=\"keyword\">Property</span> InDIR <span class=\"keyword\">As</span> Directory</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"3-Local-varaible-and-function-parameter\"><a href=\"#3-Local-varaible-and-function-parameter\" class=\"headerlink\" title=\"3. Local varaible and function parameter\"></a>3. Local varaible and function parameter</h4><p>If possible, all of the local varaible within a function or sub program and the parameters of a function, should be in format <strong>lowerUpper</strong></p>\n<h4 id=\"4-Function-And-Type-name\"><a href=\"#4-Function-And-Type-name\" class=\"headerlink\" title=\"4. Function And Type name\"></a>4. Function And Type name</h4><p>For <strong><em>Public</em></strong> member function, the function name is recommended in formats <strong>UpperUpper</strong>, but if the function is <strong><em>Private, Friend, or Protected</em></strong> visible, then your function is recommended start with two underlines, likes <strong>__lowerUpper</strong>. The definition of the <em>Class, Structure</em> names is in the same rule as function name.</p>\n<p>Here is some function name examples(Example picked from <a href=\"https://github.com/SMRUCC/GCModeller.Core/Bio.Assembly/GenomicsContext/TFDensity.vb\">here</a>):<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">' Private</span></span><br><span class=\"line\"><span class=\"keyword\">Private</span> <span class=\"keyword\">Function</span> __worker(<span class=\"keyword\">Of</span> T <span class=\"keyword\">As</span> I_GeneBrief)(genome <span class=\"keyword\">As</span> IGenomicsContextProvider(<span class=\"keyword\">Of</span> T),</span><br><span class=\"line\">                                              \tgetTF <span class=\"keyword\">As</span> Func(<span class=\"keyword\">Of</span> Strands, T()),</span><br><span class=\"line\">                                              \tgetRelated <span class=\"keyword\">As</span> Func(<span class=\"keyword\">Of</span> T, T(), <span class=\"built_in\">Integer</span>, T()),</span><br><span class=\"line\">                                              \tnumTotal <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span>,</span><br><span class=\"line\">                                              \tranges <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span>) <span class=\"keyword\">As</span> Density()</span><br><span class=\"line\"><span class=\"comment\">' Public</span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> DensityCis(<span class=\"keyword\">Of</span> T <span class=\"keyword\">As</span> I_GeneBrief)(</span><br><span class=\"line\">                             \tgenome <span class=\"keyword\">As</span> IGenomicsContextProvider(<span class=\"keyword\">Of</span> T),</span><br><span class=\"line\">                             \tTF <span class=\"keyword\">As</span> IEnumerable(<span class=\"keyword\">Of</span> <span class=\"built_in\">String</span>),</span><br><span class=\"line\">                             \t<span class=\"keyword\">Optional</span> ranges <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">10000</span>) <span class=\"keyword\">As</span> Density()</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/vb_codestyle/FunctionNames.png\" alt=\"\"></p>\n<ul>\n<li>Interface type name should start with a upcase character <strong>I</strong>, like <em>IEnumerable</em>, <em>IList</em>, etc</li>\n<li>Enum type name should end with a lower case character <strong>s</strong>, like <em>MethodTypes</em>, <em>FormatStyles</em></li>\n</ul>\n<p>At last, for improves of the code readable, try <em><strong>Make your identifier name short enough as possible</strong></em></p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/vb_codestyle/codeStandard.png\" alt=\"Code standard overview example\"></p>\n<h2 id=\"String-manipulate\"><a href=\"#String-manipulate\" class=\"headerlink\" title=\"String manipulate\"></a>String manipulate</h2><h6 id=\"1-String-Format\"><a href=\"#1-String-Format\" class=\"headerlink\" title=\"1. String.Format\"></a>1. String.Format</h6><p>For formatted a string output, then recommended used <strong>String.Format</strong> function or string interpolate syntax in VisualBasic language.<br>And by using the <strong>String.Format</strong> function, then format control string is recommended puts in a constant variable instead of directly used in the format function:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Const</span> OutMsg <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"string\">\"Hello world, &#123;0&#125;, Right?\"</span></span><br><span class=\"line\"><span class=\"comment\">' blablabla.......</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> msg <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"built_in\">String</span>.Format(OutMsg, name)</span><br></pre></td></tr></table></figure>\n<h6 id=\"2-String-contacts\"><a href=\"#2-String-contacts\" class=\"headerlink\" title=\"2. String contacts\"></a>2. String contacts</h6><p>For contacts a large amount of string tokens, the <strong>StringBuilder</strong> is recommended used for this job, <strong>not recommend directly using <em>&amp; operator</em> to contacts a large string collection due to the reason of performance issue</strong>.<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">' Convert the input string to a byte array and compute the hash.</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> data <span class=\"keyword\">As</span> <span class=\"built_in\">Byte</span>() = md5Hash.ComputeHash(input)</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">' Create a new Stringbuilder to collect the bytes</span></span><br><span class=\"line\">   <span class=\"comment\">' and create a string.</span></span><br><span class=\"line\">   <span class=\"keyword\">Dim</span> sBuilder <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> StringBuilder()</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">' Loop through each byte of the hashed data</span></span><br><span class=\"line\">   <span class=\"comment\">' and format each one as a hexadecimal string.</span></span><br><span class=\"line\">   <span class=\"keyword\">For</span> i <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">0</span> <span class=\"keyword\">To</span> data.Length - <span class=\"number\">1</span></span><br><span class=\"line\">   \tsBuilder.Append(data(i).ToString(<span class=\"string\">\"x2\"</span>))</span><br><span class=\"line\">   <span class=\"keyword\">Next</span> i</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">Return</span> sBuilder.ToString() <span class=\"comment\">' Return the hexadecimal string.</span></span><br></pre></td></tr></table></figure></p>\n<p>If you just want to contact the string, then a shared method <strong>String.Join</strong> is recommended used.<br>If the string tokens will be join by a specific delimiter, then using <strong>String.Join</strong> instead of <strong>StringBuilder.Append</strong></p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> tokens <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>()</span><br><span class=\"line\"><span class=\"keyword\">Dim</span> sb <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> StringBuilder</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">For</span> <span class=\"keyword\">Each</span> s <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> <span class=\"keyword\">In</span> tokens</span><br><span class=\"line\">\t<span class=\"keyword\">Call</span> sb.Append(s &amp; <span class=\"string\">\" \"</span>)</span><br><span class=\"line\"><span class=\"keyword\">Next</span></span><br><span class=\"line\"><span class=\"keyword\">Call</span> sb.Remove(sb.Length <span class=\"number\">-1</span>)</span><br></pre></td></tr></table></figure>\n<p>Or just use <strong>String.Join</strong>, this method is more clean and readable than <strong>StringBuilder.Append</strong>:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> tokens <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>()</span><br><span class=\"line\"><span class=\"keyword\">Dim</span> out <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"built_in\">String</span>.<span class=\"keyword\">Join</span>(<span class=\"string\">\" \"</span>, tokens)</span><br></pre></td></tr></table></figure>\n<h6 id=\"3-String-interpolate\"><a href=\"#3-String-interpolate\" class=\"headerlink\" title=\"3. String interpolate\"></a>3. String interpolate</h6><p>The string interpolate syntax in VisualBasic language is recommended used for <strong>build <em>SQL</em> statement and <em>CLI</em> arguments as this syntax is very easily for understand and code readable</strong>:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> SQL <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = $<span class=\"string\">\"SELECT * FROM table WHERE id='&#123;id&#125;' AND ppi&gt;&#123;ppi&#125;\"</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> CLI <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = $<span class=\"string\">\"/start /port &#123;port&#125; /home &#123;PathMapper.UserHOME&#125;\"</span></span><br></pre></td></tr></table></figure>\n<p>So, using this syntax feature makes your code very easy for reading and understand the code meaning, right?</p>\n<h4 id=\"Linq-Expression\"><a href=\"#Linq-Expression\" class=\"headerlink\" title=\"Linq Expression\"></a>Linq Expression</h4><p>All of the Linq Expression is recommended execute using <a href=\"https://github.com/xieguigang/VisualBasic_AppFramework/blob/master/Microsoft.VisualBasic.Architecture.Framework/Language/Linq.vb\"><strong>LinqAPI</strong></a> if the output type of the expression is a known type:</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/VisualBasic_AppFramework/master/vb_codestyle/LinqStyle.png\" alt=\"\"></p>\n<h4 id=\"Instantiation\"><a href=\"#Instantiation\" class=\"headerlink\" title=\"Instantiation\"></a>Instantiation</h4><p>For define a new object, a short format is recommended:<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> x <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> &lt;Type&gt;</span><br></pre></td></tr></table></figure></p>\n<p>If the type you want to create object instance can be initialize from its property, then the With keyword is recommended to used:</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Dim MyvaCog As MyvaCOG = </span><br><span class=\"line\">    LinqAPI.Exec(Of MyvaCOG) &lt;= From gene As GeneDumpInfo</span><br><span class=\"line\">                                In GenomeBrief</span><br><span class=\"line\">                                Select New MyvaCOG With &#123;</span><br><span class=\"line\">                                    .COG = gene.COG,</span><br><span class=\"line\">                                    .QueryName = gene.LocusID,</span><br><span class=\"line\">                                    .QueryLength = gene.Length</span><br><span class=\"line\">                                &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Appendix\"><a href=\"#Appendix\" class=\"headerlink\" title=\"Appendix\"></a>Appendix</h2><p>Here are tables of names that i used in my programming, and continues updated….</p>\n<h4 id=\"Some-common-used-name-for-common-types\"><a href=\"#Some-common-used-name-for-common-types\" class=\"headerlink\" title=\"Some common used name for common types\"></a>Some common used name for common types</h4><table class=\"table table-bordered table-striped table-condensed\"><br><thead><br><tr><td>System.Type</td><td>Recommend Name</td><td>Example</td></tr><br></thead><br>    <tbody><br>        <tr><br>        <td>System.Text.StringBuilder</td><br>        <td>sb</td><br>        <td><br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> sb <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> StringBuilder</span><br></pre></td></tr></table></figure><br><br></td><br>        </tr><br>        <tr><br>        <td>System.String</td><br>        <td>s, str, name, sId, id, x</td><br>        <td><br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> s <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> str <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> name <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> sId <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> id <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> x <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br></pre></td></tr></table></figure><br><br>    </td><br>    </tr><br>    <tr><td>System.Integer, System.Long</td><br>        <td>i, j, n, x</td><br>        <td><br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> i <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> j <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> n <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> x <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span></span><br></pre></td></tr></table></figure><br><br></tr><br>    <tr><td>System.Object</td><br>        <td>x, o, obj, value</td><br>        <td><br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> x <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> o <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> obj <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> value <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span></span><br></pre></td></tr></table></figure><br><br></td><br>    </tr><br>        </tbody><br></table>\n\n<h4 id=\"Name-for-some-meaning\"><a href=\"#Name-for-some-meaning\" class=\"headerlink\" title=\"Name for some meaning\"></a>Name for some meaning</h4><table><br>   <tr><td>Meaning</td><td>Recommend Name</td><td>Example</td></tr><br>   <tr><td>Commandline arguments</td><br>       <td>args, CLI</td><br>       <td><br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> args <span class=\"keyword\">As</span> CommandLine</span><br><span class=\"line\"><span class=\"keyword\">Dim</span> CLI <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> args <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>()</span><br></pre></td></tr></table></figure><br><br></td></tr><br>    <tr><td>SQL query</td><br>        <td>SQL, sql, query</td><br>        <td><br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> SQL <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = <span class=\"string\">\"SELECT * FROM table LIMIT 1;\"</span></span><br></pre></td></tr></table></figure><br><br></td><br>    </tr><br>    <tr><td>Iterator</td><br>        <td>i, j, k, l</td><br>        <td><br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">For</span> i <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">0</span> <span class=\"keyword\">to</span> [<span class=\"keyword\">stop</span>]</span><br><span class=\"line\">    <span class=\"keyword\">For</span> j <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = i <span class=\"keyword\">to</span> [<span class=\"keyword\">stop</span>]</span><br><span class=\"line\">        <span class=\"keyword\">For</span> k <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = j <span class=\"keyword\">to</span> [<span class=\"keyword\">stop</span>]</span><br><span class=\"line\">        <span class=\"keyword\">Next</span></span><br><span class=\"line\">    <span class=\"keyword\">Next</span></span><br><span class=\"line\"><span class=\"keyword\">Next</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> l <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Do</span> <span class=\"keyword\">while</span> l = <span class=\"number\">100</span></span><br><span class=\"line\">    <span class=\"comment\">' blablabla...</span></span><br><span class=\"line\"><span class=\"keyword\">Loop</span></span><br></pre></td></tr></table></figure><br><br></td><br>    </tr><br>    <tr><td>Linq query expression</td><td>LQuery</td><td><br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> LQuery = <span class=\"keyword\">From</span> path <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">             <span class=\"keyword\">In</span> ls -l -r -wildcards(<span class=\"string\">\"*.Xml\"</span>) &lt;= DIR</span><br><span class=\"line\">             <span class=\"keyword\">Where</span> InStr(path.BaseName, <span class=\"string\">\"xcb\"</span>) = <span class=\"number\">1</span></span><br><span class=\"line\">             <span class=\"keyword\">Select</span> path.LoadXml(<span class=\"keyword\">Of</span> KEGG.DBGET.<span class=\"keyword\">Module</span>)</span><br></pre></td></tr></table></figure><br><br></td><br></tr><br>    <tr><br>        <td>Query Result/Function Returns</td><td>result, rtvl</td><td><br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> result <span class=\"keyword\">As</span> [<span class=\"keyword\">Module</span>] = </span><br><span class=\"line\">    LinqAPI.Exec(<span class=\"keyword\">Of</span> [<span class=\"keyword\">Module</span>]) &lt;= </span><br><span class=\"line\">          <span class=\"keyword\">From</span> path <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">          <span class=\"keyword\">In</span> ls -l -r -wildcards(<span class=\"string\">\"*.Xml\"</span>) &lt;= DIR</span><br><span class=\"line\">          <span class=\"keyword\">Where</span> InStr(path.BaseName, <span class=\"string\">\"xcb\"</span>) = <span class=\"number\">1</span></span><br><span class=\"line\">          <span class=\"keyword\">Select</span> path.LoadXml(<span class=\"keyword\">Of</span> KEGG.DBGET.<span class=\"keyword\">Module</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"keyword\">Return</span> result</span><br></pre></td></tr></table></figure><br><br></td><br></tr><br>    <tr><td>Directory</td><td>DIR, out, inDIR</td><td><br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> files <span class=\"keyword\">As</span> IEnumerable(<span class=\"keyword\">Of</span> <span class=\"built_in\">String</span>) = </span><br><span class=\"line\">    ls -l -r -wildcards(<span class=\"string\">\"*.Xml\"</span>) &lt;= DIR</span><br></pre></td></tr></table></figure><br><br></td><br></tr><br>    <tr><td>json</td><td>json, JSON</td><td><br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> JSON <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = (ls -l -r -wildcards(<span class=\"string\">\"*.json\"</span>) &lt;= DIR).GetJson</span><br></pre></td></tr></table></figure><br><br></td><br></tr><br>    <tr><td>data frame</td><td>df, ds, data</td><td><br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> df <span class=\"keyword\">As</span> DataFrame = DataFrame.CreateObject(path)</span><br></pre></td></tr></table></figure><br><br></td><br></tr><br>    <tr><td>Network objects</td><td>net, network, node, nodes, edge, edges</td><td><br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Dim net As Network = Network.Load(DIR)</span><br><span class=\"line\"></span><br><span class=\"line\">net += New Node With &#123;</span><br><span class=\"line\">    .Identifier = \"Linq\"</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">net += New Edge With &#123;</span><br><span class=\"line\">    .FromNode = \"Linq\",</span><br><span class=\"line\">    .ToNode = \"SQL\"</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Return net &gt;&gt; Open(\"./test.net/\")</span><br></pre></td></tr></table></figure><br><br></td><br></tr><br></table>"},{"title":"YAML Syntax","source":"_posts/yaml.md","date":"2016-06-07T16:00:00.000Z","_content":"\nThis page provides a basic overview of correct YAML syntax, which is how Ansible playbooks (our configuration management language) are expressed.\n\nWe use YAML because it is easier for humans to read and write than other common data formats like XML or JSON. Further, there are libraries available in most programming languages for working with YAML.\n\nYou may also wish to read Playbooks at the same time to see how this is used in practice.\n\n<!--more-->\n\n## YAML Basics\nFor Ansible, nearly every YAML file starts with a list. Each item in the list is a list of key/value pairs, commonly called a “hash” or a “dictionary”. So, we need to know how to write lists and dictionaries in YAML.\n\nThere’s another small quirk to YAML. All YAML files (regardless of their association with Ansible or not) can optionally begin with --- and end with *....* This is part of the YAML format and indicates the start and end of a document.\n\nAll members of a list are lines beginning at the same indentation level starting with a \"- \" (a dash and a space):\n\n```yaml\n---\n# A list of tasty fruits\nfruits:\n    - Apple\n    - Orange\n    - Strawberry\n    - Mango\n...\n```\n\nA dictionary is represented in a simple key: value form (the colon must be followed by a space):\n\n```yaml\n# An employee record\nmartin:\n    name: Martin D'vloper\n    job: Developer\n    skill: Elite\n```\n\nMore complicated data structures are possible, such as lists of dictionaries, dictionaries whose values are lists or a mix of both:\n\n```yaml\n# Employee records\n-  martin:\n    name: Martin D'vloper\n    job: Developer\n    skills:\n      - python\n      - perl\n      - pascal\n-  tabitha:\n    name: Tabitha Bitumen\n    job: Developer\n    skills:\n      - lisp\n      - fortran\n      - erlang\n```\n\nDictionaries and lists can also be represented in an abbreviated form if you really want to:\n\n```yaml\n---\nmartin: {name: Martin D'vloper, job: Developer, skill: Elite}\nfruits: ['Apple', 'Orange', 'Strawberry', 'Mango']\n```\n\nAnsible doesn’t really use these too much, but you can also specify a boolean value (true/false) in several forms:\n\n```yaml\ncreate_key: yes\nneeds_agent: no\nknows_oop: True\nlikes_emacs: TRUE\nuses_cvs: false\n```\n\nValues can span multiple lines using | or >. Spanning multiple lines using a | will include the newlines. Using a > will ignore newlines; it’s used to make what would otherwise be a very long line easier to read and edit. In either case the indentation will be ignored. Examples are:\n\n```yaml\ninclude_newlines: |\n            exactly as you see\n            will appear these three\n            lines of poetry\n\nignore_newlines: >\n            this is really a\n            single line of text\n            despite appearances\n```\n\nLet’s combine what we learned so far in an arbitrary YAML example. This really has nothing to do with Ansible, but will give you a feel for the format:\n\n```yaml\n---\n# An employee record\nname: Martin D'vloper\njob: Developer\nskill: Elite\nemployed: True\nfoods:\n    - Apple\n    - Orange\n    - Strawberry\n    - Mango\nlanguages:\n    perl: Elite\n    python: Elite\n    pascal: Lame\neducation: |\n    4 GCSEs\n    3 A-Levels\n    BSc in the Internet of Things\n```\n\nThat’s all you really need to know about YAML to start writing Ansible playbooks.\n\n## Gotchas\nWhile YAML is generally friendly, the following is going to result in a YAML syntax error:\n\n```\nfoo: somebody said I should put a colon here: so I did\n```\n\nYou will want to quote any hash values using colons, like so:\n\n```yaml\nfoo: \"somebody said I should put a colon here: so I did\"\n```\n\nAnd then the colon will be preserved.\n\nFurther, Ansible uses “{{ var }}” for variables. If a value after a colon starts with a “{”, YAML will think it is a dictionary, so you must quote it, like so:\n\n```yaml\nfoo: \"{{ variable }}\"\n```\n\nThe same applies for strings that start or contain any YAML special characters `` [] {} : > | `` .\n\nBoolean conversion is helpful, but this can be a problem when you want a literal yes or other boolean values as a string. In these cases just use quotes:\n\n```yaml\nnon_boolean: \"yes\"\nother_string: \"False\"\n```\n\n> source: http://docs.ansible.com/ansible/YAMLSyntax.html","raw":"---\ntitle: YAML Syntax\nsource: http://docs.ansible.com/ansible/YAMLSyntax.html\ntags: [YAML,repost]\ndate: 2016-06-08\n---\n\nThis page provides a basic overview of correct YAML syntax, which is how Ansible playbooks (our configuration management language) are expressed.\n\nWe use YAML because it is easier for humans to read and write than other common data formats like XML or JSON. Further, there are libraries available in most programming languages for working with YAML.\n\nYou may also wish to read Playbooks at the same time to see how this is used in practice.\n\n<!--more-->\n\n## YAML Basics\nFor Ansible, nearly every YAML file starts with a list. Each item in the list is a list of key/value pairs, commonly called a “hash” or a “dictionary”. So, we need to know how to write lists and dictionaries in YAML.\n\nThere’s another small quirk to YAML. All YAML files (regardless of their association with Ansible or not) can optionally begin with --- and end with *....* This is part of the YAML format and indicates the start and end of a document.\n\nAll members of a list are lines beginning at the same indentation level starting with a \"- \" (a dash and a space):\n\n```yaml\n---\n# A list of tasty fruits\nfruits:\n    - Apple\n    - Orange\n    - Strawberry\n    - Mango\n...\n```\n\nA dictionary is represented in a simple key: value form (the colon must be followed by a space):\n\n```yaml\n# An employee record\nmartin:\n    name: Martin D'vloper\n    job: Developer\n    skill: Elite\n```\n\nMore complicated data structures are possible, such as lists of dictionaries, dictionaries whose values are lists or a mix of both:\n\n```yaml\n# Employee records\n-  martin:\n    name: Martin D'vloper\n    job: Developer\n    skills:\n      - python\n      - perl\n      - pascal\n-  tabitha:\n    name: Tabitha Bitumen\n    job: Developer\n    skills:\n      - lisp\n      - fortran\n      - erlang\n```\n\nDictionaries and lists can also be represented in an abbreviated form if you really want to:\n\n```yaml\n---\nmartin: {name: Martin D'vloper, job: Developer, skill: Elite}\nfruits: ['Apple', 'Orange', 'Strawberry', 'Mango']\n```\n\nAnsible doesn’t really use these too much, but you can also specify a boolean value (true/false) in several forms:\n\n```yaml\ncreate_key: yes\nneeds_agent: no\nknows_oop: True\nlikes_emacs: TRUE\nuses_cvs: false\n```\n\nValues can span multiple lines using | or >. Spanning multiple lines using a | will include the newlines. Using a > will ignore newlines; it’s used to make what would otherwise be a very long line easier to read and edit. In either case the indentation will be ignored. Examples are:\n\n```yaml\ninclude_newlines: |\n            exactly as you see\n            will appear these three\n            lines of poetry\n\nignore_newlines: >\n            this is really a\n            single line of text\n            despite appearances\n```\n\nLet’s combine what we learned so far in an arbitrary YAML example. This really has nothing to do with Ansible, but will give you a feel for the format:\n\n```yaml\n---\n# An employee record\nname: Martin D'vloper\njob: Developer\nskill: Elite\nemployed: True\nfoods:\n    - Apple\n    - Orange\n    - Strawberry\n    - Mango\nlanguages:\n    perl: Elite\n    python: Elite\n    pascal: Lame\neducation: |\n    4 GCSEs\n    3 A-Levels\n    BSc in the Internet of Things\n```\n\nThat’s all you really need to know about YAML to start writing Ansible playbooks.\n\n## Gotchas\nWhile YAML is generally friendly, the following is going to result in a YAML syntax error:\n\n```\nfoo: somebody said I should put a colon here: so I did\n```\n\nYou will want to quote any hash values using colons, like so:\n\n```yaml\nfoo: \"somebody said I should put a colon here: so I did\"\n```\n\nAnd then the colon will be preserved.\n\nFurther, Ansible uses “{{ var }}” for variables. If a value after a colon starts with a “{”, YAML will think it is a dictionary, so you must quote it, like so:\n\n```yaml\nfoo: \"{{ variable }}\"\n```\n\nThe same applies for strings that start or contain any YAML special characters `` [] {} : > | `` .\n\nBoolean conversion is helpful, but this can be a problem when you want a literal yes or other boolean values as a string. In these cases just use quotes:\n\n```yaml\nnon_boolean: \"yes\"\nother_string: \"False\"\n```\n\n> source: http://docs.ansible.com/ansible/YAMLSyntax.html","slug":"yaml","published":1,"updated":"2016-08-04T18:53:52.184Z","_id":"cipnbu3es000o8gv47rlpfgyn","comments":1,"layout":"post","photos":[],"link":"","content":"<p>This page provides a basic overview of correct YAML syntax, which is how Ansible playbooks (our configuration management language) are expressed.</p>\n<p>We use YAML because it is easier for humans to read and write than other common data formats like XML or JSON. Further, there are libraries available in most programming languages for working with YAML.</p>\n<p>You may also wish to read Playbooks at the same time to see how this is used in practice.</p>\n<a id=\"more\"></a>\n<h2 id=\"YAML-Basics\"><a href=\"#YAML-Basics\" class=\"headerlink\" title=\"YAML Basics\"></a>YAML Basics</h2><p>For Ansible, nearly every YAML file starts with a list. Each item in the list is a list of key/value pairs, commonly called a “hash” or a “dictionary”. So, we need to know how to write lists and dictionaries in YAML.</p>\n<p>There’s another small quirk to YAML. All YAML files (regardless of their association with Ansible or not) can optionally begin with — and end with <em>….</em> This is part of the YAML format and indicates the start and end of a document.</p>\n<p>All members of a list are lines beginning at the same indentation level starting with a “- “ (a dash and a space):</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"comment\"># A list of tasty fruits</span></span><br><span class=\"line\"><span class=\"attr\">fruits:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> Apple</span><br><span class=\"line\"><span class=\"bullet\">    -</span> Orange</span><br><span class=\"line\"><span class=\"bullet\">    -</span> Strawberry</span><br><span class=\"line\"><span class=\"bullet\">    -</span> Mango</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>A dictionary is represented in a simple key: value form (the colon must be followed by a space):</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># An employee record</span></span><br><span class=\"line\"><span class=\"attr\">martin:</span></span><br><span class=\"line\"><span class=\"attr\">    name:</span> Martin D<span class=\"string\">'vloper</span><br><span class=\"line\">    job: Developer</span><br><span class=\"line\">    skill: Elite</span></span><br></pre></td></tr></table></figure>\n<p>More complicated data structures are possible, such as lists of dictionaries, dictionaries whose values are lists or a mix of both:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Employee records</span></span><br><span class=\"line\"><span class=\"attr\">-  martin:</span></span><br><span class=\"line\"><span class=\"attr\">    name:</span> Martin D<span class=\"string\">'vloper</span><br><span class=\"line\">    job: Developer</span><br><span class=\"line\">    skills:</span><br><span class=\"line\">      - python</span><br><span class=\"line\">      - perl</span><br><span class=\"line\">      - pascal</span><br><span class=\"line\">-  tabitha:</span><br><span class=\"line\">    name: Tabitha Bitumen</span><br><span class=\"line\">    job: Developer</span><br><span class=\"line\">    skills:</span><br><span class=\"line\">      - lisp</span><br><span class=\"line\">      - fortran</span><br><span class=\"line\">      - erlang</span></span><br></pre></td></tr></table></figure>\n<p>Dictionaries and lists can also be represented in an abbreviated form if you really want to:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">martin:</span> &#123;name: Martin D<span class=\"string\">'vloper, job: Developer, skill: Elite&#125;</span><br><span class=\"line\">fruits: ['</span>Apple<span class=\"string\">', '</span>Orange<span class=\"string\">', '</span>Strawberry<span class=\"string\">', '</span>Mango<span class=\"string\">']</span></span><br></pre></td></tr></table></figure>\n<p>Ansible doesn’t really use these too much, but you can also specify a boolean value (true/false) in several forms:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">create_key:</span> <span class=\"literal\">yes</span></span><br><span class=\"line\"><span class=\"attr\">needs_agent:</span> <span class=\"literal\">no</span></span><br><span class=\"line\"><span class=\"attr\">knows_oop:</span> <span class=\"literal\">True</span></span><br><span class=\"line\"><span class=\"attr\">likes_emacs:</span> <span class=\"literal\">TRUE</span></span><br><span class=\"line\"><span class=\"attr\">uses_cvs:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<p>Values can span multiple lines using | or &gt;. Spanning multiple lines using a | will include the newlines. Using a &gt; will ignore newlines; it’s used to make what would otherwise be a very long line easier to read and edit. In either case the indentation will be ignored. Examples are:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">include_newlines:</span> <span class=\"string\">|</span><br><span class=\"line\">            exactly as you see</span><br><span class=\"line\">            will appear these three</span><br><span class=\"line\">            lines of poetry</span><br><span class=\"line\"></span><br><span class=\"line\"></span><span class=\"attr\">ignore_newlines:</span> <span class=\"string\">&gt;</span><br><span class=\"line\">            this is really a</span><br><span class=\"line\">            single line of text</span><br><span class=\"line\">            despite appearances</span></span><br></pre></td></tr></table></figure>\n<p>Let’s combine what we learned so far in an arbitrary YAML example. This really has nothing to do with Ansible, but will give you a feel for the format:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"comment\"># An employee record</span></span><br><span class=\"line\"><span class=\"attr\">name:</span> Martin D<span class=\"string\">'vloper</span><br><span class=\"line\">job: Developer</span><br><span class=\"line\">skill: Elite</span><br><span class=\"line\">employed: True</span><br><span class=\"line\">foods:</span><br><span class=\"line\">    - Apple</span><br><span class=\"line\">    - Orange</span><br><span class=\"line\">    - Strawberry</span><br><span class=\"line\">    - Mango</span><br><span class=\"line\">languages:</span><br><span class=\"line\">    perl: Elite</span><br><span class=\"line\">    python: Elite</span><br><span class=\"line\">    pascal: Lame</span><br><span class=\"line\">education: |</span><br><span class=\"line\">    4 GCSEs</span><br><span class=\"line\">    3 A-Levels</span><br><span class=\"line\">    BSc in the Internet of Things</span></span><br></pre></td></tr></table></figure>\n<p>That’s all you really need to know about YAML to start writing Ansible playbooks.</p>\n<h2 id=\"Gotchas\"><a href=\"#Gotchas\" class=\"headerlink\" title=\"Gotchas\"></a>Gotchas</h2><p>While YAML is generally friendly, the following is going to result in a YAML syntax error:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">foo: somebody said I should put a colon here: so I did</span><br></pre></td></tr></table></figure>\n<p>You will want to quote any hash values using colons, like so:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">foo:</span> <span class=\"string\">\"somebody said I should put a colon here: so I did\"</span></span><br></pre></td></tr></table></figure>\n<p>And then the colon will be preserved.</p>\n<p>Further, Ansible uses “” for variables. If a value after a colon starts with a “{”, YAML will think it is a dictionary, so you must quote it, like so:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">foo:</span> <span class=\"string\">\"<span class=\"template-variable\">&#123;&#123; variable &#125;&#125;</span>\"</span></span><br></pre></td></tr></table></figure>\n<p>The same applies for strings that start or contain any YAML special characters <code>[] {} : &gt; |</code> .</p>\n<p>Boolean conversion is helpful, but this can be a problem when you want a literal yes or other boolean values as a string. In these cases just use quotes:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">non_boolean:</span> <span class=\"string\">\"yes\"</span></span><br><span class=\"line\"><span class=\"attr\">other_string:</span> <span class=\"string\">\"False\"</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>source: <a href=\"http://docs.ansible.com/ansible/YAMLSyntax.html\" target=\"_blank\" rel=\"external\">http://docs.ansible.com/ansible/YAMLSyntax.html</a></p>\n</blockquote>\n","excerpt":"<p>This page provides a basic overview of correct YAML syntax, which is how Ansible playbooks (our configuration management language) are expressed.</p>\n<p>We use YAML because it is easier for humans to read and write than other common data formats like XML or JSON. Further, there are libraries available in most programming languages for working with YAML.</p>\n<p>You may also wish to read Playbooks at the same time to see how this is used in practice.</p>","more":"<h2 id=\"YAML-Basics\"><a href=\"#YAML-Basics\" class=\"headerlink\" title=\"YAML Basics\"></a>YAML Basics</h2><p>For Ansible, nearly every YAML file starts with a list. Each item in the list is a list of key/value pairs, commonly called a “hash” or a “dictionary”. So, we need to know how to write lists and dictionaries in YAML.</p>\n<p>There’s another small quirk to YAML. All YAML files (regardless of their association with Ansible or not) can optionally begin with — and end with <em>….</em> This is part of the YAML format and indicates the start and end of a document.</p>\n<p>All members of a list are lines beginning at the same indentation level starting with a “- “ (a dash and a space):</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"comment\"># A list of tasty fruits</span></span><br><span class=\"line\"><span class=\"attr\">fruits:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> Apple</span><br><span class=\"line\"><span class=\"bullet\">    -</span> Orange</span><br><span class=\"line\"><span class=\"bullet\">    -</span> Strawberry</span><br><span class=\"line\"><span class=\"bullet\">    -</span> Mango</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>A dictionary is represented in a simple key: value form (the colon must be followed by a space):</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># An employee record</span></span><br><span class=\"line\"><span class=\"attr\">martin:</span></span><br><span class=\"line\"><span class=\"attr\">    name:</span> Martin D<span class=\"string\">'vloper</span><br><span class=\"line\">    job: Developer</span><br><span class=\"line\">    skill: Elite</span></span><br></pre></td></tr></table></figure>\n<p>More complicated data structures are possible, such as lists of dictionaries, dictionaries whose values are lists or a mix of both:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Employee records</span></span><br><span class=\"line\"><span class=\"attr\">-  martin:</span></span><br><span class=\"line\"><span class=\"attr\">    name:</span> Martin D<span class=\"string\">'vloper</span><br><span class=\"line\">    job: Developer</span><br><span class=\"line\">    skills:</span><br><span class=\"line\">      - python</span><br><span class=\"line\">      - perl</span><br><span class=\"line\">      - pascal</span><br><span class=\"line\">-  tabitha:</span><br><span class=\"line\">    name: Tabitha Bitumen</span><br><span class=\"line\">    job: Developer</span><br><span class=\"line\">    skills:</span><br><span class=\"line\">      - lisp</span><br><span class=\"line\">      - fortran</span><br><span class=\"line\">      - erlang</span></span><br></pre></td></tr></table></figure>\n<p>Dictionaries and lists can also be represented in an abbreviated form if you really want to:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">martin:</span> &#123;name: Martin D<span class=\"string\">'vloper, job: Developer, skill: Elite&#125;</span><br><span class=\"line\">fruits: ['</span>Apple<span class=\"string\">', '</span>Orange<span class=\"string\">', '</span>Strawberry<span class=\"string\">', '</span>Mango<span class=\"string\">']</span></span><br></pre></td></tr></table></figure>\n<p>Ansible doesn’t really use these too much, but you can also specify a boolean value (true/false) in several forms:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">create_key:</span> <span class=\"literal\">yes</span></span><br><span class=\"line\"><span class=\"attr\">needs_agent:</span> <span class=\"literal\">no</span></span><br><span class=\"line\"><span class=\"attr\">knows_oop:</span> <span class=\"literal\">True</span></span><br><span class=\"line\"><span class=\"attr\">likes_emacs:</span> <span class=\"literal\">TRUE</span></span><br><span class=\"line\"><span class=\"attr\">uses_cvs:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<p>Values can span multiple lines using | or &gt;. Spanning multiple lines using a | will include the newlines. Using a &gt; will ignore newlines; it’s used to make what would otherwise be a very long line easier to read and edit. In either case the indentation will be ignored. Examples are:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">include_newlines:</span> <span class=\"string\">|</span><br><span class=\"line\">            exactly as you see</span><br><span class=\"line\">            will appear these three</span><br><span class=\"line\">            lines of poetry</span><br><span class=\"line\"></span><br><span class=\"line\"></span><span class=\"attr\">ignore_newlines:</span> <span class=\"string\">&gt;</span><br><span class=\"line\">            this is really a</span><br><span class=\"line\">            single line of text</span><br><span class=\"line\">            despite appearances</span></span><br></pre></td></tr></table></figure>\n<p>Let’s combine what we learned so far in an arbitrary YAML example. This really has nothing to do with Ansible, but will give you a feel for the format:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"comment\"># An employee record</span></span><br><span class=\"line\"><span class=\"attr\">name:</span> Martin D<span class=\"string\">'vloper</span><br><span class=\"line\">job: Developer</span><br><span class=\"line\">skill: Elite</span><br><span class=\"line\">employed: True</span><br><span class=\"line\">foods:</span><br><span class=\"line\">    - Apple</span><br><span class=\"line\">    - Orange</span><br><span class=\"line\">    - Strawberry</span><br><span class=\"line\">    - Mango</span><br><span class=\"line\">languages:</span><br><span class=\"line\">    perl: Elite</span><br><span class=\"line\">    python: Elite</span><br><span class=\"line\">    pascal: Lame</span><br><span class=\"line\">education: |</span><br><span class=\"line\">    4 GCSEs</span><br><span class=\"line\">    3 A-Levels</span><br><span class=\"line\">    BSc in the Internet of Things</span></span><br></pre></td></tr></table></figure>\n<p>That’s all you really need to know about YAML to start writing Ansible playbooks.</p>\n<h2 id=\"Gotchas\"><a href=\"#Gotchas\" class=\"headerlink\" title=\"Gotchas\"></a>Gotchas</h2><p>While YAML is generally friendly, the following is going to result in a YAML syntax error:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">foo: somebody said I should put a colon here: so I did</span><br></pre></td></tr></table></figure>\n<p>You will want to quote any hash values using colons, like so:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">foo:</span> <span class=\"string\">\"somebody said I should put a colon here: so I did\"</span></span><br></pre></td></tr></table></figure>\n<p>And then the colon will be preserved.</p>\n<p>Further, Ansible uses “” for variables. If a value after a colon starts with a “{”, YAML will think it is a dictionary, so you must quote it, like so:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">foo:</span> <span class=\"string\">\"<span class=\"template-variable\">&#123;&#123; variable &#125;&#125;</span>\"</span></span><br></pre></td></tr></table></figure>\n<p>The same applies for strings that start or contain any YAML special characters <code>[] {} : &gt; |</code> .</p>\n<p>Boolean conversion is helpful, but this can be a problem when you want a literal yes or other boolean values as a string. In these cases just use quotes:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">non_boolean:</span> <span class=\"string\">\"yes\"</span></span><br><span class=\"line\"><span class=\"attr\">other_string:</span> <span class=\"string\">\"False\"</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>source: <a href=\"http://docs.ansible.com/ansible/YAMLSyntax.html\">http://docs.ansible.com/ansible/YAMLSyntax.html</a></p>\n</blockquote>"},{"title":"Re:从零开始的异世界生活 的蕾姆","date":"2016-06-19T16:00:00.000Z","_content":"\n> “胆小鬼连幸福都会害怕，碰到棉花都会受伤，有时还会被幸福所伤。”\n\n当看见了这句话，我发现我又为自己找到了一个辩护的理由了。而我为什么会如此喜欢蕾姆，在全部人都否定昴（包括昴自己）的时候。只有蕾姆始终相信着昴，一直陪着他。（不知道这样算不算剧透）我就是喜欢上这样的蕾姆。那个在你最失落的时候陪着你的人，如果有的话，请你好好的珍惜。\n然而现实是我们是孤独的，然而现实是我们只能独享自己最失落的时光，然而现实是蕾姆只是画里女孩，然而现实是我们的努力只会让我们成为成功的孤独者。\n结论：孤独才是真理，人至少还可以享受寂寞。二次元之所以是二次元，是因为它们让我们有了莫名的期待。\n(苦笑)@亚连c\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/c/Rem.png)\n\n<!--more-->\n\n> <iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"http://music.163.com/outchain/player?type=2&id=413961906&auto=1&height=66\"></iframe>\n> TV动画《**Re:从零开始异世界生活**》片尾曲 / TVアニメ「Re:ゼロから始める異世界生活」EDテーマ","source":"_posts/rem.md","raw":"---\ntitle: Re:从零开始的异世界生活 的蕾姆\ntags: [re0,rem, note]\ndate: 2016-06-20\n---\n\n> “胆小鬼连幸福都会害怕，碰到棉花都会受伤，有时还会被幸福所伤。”\n\n当看见了这句话，我发现我又为自己找到了一个辩护的理由了。而我为什么会如此喜欢蕾姆，在全部人都否定昴（包括昴自己）的时候。只有蕾姆始终相信着昴，一直陪着他。（不知道这样算不算剧透）我就是喜欢上这样的蕾姆。那个在你最失落的时候陪着你的人，如果有的话，请你好好的珍惜。\n然而现实是我们是孤独的，然而现实是我们只能独享自己最失落的时光，然而现实是蕾姆只是画里女孩，然而现实是我们的努力只会让我们成为成功的孤独者。\n结论：孤独才是真理，人至少还可以享受寂寞。二次元之所以是二次元，是因为它们让我们有了莫名的期待。\n(苦笑)@亚连c\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/c/Rem.png)\n\n<!--more-->\n\n> <iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"http://music.163.com/outchain/player?type=2&id=413961906&auto=1&height=66\"></iframe>\n> TV动画《**Re:从零开始异世界生活**》片尾曲 / TVアニメ「Re:ゼロから始める異世界生活」EDテーマ","slug":"rem","published":1,"updated":"2016-08-03T13:23:00.731Z","_id":"cipnjencz0000sgv4k11rnh9a","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>“胆小鬼连幸福都会害怕，碰到棉花都会受伤，有时还会被幸福所伤。”</p>\n</blockquote>\n<p>当看见了这句话，我发现我又为自己找到了一个辩护的理由了。而我为什么会如此喜欢蕾姆，在全部人都否定昴（包括昴自己）的时候。只有蕾姆始终相信着昴，一直陪着他。（不知道这样算不算剧透）我就是喜欢上这样的蕾姆。那个在你最失落的时候陪着你的人，如果有的话，请你好好的珍惜。<br>然而现实是我们是孤独的，然而现实是我们只能独享自己最失落的时光，然而现实是蕾姆只是画里女孩，然而现实是我们的努力只会让我们成为成功的孤独者。<br>结论：孤独才是真理，人至少还可以享受寂寞。二次元之所以是二次元，是因为它们让我们有了莫名的期待。<br>(苦笑)@亚连c</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/c/Rem.png\" alt=\"\"></p>\n<a id=\"more\"></a>\n<blockquote>\n<p><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"http://music.163.com/outchain/player?type=2&id=413961906&auto=1&height=66\"></iframe><br>TV动画《<strong>Re:从零开始异世界生活</strong>》片尾曲 / TVアニメ「Re:ゼロから始める異世界生活」EDテーマ</p>\n</blockquote>\n","excerpt":"<blockquote>\n<p>“胆小鬼连幸福都会害怕，碰到棉花都会受伤，有时还会被幸福所伤。”</p>\n</blockquote>\n<p>当看见了这句话，我发现我又为自己找到了一个辩护的理由了。而我为什么会如此喜欢蕾姆，在全部人都否定昴（包括昴自己）的时候。只有蕾姆始终相信着昴，一直陪着他。（不知道这样算不算剧透）我就是喜欢上这样的蕾姆。那个在你最失落的时候陪着你的人，如果有的话，请你好好的珍惜。<br>然而现实是我们是孤独的，然而现实是我们只能独享自己最失落的时光，然而现实是蕾姆只是画里女孩，然而现实是我们的努力只会让我们成为成功的孤独者。<br>结论：孤独才是真理，人至少还可以享受寂寞。二次元之所以是二次元，是因为它们让我们有了莫名的期待。<br>(苦笑)@亚连c</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/c/Rem.png\" alt=\"\"></p>","more":"<blockquote>\n<p><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"http://music.163.com/outchain/player?type=2&id=413961906&auto=1&height=66\"></iframe><br>TV动画《<strong>Re:从零开始异世界生活</strong>》片尾曲 / TVアニメ「Re:ゼロから始める異世界生活」EDテーマ</p>\n</blockquote>"},{"title":"XAML","date":"2016-05-31T16:00:00.000Z","_content":"\n## XAML定义\n\n``XAML``是一种相对简单、通用的声明式编程语言，它适合于构建和初始化.NET对象。\n``XAML``仅仅是一种使用.NET API的方式，把它与HTML、可伸缩向量图形（SVG）或其他特定领域的格式或语言作比较是完全错误的。XAML由一些规则（告诉解析器和编译器如何处理XML）和一些关键字组成，但它自己没有任何有意义的元素。因此，如果在没有WPF这样的框架的基础上讨论XAML，就如同在没有.NET Framework的基础上讨论VisualBasic一样。\n``XAML``在WPF中扮演的角色通常是令人困惑的，因此第一件要搞清楚的事情是WPF和XAML可以独立使用，它们并不是互相依赖的。虽然XAML最初是为WPF而设计，但它也可以应用于其他技术（如WF）。由于XAML的通用性，实际上可以把它应用于任何.NET技术。然而，是否在使用WPF时使用XAML是可选的，每一件XAML能做的事情完全可以由任何一种你喜欢的.NET语言来实现（但反过来则不行）。但是，由于XAML的诸多好处，很少会看到现实世界中使用WPF却不使用XAML的情况。\n\n<!--more-->\n\n## 元素和特性\n\nXAML规范定义了一些规则，用于把.NET命名空间、类型、属性和事件映射为XML命名空间、元素和特性。以下面为例，它定义了一个WPF按钮，跟另一段与之功能一致的VisualBasic代码比较一下：\n\n```xml\n<Button xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" Content=\"OK\" Click=\"button_Click\"/>\n```\n\n```vbnet\nDim b As New System.Window.Controls.Button()\nb.Content = \"OK\"\nAddHandler b.Click, AddressOf button_Click\n```\n\n虽然这两段代码功能是相同的，但如果去除掉``XAML``中的``Click``特性，你可以很快地在IE浏览器中查看``XAML``，还会看到一个活生生的按钮放在浏览器窗口中。而VisualBasic代码则必须要额外的代码编译方可使用。\n在XAML中定义一个XML元素（叫作对象元素）与在.NET中实例化一个对应的对象（总是使用默认的构造函数）是等价的。设置对象元素的一个特性（attribute），与设置一个同名属性（property attribute，称为属性特性）或者为一个同名事件设置一个事件处理程序（也称为事件特性），也是等价的。\n\n## 生成和事件处理的顺序\n\n在运行时（run-time）模式下，为任何一个``XAML``声明的对象设置属性之前，总要添加一些事件处理程序，这样就可以让某个事件在属性被设置时被触发，而不用担心XAML使用特性的顺序。\n至于多个属性集或添加多个事件处理程序，它们总会遵照一定顺序，即属性特性和事件属性是在对象元素中指定的。这一排序方式不会在实际应用中产生影响，因为.NET设计指南指出：类应该允许以任何顺序设置属性，添加事件处理程序也是如此。\n\n## 命名空间\n\n比较上述XAML代码示例和相应的VisualBasic代码示例，最神秘的地方在于XAML命名空间（[http://schemas.microsoft.com/winfx/2006/xaml/presentation](http://schemas.microsoft.com/winfx/2006/xaml/presentation)）是如何被映射到.NET命名空间（``System.Windows.Controls``）上的。该映射及其他WPF命名空间的映射是在WPF程序集中硬编码完成的，里面有好几个``Xmlns-DefinitionAttribute``自定义特性的实例。（在``schemas.microsoft.com``这个URL中不存在网页，这仅仅是一个人为设定的字符串，就像其他命名空间一样。）\n``XAML``文件的根对象元素属性指定至少一个XML命名空间，用于验证自己和子元素。你可以（在根元素或子元素上）声明额外的XML命名空间，但每一个命名空间下的标识符都必须有一个唯一的前缀。例如，WPF的XAML文件都会使用第二个命名空间加上前缀x（记作``xmlns:x``而不仅仅是``xmlns``）：\n\n```xml\nxmlns:x=http://schemas.microsoft.com/winfx/2006/xaml\n```\n\n这是XAML语言命名空间，用于映射``System.Windows.Markup``命名空间中的类型，而且它也定义了XAML编译器或解析器中的一些特殊的指令。这些指令通常是作为XAML元素的特性出现的，因此，它们看上去像宿主元素的属性，但实际上并不是如此。\n我们把[http://schemas.microfost.com/winfx/2006/xaml/presentation](http://schemas.microfost.com/winfx/2006/xaml/presentation)作为默认（主要）命名空间，把[http://schemas.microsoft.com/winfx/2006-/xaml](http://schemas.microsoft.com/winfx/2006-/xaml)作为次要命名空间。次要命名空间的前缀是``x``，这仅仅是一个规则，就像VisualBasic文件要以``Imports System``指令开始一样。你可以改写原来那个``XAML``文件，含义是相同的：\n\n```xml\n<WpfNamespace:Button xmlns:WpfNamespace=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" Content=\"OK\"/>\n```\n\n当然，从可读性来讲，在使用这些常见的命名空间的时候不需要前缀（即原始的XML命名空间），其他一些命名空间则使用一个短前缀。\n\n## 属性元素\n\n富创建是WPF的亮点之一，我们可以用``Button``来演示。你可以把任意内容放在``Button``里面，不仅限于文本，如下所示（在``Button``中嵌入了一个简单的方形来做一个VCR的停止按钮）：\n\n```vbnet\nDim b As new System.Windows.Controls.Button()\nDim r As new System.Windows.Shapes.Rectangle()\n\nr.Width = 40\nr.Height = 40\nr.Fill = System.Windows.Media.Brushes.Black\nb.Content = r  ' 将按钮中的内容设置为方格\n```\n\n``Button``的``Content``属性是``System.Object``类型的，因此它很容易被设置到40*40的``Rectangle``对象。但如何才能在XAML中用属性特性语法做相同的事呢？你该为``Content``属性设置哪种字串才能完成VisualBasic中声明的``Rectangle``功能呢？没有这样的字串，但XAML提供了一种替代的语法来设置复杂的属性值，即属性元素。如下所示：\n\n```xml\n<Button xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\">\n<Button.Content>\n    <Rectangle Height=\"40\" Width=\"40\" Fill=\"Black\"/>\n</Button.Content>\n</Button>\n```\n\n``Content``属性被设置为一个XML元素而不是XML特性，``Button.Content``中的句点用于区分对象元素（object element）与属性元素（property element）。它们总会以“**类型名，属性名TypeName.PropertyName**”的形式出现，总会包含在“类型名”对象元素中，但它们没有属于自己的特性。\n属性元素语法也可以用于简单的属性值。下面的Button使用特性设置了两个属性，它们是``Content``和``Background``：\n\n```xml\n<Button xmlns=\"http://schema.microsoft.com/winfx/2006/xaml/presentation\" Content=\"OK\" Background=\"White\"/>\n```\n\n这等同于使用元素设置该Button的两个相同的属性：\n\n```xml\n<Button xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\">\n<Button.Content>\n     OK\n</Button.Content>\n<Button.Background>\n     White\n</Button.Background>\n</Button>\n```\n\n当然，在任何可以使用特性的地方使用特性更为便捷。\n\n## 类型转换器\n\n上例XAML文件中的``white``是如何与VisualBasic中的``System.Windows.Media.Brushes.White``等价的呢？这个示例提供了一些如何使用字符串设置XAML属性的细节，这些属性的类型即不是``System.String``，也不是``System.Object``。在这种情况下，XAML解析器或编译器必须寻找一个类型转换器，该转换器知道如何将一个字符串表达式转换为一种想要的数据类型。WPF提供了许多常用数据类型的类型转换器，如``Brush``、``Color``、``FontWeight``、``Point``等，它们都派生自Type-Converter的类（如``BrushConverter``、``ColorConverter``等），你也可以为自定义的数据类型写类型转换器。与XAML语言不同，类型转换器通常支持不区分大小写的字符串。\n如果没有``Brush``类型转换器，你就必须使用属性元素语法来设置XAML中的``Background``属性，如下所示：\n\n```xml\n<Button xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" Content=\"OK\">\n<Button.Background>\n    <SolidColorBrush>\n    <SolidColorBrush.Color>\n        <Color A=\"255\" R=\"255\" G=\"255\" B=\"255\"/>\n    </SolidColorBrush.Color>\n    </SolidColorBrush>\n</Button.Background>\n</Button>\n```\n\n由上可见，类型转换器不仅增强了XAML的可读性，也使一些本来不能被表达的概念得以表达。\n下面的代码更精确地表达了运行时获取和执行适合Brush的类型转换器的过程：\n\n```vbnet\nDim b As New System.Windows.Controls.Button()\nDim brType As Type = System.ComponentModel.TypeDescriptor.GetConverter(GetType(Brush))\n\nb.Content = \"OK\"\nb.Background = brType.ConvertFromInvariantString(\"White\").As(Of Brush)\n```\n\n## 标记扩展\n\n标记扩展就像类型转换器一样，可用于扩展``XAML``的表达能力。它们都可以在运行时计算字符串特性的值，并生成一个合适的基于字符串的对象。WPF有好几个内建的标记扩展，你会发现它们都派生自本书最前面的内封中的``MarkupExtension``。\n与类型转换器不同的是，标记扩展是通过XAML的显式的、一致的语法调用的，因此，标记扩展是最好的扩展XAML的方法。\n只要特性值由花括号括起来，XAML编译器或解析器就会把它认作一个标记扩展值而不是一个普通的字符串。下面的按钮使用了3个不同的标记扩展类型，其中分别用到了3个不同的特性：\n\n```xml\n<Button xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\nxmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\nBackground=\"{x:Null}\"\nHeight=\"{x:Static SystemParameters.IconHeight}\"\nContent=\"{Binding Path=Height, RelativeSource={RelativeSource Self}}\"/>\n```\n\n每个花括号中的第一个识别符是标记扩展类的名称。按照惯例，这样的类都以``Extension``后缀结尾，但在XAML中使用它时，可以不用该后缀。在上面例子中，``NullExtension``（即``x:Null``）和``StaticExtension``（即``x:Static``）是``System.Windows.Markup``命名空间的类，因此必须使用前缀x来定位它们。``Binding``（没有``Extension``后缀）是在``System.Windows.Data``命名空间下的，因此在默认的XML命名空间下就可以找到它。\n如果标记扩展支持，可使用逗号分隔的参数来指定它的值。\n定位参数（如本例中的``SystemParameters.IconHeight``）被作为字符串参数传入扩展类的相应构造函数中。命名参数（如本例中的``Path``和``RelativeSource``）可用来在已构造好的扩展对象上设置相应名字的属性。这些属性的值可以是标记扩展值自己，也可以是文本值，它们可通过普通的类型转换过程。你可能注意到设计和使用标记扩展与设计和使用自定义特性很相似，这是被有意设计的。\n在本例中，``NullExtension``允许设置``Background``笔刷为``null``。``StaticExtension``允许使用静态属性、字段、常量和枚举值，而不使用XAML写的硬编码字面值。在这个例子中，``Button``的高度是遵循操作系统当前的图标高度设置的，这一设置可通过``System.Windows.SystemParameters``类的``IconHeight``静态字段获得。``Binding``可以把``Content``设置为与它的``Height``属性相同的值。\n如果你需要设置一个属性特性值为字面字符串（以左花括号开始），就必须将其转义，我们可通过在其前面增加一对空花括号来实现，如：\n\n```xml\n<Button xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\nContent=\"{}{This is not a markup extension!}\"/>\n```\n\n此外，也可以使用属性元素语法，因为花括号在上下文中不会有特殊的意义：\n\n```xml\n<Button xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\">\n    {This is not a markup extension}\n</Button>\n```\n\n因为标记扩展是有默认构造函数的类，它们可以与属性元素语法一起使用，如下例：\n\n```vbnet\n<Button xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\">\n<Button.Background>\n    <x:Null/>\n</Button.Background>\n<Button.Height>\n    <x:Static Member=\"SystemParameters.IconHeight\"/>\n</Button.Height>\n<Button.Content>\n    <Binding Path=\"Height\">\n    <Binding.RelativeSource>\n        <RelativeSource Mode=\"Self\"/>\n    </Binding.RelativeSource>\n    </Binding>\n</Button.Content>\n</Button>\n```\n\n该转换之所以可以执行是因为这些标记扩展都有与形参化的构造函数的实参（使用属性特性语法的定位实参）对应的属性。例如，``StaticExtension``有一个``Member``属性与之前传入到开参化构造函数中的实参意思是一样的，``RelativeSource``有一个对应于构造函数实参的``Mode``属性。\n由于标记扩展完成的实际工作对于每个扩展都是不同的。如下面的VisualBasic代码与使用``NullExtension``、``StaticExtension``和``Binding``的基于XAML表示的按钮是一个意思：\n\n```vbnet\nDim b As New System.Windows.Controls.Button()\n\n' 设置Background\nb.Background = null\n' 设置Height\nb.Height = System.Windows.SystemParameters.IconHeight\n' 设置Content\nDim binding As New System.Windows.Data.Binding()\nbinding.Path = new System.Windows.PropertyPath(\"Height\")\nbinding.RelativeSource = System.Windows.Data.RelativeSource.Self\nb.SetBinding(System.Windows.Controls.Button.ContentProperty, binding)\n```\n\n尽管如此，这里的代码与``XAML``解析器或编译器使用的机制是不同的，解析器和编译器是依靠每个标记扩展在运行时设置合适的值（本质上是通过调用每个类的``ProvideValue``方法来实现的）。与这一机制完全对应的过程式代码通常很复杂。\n\n## 对象元素的子元素\n\nXAML文件就像所有的XML文件一样，必须有一个单独的根对象元素。对象元素是可以支持子对象元素的。一个对象元素可以有3种类型的子元素：一个内容属性值，集合项，或一个能够通过类型转换到它的父元素的值。\n\n## 内容属性\n\n大多数WPF类（通过定制特性）指定了一个属性，该属性可以被设置为XML元素中的任何内容。这个属性叫作内容属性，它确实是一个让XAML呈现变得更轻便简单的捷径。从某种意义上讲，这些内容属性有点像VB中的默认属性。``Button``中的``Content``属性就是这样指定的，如：\n\n```xml\n<Button xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" Content=\"OK\"/>\n```\n\n可以被重写为：\n\n```xml\n<Button xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\">\nOK\n</Button>\n```\n\n还有更复杂的方式：\n\n```xml\n<Button xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\">\n<Button.Content>\n    <Rectangle Height=\"40\" Width=\"40\" Fill=\"Black\"/>\n</Button.Content>\n</Button>\n```\n\n可以被重写为：\n\n```xml\n<Button xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\">\n    <Rectangle Height=\"40\" Width=\"40\" Fill=\"Black\"/>\n</Button>\n```\n\n## 集合项\n\nXAML允许将项添加到支持索引的两种类型的集合中：``List``和``Dictionary``。\n\n### List\n\n``List``是实现了``System.Collection.IList``接口的集合，如``System.Collections.ArrayList``和许多WPF定义的集合类都是``List``。如，下面的XAML向``ListBox``添加了两个项，它的``Items``属性是实现了``IList``的``ItemCollection``类型：\n\n```xml\n<ListBox xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\">\n<ListBox.Items>\n     <ListBoxItem Content=\"Item 1\"/>\n     <ListBoxItem Content=\"Item 2\"/>\n</ListBox.Items>\n</ListBox>\n```\n\n因为``Items``是``ListBox``的内容属性，可以进一步简化：\n\n```xml\n<ListBox xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\">\n    <ListBoxItem Content=\"Item 1\"/>\n    <ListBoxItem Content=\"Item 2\"/>\n</ListBox>\n```\n\n### Dictionary\n\n\n``System.Windows.ResourceDictionary``是WPF中的一个常用的集合类型，它实现了``System.Collections.IDictionary``接口，能够支持在过程式代码中添加、移除枚举键/值对。下面的XAML添加了两个``Color``对象到一个``ResourceDictionary``中。\n\n```xml\n<ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\nxmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\">\n    <Color x:Key=\"1\" A=\"255\" R=\"255\" G=\"255\" B=\"255\"/>\n    <Color x:Key=\"2\" A=\"0\" R=\"0\" G=\"0\" B=\"0\"/>\n</ResourceDictionary>\n```\n\n**注意，在带有x:Key的XAML中指定的值总是被作为字符串处理的，除非使用标记扩展，但不会尝试使用类型转换。**\n\nXAML是设计用来与.NET类型系统一起工作的，你可以在其中使用任何类型的.NET对象，也可以使用自己定义的对象。但对象必须以“友好声明”的方式进行设计。如果一个类没有默认构造函数，也没有提供有用的实例属性，那么它在XAML中是无法直接使用的。\nWPF程序集都被加上了``XmlnsDefinitionAttribute``属性，这样可以将.NET命名空间映射为XAML文件中的XML命名空间，但对于那个不是专门为XAML设计的程序集又该如何处理呢？它们的类型仍然可以使用，只需要一个特殊的指令作为XML命名空间就可以了。如下例：\n\n```vbnet\nDim h As New System.Collections.Hashtable()\nh.Add(\"key1\", 1)\nh.Add(\"key2\", 2)\n```\n\n以上代码在XAML中表示为：\n\n```xml\n<collections:Hashtable xmlns:collections=\"clr-namespace:System.Collections;assembly=mscorlib\"\nxmlns:sys=\"clr-namespace:System;assembly=mscorlib\"\nxmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\">\n    <sys:Int32 x:Key=\"key1\">1</sys:Int32>\n    <sys:Int32 x:Key=\"key2\">2</sys:Int32>\n</collections:Hashtable>\n```\n\n``clr-namespace``标记允许直接在XAML中放入一个.NET命名空间。\n\n为了避免混淆，在转换子元素时，任何一个有效的XAML解析器或编译器必须遵循下面的规则：\n\n+ 如果该类型实现了IList接口，就为每个子元素调用IList.Add。\n+ 否则，如果该类型实现了IDictionary，就为每个子元素调用IDictionary.Add，在该值的键和元素中使用x:Key特性值。\n+ 否则，如果父元素支持内容属性（由System.Windows.Markup.ContentPropertyAttribute表示），而且子元素的类型与该内容属性是兼容的，就把子元素作为它的值。\n+ 否则，如果子对象是普通文本，且有类型转换器将子对象转换为父类型（没有在父元素上设置属性），则把子元素作为类型转换器的输入，将输出作为父对象的实例。\n+ 其他情况下则抛出错误。\n\n## 编译：将XAML与过程式代码混合使用\n\n大多数WPF应用程序是XAML与过程式代码的混合体。\n\n## 在运行时加载和解析XAML\n\nWPF的运行时XAML解析器公开为两个类，它们都位于``System.Windows.Markup``命名空间中：``XamlReader``和``XamlWriter``。``XamlReader``包含了一些对静态``Load``方法的重载，而``XamlWriter``包含了一些对静态``Save``方法的重载。因此，用任何一种.NET语言写的程序都可以在运行时依赖XAML，而不用程序员付出太多努力。\n\n## XamlReader\n\n``XamlReader.Load``方法的设置将解析XAML，创建合适的.NET对象，然后返回一个根元素的实例。因此，如果在当前目录下有一个XAML文件叫作MyWindow-.xaml，它包含了一个``Window``对象作为根结点，那么可以使用下面的代码来加载和获得``Window``对象。\n\n```vbnet\nDim window As Window = null\n\nUsing fs As FileStream = New FileStream(\"MyWindow.xaml\", FileMode.Open, FileAccess.Read)\n    ' 获得根元素，该元素是一个Window对象\n    Window = (Window)XamlReader.Load(fs)\nEnd Using\n```\n\n在``Load``返回之后，整个XAML文件的对象层级将在内存中被实例化，因此就不再需要XAML文件了。退出``Using``代码块后，``FileSteam``将被立即关闭。由于可向``XamlReader``传入一个任意的``Stream``（或使用另一个重载来传入``System.Xml.XmlReader``对象），所以有许多可选择的方式来获得XAML的内容。\n``XamlReader``也定义了``LoadAsync``实例方法用于异步加载和解析XAML内容。在加载大文件或网络文件时，可使用``LoadAsync``保持用户界面处于响应状态。``CancelAsync``方法用于停止处理，``LoadCompleted``事件可让我们知道处理何时完成。\n既然已有一个根元素的实例存在，就可利用适当的内容属性或集合属性来获得子元素。下面的代码假设``Window``有一个类行为``StackPanel``的子元素，Stack-Panel的第5个子对象是一个OK Button。\n\n```vbnet\nDim window As Window = Nothing\n\nUsing fs As New FileStream(\"MyWindow.xaml\", FileMode.Open, FileAccess.Read)\n    ' 获得根元素，该元素是一个Window对象\n    window = DirectCast(XamlReader.Load(fs), Window)\nEnd Using\n\n' 通过（硬编码知识）遍历子元素获取OK按钮\nDim panel As StackPanel = DirectCast(window.Content, StackPanel)\nDim okButton As Button = DirectCast(panel.Children(4), Button)\n```\n\n有了这个``Button``的引用，就可以做任何想做的事：设置额外的属性，添加事件处理程序，或执行一些无法用XAML完成的动作。\n但使用硬编码索引和其他关于用户界面结构假设的代码并不能让人满意。XAML支持元素命名，这样就可以从过程式代码中找到这些元素并放心地使用它们。\n\n## 命名XAML元素\n\nXAML语言命名空间有一个Name关键字，它是用来给元素命名的。示例如下：\n\n```xml\n<Button x:Name=\"okButton\">OK</Button>\n```\n\n上例代码可改如下：\n\n```vbnet\nDim window As Window = Nothing\n\nUsing fs As New FileStream(\"MyWindow.xaml\", FileMode.Open, FileAccess.Read)\n    ' 获得根元素，该元素是一个Window对象\n    window = DirectCast(XamlReader.Load(fs), Window)\nEnd Using\n\n' 通过按钮的名称获得OK按钮Button\nokButton = DirectCast(window.FindName(\"okButton\"), Button)\n```\n\n``FindName``并不仅仅在``Window``类中存在，在``FrameworkElement``、``FrameworkContentElement``及许多重要的WPF类的基类中也有``FindName``的定义。\n\n## 编译XAML\n\nXAML编译包括三项事件：\n\n+ 将一个XAML文件转换为一种特殊的二进制格式。\n+ 将转换好的内容作为二进制资源嵌入到正在被创建的程序集中。\n+ 执行链接操作，将XAML和过程式代码自动连接起来。\n\n如果你不在乎将XAML文件和过程式代码融合，那么只需把它添加到VS的WPF项目中来，并用界面中的Build动作来完成编译即可。但如果要编译一个XAML文件并将它与过程式代码混合，第一步要做的就是为XAML文件的根元素指定一个子类，可以用XAML语言命名空间中的Class关键字来完成。例如：\n\n```xml\n<Window xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\nxmlns=\"http://schemas.microsoft.com/winfx/2006/xaml\"\nx:Class=\"MyNamespace.MyWindow\">\n...\n</Window>\n```\n\n在一个独立的源文件中（但是在同一个项目中），可以一个子类，并添加任何想添加的成员：\n\n```vbnet\nNamespace MyNamespace\n\tPartial Class MyWindow\n\t\tInherits Window\n\t\tPublic Sub New()\n\t\t\t'一定要调用，这样才能加载XAML定义的内容\n\t\t\t\t' ...\n\t\t\tInitializeComponent()\n\t\tEnd Sub\n\t\t' Any other members can go here...\n\tEnd Class\nEnd Namespace\n\n```\n\n通常我们把这样的文件叫作代码隐藏文件。如果你引用XAML中的任何一个事件处理程序（通过事件特性，如Button的Click特性），这里就是我们定义这些事件处理程序的地方。\n当在VS中创建一个基于WPF的VisualBasic或VB项目，或当使用``Add New Item...``来添加某WPF项目时，VS会自动创建一个XAML文件，并把``x:Class``作为根元素，同时创建一个具有部分类定义的代码隐藏源文件，最后把两者连接起来，这样代码构建（build）才能顺利进行。\n\n## BAML\n\nBAML是``Binary Application Markup Language``的缩写，意思是二进制应用程序标记语言，它其实是被解析、标记化，最后转换为二进制形式的XAML。虽然大块的XAML代码可以被表示为过程式代码，但XAML到BAML的编译过程不会生成过程源代码。因此，BAML不像MSIL，它是一个压缩的声明格式，比加载和解析普通的XAML文件快，且比普通XAML文件要小。BAML仅仅是XAML编译过程的详细实现，没有任何直接公开的方法，在未来可能会被一些其他东西所取代。\n\n## 生成的源代码\n\n``x:Class``只能在要编译的XAML文件中使用。但在没有``x:Class``的情况下，编译XAML文件也是没有问题的。这意味着没有对应的代码隐藏文件，因此不能使用任何需要过程式代码才能实现的特性。\n每个生成的源文件中包含了一个由根对象元素中的``x:Class``指定的类的部分类定义。XAML文件中的每个已命名的元素在该部分类中都有一个成员（默认是私有的），这些成员的名称就是元素名称。其中还有一个``InitializeComponent``方法用于完成一大堆烦人的工作。\n\n## BAML可以反编译为XAML吗？\n\n可以，无论怎么声明，任何一个公司的.NET类实例都可以被序列化为XAML。第一个步骤是获取一个实例，这个实例是用来作为根对象的。如果你还没有这个对象，可以调用静态的``System.Windows.Application.LoadComponent``方法，如下所示：\n\n```vbnet\nDim uri As New System.Uri(\"MyWindow.xaml\", System.UriKind.Relative)\nDim window As Window = Application.LoadComponent(uri).As(Of Window)\n```\n\n由URI指定的名称并不要求物理上存在一个独立的xaml文件。当指定了一个合适的URI后，``LoadComponent``可以自动获得作为资源嵌入的BAML。实际上，VS自动生成的``InitializeComponent``方法就是调用``Application.LoadComponent``来加载嵌入的BAML。\n获得根元素的实例后，可以使用``System.Windows.Markup.XamlWrite``类来获得根元素的XAML表示。``XamlWriter``包含了5个静态``Save``方法的重载，是最简单的返回一个适当XAML字符串的方法，通过传入一个对象实例来实现。如：\n\n```vbnet\nDim xaml As String = XamlWriter.Save(window)\n```\n\n## XAML关键字\n\nXAML语言的命名空间（[http://schemas.microsoft.com/winfx/2006/xaml](http://schemas.microsoft.com/winfx/2006/xaml)）定义了一批XAML编译器或解析器必须特殊处理的关键字。它们主要控制元素如何被提供给过程式代码，但即使没有过程式代码，有一些关键字还是有用的。如``Key``、``Name``、``Class``、``Subclass``和``Code``。\n\n## WPF的重要新概念\n\n### 逻辑树与可视树\n\nXAML天生就是用来呈现用户界面的，这是由于它具有层次化的特性。在WPF中，用户界面由一个对象树构建而成，这棵树叫作逻辑树。\nWPF用户界面的逻辑树也并不一定用XAML创建，它完全可能用过程式代码来实现。\n逻辑树的概念很直观，但为什么要关注它呢？因为几乎WPF的每一方面（属性、资源、事件等）都有与逻辑树相关联的行为。如，属性值有时会沿着树自动传递给子元素，而触发的事件可以自底向上或自顶向下遍历树。\n与逻辑树类似的一个概念是可视树。可视树基本上是逻辑树的扩展，在可视树中，节点都被打散，分放到核心可视组件中。可视树提供了一些详细的可视化实现，而不是把每个元素当作一个“黑盒”。如，虽然``ListBox``从逻辑上讲是一个单独的控件，但它的默认可视呈现是由更多的原始WPF元素组成的：一个``Border``对象、两个``ScrollBar``及其他一些元素。\n并非所有的逻辑树节点都会出现在可视树中，只有从``System.Windows.Media.Visual``或``System.Windows.Media.Visual3D``派生的元素才会被包含进去。其他元素不会包含在内，因为它们自己并没有与生俱来的呈现行为。\n使用``System.Windows.LogicTreeHelper``和``System.Windows.Media.VisualTreeHelper``这两个有些对象的类可以方便地遍历逻辑树和可视树。\n\n注意：**不要根据具体的可视树写代码。逻辑树是静态的，不会受到程序员的干扰（例如动态添加/删除）元素，但只要用户切换不同的Windows主题，可视树就会改变。**\n\n遍历和打印逻辑树和可视树的示例代码：\n\n```vbnet\nImports System.Diagnostics\nImports System.Windows\nImports System.Windows.Media\n\nPublic Partial Class AboutDialog\n\tInherits Window\n\tPublic Sub New()\n\t\tIntializeComponent()\n\t\tPrintLogicalTree(0, Me)\n\tEnd Sub\n\tProtected Overrides Sub OnContentRendered(e As EventArgs)\n\t\tMyBase.OnContentRendered(e)\n\t\tPrintVisualTree(0, Me)\n\tEnd Sub\n\n\tPrivate Sub PrintLogicalTree(depth As Integer, obj As Object)\n\t\t'打印对象，使用前置空格表示深度\n\t\tDebug.WriteLine(New String(\" \", depth) & Convert.ToString(obj))\n\n\t\t'有时，叶子节点不是DependencyObject，如string\n\t\tIf Not (TypeOf obj Is DependencyObject) Then\n\t\t\tReturn\n\t\tEnd If\n\n\t\t'递归调用每个逻辑子节点\n\t\tFor Each child As Object In LogicalTreeHelper.GetChildren(TryCast(obj, DependencyObject))\n\t\t\tPrintLogicalTree(depth + 1, child)\n\t\tNext\n\tEnd Sub\n\n\tPrivate Sub PrintVisualTree(depth As Integer, obj As DependencyObject)\n\t\t'打印对象，使用前置空格表示深度\n\t\tDebug.WriteLine(New String(\" \", depth) & Convert.ToString(obj))\n\t\t'递归调用每个可视子节点\n\t\tFor i As Integer = 0 To VisualTreeHelper.GetChildrenCount(obj) - 1\n\t\t\tPrintVisualTree(depth + 1, VisualTreeHelper.GetChild(obj, i))\n\t\tNext\n\tEnd Sub\nEnd Class\n```\n\n虽然在Window的构造函数中就可以遍历逻辑树，但可视树真到Window完成至少一次布局后才会有节点，否则是空的。这也是为什么``PrintVisualTree``是在``On-ContentRendered``中调用的，因为``OnContentRendered``是在布局完成后才被调用的。\n\n### 依赖属性\n\nWPF引入了一个新的属性类型叫作依赖属性，整个WPF平台中都会使用到它，用来实现样式化、自动数据绑定、动画等。\n依赖属性在任何时刻都是依靠多个提供程序来判断它的值的。这些提供程序可以是一段一直在改变值的动画，或者一个父元素的属性值从上慢慢传递给子元素等。依赖属性的最大特征是其内建的传递变更通知的能力。\n添加这样的智能给属性，其动力在于能够声明标记中直接启用富功能。WPF友好声明设计的关键在于它使用了很多属性。例如，``Button``控件有96个公共属性。属性可以方便地在XAML中设置而不用程序代码。但如果依赖属性没有额外的垂直传递，在不写额外代码的情况下，很难在设置属性这样简单的动作中获得想要的结果。\n\n### 依赖属性的实现\n\n实际上，依赖属性仅仅是普通的.NET属性，只不过它已融入到了WPF架构中。它完全是由WPF API实现的，没有一种.NET语言天生就能理解依赖属性。\n下例展示了一个``Button``如何有效地实现一个叫``IsDefault``的依赖属性：\n\n```vbnet\nPublic Class Button : Inherits ButtonBase\n\t' 依赖属性\n\tPublic Shared ReadOnly IsDefaultProperty As DependencyProperty\n\n\tShared Sub New()\n\t\t' 注册属性\n\t\t' ...\n\t\tButton.IsDefaultProperty = DependencyProperty.Register(\n\t\t    \"IsDefault\",\n\t\t\tGetType(Boolean),\n\t\t\tGetType(Button),\n\t\t\tNew FrameworkPropertyMetadata(False, New PropertyChangedCallback(AddressOf OnIsDefaultChanged)))\n\tEnd Sub\n\n\t' .NET属性包装器（可选）\n\tPublic Property IsDefault() As Boolean\n\t\tGet\n\t\t\tReturn CBool(GetValue(Button.IsDefaultProperty))\n\t\tEnd Get\n\t\tSet\n\t\t\tSetValue(Button.IsDefaultProperty, value)\n\t\tEnd Set\n\tEnd Property\n\n\t' 属性改变的回调（可选）\n\tPrivate Shared Sub OnIsDefaultChanged(o As DependencyObject, e As DependencyPropertyChangedEventArgs)\n\t\t' ...\n\tEnd Sub\nEnd Class\n```\n\n``IsDefaultProperty``静态成员是真正的依赖属性，类型为System.Windows.DependencyProperty。按规则，所有的DependencyProperty成员都必须是public、static，并且有一个Property作为后缀。依赖属性通常调用DependencyProperty.Register静态方法创建，这样的方法需要一个名称（IsDefault）、一个属性类型（bool）及拥有这个属性的类（Button类）。通过不同的Register方法重载，你可以传入metadata（元数据）来告诉WPF如何处理该属性、如何处理属性值改变的回调、如何处理强制值转换、及如何验证值。Button会在它的静态构造函数中调用Register的重载，给依赖属性一个默认值false，并为变更通知添加一个委托。\n最后，那个叫作IsDefault的传统.NET属性会调用继承自System.Windows.DependencyObject的GetValue和SetValue方法来实现自己的访问器，System.-Windows.DependencyObject是底层基类，这是拥有依赖属性的类必须继承的。GetValue返回最后一次由SetValue设置的值，如果SetValue从未被调用过，那么就是该属性注册时的默认值。IsDefault .NET属性并不是必需的，Button的使用者可能会直接调用GetValue/SetValue方法，因为它们是公开的。\n\n注意：**在运行时，绕过了.NET属性包装器在XAML中设置依赖属性。**\n\n虽然XAML编译器在编译时是依靠该属性包装器的，但在运行时WPF是直接调用GetValue和SetValue的。因此，为让使用XAML设置属性与使用过程式代码设置属性保持一致，在属性包装器中除了GetValue/SetValue调用外，不应该包含任何其他逻辑，这是至关重要的。如果要添加自定义逻辑，应该在注册的回调函数中添加。\n表面上看，上例代码像是一种冗长的呈现简单布尔属性的方式。然而，因为GetValue和SetValue内部使用了高效的稀疏存储系统，而IsDefaultProperty是一个静态成员（而不是一个实例成员），与典型的.NET属性相比，依赖属性的实现节省了保存每个实现所需要的内存。\n依赖属性的好处远不止节约内存而已。它把相当一部分代码集中起来，并做标准化处理。\n\n### 变更通知\n\n无论何时，只要依赖属性的值变了，WPF就会自动根据属性的元数据（metadata）触发一系列动作。内建的变更通知最有趣的特性之一是属性触发器，它可以在属性值改变时执行自定义动作，而不用更改任何过程式代码。\n例如，你想让Button在鼠标移上去时变为蓝色。如果没有属性触发器的话，你要为每个Button添加两个事件处理程序，一个为MouseEvent事件准备，一个为MouseLeave事件准备。\n\n```xml\n<Button MouseEnter=\"Button_MouseEnter\" MouseLeave=\"Button_MouseLeave\" \nMinWidth=\"75\" Margin=\"10\">\n    Help</Button>\n<Button MouseEnter=\"Button_MouseEnter\" MouseLeave=\"Button_MouseLeave\" \nMinWidth=\"75\" Margin=\"10\">\n    OK</Button>\n```\n\n下面的代码实现了这两个事件处理程序：\n\n```vbnet\n\n\tPrivate Sub Button_MouseEnter(sender As Object, e As MouseEventArgs)\n\t\tDim b As Button = TryCast(sender, Button)\n\t\tIf b IsNot Nothing Then\n\t\t\tb.Foreground = Brushed.Blue\n\t\tEnd If\n\tEnd Sub\n\n\tPrivate Sub Mouse_MouseLeave(sender As Object, e As MouseEventArgs)\n\t\tDim b As Button = TryCast(sender, Button)\n\t\tIf b IsNot Nothing Then\n\t\t\tb.Foreground = Brushed.Black\n\t\tEnd If\n\tEnd Sub\n```\n\n然而有了属性触发器，完全可以在XAML中完成相同的行为：\n\n```xml\n<Button MinWidth=\"75\" Margin=\"10\">\n<Button.Style>\n    <Style TargetType=\"{x:Type Button}\">\n    <Style.Triggers>\n        <Trigger Property=\"IsMouseOver\" Value=\"True\">\n            <Setter Property=\"Foreground\" Value=\"Blue\" />\n        </Trigger>\n    </Style.Triggers>\n    </Style>\n</Button.Style>\n    OK\n</Button>\n```\n\n属性触发器仅仅是WPF支持的3种触发器之一。数据触发器是属性触发器的另一种形式，它可以在任何.NET属性中工作（而不仅仅是依赖属性）。事件触发器会通过声明方式指定动作，该动作在路由事件触发时生效。\n\n### 属性值继承\n\n术语“**属性值继承**”并不是指传统的面向对象的类继承，而是指属性值自顶向下沿着元素树传递。\n属性值的继承行为由以下两个因素决定：\n\n+ 并不是每个依赖属性都参与属性值继承。（从内部来讲，依赖属性会通过传递FrameworkPropertyMetadataOptions.Inherits给DependencyProperty-.Register方法来完成继承。\n+ 有其他一些优先级更高的源来设置这些属性值。\n\n### 对多个提供程序的支持\n\nWPF有许多强大的机制可以独立地去尝试设置依赖属性的值。如果没有设计良好的机制来处理这些完全不同的属性值提供程序，这个系统会变得混乱，属性值会变得不稳定。当然，正如它们的名字所表达的，依赖属性就是设计为以一致的、有序的方式依靠这些提供程序。\n下图展示了这5步流程，通过该流程，WPF运行每个依赖属性并最终计算出它的值。依靠依赖属性中内嵌的变更通知，这个流程才可自动发生。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/2011111212113221.gif)\n\n### 判断基础值\n\n大多数属性值提供程序会把基础值的计算纳入考虑范畴。下面的清单显示了8个提供程序，它们可以设置大多数依赖属性的值，优先级顺序从高到低为：\n\n> 本地值->样式触发器->模板触发器->样式设置程序->主题样式触发器->主题样式设置程序->属性值继承->默认值\n\n本地值技术上的含义是任何对DependencyObject.SetValue的调用，但它通常会有一个简单的属性赋值，这是用XAML或过程式代码完成的。\n默认值指的是依赖属性注册时使用的初始值。\n\n### 计算\n\n如果第一步中的值是表达式（派生自System.Windows.Expression的一个对象），那么WPF会执行一种特殊的演算步骤--把表达式转换为具体的结果。在WPF 3.0中，表达式仅在使用动态资源或数据绑定时起作用。\n\n### 应用动画\n\n如果一个或多个动画在运行，它们有能力改变当前的属性值或完全替代当前的属性值。\n\n### 限制\n\n在所有属性值提供程序处理过后，WPF将拿到一个几乎是终值的属性值，如果依赖属性已经注册了CoerceValueCallback，还会把这个属性值传递给Coerce-ValueCallback委托。该回调函数负责返回一个新的值，它是基于自定义逻辑实现的。\n\n### 验证\n\n最后，如果依赖属性已经注册了ValidateValueCallback，之前的限制中的值将被传入ValidateValueCallback委托。如果输入值有效，该回调函数返回true，否则返回false。返回false将会导致抛出一个异常，并使整个流程被取消。\n如果没办法判断依赖属性从哪里获得当前值，那么可以得到静态方法DependencyPropertyHelper.GetValueSource作为调试助手。该方法将返回一个ValueSource结构，其中包含以下一些数据：一个BaseValueSource枚举值，它反映的是基础值从哪里来的（流程中的第一步）；IsExpression、IsAnimated和IsCoerced几个布尔类型属性，它反映了第二步到第四步的信息。\n请不要在程序代码中使用这个方法，WPF以后的版本中将打破值计算的假设，会根据它的源类型采用不同的方式处理属性值，而不是根据假设WPF应用程序中的方式来处理。\n你很可能需要清除本地值，并让WPF从下一个最高优先级的提供程序中获得值，然后使用这个值来设置最终的属性值。DependencyObject提供了这样的机制，可通过调用ClearValue方法来实现。\n\n```vbnet\n' b为Button实例\nb.ClearValue(Button.ForegroundProperty)\n```\n\n``Button.ForegroundProperty``是一个``DependencyProperty``静态成员，在调用``ClearValue``后，会重新计算基础值，并把本地值从方程式中删除。\n\n### 附加属性\n\n附加属性是依赖属性的一种特殊形式，可以被有效地添加到任何对象中。这可能听上去很奇怪，但这个机制在WPF中有多种应用。\n\n类似于WinForm那样的技术，许多WPF类定义了一个Tag属性（类型是System.Object），目的是为了存储每一个实例的自定义数据。但要添加自定义数据给任何一个派生自DependencyObject的对象，附加属性是一种更加强大、更加灵活的机制。通常我们会忽略一点，即可以用附加属性高效的向密封类（sealed class）的实例添加自定义数据。\n\n另外，大家对附加属性有一个曲解，虽然在XAML中设置它们依赖于SetXXX静态方法，但可在过程式代码中绕过这个方法，直接去调用DependencyObject-.SetValue方法。这意味着在过程式代码中，可以把任何一个依赖属性作为一个附加属性。如，下面的代码把ListBox的IsTextSearchEnabled属性添加到了Button控件上，并赋予该属性一个值：\n\n```vbnet\n' 向Button添加一个不相关的属性，并把它的值设置为true\nokButton.SetValue(ListBox.IsTextSearchEnabledProperty, True)\n```\n\n虽然这似乎没有任何意义，但你可以用一种对应用程序或组件有意义的方式来随意使用这个属性值。\n\n### 路由事件\n\n正如WPF在简单的.NET属性概念上添加了许多基础的东西一样，它也为.NET事件添加了许多基础的东西。路由事件是专门设计用于在元素树中使用的事件。当路由事件触发后，它可以向上或向下遍历可视树和逻辑树，用一种简单而且持久的方式在每个元素上触发，而不需要使用任何定制代码。\n事件路由让许多程序不去留意可视树的细节（对于样式重置来说这是很不错的），并且对于成功的WPF元素创作至关重要。\n在前面的文章部分之中，对于VCR样式的Stop按钮来说，一个用户可能在Rectangle逻辑子元素上直接按下鼠标左键。由于事件遍历了逻辑树，Button元素还是会发现这个事件，并处理该事件。因此，你可以在一个元素（如Button）中嵌入任何复杂内容或设置一棵复杂的可视树，鼠标左键单击其中任何一个内部元素，仍然会触发父元素Button的Click事件。如果没有路由事件，内部内容的创造者或按钮的使用者不得不编写代码来把事件串起来。\n路由事件的实现和行为与依赖属性有许多相同的地方。\n\n### 路由事件的实现\n\n与依赖属性一样，没有一种.NET语言（除XAML外）天生具有理解路由指派的能力。\n就像依赖属性是由公共的静态DependencyProperty成员加上一个约定的Property后缀名构成的一样，路由事件也是由公共的静态RoutedEvent成员加上一个约定的Event后缀名构成的。路由事件的注册很像静态构建器中注册依赖属性，它会定义一个普通的.NET事件或一个事件包装器，这样可以保证在过程式代码中使用起来更加熟悉，并且可以在XAML中用事件特性语法添加一个事件处理程序。与属性包装器一样，事件包装器在访问器中只能调用AddHandler和RemoveHandler，而不应该做其他事件。\n\n```vbnet\nPublic Class Button\n\tInherits ButtonBase\n\t'路由事件\n\tPublic Shared ReadOnly ClickEvent As RoutedEvent\n\n\tShared Sub New()\n\t\t'注册事件\n\t\t\t' ...\n\t\tButton.ClickEvent = EventManager.RegisterRoutedEvent(\n        \"Click\", \n        RoutingStrategy.Bubble, \n        GetType(RoutedEventHandler), \n        GetType(Button))\n\tEnd Sub\n\n\t'.NET事件包装器（可选）\n\tPublic Custom Event Click As RoutedEventHandler\n\t\tAddHandler(ByVal value As RoutedEventHandler)\n\t\t\tCall [AddHandler](Button.ClickEvent, value)\n\t\tEnd AddHandler\n\t\tRemoveHandler(ByVal value As RoutedEventHandler)\n\t\t\tCall [RemoveHandler](Button.ClickEvent, value)\n\t\tEnd RemoveHandler\n\tEnd Event\n\n\tProtected Overrides Sub OnMouseLeftButtonDown(e As MouseButtonEventArgs)\n\t\t' ...\n\t\t'触发事件\n\t\tCall [RaiseEvent](New RoutedEventArgs(Button.ClickEvent, Me))\n\t\t' ...\n\tEnd Sub\n\t' ...\nEnd Class\n```\n\n这些``AddHandler``和``RemoveHandler``方法没有从DependencyObject继承，而是从System.Windows.UIElement继承的，UIElement是一个更高层的供元素（如Button元素）继承的基类。这些方法可以向一个适当的路由事件添加一个委托或从路由事件移除一个委托。在``OnMouseLeftButtonDown``中，它使用适当的RoutedEvent成员调用RaiseEvent来触发Click事件。当前的Button实例（this）被传递给事件的源元素（source element）。在代码清单中没有列出，但是作为对KeyDown事件的响应，Button的Click事件将被触发，这样就可以处理由空格健或回车键完成点击动作的情况。\n\n### 路由策略和事件处理程序\n\n当注册完成后，每个路由事件将选择3个路由策略中的一个。所谓路由策略就是事件触发遍历整棵元素树的方式，这些策略由``RoutingStategy``枚举值提供。\n\n+ Tunneling（管道传递）----事件首先在根元素上被触发，然后从每一个元素向下沿着树传递，直至到达源元素为止（或者直至处理程序把事件标记为已处理为止）。\n+ Bubbling（冒泡）----事件首先在源元素上被触发，然后从每一个元素向上沿着树传递，直至到达根元素为止（或者直至处理程序把事件标记为已处理为止）。\n+ Direct（直接）----事件仅在源元素上触发。这与普通.NET事件的行为相同，不同的是这样的事件仍然会参与一些路由事件的特定机制，如事件触发器。\n\n路由事件的事件处理程序有一个签名，它与通用.NET事件处理程序的模式匹配：第一个参数是一个System.Object对象，名为sender，第二个参数（一般命名为e）是一个派生自``System.EventArgs``的类。传递给事件处理程序的sender参数就是该处理程序被添加到的元素。参数e是RoutedEventArgs的一个实例（或者派生自RoutedEventArgs），RoutedEventArgs是EventArgs的一个子类，它提供了4个有用的属性：\n\n|属性名|描述|\n|-----|----|\n|Source|逻辑树中一开始触发该事件的元素。|\n|OriginalSource|可视树中一开始触发该事件的元素（例如，TextBlock或标准的Button元素的ButtonChrome子元素）。|\n|Handled|布尔值，设置为true表示标记事件为已处理，这就是用于停止Tunneling或Bubbling的标记。|\n|RoutedEvent|真正的路由事件对象（如Button.ClickEvent），当一个事件处理程序同时被用于多个路由事件时，它可以有效的识别被触发的事件。|\n\n``Source``和``OriginalSource``的存在允许使用更高级别的逻辑树或更低级别的可视树。然而，这种区别仅对于像鼠标事件这样的物理事件有效。对于更抽象的事件来说，不需要与可视树中的某个元素建立直接关系（就像由于键盘支持的``Click``），WPF会传递相同的对象给``Source``和``OriginalSource``。\n\n### 路由事件的实现\n\nUIElement类为键盘、鼠标、指示笔输入定义了许多路由事件。大多数路由事件是冒泡事件，但许多事件与管道事件是配对的。管道事件很容易被识别，因为按照惯例，它们的名字中都有一个Preview前缀，在它们的配对冒泡事件发生前，这些事件会立即被触发。例如，``PreviewMouseMove``就是一个管道事件，在MouseMove冒泡事件前被触发。\n为许多不同的行为提供一对事件是为了给元素一个有效地取消事件或在事件即将发生前修改事件的机会。根据惯例，（当定义了冒泡和管道的事件对后）WPF的内嵌元素只会在响应一个冒泡事件时采取行动，这样可以保证管道事件能够名副其实的做到“预览”。例如，在TextBox控件的Preview事件中对录入的文本进行校验，过滤不符合规范的文本。\n\n### 处理单击鼠标中键的事件在哪里？\n\n如果浏览一遍UIElement或ConentElement提供的所有鼠标事件，可以找到``MouseLeftButtonDown``、``MouseLeftButtonUp``、``MouseRightButtonDown``、``MouseRightButtonUp``事件，但有些鼠标上出现的附加按键该怎么办呢？\n这一信息可以通过更加通用的MouseDown和MouseUp事件获得。传入这样的事件处理程序的参数包括一个MouseButton枚举值，它表示鼠标状态Left、Right、Midle、XButton1、XButton2，还有一个MouseButtonState枚举值，表示这个按钮是Pressed还是Released。\n\n### 中止路由事件是一种假象\n\n虽然在事件处理程序中设置RoutedEventArgs参数的Handled属性为true，可以终止管道传递或冒泡，但是进一步沿着树向上或向下的每个处理程序还是可以收到这些事件。这只能在代码中完成。在任何时候，都应该尽可能地避免处理已处理过的事件，因为事件应该是在第一时间被处理的。\n总之，终止管理传递或冒泡仅仅是一种假像而已。更加准确的说法应该是，当一个路由事件标记为已处理时，管道传递和冒泡仍然会继续，但默认情况下，事件处理程序只会处理没有处理过的事件。\n\n### 附加事件\n\n通过附加事件，WPF可以通过一个没有定义过该事件的元素来完成路由事件的管道传递和冒泡。\n附加事件与附加属性操作起来很像。每个路由事件都可以被当作附加事件使用。\n由于需要传递许多信息给路由事件，可以用上层的“megahandler”来处理每一个管道或冒泡事件。这个处理程序通过分析RoutedEvent对象判断哪个事件被触发了，并把RoutedEventArgs参数转换为一个合适的子类，然后继续。\n\n### 命令\n\nWPF提供了内建的命令支持，这是一个更为抽象且松耦合的事件版本。尽管事件是与某个用户动作相关联的，但命令表示的是那些与用户界面分离的动作，最标准的命令示例是剪切（Cut）、复制（Copy）、粘贴（Paste）。应用程序总能通过许多同步的机制提供这些动作：Menu控件中的MenuItem、ContextMenu控件中的MenuItem、ToolBar控件中的Button、键盘快捷方式等。\n\n### 内建命令\n\n命令是任何一个实现了``ICommand``接口（位于``System.Windows.Input``命名空间）的对象，每个对象定义了3个简单的成员：\n\n|成员|介绍|\n|----|---|\n|Execute|执行特定命令的逻辑的方法。|\n|CanExecute|如果命令允许被执行，则返回true，否则返回false。|\n|CanExecuteChanged|无论何时，只要CanExecute的值改变，该事件就会触发。|\n\n如果需要创建剪切、复制和粘贴命令，可以定义3个实现ICommand接口的类，找一个地方存储这3个类（如放在主窗口的静态成员中），从相关的事件处理程序中调用Execute（当CanExecute返回true时），处理CanExecuteChanged事件，改变相关用户界面中的IsEnabled属性。\n\n像Button、CheckBox、MenuItem这样的控件有相关的逻辑会与任何命令做交互。它们会有一个简单的Command属性（类型为ICommand），当设置了Command属性后，无论何时Click事件触发，这些控件会自动调用命令的Execute方法（只要CanExecute返回true时）。另外，它们会自动保持IsEnabled的值与CanExecute的值同步，这是通过CanExecuteChanged事件实现的。通过这种给属性赋值的方式，任何逻辑在XAML下都是可以实现的。\n\n同时，WPF已经定义了一系列命令，因此不需要为Cut、Copy和Paste命令实现ICommand对象，也不用担心在哪里保存这些命令。WPF有5个类的静态属性实现了WPF的内建命令：\n\n> ApplicationCommands:\n> Close、Copy、Cut、Delete、Find、Help、New、Open、Paste、Print、PrintPreview、Properties、Redo、Replace、Save、SaveAs、SelectAll、Stop、Undo等。\n\n其他4个类为``ComponentCommands``、``MediaCommands``、``NavigationCommands``、``EditCommands``。\n每个属性返回``RoutedUICommand``的实例，``RoutedUIElement``类不仅实现了``ICommand``接口，还可以像路由事件一样支持冒泡。","source":"_posts/WPF-XAML.md","raw":"---\ntitle: XAML\ntags: [XAML, WPF, vb.net, 前端设计, UI]\ndate: 2016-06-01\n---\n\n## XAML定义\n\n``XAML``是一种相对简单、通用的声明式编程语言，它适合于构建和初始化.NET对象。\n``XAML``仅仅是一种使用.NET API的方式，把它与HTML、可伸缩向量图形（SVG）或其他特定领域的格式或语言作比较是完全错误的。XAML由一些规则（告诉解析器和编译器如何处理XML）和一些关键字组成，但它自己没有任何有意义的元素。因此，如果在没有WPF这样的框架的基础上讨论XAML，就如同在没有.NET Framework的基础上讨论VisualBasic一样。\n``XAML``在WPF中扮演的角色通常是令人困惑的，因此第一件要搞清楚的事情是WPF和XAML可以独立使用，它们并不是互相依赖的。虽然XAML最初是为WPF而设计，但它也可以应用于其他技术（如WF）。由于XAML的通用性，实际上可以把它应用于任何.NET技术。然而，是否在使用WPF时使用XAML是可选的，每一件XAML能做的事情完全可以由任何一种你喜欢的.NET语言来实现（但反过来则不行）。但是，由于XAML的诸多好处，很少会看到现实世界中使用WPF却不使用XAML的情况。\n\n<!--more-->\n\n## 元素和特性\n\nXAML规范定义了一些规则，用于把.NET命名空间、类型、属性和事件映射为XML命名空间、元素和特性。以下面为例，它定义了一个WPF按钮，跟另一段与之功能一致的VisualBasic代码比较一下：\n\n```xml\n<Button xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" Content=\"OK\" Click=\"button_Click\"/>\n```\n\n```vbnet\nDim b As New System.Window.Controls.Button()\nb.Content = \"OK\"\nAddHandler b.Click, AddressOf button_Click\n```\n\n虽然这两段代码功能是相同的，但如果去除掉``XAML``中的``Click``特性，你可以很快地在IE浏览器中查看``XAML``，还会看到一个活生生的按钮放在浏览器窗口中。而VisualBasic代码则必须要额外的代码编译方可使用。\n在XAML中定义一个XML元素（叫作对象元素）与在.NET中实例化一个对应的对象（总是使用默认的构造函数）是等价的。设置对象元素的一个特性（attribute），与设置一个同名属性（property attribute，称为属性特性）或者为一个同名事件设置一个事件处理程序（也称为事件特性），也是等价的。\n\n## 生成和事件处理的顺序\n\n在运行时（run-time）模式下，为任何一个``XAML``声明的对象设置属性之前，总要添加一些事件处理程序，这样就可以让某个事件在属性被设置时被触发，而不用担心XAML使用特性的顺序。\n至于多个属性集或添加多个事件处理程序，它们总会遵照一定顺序，即属性特性和事件属性是在对象元素中指定的。这一排序方式不会在实际应用中产生影响，因为.NET设计指南指出：类应该允许以任何顺序设置属性，添加事件处理程序也是如此。\n\n## 命名空间\n\n比较上述XAML代码示例和相应的VisualBasic代码示例，最神秘的地方在于XAML命名空间（[http://schemas.microsoft.com/winfx/2006/xaml/presentation](http://schemas.microsoft.com/winfx/2006/xaml/presentation)）是如何被映射到.NET命名空间（``System.Windows.Controls``）上的。该映射及其他WPF命名空间的映射是在WPF程序集中硬编码完成的，里面有好几个``Xmlns-DefinitionAttribute``自定义特性的实例。（在``schemas.microsoft.com``这个URL中不存在网页，这仅仅是一个人为设定的字符串，就像其他命名空间一样。）\n``XAML``文件的根对象元素属性指定至少一个XML命名空间，用于验证自己和子元素。你可以（在根元素或子元素上）声明额外的XML命名空间，但每一个命名空间下的标识符都必须有一个唯一的前缀。例如，WPF的XAML文件都会使用第二个命名空间加上前缀x（记作``xmlns:x``而不仅仅是``xmlns``）：\n\n```xml\nxmlns:x=http://schemas.microsoft.com/winfx/2006/xaml\n```\n\n这是XAML语言命名空间，用于映射``System.Windows.Markup``命名空间中的类型，而且它也定义了XAML编译器或解析器中的一些特殊的指令。这些指令通常是作为XAML元素的特性出现的，因此，它们看上去像宿主元素的属性，但实际上并不是如此。\n我们把[http://schemas.microfost.com/winfx/2006/xaml/presentation](http://schemas.microfost.com/winfx/2006/xaml/presentation)作为默认（主要）命名空间，把[http://schemas.microsoft.com/winfx/2006-/xaml](http://schemas.microsoft.com/winfx/2006-/xaml)作为次要命名空间。次要命名空间的前缀是``x``，这仅仅是一个规则，就像VisualBasic文件要以``Imports System``指令开始一样。你可以改写原来那个``XAML``文件，含义是相同的：\n\n```xml\n<WpfNamespace:Button xmlns:WpfNamespace=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" Content=\"OK\"/>\n```\n\n当然，从可读性来讲，在使用这些常见的命名空间的时候不需要前缀（即原始的XML命名空间），其他一些命名空间则使用一个短前缀。\n\n## 属性元素\n\n富创建是WPF的亮点之一，我们可以用``Button``来演示。你可以把任意内容放在``Button``里面，不仅限于文本，如下所示（在``Button``中嵌入了一个简单的方形来做一个VCR的停止按钮）：\n\n```vbnet\nDim b As new System.Windows.Controls.Button()\nDim r As new System.Windows.Shapes.Rectangle()\n\nr.Width = 40\nr.Height = 40\nr.Fill = System.Windows.Media.Brushes.Black\nb.Content = r  ' 将按钮中的内容设置为方格\n```\n\n``Button``的``Content``属性是``System.Object``类型的，因此它很容易被设置到40*40的``Rectangle``对象。但如何才能在XAML中用属性特性语法做相同的事呢？你该为``Content``属性设置哪种字串才能完成VisualBasic中声明的``Rectangle``功能呢？没有这样的字串，但XAML提供了一种替代的语法来设置复杂的属性值，即属性元素。如下所示：\n\n```xml\n<Button xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\">\n<Button.Content>\n    <Rectangle Height=\"40\" Width=\"40\" Fill=\"Black\"/>\n</Button.Content>\n</Button>\n```\n\n``Content``属性被设置为一个XML元素而不是XML特性，``Button.Content``中的句点用于区分对象元素（object element）与属性元素（property element）。它们总会以“**类型名，属性名TypeName.PropertyName**”的形式出现，总会包含在“类型名”对象元素中，但它们没有属于自己的特性。\n属性元素语法也可以用于简单的属性值。下面的Button使用特性设置了两个属性，它们是``Content``和``Background``：\n\n```xml\n<Button xmlns=\"http://schema.microsoft.com/winfx/2006/xaml/presentation\" Content=\"OK\" Background=\"White\"/>\n```\n\n这等同于使用元素设置该Button的两个相同的属性：\n\n```xml\n<Button xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\">\n<Button.Content>\n     OK\n</Button.Content>\n<Button.Background>\n     White\n</Button.Background>\n</Button>\n```\n\n当然，在任何可以使用特性的地方使用特性更为便捷。\n\n## 类型转换器\n\n上例XAML文件中的``white``是如何与VisualBasic中的``System.Windows.Media.Brushes.White``等价的呢？这个示例提供了一些如何使用字符串设置XAML属性的细节，这些属性的类型即不是``System.String``，也不是``System.Object``。在这种情况下，XAML解析器或编译器必须寻找一个类型转换器，该转换器知道如何将一个字符串表达式转换为一种想要的数据类型。WPF提供了许多常用数据类型的类型转换器，如``Brush``、``Color``、``FontWeight``、``Point``等，它们都派生自Type-Converter的类（如``BrushConverter``、``ColorConverter``等），你也可以为自定义的数据类型写类型转换器。与XAML语言不同，类型转换器通常支持不区分大小写的字符串。\n如果没有``Brush``类型转换器，你就必须使用属性元素语法来设置XAML中的``Background``属性，如下所示：\n\n```xml\n<Button xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" Content=\"OK\">\n<Button.Background>\n    <SolidColorBrush>\n    <SolidColorBrush.Color>\n        <Color A=\"255\" R=\"255\" G=\"255\" B=\"255\"/>\n    </SolidColorBrush.Color>\n    </SolidColorBrush>\n</Button.Background>\n</Button>\n```\n\n由上可见，类型转换器不仅增强了XAML的可读性，也使一些本来不能被表达的概念得以表达。\n下面的代码更精确地表达了运行时获取和执行适合Brush的类型转换器的过程：\n\n```vbnet\nDim b As New System.Windows.Controls.Button()\nDim brType As Type = System.ComponentModel.TypeDescriptor.GetConverter(GetType(Brush))\n\nb.Content = \"OK\"\nb.Background = brType.ConvertFromInvariantString(\"White\").As(Of Brush)\n```\n\n## 标记扩展\n\n标记扩展就像类型转换器一样，可用于扩展``XAML``的表达能力。它们都可以在运行时计算字符串特性的值，并生成一个合适的基于字符串的对象。WPF有好几个内建的标记扩展，你会发现它们都派生自本书最前面的内封中的``MarkupExtension``。\n与类型转换器不同的是，标记扩展是通过XAML的显式的、一致的语法调用的，因此，标记扩展是最好的扩展XAML的方法。\n只要特性值由花括号括起来，XAML编译器或解析器就会把它认作一个标记扩展值而不是一个普通的字符串。下面的按钮使用了3个不同的标记扩展类型，其中分别用到了3个不同的特性：\n\n```xml\n<Button xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\nxmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\nBackground=\"{x:Null}\"\nHeight=\"{x:Static SystemParameters.IconHeight}\"\nContent=\"{Binding Path=Height, RelativeSource={RelativeSource Self}}\"/>\n```\n\n每个花括号中的第一个识别符是标记扩展类的名称。按照惯例，这样的类都以``Extension``后缀结尾，但在XAML中使用它时，可以不用该后缀。在上面例子中，``NullExtension``（即``x:Null``）和``StaticExtension``（即``x:Static``）是``System.Windows.Markup``命名空间的类，因此必须使用前缀x来定位它们。``Binding``（没有``Extension``后缀）是在``System.Windows.Data``命名空间下的，因此在默认的XML命名空间下就可以找到它。\n如果标记扩展支持，可使用逗号分隔的参数来指定它的值。\n定位参数（如本例中的``SystemParameters.IconHeight``）被作为字符串参数传入扩展类的相应构造函数中。命名参数（如本例中的``Path``和``RelativeSource``）可用来在已构造好的扩展对象上设置相应名字的属性。这些属性的值可以是标记扩展值自己，也可以是文本值，它们可通过普通的类型转换过程。你可能注意到设计和使用标记扩展与设计和使用自定义特性很相似，这是被有意设计的。\n在本例中，``NullExtension``允许设置``Background``笔刷为``null``。``StaticExtension``允许使用静态属性、字段、常量和枚举值，而不使用XAML写的硬编码字面值。在这个例子中，``Button``的高度是遵循操作系统当前的图标高度设置的，这一设置可通过``System.Windows.SystemParameters``类的``IconHeight``静态字段获得。``Binding``可以把``Content``设置为与它的``Height``属性相同的值。\n如果你需要设置一个属性特性值为字面字符串（以左花括号开始），就必须将其转义，我们可通过在其前面增加一对空花括号来实现，如：\n\n```xml\n<Button xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\nContent=\"{}{This is not a markup extension!}\"/>\n```\n\n此外，也可以使用属性元素语法，因为花括号在上下文中不会有特殊的意义：\n\n```xml\n<Button xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\">\n    {This is not a markup extension}\n</Button>\n```\n\n因为标记扩展是有默认构造函数的类，它们可以与属性元素语法一起使用，如下例：\n\n```vbnet\n<Button xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\">\n<Button.Background>\n    <x:Null/>\n</Button.Background>\n<Button.Height>\n    <x:Static Member=\"SystemParameters.IconHeight\"/>\n</Button.Height>\n<Button.Content>\n    <Binding Path=\"Height\">\n    <Binding.RelativeSource>\n        <RelativeSource Mode=\"Self\"/>\n    </Binding.RelativeSource>\n    </Binding>\n</Button.Content>\n</Button>\n```\n\n该转换之所以可以执行是因为这些标记扩展都有与形参化的构造函数的实参（使用属性特性语法的定位实参）对应的属性。例如，``StaticExtension``有一个``Member``属性与之前传入到开参化构造函数中的实参意思是一样的，``RelativeSource``有一个对应于构造函数实参的``Mode``属性。\n由于标记扩展完成的实际工作对于每个扩展都是不同的。如下面的VisualBasic代码与使用``NullExtension``、``StaticExtension``和``Binding``的基于XAML表示的按钮是一个意思：\n\n```vbnet\nDim b As New System.Windows.Controls.Button()\n\n' 设置Background\nb.Background = null\n' 设置Height\nb.Height = System.Windows.SystemParameters.IconHeight\n' 设置Content\nDim binding As New System.Windows.Data.Binding()\nbinding.Path = new System.Windows.PropertyPath(\"Height\")\nbinding.RelativeSource = System.Windows.Data.RelativeSource.Self\nb.SetBinding(System.Windows.Controls.Button.ContentProperty, binding)\n```\n\n尽管如此，这里的代码与``XAML``解析器或编译器使用的机制是不同的，解析器和编译器是依靠每个标记扩展在运行时设置合适的值（本质上是通过调用每个类的``ProvideValue``方法来实现的）。与这一机制完全对应的过程式代码通常很复杂。\n\n## 对象元素的子元素\n\nXAML文件就像所有的XML文件一样，必须有一个单独的根对象元素。对象元素是可以支持子对象元素的。一个对象元素可以有3种类型的子元素：一个内容属性值，集合项，或一个能够通过类型转换到它的父元素的值。\n\n## 内容属性\n\n大多数WPF类（通过定制特性）指定了一个属性，该属性可以被设置为XML元素中的任何内容。这个属性叫作内容属性，它确实是一个让XAML呈现变得更轻便简单的捷径。从某种意义上讲，这些内容属性有点像VB中的默认属性。``Button``中的``Content``属性就是这样指定的，如：\n\n```xml\n<Button xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" Content=\"OK\"/>\n```\n\n可以被重写为：\n\n```xml\n<Button xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\">\nOK\n</Button>\n```\n\n还有更复杂的方式：\n\n```xml\n<Button xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\">\n<Button.Content>\n    <Rectangle Height=\"40\" Width=\"40\" Fill=\"Black\"/>\n</Button.Content>\n</Button>\n```\n\n可以被重写为：\n\n```xml\n<Button xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\">\n    <Rectangle Height=\"40\" Width=\"40\" Fill=\"Black\"/>\n</Button>\n```\n\n## 集合项\n\nXAML允许将项添加到支持索引的两种类型的集合中：``List``和``Dictionary``。\n\n### List\n\n``List``是实现了``System.Collection.IList``接口的集合，如``System.Collections.ArrayList``和许多WPF定义的集合类都是``List``。如，下面的XAML向``ListBox``添加了两个项，它的``Items``属性是实现了``IList``的``ItemCollection``类型：\n\n```xml\n<ListBox xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\">\n<ListBox.Items>\n     <ListBoxItem Content=\"Item 1\"/>\n     <ListBoxItem Content=\"Item 2\"/>\n</ListBox.Items>\n</ListBox>\n```\n\n因为``Items``是``ListBox``的内容属性，可以进一步简化：\n\n```xml\n<ListBox xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\">\n    <ListBoxItem Content=\"Item 1\"/>\n    <ListBoxItem Content=\"Item 2\"/>\n</ListBox>\n```\n\n### Dictionary\n\n\n``System.Windows.ResourceDictionary``是WPF中的一个常用的集合类型，它实现了``System.Collections.IDictionary``接口，能够支持在过程式代码中添加、移除枚举键/值对。下面的XAML添加了两个``Color``对象到一个``ResourceDictionary``中。\n\n```xml\n<ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\nxmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\">\n    <Color x:Key=\"1\" A=\"255\" R=\"255\" G=\"255\" B=\"255\"/>\n    <Color x:Key=\"2\" A=\"0\" R=\"0\" G=\"0\" B=\"0\"/>\n</ResourceDictionary>\n```\n\n**注意，在带有x:Key的XAML中指定的值总是被作为字符串处理的，除非使用标记扩展，但不会尝试使用类型转换。**\n\nXAML是设计用来与.NET类型系统一起工作的，你可以在其中使用任何类型的.NET对象，也可以使用自己定义的对象。但对象必须以“友好声明”的方式进行设计。如果一个类没有默认构造函数，也没有提供有用的实例属性，那么它在XAML中是无法直接使用的。\nWPF程序集都被加上了``XmlnsDefinitionAttribute``属性，这样可以将.NET命名空间映射为XAML文件中的XML命名空间，但对于那个不是专门为XAML设计的程序集又该如何处理呢？它们的类型仍然可以使用，只需要一个特殊的指令作为XML命名空间就可以了。如下例：\n\n```vbnet\nDim h As New System.Collections.Hashtable()\nh.Add(\"key1\", 1)\nh.Add(\"key2\", 2)\n```\n\n以上代码在XAML中表示为：\n\n```xml\n<collections:Hashtable xmlns:collections=\"clr-namespace:System.Collections;assembly=mscorlib\"\nxmlns:sys=\"clr-namespace:System;assembly=mscorlib\"\nxmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\">\n    <sys:Int32 x:Key=\"key1\">1</sys:Int32>\n    <sys:Int32 x:Key=\"key2\">2</sys:Int32>\n</collections:Hashtable>\n```\n\n``clr-namespace``标记允许直接在XAML中放入一个.NET命名空间。\n\n为了避免混淆，在转换子元素时，任何一个有效的XAML解析器或编译器必须遵循下面的规则：\n\n+ 如果该类型实现了IList接口，就为每个子元素调用IList.Add。\n+ 否则，如果该类型实现了IDictionary，就为每个子元素调用IDictionary.Add，在该值的键和元素中使用x:Key特性值。\n+ 否则，如果父元素支持内容属性（由System.Windows.Markup.ContentPropertyAttribute表示），而且子元素的类型与该内容属性是兼容的，就把子元素作为它的值。\n+ 否则，如果子对象是普通文本，且有类型转换器将子对象转换为父类型（没有在父元素上设置属性），则把子元素作为类型转换器的输入，将输出作为父对象的实例。\n+ 其他情况下则抛出错误。\n\n## 编译：将XAML与过程式代码混合使用\n\n大多数WPF应用程序是XAML与过程式代码的混合体。\n\n## 在运行时加载和解析XAML\n\nWPF的运行时XAML解析器公开为两个类，它们都位于``System.Windows.Markup``命名空间中：``XamlReader``和``XamlWriter``。``XamlReader``包含了一些对静态``Load``方法的重载，而``XamlWriter``包含了一些对静态``Save``方法的重载。因此，用任何一种.NET语言写的程序都可以在运行时依赖XAML，而不用程序员付出太多努力。\n\n## XamlReader\n\n``XamlReader.Load``方法的设置将解析XAML，创建合适的.NET对象，然后返回一个根元素的实例。因此，如果在当前目录下有一个XAML文件叫作MyWindow-.xaml，它包含了一个``Window``对象作为根结点，那么可以使用下面的代码来加载和获得``Window``对象。\n\n```vbnet\nDim window As Window = null\n\nUsing fs As FileStream = New FileStream(\"MyWindow.xaml\", FileMode.Open, FileAccess.Read)\n    ' 获得根元素，该元素是一个Window对象\n    Window = (Window)XamlReader.Load(fs)\nEnd Using\n```\n\n在``Load``返回之后，整个XAML文件的对象层级将在内存中被实例化，因此就不再需要XAML文件了。退出``Using``代码块后，``FileSteam``将被立即关闭。由于可向``XamlReader``传入一个任意的``Stream``（或使用另一个重载来传入``System.Xml.XmlReader``对象），所以有许多可选择的方式来获得XAML的内容。\n``XamlReader``也定义了``LoadAsync``实例方法用于异步加载和解析XAML内容。在加载大文件或网络文件时，可使用``LoadAsync``保持用户界面处于响应状态。``CancelAsync``方法用于停止处理，``LoadCompleted``事件可让我们知道处理何时完成。\n既然已有一个根元素的实例存在，就可利用适当的内容属性或集合属性来获得子元素。下面的代码假设``Window``有一个类行为``StackPanel``的子元素，Stack-Panel的第5个子对象是一个OK Button。\n\n```vbnet\nDim window As Window = Nothing\n\nUsing fs As New FileStream(\"MyWindow.xaml\", FileMode.Open, FileAccess.Read)\n    ' 获得根元素，该元素是一个Window对象\n    window = DirectCast(XamlReader.Load(fs), Window)\nEnd Using\n\n' 通过（硬编码知识）遍历子元素获取OK按钮\nDim panel As StackPanel = DirectCast(window.Content, StackPanel)\nDim okButton As Button = DirectCast(panel.Children(4), Button)\n```\n\n有了这个``Button``的引用，就可以做任何想做的事：设置额外的属性，添加事件处理程序，或执行一些无法用XAML完成的动作。\n但使用硬编码索引和其他关于用户界面结构假设的代码并不能让人满意。XAML支持元素命名，这样就可以从过程式代码中找到这些元素并放心地使用它们。\n\n## 命名XAML元素\n\nXAML语言命名空间有一个Name关键字，它是用来给元素命名的。示例如下：\n\n```xml\n<Button x:Name=\"okButton\">OK</Button>\n```\n\n上例代码可改如下：\n\n```vbnet\nDim window As Window = Nothing\n\nUsing fs As New FileStream(\"MyWindow.xaml\", FileMode.Open, FileAccess.Read)\n    ' 获得根元素，该元素是一个Window对象\n    window = DirectCast(XamlReader.Load(fs), Window)\nEnd Using\n\n' 通过按钮的名称获得OK按钮Button\nokButton = DirectCast(window.FindName(\"okButton\"), Button)\n```\n\n``FindName``并不仅仅在``Window``类中存在，在``FrameworkElement``、``FrameworkContentElement``及许多重要的WPF类的基类中也有``FindName``的定义。\n\n## 编译XAML\n\nXAML编译包括三项事件：\n\n+ 将一个XAML文件转换为一种特殊的二进制格式。\n+ 将转换好的内容作为二进制资源嵌入到正在被创建的程序集中。\n+ 执行链接操作，将XAML和过程式代码自动连接起来。\n\n如果你不在乎将XAML文件和过程式代码融合，那么只需把它添加到VS的WPF项目中来，并用界面中的Build动作来完成编译即可。但如果要编译一个XAML文件并将它与过程式代码混合，第一步要做的就是为XAML文件的根元素指定一个子类，可以用XAML语言命名空间中的Class关键字来完成。例如：\n\n```xml\n<Window xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\nxmlns=\"http://schemas.microsoft.com/winfx/2006/xaml\"\nx:Class=\"MyNamespace.MyWindow\">\n...\n</Window>\n```\n\n在一个独立的源文件中（但是在同一个项目中），可以一个子类，并添加任何想添加的成员：\n\n```vbnet\nNamespace MyNamespace\n\tPartial Class MyWindow\n\t\tInherits Window\n\t\tPublic Sub New()\n\t\t\t'一定要调用，这样才能加载XAML定义的内容\n\t\t\t\t' ...\n\t\t\tInitializeComponent()\n\t\tEnd Sub\n\t\t' Any other members can go here...\n\tEnd Class\nEnd Namespace\n\n```\n\n通常我们把这样的文件叫作代码隐藏文件。如果你引用XAML中的任何一个事件处理程序（通过事件特性，如Button的Click特性），这里就是我们定义这些事件处理程序的地方。\n当在VS中创建一个基于WPF的VisualBasic或VB项目，或当使用``Add New Item...``来添加某WPF项目时，VS会自动创建一个XAML文件，并把``x:Class``作为根元素，同时创建一个具有部分类定义的代码隐藏源文件，最后把两者连接起来，这样代码构建（build）才能顺利进行。\n\n## BAML\n\nBAML是``Binary Application Markup Language``的缩写，意思是二进制应用程序标记语言，它其实是被解析、标记化，最后转换为二进制形式的XAML。虽然大块的XAML代码可以被表示为过程式代码，但XAML到BAML的编译过程不会生成过程源代码。因此，BAML不像MSIL，它是一个压缩的声明格式，比加载和解析普通的XAML文件快，且比普通XAML文件要小。BAML仅仅是XAML编译过程的详细实现，没有任何直接公开的方法，在未来可能会被一些其他东西所取代。\n\n## 生成的源代码\n\n``x:Class``只能在要编译的XAML文件中使用。但在没有``x:Class``的情况下，编译XAML文件也是没有问题的。这意味着没有对应的代码隐藏文件，因此不能使用任何需要过程式代码才能实现的特性。\n每个生成的源文件中包含了一个由根对象元素中的``x:Class``指定的类的部分类定义。XAML文件中的每个已命名的元素在该部分类中都有一个成员（默认是私有的），这些成员的名称就是元素名称。其中还有一个``InitializeComponent``方法用于完成一大堆烦人的工作。\n\n## BAML可以反编译为XAML吗？\n\n可以，无论怎么声明，任何一个公司的.NET类实例都可以被序列化为XAML。第一个步骤是获取一个实例，这个实例是用来作为根对象的。如果你还没有这个对象，可以调用静态的``System.Windows.Application.LoadComponent``方法，如下所示：\n\n```vbnet\nDim uri As New System.Uri(\"MyWindow.xaml\", System.UriKind.Relative)\nDim window As Window = Application.LoadComponent(uri).As(Of Window)\n```\n\n由URI指定的名称并不要求物理上存在一个独立的xaml文件。当指定了一个合适的URI后，``LoadComponent``可以自动获得作为资源嵌入的BAML。实际上，VS自动生成的``InitializeComponent``方法就是调用``Application.LoadComponent``来加载嵌入的BAML。\n获得根元素的实例后，可以使用``System.Windows.Markup.XamlWrite``类来获得根元素的XAML表示。``XamlWriter``包含了5个静态``Save``方法的重载，是最简单的返回一个适当XAML字符串的方法，通过传入一个对象实例来实现。如：\n\n```vbnet\nDim xaml As String = XamlWriter.Save(window)\n```\n\n## XAML关键字\n\nXAML语言的命名空间（[http://schemas.microsoft.com/winfx/2006/xaml](http://schemas.microsoft.com/winfx/2006/xaml)）定义了一批XAML编译器或解析器必须特殊处理的关键字。它们主要控制元素如何被提供给过程式代码，但即使没有过程式代码，有一些关键字还是有用的。如``Key``、``Name``、``Class``、``Subclass``和``Code``。\n\n## WPF的重要新概念\n\n### 逻辑树与可视树\n\nXAML天生就是用来呈现用户界面的，这是由于它具有层次化的特性。在WPF中，用户界面由一个对象树构建而成，这棵树叫作逻辑树。\nWPF用户界面的逻辑树也并不一定用XAML创建，它完全可能用过程式代码来实现。\n逻辑树的概念很直观，但为什么要关注它呢？因为几乎WPF的每一方面（属性、资源、事件等）都有与逻辑树相关联的行为。如，属性值有时会沿着树自动传递给子元素，而触发的事件可以自底向上或自顶向下遍历树。\n与逻辑树类似的一个概念是可视树。可视树基本上是逻辑树的扩展，在可视树中，节点都被打散，分放到核心可视组件中。可视树提供了一些详细的可视化实现，而不是把每个元素当作一个“黑盒”。如，虽然``ListBox``从逻辑上讲是一个单独的控件，但它的默认可视呈现是由更多的原始WPF元素组成的：一个``Border``对象、两个``ScrollBar``及其他一些元素。\n并非所有的逻辑树节点都会出现在可视树中，只有从``System.Windows.Media.Visual``或``System.Windows.Media.Visual3D``派生的元素才会被包含进去。其他元素不会包含在内，因为它们自己并没有与生俱来的呈现行为。\n使用``System.Windows.LogicTreeHelper``和``System.Windows.Media.VisualTreeHelper``这两个有些对象的类可以方便地遍历逻辑树和可视树。\n\n注意：**不要根据具体的可视树写代码。逻辑树是静态的，不会受到程序员的干扰（例如动态添加/删除）元素，但只要用户切换不同的Windows主题，可视树就会改变。**\n\n遍历和打印逻辑树和可视树的示例代码：\n\n```vbnet\nImports System.Diagnostics\nImports System.Windows\nImports System.Windows.Media\n\nPublic Partial Class AboutDialog\n\tInherits Window\n\tPublic Sub New()\n\t\tIntializeComponent()\n\t\tPrintLogicalTree(0, Me)\n\tEnd Sub\n\tProtected Overrides Sub OnContentRendered(e As EventArgs)\n\t\tMyBase.OnContentRendered(e)\n\t\tPrintVisualTree(0, Me)\n\tEnd Sub\n\n\tPrivate Sub PrintLogicalTree(depth As Integer, obj As Object)\n\t\t'打印对象，使用前置空格表示深度\n\t\tDebug.WriteLine(New String(\" \", depth) & Convert.ToString(obj))\n\n\t\t'有时，叶子节点不是DependencyObject，如string\n\t\tIf Not (TypeOf obj Is DependencyObject) Then\n\t\t\tReturn\n\t\tEnd If\n\n\t\t'递归调用每个逻辑子节点\n\t\tFor Each child As Object In LogicalTreeHelper.GetChildren(TryCast(obj, DependencyObject))\n\t\t\tPrintLogicalTree(depth + 1, child)\n\t\tNext\n\tEnd Sub\n\n\tPrivate Sub PrintVisualTree(depth As Integer, obj As DependencyObject)\n\t\t'打印对象，使用前置空格表示深度\n\t\tDebug.WriteLine(New String(\" \", depth) & Convert.ToString(obj))\n\t\t'递归调用每个可视子节点\n\t\tFor i As Integer = 0 To VisualTreeHelper.GetChildrenCount(obj) - 1\n\t\t\tPrintVisualTree(depth + 1, VisualTreeHelper.GetChild(obj, i))\n\t\tNext\n\tEnd Sub\nEnd Class\n```\n\n虽然在Window的构造函数中就可以遍历逻辑树，但可视树真到Window完成至少一次布局后才会有节点，否则是空的。这也是为什么``PrintVisualTree``是在``On-ContentRendered``中调用的，因为``OnContentRendered``是在布局完成后才被调用的。\n\n### 依赖属性\n\nWPF引入了一个新的属性类型叫作依赖属性，整个WPF平台中都会使用到它，用来实现样式化、自动数据绑定、动画等。\n依赖属性在任何时刻都是依靠多个提供程序来判断它的值的。这些提供程序可以是一段一直在改变值的动画，或者一个父元素的属性值从上慢慢传递给子元素等。依赖属性的最大特征是其内建的传递变更通知的能力。\n添加这样的智能给属性，其动力在于能够声明标记中直接启用富功能。WPF友好声明设计的关键在于它使用了很多属性。例如，``Button``控件有96个公共属性。属性可以方便地在XAML中设置而不用程序代码。但如果依赖属性没有额外的垂直传递，在不写额外代码的情况下，很难在设置属性这样简单的动作中获得想要的结果。\n\n### 依赖属性的实现\n\n实际上，依赖属性仅仅是普通的.NET属性，只不过它已融入到了WPF架构中。它完全是由WPF API实现的，没有一种.NET语言天生就能理解依赖属性。\n下例展示了一个``Button``如何有效地实现一个叫``IsDefault``的依赖属性：\n\n```vbnet\nPublic Class Button : Inherits ButtonBase\n\t' 依赖属性\n\tPublic Shared ReadOnly IsDefaultProperty As DependencyProperty\n\n\tShared Sub New()\n\t\t' 注册属性\n\t\t' ...\n\t\tButton.IsDefaultProperty = DependencyProperty.Register(\n\t\t    \"IsDefault\",\n\t\t\tGetType(Boolean),\n\t\t\tGetType(Button),\n\t\t\tNew FrameworkPropertyMetadata(False, New PropertyChangedCallback(AddressOf OnIsDefaultChanged)))\n\tEnd Sub\n\n\t' .NET属性包装器（可选）\n\tPublic Property IsDefault() As Boolean\n\t\tGet\n\t\t\tReturn CBool(GetValue(Button.IsDefaultProperty))\n\t\tEnd Get\n\t\tSet\n\t\t\tSetValue(Button.IsDefaultProperty, value)\n\t\tEnd Set\n\tEnd Property\n\n\t' 属性改变的回调（可选）\n\tPrivate Shared Sub OnIsDefaultChanged(o As DependencyObject, e As DependencyPropertyChangedEventArgs)\n\t\t' ...\n\tEnd Sub\nEnd Class\n```\n\n``IsDefaultProperty``静态成员是真正的依赖属性，类型为System.Windows.DependencyProperty。按规则，所有的DependencyProperty成员都必须是public、static，并且有一个Property作为后缀。依赖属性通常调用DependencyProperty.Register静态方法创建，这样的方法需要一个名称（IsDefault）、一个属性类型（bool）及拥有这个属性的类（Button类）。通过不同的Register方法重载，你可以传入metadata（元数据）来告诉WPF如何处理该属性、如何处理属性值改变的回调、如何处理强制值转换、及如何验证值。Button会在它的静态构造函数中调用Register的重载，给依赖属性一个默认值false，并为变更通知添加一个委托。\n最后，那个叫作IsDefault的传统.NET属性会调用继承自System.Windows.DependencyObject的GetValue和SetValue方法来实现自己的访问器，System.-Windows.DependencyObject是底层基类，这是拥有依赖属性的类必须继承的。GetValue返回最后一次由SetValue设置的值，如果SetValue从未被调用过，那么就是该属性注册时的默认值。IsDefault .NET属性并不是必需的，Button的使用者可能会直接调用GetValue/SetValue方法，因为它们是公开的。\n\n注意：**在运行时，绕过了.NET属性包装器在XAML中设置依赖属性。**\n\n虽然XAML编译器在编译时是依靠该属性包装器的，但在运行时WPF是直接调用GetValue和SetValue的。因此，为让使用XAML设置属性与使用过程式代码设置属性保持一致，在属性包装器中除了GetValue/SetValue调用外，不应该包含任何其他逻辑，这是至关重要的。如果要添加自定义逻辑，应该在注册的回调函数中添加。\n表面上看，上例代码像是一种冗长的呈现简单布尔属性的方式。然而，因为GetValue和SetValue内部使用了高效的稀疏存储系统，而IsDefaultProperty是一个静态成员（而不是一个实例成员），与典型的.NET属性相比，依赖属性的实现节省了保存每个实现所需要的内存。\n依赖属性的好处远不止节约内存而已。它把相当一部分代码集中起来，并做标准化处理。\n\n### 变更通知\n\n无论何时，只要依赖属性的值变了，WPF就会自动根据属性的元数据（metadata）触发一系列动作。内建的变更通知最有趣的特性之一是属性触发器，它可以在属性值改变时执行自定义动作，而不用更改任何过程式代码。\n例如，你想让Button在鼠标移上去时变为蓝色。如果没有属性触发器的话，你要为每个Button添加两个事件处理程序，一个为MouseEvent事件准备，一个为MouseLeave事件准备。\n\n```xml\n<Button MouseEnter=\"Button_MouseEnter\" MouseLeave=\"Button_MouseLeave\" \nMinWidth=\"75\" Margin=\"10\">\n    Help</Button>\n<Button MouseEnter=\"Button_MouseEnter\" MouseLeave=\"Button_MouseLeave\" \nMinWidth=\"75\" Margin=\"10\">\n    OK</Button>\n```\n\n下面的代码实现了这两个事件处理程序：\n\n```vbnet\n\n\tPrivate Sub Button_MouseEnter(sender As Object, e As MouseEventArgs)\n\t\tDim b As Button = TryCast(sender, Button)\n\t\tIf b IsNot Nothing Then\n\t\t\tb.Foreground = Brushed.Blue\n\t\tEnd If\n\tEnd Sub\n\n\tPrivate Sub Mouse_MouseLeave(sender As Object, e As MouseEventArgs)\n\t\tDim b As Button = TryCast(sender, Button)\n\t\tIf b IsNot Nothing Then\n\t\t\tb.Foreground = Brushed.Black\n\t\tEnd If\n\tEnd Sub\n```\n\n然而有了属性触发器，完全可以在XAML中完成相同的行为：\n\n```xml\n<Button MinWidth=\"75\" Margin=\"10\">\n<Button.Style>\n    <Style TargetType=\"{x:Type Button}\">\n    <Style.Triggers>\n        <Trigger Property=\"IsMouseOver\" Value=\"True\">\n            <Setter Property=\"Foreground\" Value=\"Blue\" />\n        </Trigger>\n    </Style.Triggers>\n    </Style>\n</Button.Style>\n    OK\n</Button>\n```\n\n属性触发器仅仅是WPF支持的3种触发器之一。数据触发器是属性触发器的另一种形式，它可以在任何.NET属性中工作（而不仅仅是依赖属性）。事件触发器会通过声明方式指定动作，该动作在路由事件触发时生效。\n\n### 属性值继承\n\n术语“**属性值继承**”并不是指传统的面向对象的类继承，而是指属性值自顶向下沿着元素树传递。\n属性值的继承行为由以下两个因素决定：\n\n+ 并不是每个依赖属性都参与属性值继承。（从内部来讲，依赖属性会通过传递FrameworkPropertyMetadataOptions.Inherits给DependencyProperty-.Register方法来完成继承。\n+ 有其他一些优先级更高的源来设置这些属性值。\n\n### 对多个提供程序的支持\n\nWPF有许多强大的机制可以独立地去尝试设置依赖属性的值。如果没有设计良好的机制来处理这些完全不同的属性值提供程序，这个系统会变得混乱，属性值会变得不稳定。当然，正如它们的名字所表达的，依赖属性就是设计为以一致的、有序的方式依靠这些提供程序。\n下图展示了这5步流程，通过该流程，WPF运行每个依赖属性并最终计算出它的值。依靠依赖属性中内嵌的变更通知，这个流程才可自动发生。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/2011111212113221.gif)\n\n### 判断基础值\n\n大多数属性值提供程序会把基础值的计算纳入考虑范畴。下面的清单显示了8个提供程序，它们可以设置大多数依赖属性的值，优先级顺序从高到低为：\n\n> 本地值->样式触发器->模板触发器->样式设置程序->主题样式触发器->主题样式设置程序->属性值继承->默认值\n\n本地值技术上的含义是任何对DependencyObject.SetValue的调用，但它通常会有一个简单的属性赋值，这是用XAML或过程式代码完成的。\n默认值指的是依赖属性注册时使用的初始值。\n\n### 计算\n\n如果第一步中的值是表达式（派生自System.Windows.Expression的一个对象），那么WPF会执行一种特殊的演算步骤--把表达式转换为具体的结果。在WPF 3.0中，表达式仅在使用动态资源或数据绑定时起作用。\n\n### 应用动画\n\n如果一个或多个动画在运行，它们有能力改变当前的属性值或完全替代当前的属性值。\n\n### 限制\n\n在所有属性值提供程序处理过后，WPF将拿到一个几乎是终值的属性值，如果依赖属性已经注册了CoerceValueCallback，还会把这个属性值传递给Coerce-ValueCallback委托。该回调函数负责返回一个新的值，它是基于自定义逻辑实现的。\n\n### 验证\n\n最后，如果依赖属性已经注册了ValidateValueCallback，之前的限制中的值将被传入ValidateValueCallback委托。如果输入值有效，该回调函数返回true，否则返回false。返回false将会导致抛出一个异常，并使整个流程被取消。\n如果没办法判断依赖属性从哪里获得当前值，那么可以得到静态方法DependencyPropertyHelper.GetValueSource作为调试助手。该方法将返回一个ValueSource结构，其中包含以下一些数据：一个BaseValueSource枚举值，它反映的是基础值从哪里来的（流程中的第一步）；IsExpression、IsAnimated和IsCoerced几个布尔类型属性，它反映了第二步到第四步的信息。\n请不要在程序代码中使用这个方法，WPF以后的版本中将打破值计算的假设，会根据它的源类型采用不同的方式处理属性值，而不是根据假设WPF应用程序中的方式来处理。\n你很可能需要清除本地值，并让WPF从下一个最高优先级的提供程序中获得值，然后使用这个值来设置最终的属性值。DependencyObject提供了这样的机制，可通过调用ClearValue方法来实现。\n\n```vbnet\n' b为Button实例\nb.ClearValue(Button.ForegroundProperty)\n```\n\n``Button.ForegroundProperty``是一个``DependencyProperty``静态成员，在调用``ClearValue``后，会重新计算基础值，并把本地值从方程式中删除。\n\n### 附加属性\n\n附加属性是依赖属性的一种特殊形式，可以被有效地添加到任何对象中。这可能听上去很奇怪，但这个机制在WPF中有多种应用。\n\n类似于WinForm那样的技术，许多WPF类定义了一个Tag属性（类型是System.Object），目的是为了存储每一个实例的自定义数据。但要添加自定义数据给任何一个派生自DependencyObject的对象，附加属性是一种更加强大、更加灵活的机制。通常我们会忽略一点，即可以用附加属性高效的向密封类（sealed class）的实例添加自定义数据。\n\n另外，大家对附加属性有一个曲解，虽然在XAML中设置它们依赖于SetXXX静态方法，但可在过程式代码中绕过这个方法，直接去调用DependencyObject-.SetValue方法。这意味着在过程式代码中，可以把任何一个依赖属性作为一个附加属性。如，下面的代码把ListBox的IsTextSearchEnabled属性添加到了Button控件上，并赋予该属性一个值：\n\n```vbnet\n' 向Button添加一个不相关的属性，并把它的值设置为true\nokButton.SetValue(ListBox.IsTextSearchEnabledProperty, True)\n```\n\n虽然这似乎没有任何意义，但你可以用一种对应用程序或组件有意义的方式来随意使用这个属性值。\n\n### 路由事件\n\n正如WPF在简单的.NET属性概念上添加了许多基础的东西一样，它也为.NET事件添加了许多基础的东西。路由事件是专门设计用于在元素树中使用的事件。当路由事件触发后，它可以向上或向下遍历可视树和逻辑树，用一种简单而且持久的方式在每个元素上触发，而不需要使用任何定制代码。\n事件路由让许多程序不去留意可视树的细节（对于样式重置来说这是很不错的），并且对于成功的WPF元素创作至关重要。\n在前面的文章部分之中，对于VCR样式的Stop按钮来说，一个用户可能在Rectangle逻辑子元素上直接按下鼠标左键。由于事件遍历了逻辑树，Button元素还是会发现这个事件，并处理该事件。因此，你可以在一个元素（如Button）中嵌入任何复杂内容或设置一棵复杂的可视树，鼠标左键单击其中任何一个内部元素，仍然会触发父元素Button的Click事件。如果没有路由事件，内部内容的创造者或按钮的使用者不得不编写代码来把事件串起来。\n路由事件的实现和行为与依赖属性有许多相同的地方。\n\n### 路由事件的实现\n\n与依赖属性一样，没有一种.NET语言（除XAML外）天生具有理解路由指派的能力。\n就像依赖属性是由公共的静态DependencyProperty成员加上一个约定的Property后缀名构成的一样，路由事件也是由公共的静态RoutedEvent成员加上一个约定的Event后缀名构成的。路由事件的注册很像静态构建器中注册依赖属性，它会定义一个普通的.NET事件或一个事件包装器，这样可以保证在过程式代码中使用起来更加熟悉，并且可以在XAML中用事件特性语法添加一个事件处理程序。与属性包装器一样，事件包装器在访问器中只能调用AddHandler和RemoveHandler，而不应该做其他事件。\n\n```vbnet\nPublic Class Button\n\tInherits ButtonBase\n\t'路由事件\n\tPublic Shared ReadOnly ClickEvent As RoutedEvent\n\n\tShared Sub New()\n\t\t'注册事件\n\t\t\t' ...\n\t\tButton.ClickEvent = EventManager.RegisterRoutedEvent(\n        \"Click\", \n        RoutingStrategy.Bubble, \n        GetType(RoutedEventHandler), \n        GetType(Button))\n\tEnd Sub\n\n\t'.NET事件包装器（可选）\n\tPublic Custom Event Click As RoutedEventHandler\n\t\tAddHandler(ByVal value As RoutedEventHandler)\n\t\t\tCall [AddHandler](Button.ClickEvent, value)\n\t\tEnd AddHandler\n\t\tRemoveHandler(ByVal value As RoutedEventHandler)\n\t\t\tCall [RemoveHandler](Button.ClickEvent, value)\n\t\tEnd RemoveHandler\n\tEnd Event\n\n\tProtected Overrides Sub OnMouseLeftButtonDown(e As MouseButtonEventArgs)\n\t\t' ...\n\t\t'触发事件\n\t\tCall [RaiseEvent](New RoutedEventArgs(Button.ClickEvent, Me))\n\t\t' ...\n\tEnd Sub\n\t' ...\nEnd Class\n```\n\n这些``AddHandler``和``RemoveHandler``方法没有从DependencyObject继承，而是从System.Windows.UIElement继承的，UIElement是一个更高层的供元素（如Button元素）继承的基类。这些方法可以向一个适当的路由事件添加一个委托或从路由事件移除一个委托。在``OnMouseLeftButtonDown``中，它使用适当的RoutedEvent成员调用RaiseEvent来触发Click事件。当前的Button实例（this）被传递给事件的源元素（source element）。在代码清单中没有列出，但是作为对KeyDown事件的响应，Button的Click事件将被触发，这样就可以处理由空格健或回车键完成点击动作的情况。\n\n### 路由策略和事件处理程序\n\n当注册完成后，每个路由事件将选择3个路由策略中的一个。所谓路由策略就是事件触发遍历整棵元素树的方式，这些策略由``RoutingStategy``枚举值提供。\n\n+ Tunneling（管道传递）----事件首先在根元素上被触发，然后从每一个元素向下沿着树传递，直至到达源元素为止（或者直至处理程序把事件标记为已处理为止）。\n+ Bubbling（冒泡）----事件首先在源元素上被触发，然后从每一个元素向上沿着树传递，直至到达根元素为止（或者直至处理程序把事件标记为已处理为止）。\n+ Direct（直接）----事件仅在源元素上触发。这与普通.NET事件的行为相同，不同的是这样的事件仍然会参与一些路由事件的特定机制，如事件触发器。\n\n路由事件的事件处理程序有一个签名，它与通用.NET事件处理程序的模式匹配：第一个参数是一个System.Object对象，名为sender，第二个参数（一般命名为e）是一个派生自``System.EventArgs``的类。传递给事件处理程序的sender参数就是该处理程序被添加到的元素。参数e是RoutedEventArgs的一个实例（或者派生自RoutedEventArgs），RoutedEventArgs是EventArgs的一个子类，它提供了4个有用的属性：\n\n|属性名|描述|\n|-----|----|\n|Source|逻辑树中一开始触发该事件的元素。|\n|OriginalSource|可视树中一开始触发该事件的元素（例如，TextBlock或标准的Button元素的ButtonChrome子元素）。|\n|Handled|布尔值，设置为true表示标记事件为已处理，这就是用于停止Tunneling或Bubbling的标记。|\n|RoutedEvent|真正的路由事件对象（如Button.ClickEvent），当一个事件处理程序同时被用于多个路由事件时，它可以有效的识别被触发的事件。|\n\n``Source``和``OriginalSource``的存在允许使用更高级别的逻辑树或更低级别的可视树。然而，这种区别仅对于像鼠标事件这样的物理事件有效。对于更抽象的事件来说，不需要与可视树中的某个元素建立直接关系（就像由于键盘支持的``Click``），WPF会传递相同的对象给``Source``和``OriginalSource``。\n\n### 路由事件的实现\n\nUIElement类为键盘、鼠标、指示笔输入定义了许多路由事件。大多数路由事件是冒泡事件，但许多事件与管道事件是配对的。管道事件很容易被识别，因为按照惯例，它们的名字中都有一个Preview前缀，在它们的配对冒泡事件发生前，这些事件会立即被触发。例如，``PreviewMouseMove``就是一个管道事件，在MouseMove冒泡事件前被触发。\n为许多不同的行为提供一对事件是为了给元素一个有效地取消事件或在事件即将发生前修改事件的机会。根据惯例，（当定义了冒泡和管道的事件对后）WPF的内嵌元素只会在响应一个冒泡事件时采取行动，这样可以保证管道事件能够名副其实的做到“预览”。例如，在TextBox控件的Preview事件中对录入的文本进行校验，过滤不符合规范的文本。\n\n### 处理单击鼠标中键的事件在哪里？\n\n如果浏览一遍UIElement或ConentElement提供的所有鼠标事件，可以找到``MouseLeftButtonDown``、``MouseLeftButtonUp``、``MouseRightButtonDown``、``MouseRightButtonUp``事件，但有些鼠标上出现的附加按键该怎么办呢？\n这一信息可以通过更加通用的MouseDown和MouseUp事件获得。传入这样的事件处理程序的参数包括一个MouseButton枚举值，它表示鼠标状态Left、Right、Midle、XButton1、XButton2，还有一个MouseButtonState枚举值，表示这个按钮是Pressed还是Released。\n\n### 中止路由事件是一种假象\n\n虽然在事件处理程序中设置RoutedEventArgs参数的Handled属性为true，可以终止管道传递或冒泡，但是进一步沿着树向上或向下的每个处理程序还是可以收到这些事件。这只能在代码中完成。在任何时候，都应该尽可能地避免处理已处理过的事件，因为事件应该是在第一时间被处理的。\n总之，终止管理传递或冒泡仅仅是一种假像而已。更加准确的说法应该是，当一个路由事件标记为已处理时，管道传递和冒泡仍然会继续，但默认情况下，事件处理程序只会处理没有处理过的事件。\n\n### 附加事件\n\n通过附加事件，WPF可以通过一个没有定义过该事件的元素来完成路由事件的管道传递和冒泡。\n附加事件与附加属性操作起来很像。每个路由事件都可以被当作附加事件使用。\n由于需要传递许多信息给路由事件，可以用上层的“megahandler”来处理每一个管道或冒泡事件。这个处理程序通过分析RoutedEvent对象判断哪个事件被触发了，并把RoutedEventArgs参数转换为一个合适的子类，然后继续。\n\n### 命令\n\nWPF提供了内建的命令支持，这是一个更为抽象且松耦合的事件版本。尽管事件是与某个用户动作相关联的，但命令表示的是那些与用户界面分离的动作，最标准的命令示例是剪切（Cut）、复制（Copy）、粘贴（Paste）。应用程序总能通过许多同步的机制提供这些动作：Menu控件中的MenuItem、ContextMenu控件中的MenuItem、ToolBar控件中的Button、键盘快捷方式等。\n\n### 内建命令\n\n命令是任何一个实现了``ICommand``接口（位于``System.Windows.Input``命名空间）的对象，每个对象定义了3个简单的成员：\n\n|成员|介绍|\n|----|---|\n|Execute|执行特定命令的逻辑的方法。|\n|CanExecute|如果命令允许被执行，则返回true，否则返回false。|\n|CanExecuteChanged|无论何时，只要CanExecute的值改变，该事件就会触发。|\n\n如果需要创建剪切、复制和粘贴命令，可以定义3个实现ICommand接口的类，找一个地方存储这3个类（如放在主窗口的静态成员中），从相关的事件处理程序中调用Execute（当CanExecute返回true时），处理CanExecuteChanged事件，改变相关用户界面中的IsEnabled属性。\n\n像Button、CheckBox、MenuItem这样的控件有相关的逻辑会与任何命令做交互。它们会有一个简单的Command属性（类型为ICommand），当设置了Command属性后，无论何时Click事件触发，这些控件会自动调用命令的Execute方法（只要CanExecute返回true时）。另外，它们会自动保持IsEnabled的值与CanExecute的值同步，这是通过CanExecuteChanged事件实现的。通过这种给属性赋值的方式，任何逻辑在XAML下都是可以实现的。\n\n同时，WPF已经定义了一系列命令，因此不需要为Cut、Copy和Paste命令实现ICommand对象，也不用担心在哪里保存这些命令。WPF有5个类的静态属性实现了WPF的内建命令：\n\n> ApplicationCommands:\n> Close、Copy、Cut、Delete、Find、Help、New、Open、Paste、Print、PrintPreview、Properties、Redo、Replace、Save、SaveAs、SelectAll、Stop、Undo等。\n\n其他4个类为``ComponentCommands``、``MediaCommands``、``NavigationCommands``、``EditCommands``。\n每个属性返回``RoutedUICommand``的实例，``RoutedUIElement``类不仅实现了``ICommand``接口，还可以像路由事件一样支持冒泡。","slug":"WPF-XAML","published":1,"updated":"2016-06-20T16:40:52.569Z","_id":"cipo6c9fr0000usv42x817bmz","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"XAML定义\"><a href=\"#XAML定义\" class=\"headerlink\" title=\"XAML定义\"></a>XAML定义</h2><p><code>XAML</code>是一种相对简单、通用的声明式编程语言，它适合于构建和初始化.NET对象。<br><code>XAML</code>仅仅是一种使用.NET API的方式，把它与HTML、可伸缩向量图形（SVG）或其他特定领域的格式或语言作比较是完全错误的。XAML由一些规则（告诉解析器和编译器如何处理XML）和一些关键字组成，但它自己没有任何有意义的元素。因此，如果在没有WPF这样的框架的基础上讨论XAML，就如同在没有.NET Framework的基础上讨论VisualBasic一样。<br><code>XAML</code>在WPF中扮演的角色通常是令人困惑的，因此第一件要搞清楚的事情是WPF和XAML可以独立使用，它们并不是互相依赖的。虽然XAML最初是为WPF而设计，但它也可以应用于其他技术（如WF）。由于XAML的通用性，实际上可以把它应用于任何.NET技术。然而，是否在使用WPF时使用XAML是可选的，每一件XAML能做的事情完全可以由任何一种你喜欢的.NET语言来实现（但反过来则不行）。但是，由于XAML的诸多好处，很少会看到现实世界中使用WPF却不使用XAML的情况。</p>\n<a id=\"more\"></a>\n<h2 id=\"元素和特性\"><a href=\"#元素和特性\" class=\"headerlink\" title=\"元素和特性\"></a>元素和特性</h2><p>XAML规范定义了一些规则，用于把.NET命名空间、类型、属性和事件映射为XML命名空间、元素和特性。以下面为例，它定义了一个WPF按钮，跟另一段与之功能一致的VisualBasic代码比较一下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"OK\"</span> <span class=\"attr\">Click</span>=<span class=\"string\">\"button_Click\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> b <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> System.Window.Controls.Button()</span><br><span class=\"line\">b.Content = <span class=\"string\">\"OK\"</span></span><br><span class=\"line\"><span class=\"keyword\">AddHandler</span> b.Click, <span class=\"keyword\">AddressOf</span> button_Click</span><br></pre></td></tr></table></figure>\n<p>虽然这两段代码功能是相同的，但如果去除掉<code>XAML</code>中的<code>Click</code>特性，你可以很快地在IE浏览器中查看<code>XAML</code>，还会看到一个活生生的按钮放在浏览器窗口中。而VisualBasic代码则必须要额外的代码编译方可使用。<br>在XAML中定义一个XML元素（叫作对象元素）与在.NET中实例化一个对应的对象（总是使用默认的构造函数）是等价的。设置对象元素的一个特性（attribute），与设置一个同名属性（property attribute，称为属性特性）或者为一个同名事件设置一个事件处理程序（也称为事件特性），也是等价的。</p>\n<h2 id=\"生成和事件处理的顺序\"><a href=\"#生成和事件处理的顺序\" class=\"headerlink\" title=\"生成和事件处理的顺序\"></a>生成和事件处理的顺序</h2><p>在运行时（run-time）模式下，为任何一个<code>XAML</code>声明的对象设置属性之前，总要添加一些事件处理程序，这样就可以让某个事件在属性被设置时被触发，而不用担心XAML使用特性的顺序。<br>至于多个属性集或添加多个事件处理程序，它们总会遵照一定顺序，即属性特性和事件属性是在对象元素中指定的。这一排序方式不会在实际应用中产生影响，因为.NET设计指南指出：类应该允许以任何顺序设置属性，添加事件处理程序也是如此。</p>\n<h2 id=\"命名空间\"><a href=\"#命名空间\" class=\"headerlink\" title=\"命名空间\"></a>命名空间</h2><p>比较上述XAML代码示例和相应的VisualBasic代码示例，最神秘的地方在于XAML命名空间（<a href=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" target=\"_blank\" rel=\"external\">http://schemas.microsoft.com/winfx/2006/xaml/presentation</a>）是如何被映射到.NET命名空间（<code>System.Windows.Controls</code>）上的。该映射及其他WPF命名空间的映射是在WPF程序集中硬编码完成的，里面有好几个<code>Xmlns-DefinitionAttribute</code>自定义特性的实例。（在<code>schemas.microsoft.com</code>这个URL中不存在网页，这仅仅是一个人为设定的字符串，就像其他命名空间一样。）<br><code>XAML</code>文件的根对象元素属性指定至少一个XML命名空间，用于验证自己和子元素。你可以（在根元素或子元素上）声明额外的XML命名空间，但每一个命名空间下的标识符都必须有一个唯一的前缀。例如，WPF的XAML文件都会使用第二个命名空间加上前缀x（记作<code>xmlns:x</code>而不仅仅是<code>xmlns</code>）：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns:x=http://schemas.microsoft.com/winfx/2006/xaml</span><br></pre></td></tr></table></figure>\n<p>这是XAML语言命名空间，用于映射<code>System.Windows.Markup</code>命名空间中的类型，而且它也定义了XAML编译器或解析器中的一些特殊的指令。这些指令通常是作为XAML元素的特性出现的，因此，它们看上去像宿主元素的属性，但实际上并不是如此。<br>我们把<a href=\"http://schemas.microfost.com/winfx/2006/xaml/presentation\" target=\"_blank\" rel=\"external\">http://schemas.microfost.com/winfx/2006/xaml/presentation</a>作为默认（主要）命名空间，把<a href=\"http://schemas.microsoft.com/winfx/2006-/xaml\" target=\"_blank\" rel=\"external\">http://schemas.microsoft.com/winfx/2006-/xaml</a>作为次要命名空间。次要命名空间的前缀是<code>x</code>，这仅仅是一个规则，就像VisualBasic文件要以<code>Imports System</code>指令开始一样。你可以改写原来那个<code>XAML</code>文件，含义是相同的：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">WpfNamespace:Button</span> <span class=\"attr\">xmlns:WpfNamespace</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"OK\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p>当然，从可读性来讲，在使用这些常见的命名空间的时候不需要前缀（即原始的XML命名空间），其他一些命名空间则使用一个短前缀。</p>\n<h2 id=\"属性元素\"><a href=\"#属性元素\" class=\"headerlink\" title=\"属性元素\"></a>属性元素</h2><p>富创建是WPF的亮点之一，我们可以用<code>Button</code>来演示。你可以把任意内容放在<code>Button</code>里面，不仅限于文本，如下所示（在<code>Button</code>中嵌入了一个简单的方形来做一个VCR的停止按钮）：</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> b <span class=\"keyword\">As</span> <span class=\"keyword\">new</span> System.Windows.Controls.Button()</span><br><span class=\"line\"><span class=\"keyword\">Dim</span> r <span class=\"keyword\">As</span> <span class=\"keyword\">new</span> System.Windows.Shapes.Rectangle()</span><br><span class=\"line\"></span><br><span class=\"line\">r.Width = <span class=\"number\">40</span></span><br><span class=\"line\">r.Height = <span class=\"number\">40</span></span><br><span class=\"line\">r.Fill = System.Windows.Media.Brushes.Black</span><br><span class=\"line\">b.Content = r  <span class=\"comment\">' 将按钮中的内容设置为方格</span></span><br></pre></td></tr></table></figure>\n<p><code>Button</code>的<code>Content</code>属性是<code>System.Object</code>类型的，因此它很容易被设置到40*40的<code>Rectangle</code>对象。但如何才能在XAML中用属性特性语法做相同的事呢？你该为<code>Content</code>属性设置哪种字串才能完成VisualBasic中声明的<code>Rectangle</code>功能呢？没有这样的字串，但XAML提供了一种替代的语法来设置复杂的属性值，即属性元素。如下所示：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button.Content</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Rectangle</span> <span class=\"attr\">Height</span>=<span class=\"string\">\"40\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"40\"</span> <span class=\"attr\">Fill</span>=<span class=\"string\">\"Black\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button.Content</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><code>Content</code>属性被设置为一个XML元素而不是XML特性，<code>Button.Content</code>中的句点用于区分对象元素（object element）与属性元素（property element）。它们总会以“<strong>类型名，属性名TypeName.PropertyName</strong>”的形式出现，总会包含在“类型名”对象元素中，但它们没有属于自己的特性。<br>属性元素语法也可以用于简单的属性值。下面的Button使用特性设置了两个属性，它们是<code>Content</code>和<code>Background</code>：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schema.microsoft.com/winfx/2006/xaml/presentation\"</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"OK\"</span> <span class=\"attr\">Background</span>=<span class=\"string\">\"White\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这等同于使用元素设置该Button的两个相同的属性：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button.Content</span>&gt;</span></span><br><span class=\"line\">     OK</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button.Content</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button.Background</span>&gt;</span></span><br><span class=\"line\">     White</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button.Background</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>当然，在任何可以使用特性的地方使用特性更为便捷。</p>\n<h2 id=\"类型转换器\"><a href=\"#类型转换器\" class=\"headerlink\" title=\"类型转换器\"></a>类型转换器</h2><p>上例XAML文件中的<code>white</code>是如何与VisualBasic中的<code>System.Windows.Media.Brushes.White</code>等价的呢？这个示例提供了一些如何使用字符串设置XAML属性的细节，这些属性的类型即不是<code>System.String</code>，也不是<code>System.Object</code>。在这种情况下，XAML解析器或编译器必须寻找一个类型转换器，该转换器知道如何将一个字符串表达式转换为一种想要的数据类型。WPF提供了许多常用数据类型的类型转换器，如<code>Brush</code>、<code>Color</code>、<code>FontWeight</code>、<code>Point</code>等，它们都派生自Type-Converter的类（如<code>BrushConverter</code>、<code>ColorConverter</code>等），你也可以为自定义的数据类型写类型转换器。与XAML语言不同，类型转换器通常支持不区分大小写的字符串。<br>如果没有<code>Brush</code>类型转换器，你就必须使用属性元素语法来设置XAML中的<code>Background</code>属性，如下所示：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"OK\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button.Background</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">SolidColorBrush</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">SolidColorBrush.Color</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Color</span> <span class=\"attr\">A</span>=<span class=\"string\">\"255\"</span> <span class=\"attr\">R</span>=<span class=\"string\">\"255\"</span> <span class=\"attr\">G</span>=<span class=\"string\">\"255\"</span> <span class=\"attr\">B</span>=<span class=\"string\">\"255\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">SolidColorBrush.Color</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">SolidColorBrush</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button.Background</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>由上可见，类型转换器不仅增强了XAML的可读性，也使一些本来不能被表达的概念得以表达。<br>下面的代码更精确地表达了运行时获取和执行适合Brush的类型转换器的过程：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Dim b As New System.Windows.Controls.Button()</span><br><span class=\"line\">Dim brType As Type = System.ComponentModel.TypeDescriptor.GetConverter(GetType(Brush))</span><br><span class=\"line\"></span><br><span class=\"line\">b.Content = \"OK\"</span><br><span class=\"line\">b.Background = brType.ConvertFromInvariantString(\"White\").As(Of Brush)</span><br></pre></td></tr></table></figure>\n<h2 id=\"标记扩展\"><a href=\"#标记扩展\" class=\"headerlink\" title=\"标记扩展\"></a>标记扩展</h2><p>标记扩展就像类型转换器一样，可用于扩展<code>XAML</code>的表达能力。它们都可以在运行时计算字符串特性的值，并生成一个合适的基于字符串的对象。WPF有好几个内建的标记扩展，你会发现它们都派生自本书最前面的内封中的<code>MarkupExtension</code>。<br>与类型转换器不同的是，标记扩展是通过XAML的显式的、一致的语法调用的，因此，标记扩展是最好的扩展XAML的方法。<br>只要特性值由花括号括起来，XAML编译器或解析器就会把它认作一个标记扩展值而不是一个普通的字符串。下面的按钮使用了3个不同的标记扩展类型，其中分别用到了3个不同的特性：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span></span><br><span class=\"line\"><span class=\"attr\">xmlns:x</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml\"</span></span><br><span class=\"line\"><span class=\"attr\">Background</span>=<span class=\"string\">\"&#123;x:Null&#125;\"</span></span><br><span class=\"line\"><span class=\"attr\">Height</span>=<span class=\"string\">\"&#123;x:Static SystemParameters.IconHeight&#125;\"</span></span><br><span class=\"line\"><span class=\"attr\">Content</span>=<span class=\"string\">\"&#123;Binding Path=Height, RelativeSource=&#123;RelativeSource Self&#125;&#125;\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p>每个花括号中的第一个识别符是标记扩展类的名称。按照惯例，这样的类都以<code>Extension</code>后缀结尾，但在XAML中使用它时，可以不用该后缀。在上面例子中，<code>NullExtension</code>（即<code>x:Null</code>）和<code>StaticExtension</code>（即<code>x:Static</code>）是<code>System.Windows.Markup</code>命名空间的类，因此必须使用前缀x来定位它们。<code>Binding</code>（没有<code>Extension</code>后缀）是在<code>System.Windows.Data</code>命名空间下的，因此在默认的XML命名空间下就可以找到它。<br>如果标记扩展支持，可使用逗号分隔的参数来指定它的值。<br>定位参数（如本例中的<code>SystemParameters.IconHeight</code>）被作为字符串参数传入扩展类的相应构造函数中。命名参数（如本例中的<code>Path</code>和<code>RelativeSource</code>）可用来在已构造好的扩展对象上设置相应名字的属性。这些属性的值可以是标记扩展值自己，也可以是文本值，它们可通过普通的类型转换过程。你可能注意到设计和使用标记扩展与设计和使用自定义特性很相似，这是被有意设计的。<br>在本例中，<code>NullExtension</code>允许设置<code>Background</code>笔刷为<code>null</code>。<code>StaticExtension</code>允许使用静态属性、字段、常量和枚举值，而不使用XAML写的硬编码字面值。在这个例子中，<code>Button</code>的高度是遵循操作系统当前的图标高度设置的，这一设置可通过<code>System.Windows.SystemParameters</code>类的<code>IconHeight</code>静态字段获得。<code>Binding</code>可以把<code>Content</code>设置为与它的<code>Height</code>属性相同的值。<br>如果你需要设置一个属性特性值为字面字符串（以左花括号开始），就必须将其转义，我们可通过在其前面增加一对空花括号来实现，如：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span></span><br><span class=\"line\"><span class=\"attr\">Content</span>=<span class=\"string\">\"&#123;&#125;&#123;This is not a markup extension!&#125;\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p>此外，也可以使用属性元素语法，因为花括号在上下文中不会有特殊的意义：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span>&gt;</span></span><br><span class=\"line\">    &#123;This is not a markup extension&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>因为标记扩展是有默认构造函数的类，它们可以与属性元素语法一起使用，如下例：</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Button xmlns=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span> xmlns:x=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml\"</span>&gt;</span><br><span class=\"line\">&lt;Button.Background&gt;</span><br><span class=\"line\">    &lt;x:Null/&gt;</span><br><span class=\"line\">&lt;/Button.Background&gt;</span><br><span class=\"line\">&lt;Button.Height&gt;</span><br><span class=\"line\">    &lt;x:<span class=\"keyword\">Static</span> Member=<span class=\"string\">\"SystemParameters.IconHeight\"</span>/&gt;</span><br><span class=\"line\">&lt;/Button.Height&gt;</span><br><span class=\"line\">&lt;Button.Content&gt;</span><br><span class=\"line\">    &lt;Binding Path=<span class=\"string\">\"Height\"</span>&gt;</span><br><span class=\"line\">    &lt;Binding.RelativeSource&gt;</span><br><span class=\"line\">        &lt;RelativeSource Mode=<span class=\"string\">\"Self\"</span>/&gt;</span><br><span class=\"line\">    &lt;/Binding.RelativeSource&gt;</span><br><span class=\"line\">    &lt;/Binding&gt;</span><br><span class=\"line\">&lt;/Button.Content&gt;</span><br><span class=\"line\">&lt;/Button&gt;</span><br></pre></td></tr></table></figure>\n<p>该转换之所以可以执行是因为这些标记扩展都有与形参化的构造函数的实参（使用属性特性语法的定位实参）对应的属性。例如，<code>StaticExtension</code>有一个<code>Member</code>属性与之前传入到开参化构造函数中的实参意思是一样的，<code>RelativeSource</code>有一个对应于构造函数实参的<code>Mode</code>属性。<br>由于标记扩展完成的实际工作对于每个扩展都是不同的。如下面的VisualBasic代码与使用<code>NullExtension</code>、<code>StaticExtension</code>和<code>Binding</code>的基于XAML表示的按钮是一个意思：</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> b <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> System.Windows.Controls.Button()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">' 设置Background</span></span><br><span class=\"line\">b.Background = null</span><br><span class=\"line\"><span class=\"comment\">' 设置Height</span></span><br><span class=\"line\">b.Height = System.Windows.SystemParameters.IconHeight</span><br><span class=\"line\"><span class=\"comment\">' 设置Content</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> binding <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> System.Windows.Data.Binding()</span><br><span class=\"line\">binding.Path = <span class=\"keyword\">new</span> System.Windows.PropertyPath(<span class=\"string\">\"Height\"</span>)</span><br><span class=\"line\">binding.RelativeSource = System.Windows.Data.RelativeSource.Self</span><br><span class=\"line\">b.SetBinding(System.Windows.Controls.Button.ContentProperty, binding)</span><br></pre></td></tr></table></figure>\n<p>尽管如此，这里的代码与<code>XAML</code>解析器或编译器使用的机制是不同的，解析器和编译器是依靠每个标记扩展在运行时设置合适的值（本质上是通过调用每个类的<code>ProvideValue</code>方法来实现的）。与这一机制完全对应的过程式代码通常很复杂。</p>\n<h2 id=\"对象元素的子元素\"><a href=\"#对象元素的子元素\" class=\"headerlink\" title=\"对象元素的子元素\"></a>对象元素的子元素</h2><p>XAML文件就像所有的XML文件一样，必须有一个单独的根对象元素。对象元素是可以支持子对象元素的。一个对象元素可以有3种类型的子元素：一个内容属性值，集合项，或一个能够通过类型转换到它的父元素的值。</p>\n<h2 id=\"内容属性\"><a href=\"#内容属性\" class=\"headerlink\" title=\"内容属性\"></a>内容属性</h2><p>大多数WPF类（通过定制特性）指定了一个属性，该属性可以被设置为XML元素中的任何内容。这个属性叫作内容属性，它确实是一个让XAML呈现变得更轻便简单的捷径。从某种意义上讲，这些内容属性有点像VB中的默认属性。<code>Button</code>中的<code>Content</code>属性就是这样指定的，如：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"OK\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p>可以被重写为：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span>&gt;</span></span><br><span class=\"line\">OK</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>还有更复杂的方式：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button.Content</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Rectangle</span> <span class=\"attr\">Height</span>=<span class=\"string\">\"40\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"40\"</span> <span class=\"attr\">Fill</span>=<span class=\"string\">\"Black\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button.Content</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>可以被重写为：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Rectangle</span> <span class=\"attr\">Height</span>=<span class=\"string\">\"40\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"40\"</span> <span class=\"attr\">Fill</span>=<span class=\"string\">\"Black\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"集合项\"><a href=\"#集合项\" class=\"headerlink\" title=\"集合项\"></a>集合项</h2><p>XAML允许将项添加到支持索引的两种类型的集合中：<code>List</code>和<code>Dictionary</code>。</p>\n<h3 id=\"List\"><a href=\"#List\" class=\"headerlink\" title=\"List\"></a>List</h3><p><code>List</code>是实现了<code>System.Collection.IList</code>接口的集合，如<code>System.Collections.ArrayList</code>和许多WPF定义的集合类都是<code>List</code>。如，下面的XAML向<code>ListBox</code>添加了两个项，它的<code>Items</code>属性是实现了<code>IList</code>的<code>ItemCollection</code>类型：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ListBox</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ListBox.Items</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">ListBoxItem</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"Item 1\"</span>/&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">ListBoxItem</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"Item 2\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ListBox.Items</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ListBox</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>因为<code>Items</code>是<code>ListBox</code>的内容属性，可以进一步简化：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ListBox</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ListBoxItem</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"Item 1\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ListBoxItem</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"Item 2\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ListBox</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Dictionary\"><a href=\"#Dictionary\" class=\"headerlink\" title=\"Dictionary\"></a>Dictionary</h3><p><code>System.Windows.ResourceDictionary</code>是WPF中的一个常用的集合类型，它实现了<code>System.Collections.IDictionary</code>接口，能够支持在过程式代码中添加、移除枚举键/值对。下面的XAML添加了两个<code>Color</code>对象到一个<code>ResourceDictionary</code>中。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span></span><br><span class=\"line\"><span class=\"attr\">xmlns:x</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Color</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">A</span>=<span class=\"string\">\"255\"</span> <span class=\"attr\">R</span>=<span class=\"string\">\"255\"</span> <span class=\"attr\">G</span>=<span class=\"string\">\"255\"</span> <span class=\"attr\">B</span>=<span class=\"string\">\"255\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Color</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"2\"</span> <span class=\"attr\">A</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">R</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">G</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">B</span>=<span class=\"string\">\"0\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ResourceDictionary</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>注意，在带有x:Key的XAML中指定的值总是被作为字符串处理的，除非使用标记扩展，但不会尝试使用类型转换。</strong></p>\n<p>XAML是设计用来与.NET类型系统一起工作的，你可以在其中使用任何类型的.NET对象，也可以使用自己定义的对象。但对象必须以“友好声明”的方式进行设计。如果一个类没有默认构造函数，也没有提供有用的实例属性，那么它在XAML中是无法直接使用的。<br>WPF程序集都被加上了<code>XmlnsDefinitionAttribute</code>属性，这样可以将.NET命名空间映射为XAML文件中的XML命名空间，但对于那个不是专门为XAML设计的程序集又该如何处理呢？它们的类型仍然可以使用，只需要一个特殊的指令作为XML命名空间就可以了。如下例：</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> h <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> System.Collections.Hashtable()</span><br><span class=\"line\">h.Add(<span class=\"string\">\"key1\"</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">h.Add(<span class=\"string\">\"key2\"</span>, <span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n<p>以上代码在XAML中表示为：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">collections:Hashtable</span> <span class=\"attr\">xmlns:collections</span>=<span class=\"string\">\"clr-namespace:System.Collections;assembly=mscorlib\"</span></span><br><span class=\"line\"><span class=\"attr\">xmlns:sys</span>=<span class=\"string\">\"clr-namespace:System;assembly=mscorlib\"</span></span><br><span class=\"line\"><span class=\"attr\">xmlns:x</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">sys:Int32</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"key1\"</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">sys:Int32</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">sys:Int32</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"key2\"</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">sys:Int32</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">collections:Hashtable</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><code>clr-namespace</code>标记允许直接在XAML中放入一个.NET命名空间。</p>\n<p>为了避免混淆，在转换子元素时，任何一个有效的XAML解析器或编译器必须遵循下面的规则：</p>\n<ul>\n<li>如果该类型实现了IList接口，就为每个子元素调用IList.Add。</li>\n<li>否则，如果该类型实现了IDictionary，就为每个子元素调用IDictionary.Add，在该值的键和元素中使用x:Key特性值。</li>\n<li>否则，如果父元素支持内容属性（由System.Windows.Markup.ContentPropertyAttribute表示），而且子元素的类型与该内容属性是兼容的，就把子元素作为它的值。</li>\n<li>否则，如果子对象是普通文本，且有类型转换器将子对象转换为父类型（没有在父元素上设置属性），则把子元素作为类型转换器的输入，将输出作为父对象的实例。</li>\n<li>其他情况下则抛出错误。</li>\n</ul>\n<h2 id=\"编译：将XAML与过程式代码混合使用\"><a href=\"#编译：将XAML与过程式代码混合使用\" class=\"headerlink\" title=\"编译：将XAML与过程式代码混合使用\"></a>编译：将XAML与过程式代码混合使用</h2><p>大多数WPF应用程序是XAML与过程式代码的混合体。</p>\n<h2 id=\"在运行时加载和解析XAML\"><a href=\"#在运行时加载和解析XAML\" class=\"headerlink\" title=\"在运行时加载和解析XAML\"></a>在运行时加载和解析XAML</h2><p>WPF的运行时XAML解析器公开为两个类，它们都位于<code>System.Windows.Markup</code>命名空间中：<code>XamlReader</code>和<code>XamlWriter</code>。<code>XamlReader</code>包含了一些对静态<code>Load</code>方法的重载，而<code>XamlWriter</code>包含了一些对静态<code>Save</code>方法的重载。因此，用任何一种.NET语言写的程序都可以在运行时依赖XAML，而不用程序员付出太多努力。</p>\n<h2 id=\"XamlReader\"><a href=\"#XamlReader\" class=\"headerlink\" title=\"XamlReader\"></a>XamlReader</h2><p><code>XamlReader.Load</code>方法的设置将解析XAML，创建合适的.NET对象，然后返回一个根元素的实例。因此，如果在当前目录下有一个XAML文件叫作MyWindow-.xaml，它包含了一个<code>Window</code>对象作为根结点，那么可以使用下面的代码来加载和获得<code>Window</code>对象。</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> window <span class=\"keyword\">As</span> Window = null</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Using</span> fs <span class=\"keyword\">As</span> FileStream = <span class=\"keyword\">New</span> FileStream(<span class=\"string\">\"MyWindow.xaml\"</span>, FileMode.Open, FileAccess.Read)</span><br><span class=\"line\">    <span class=\"comment\">' 获得根元素，该元素是一个Window对象</span></span><br><span class=\"line\">    Window = (Window)XamlReader.Load(fs)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Using</span></span><br></pre></td></tr></table></figure>\n<p>在<code>Load</code>返回之后，整个XAML文件的对象层级将在内存中被实例化，因此就不再需要XAML文件了。退出<code>Using</code>代码块后，<code>FileSteam</code>将被立即关闭。由于可向<code>XamlReader</code>传入一个任意的<code>Stream</code>（或使用另一个重载来传入<code>System.Xml.XmlReader</code>对象），所以有许多可选择的方式来获得XAML的内容。<br><code>XamlReader</code>也定义了<code>LoadAsync</code>实例方法用于异步加载和解析XAML内容。在加载大文件或网络文件时，可使用<code>LoadAsync</code>保持用户界面处于响应状态。<code>CancelAsync</code>方法用于停止处理，<code>LoadCompleted</code>事件可让我们知道处理何时完成。<br>既然已有一个根元素的实例存在，就可利用适当的内容属性或集合属性来获得子元素。下面的代码假设<code>Window</code>有一个类行为<code>StackPanel</code>的子元素，Stack-Panel的第5个子对象是一个OK Button。</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> window <span class=\"keyword\">As</span> Window = <span class=\"literal\">Nothing</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Using</span> fs <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> FileStream(<span class=\"string\">\"MyWindow.xaml\"</span>, FileMode.Open, FileAccess.Read)</span><br><span class=\"line\">    <span class=\"comment\">' 获得根元素，该元素是一个Window对象</span></span><br><span class=\"line\">    window = <span class=\"built_in\">DirectCast</span>(XamlReader.Load(fs), Window)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Using</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">' 通过（硬编码知识）遍历子元素获取OK按钮</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> panel <span class=\"keyword\">As</span> StackPanel = <span class=\"built_in\">DirectCast</span>(window.Content, StackPanel)</span><br><span class=\"line\"><span class=\"keyword\">Dim</span> okButton <span class=\"keyword\">As</span> Button = <span class=\"built_in\">DirectCast</span>(panel.Children(<span class=\"number\">4</span>), Button)</span><br></pre></td></tr></table></figure>\n<p>有了这个<code>Button</code>的引用，就可以做任何想做的事：设置额外的属性，添加事件处理程序，或执行一些无法用XAML完成的动作。<br>但使用硬编码索引和其他关于用户界面结构假设的代码并不能让人满意。XAML支持元素命名，这样就可以从过程式代码中找到这些元素并放心地使用它们。</p>\n<h2 id=\"命名XAML元素\"><a href=\"#命名XAML元素\" class=\"headerlink\" title=\"命名XAML元素\"></a>命名XAML元素</h2><p>XAML语言命名空间有一个Name关键字，它是用来给元素命名的。示例如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">\"okButton\"</span>&gt;</span>OK<span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上例代码可改如下：</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> window <span class=\"keyword\">As</span> Window = <span class=\"literal\">Nothing</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Using</span> fs <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> FileStream(<span class=\"string\">\"MyWindow.xaml\"</span>, FileMode.Open, FileAccess.Read)</span><br><span class=\"line\">    <span class=\"comment\">' 获得根元素，该元素是一个Window对象</span></span><br><span class=\"line\">    window = <span class=\"built_in\">DirectCast</span>(XamlReader.Load(fs), Window)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Using</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">' 通过按钮的名称获得OK按钮Button</span></span><br><span class=\"line\">okButton = <span class=\"built_in\">DirectCast</span>(window.FindName(<span class=\"string\">\"okButton\"</span>), Button)</span><br></pre></td></tr></table></figure>\n<p><code>FindName</code>并不仅仅在<code>Window</code>类中存在，在<code>FrameworkElement</code>、<code>FrameworkContentElement</code>及许多重要的WPF类的基类中也有<code>FindName</code>的定义。</p>\n<h2 id=\"编译XAML\"><a href=\"#编译XAML\" class=\"headerlink\" title=\"编译XAML\"></a>编译XAML</h2><p>XAML编译包括三项事件：</p>\n<ul>\n<li>将一个XAML文件转换为一种特殊的二进制格式。</li>\n<li>将转换好的内容作为二进制资源嵌入到正在被创建的程序集中。</li>\n<li>执行链接操作，将XAML和过程式代码自动连接起来。</li>\n</ul>\n<p>如果你不在乎将XAML文件和过程式代码融合，那么只需把它添加到VS的WPF项目中来，并用界面中的Build动作来完成编译即可。但如果要编译一个XAML文件并将它与过程式代码混合，第一步要做的就是为XAML文件的根元素指定一个子类，可以用XAML语言命名空间中的Class关键字来完成。例如：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span></span><br><span class=\"line\"><span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml\"</span></span><br><span class=\"line\"><span class=\"attr\">x:Class</span>=<span class=\"string\">\"MyNamespace.MyWindow\"</span>&gt;</span></span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Window</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在一个独立的源文件中（但是在同一个项目中），可以一个子类，并添加任何想添加的成员：</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Namespace</span> MyNamespace</span><br><span class=\"line\">\t<span class=\"keyword\">Partial</span> <span class=\"keyword\">Class</span> MyWindow</span><br><span class=\"line\">\t\t<span class=\"keyword\">Inherits</span> Window</span><br><span class=\"line\">\t\t<span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> <span class=\"keyword\">New</span>()</span><br><span class=\"line\">\t\t\t<span class=\"comment\">'一定要调用，这样才能加载XAML定义的内容</span></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">' ...</span></span><br><span class=\"line\">\t\t\tInitializeComponent()</span><br><span class=\"line\">\t\t<span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\">\t\t<span class=\"comment\">' Any other members can go here...</span></span><br><span class=\"line\">\t<span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Namespace</span></span><br></pre></td></tr></table></figure>\n<p>通常我们把这样的文件叫作代码隐藏文件。如果你引用XAML中的任何一个事件处理程序（通过事件特性，如Button的Click特性），这里就是我们定义这些事件处理程序的地方。<br>当在VS中创建一个基于WPF的VisualBasic或VB项目，或当使用<code>Add New Item...</code>来添加某WPF项目时，VS会自动创建一个XAML文件，并把<code>x:Class</code>作为根元素，同时创建一个具有部分类定义的代码隐藏源文件，最后把两者连接起来，这样代码构建（build）才能顺利进行。</p>\n<h2 id=\"BAML\"><a href=\"#BAML\" class=\"headerlink\" title=\"BAML\"></a>BAML</h2><p>BAML是<code>Binary Application Markup Language</code>的缩写，意思是二进制应用程序标记语言，它其实是被解析、标记化，最后转换为二进制形式的XAML。虽然大块的XAML代码可以被表示为过程式代码，但XAML到BAML的编译过程不会生成过程源代码。因此，BAML不像MSIL，它是一个压缩的声明格式，比加载和解析普通的XAML文件快，且比普通XAML文件要小。BAML仅仅是XAML编译过程的详细实现，没有任何直接公开的方法，在未来可能会被一些其他东西所取代。</p>\n<h2 id=\"生成的源代码\"><a href=\"#生成的源代码\" class=\"headerlink\" title=\"生成的源代码\"></a>生成的源代码</h2><p><code>x:Class</code>只能在要编译的XAML文件中使用。但在没有<code>x:Class</code>的情况下，编译XAML文件也是没有问题的。这意味着没有对应的代码隐藏文件，因此不能使用任何需要过程式代码才能实现的特性。<br>每个生成的源文件中包含了一个由根对象元素中的<code>x:Class</code>指定的类的部分类定义。XAML文件中的每个已命名的元素在该部分类中都有一个成员（默认是私有的），这些成员的名称就是元素名称。其中还有一个<code>InitializeComponent</code>方法用于完成一大堆烦人的工作。</p>\n<h2 id=\"BAML可以反编译为XAML吗？\"><a href=\"#BAML可以反编译为XAML吗？\" class=\"headerlink\" title=\"BAML可以反编译为XAML吗？\"></a>BAML可以反编译为XAML吗？</h2><p>可以，无论怎么声明，任何一个公司的.NET类实例都可以被序列化为XAML。第一个步骤是获取一个实例，这个实例是用来作为根对象的。如果你还没有这个对象，可以调用静态的<code>System.Windows.Application.LoadComponent</code>方法，如下所示：</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> uri <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> System.Uri(<span class=\"string\">\"MyWindow.xaml\"</span>, System.UriKind.Relative)</span><br><span class=\"line\"><span class=\"keyword\">Dim</span> window <span class=\"keyword\">As</span> Window = Application.LoadComponent(uri).<span class=\"keyword\">As</span>(<span class=\"keyword\">Of</span> Window)</span><br></pre></td></tr></table></figure>\n<p>由URI指定的名称并不要求物理上存在一个独立的xaml文件。当指定了一个合适的URI后，<code>LoadComponent</code>可以自动获得作为资源嵌入的BAML。实际上，VS自动生成的<code>InitializeComponent</code>方法就是调用<code>Application.LoadComponent</code>来加载嵌入的BAML。<br>获得根元素的实例后，可以使用<code>System.Windows.Markup.XamlWrite</code>类来获得根元素的XAML表示。<code>XamlWriter</code>包含了5个静态<code>Save</code>方法的重载，是最简单的返回一个适当XAML字符串的方法，通过传入一个对象实例来实现。如：</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> xaml <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = XamlWriter.Save(window)</span><br></pre></td></tr></table></figure>\n<h2 id=\"XAML关键字\"><a href=\"#XAML关键字\" class=\"headerlink\" title=\"XAML关键字\"></a>XAML关键字</h2><p>XAML语言的命名空间（<a href=\"http://schemas.microsoft.com/winfx/2006/xaml\" target=\"_blank\" rel=\"external\">http://schemas.microsoft.com/winfx/2006/xaml</a>）定义了一批XAML编译器或解析器必须特殊处理的关键字。它们主要控制元素如何被提供给过程式代码，但即使没有过程式代码，有一些关键字还是有用的。如<code>Key</code>、<code>Name</code>、<code>Class</code>、<code>Subclass</code>和<code>Code</code>。</p>\n<h2 id=\"WPF的重要新概念\"><a href=\"#WPF的重要新概念\" class=\"headerlink\" title=\"WPF的重要新概念\"></a>WPF的重要新概念</h2><h3 id=\"逻辑树与可视树\"><a href=\"#逻辑树与可视树\" class=\"headerlink\" title=\"逻辑树与可视树\"></a>逻辑树与可视树</h3><p>XAML天生就是用来呈现用户界面的，这是由于它具有层次化的特性。在WPF中，用户界面由一个对象树构建而成，这棵树叫作逻辑树。<br>WPF用户界面的逻辑树也并不一定用XAML创建，它完全可能用过程式代码来实现。<br>逻辑树的概念很直观，但为什么要关注它呢？因为几乎WPF的每一方面（属性、资源、事件等）都有与逻辑树相关联的行为。如，属性值有时会沿着树自动传递给子元素，而触发的事件可以自底向上或自顶向下遍历树。<br>与逻辑树类似的一个概念是可视树。可视树基本上是逻辑树的扩展，在可视树中，节点都被打散，分放到核心可视组件中。可视树提供了一些详细的可视化实现，而不是把每个元素当作一个“黑盒”。如，虽然<code>ListBox</code>从逻辑上讲是一个单独的控件，但它的默认可视呈现是由更多的原始WPF元素组成的：一个<code>Border</code>对象、两个<code>ScrollBar</code>及其他一些元素。<br>并非所有的逻辑树节点都会出现在可视树中，只有从<code>System.Windows.Media.Visual</code>或<code>System.Windows.Media.Visual3D</code>派生的元素才会被包含进去。其他元素不会包含在内，因为它们自己并没有与生俱来的呈现行为。<br>使用<code>System.Windows.LogicTreeHelper</code>和<code>System.Windows.Media.VisualTreeHelper</code>这两个有些对象的类可以方便地遍历逻辑树和可视树。</p>\n<p>注意：<strong>不要根据具体的可视树写代码。逻辑树是静态的，不会受到程序员的干扰（例如动态添加/删除）元素，但只要用户切换不同的Windows主题，可视树就会改变。</strong></p>\n<p>遍历和打印逻辑树和可视树的示例代码：</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Imports</span> System.Diagnostics</span><br><span class=\"line\"><span class=\"keyword\">Imports</span> System.Windows</span><br><span class=\"line\"><span class=\"keyword\">Imports</span> System.Windows.Media</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Partial</span> <span class=\"keyword\">Class</span> AboutDialog</span><br><span class=\"line\">\t<span class=\"keyword\">Inherits</span> Window</span><br><span class=\"line\">\t<span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> <span class=\"keyword\">New</span>()</span><br><span class=\"line\">\t\tIntializeComponent()</span><br><span class=\"line\">\t\tPrintLogicalTree(<span class=\"number\">0</span>, <span class=\"keyword\">Me</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\">\t<span class=\"keyword\">Protected</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Sub</span> OnContentRendered(e <span class=\"keyword\">As</span> EventArgs)</span><br><span class=\"line\">\t\t<span class=\"keyword\">MyBase</span>.OnContentRendered(e)</span><br><span class=\"line\">\t\tPrintVisualTree(<span class=\"number\">0</span>, <span class=\"keyword\">Me</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> PrintLogicalTree(depth <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span>, obj <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span>)</span><br><span class=\"line\">\t\t<span class=\"comment\">'打印对象，使用前置空格表示深度</span></span><br><span class=\"line\">\t\tDebug.WriteLine(<span class=\"keyword\">New</span> <span class=\"built_in\">String</span>(<span class=\"string\">\" \"</span>, depth) &amp; Convert.ToString(obj))</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">'有时，叶子节点不是DependencyObject，如string</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">If</span> <span class=\"keyword\">Not</span> (<span class=\"built_in\">TypeOf</span> obj <span class=\"keyword\">Is</span> DependencyObject) <span class=\"keyword\">Then</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">Return</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">'递归调用每个逻辑子节点</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">For</span> <span class=\"keyword\">Each</span> child <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span> <span class=\"keyword\">In</span> LogicalTreeHelper.GetChildren(<span class=\"built_in\">TryCast</span>(obj, DependencyObject))</span><br><span class=\"line\">\t\t\tPrintLogicalTree(depth + <span class=\"number\">1</span>, child)</span><br><span class=\"line\">\t\t<span class=\"keyword\">Next</span></span><br><span class=\"line\">\t<span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> PrintVisualTree(depth <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span>, obj <span class=\"keyword\">As</span> DependencyObject)</span><br><span class=\"line\">\t\t<span class=\"comment\">'打印对象，使用前置空格表示深度</span></span><br><span class=\"line\">\t\tDebug.WriteLine(<span class=\"keyword\">New</span> <span class=\"built_in\">String</span>(<span class=\"string\">\" \"</span>, depth) &amp; Convert.ToString(obj))</span><br><span class=\"line\">\t\t<span class=\"comment\">'递归调用每个可视子节点</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">For</span> i <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">0</span> <span class=\"keyword\">To</span> VisualTreeHelper.GetChildrenCount(obj) - <span class=\"number\">1</span></span><br><span class=\"line\">\t\t\tPrintVisualTree(depth + <span class=\"number\">1</span>, VisualTreeHelper.GetChild(obj, i))</span><br><span class=\"line\">\t\t<span class=\"keyword\">Next</span></span><br><span class=\"line\">\t<span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<p>虽然在Window的构造函数中就可以遍历逻辑树，但可视树真到Window完成至少一次布局后才会有节点，否则是空的。这也是为什么<code>PrintVisualTree</code>是在<code>On-ContentRendered</code>中调用的，因为<code>OnContentRendered</code>是在布局完成后才被调用的。</p>\n<h3 id=\"依赖属性\"><a href=\"#依赖属性\" class=\"headerlink\" title=\"依赖属性\"></a>依赖属性</h3><p>WPF引入了一个新的属性类型叫作依赖属性，整个WPF平台中都会使用到它，用来实现样式化、自动数据绑定、动画等。<br>依赖属性在任何时刻都是依靠多个提供程序来判断它的值的。这些提供程序可以是一段一直在改变值的动画，或者一个父元素的属性值从上慢慢传递给子元素等。依赖属性的最大特征是其内建的传递变更通知的能力。<br>添加这样的智能给属性，其动力在于能够声明标记中直接启用富功能。WPF友好声明设计的关键在于它使用了很多属性。例如，<code>Button</code>控件有96个公共属性。属性可以方便地在XAML中设置而不用程序代码。但如果依赖属性没有额外的垂直传递，在不写额外代码的情况下，很难在设置属性这样简单的动作中获得想要的结果。</p>\n<h3 id=\"依赖属性的实现\"><a href=\"#依赖属性的实现\" class=\"headerlink\" title=\"依赖属性的实现\"></a>依赖属性的实现</h3><p>实际上，依赖属性仅仅是普通的.NET属性，只不过它已融入到了WPF架构中。它完全是由WPF API实现的，没有一种.NET语言天生就能理解依赖属性。<br>下例展示了一个<code>Button</code>如何有效地实现一个叫<code>IsDefault</code>的依赖属性：</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> Button : <span class=\"keyword\">Inherits</span> ButtonBase</span><br><span class=\"line\">\t<span class=\"comment\">' 依赖属性</span></span><br><span class=\"line\">\t<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> IsDefaultProperty <span class=\"keyword\">As</span> DependencyProperty</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"keyword\">New</span>()</span><br><span class=\"line\">\t\t<span class=\"comment\">' 注册属性</span></span><br><span class=\"line\">\t\t<span class=\"comment\">' ...</span></span><br><span class=\"line\">\t\tButton.IsDefaultProperty = DependencyProperty.Register(</span><br><span class=\"line\">\t\t    <span class=\"string\">\"IsDefault\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">GetType</span>(<span class=\"built_in\">Boolean</span>),</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">GetType</span>(Button),</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">New</span> FrameworkPropertyMetadata(<span class=\"literal\">False</span>, <span class=\"keyword\">New</span> PropertyChangedCallback(<span class=\"keyword\">AddressOf</span> OnIsDefaultChanged)))</span><br><span class=\"line\">\t<span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">' .NET属性包装器（可选）</span></span><br><span class=\"line\">\t<span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> IsDefault() <span class=\"keyword\">As</span> <span class=\"built_in\">Boolean</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">Get</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">Return</span> <span class=\"built_in\">CBool</span>(GetValue(Button.IsDefaultProperty))</span><br><span class=\"line\">\t\t<span class=\"keyword\">End</span> <span class=\"keyword\">Get</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">Set</span></span><br><span class=\"line\">\t\t\tSetValue(Button.IsDefaultProperty, value)</span><br><span class=\"line\">\t\t<span class=\"keyword\">End</span> <span class=\"keyword\">Set</span></span><br><span class=\"line\">\t<span class=\"keyword\">End</span> <span class=\"keyword\">Property</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">' 属性改变的回调（可选）</span></span><br><span class=\"line\">\t<span class=\"keyword\">Private</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> OnIsDefaultChanged(o <span class=\"keyword\">As</span> DependencyObject, e <span class=\"keyword\">As</span> DependencyPropertyChangedEventArgs)</span><br><span class=\"line\">\t\t<span class=\"comment\">' ...</span></span><br><span class=\"line\">\t<span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<p><code>IsDefaultProperty</code>静态成员是真正的依赖属性，类型为System.Windows.DependencyProperty。按规则，所有的DependencyProperty成员都必须是public、static，并且有一个Property作为后缀。依赖属性通常调用DependencyProperty.Register静态方法创建，这样的方法需要一个名称（IsDefault）、一个属性类型（bool）及拥有这个属性的类（Button类）。通过不同的Register方法重载，你可以传入metadata（元数据）来告诉WPF如何处理该属性、如何处理属性值改变的回调、如何处理强制值转换、及如何验证值。Button会在它的静态构造函数中调用Register的重载，给依赖属性一个默认值false，并为变更通知添加一个委托。<br>最后，那个叫作IsDefault的传统.NET属性会调用继承自System.Windows.DependencyObject的GetValue和SetValue方法来实现自己的访问器，System.-Windows.DependencyObject是底层基类，这是拥有依赖属性的类必须继承的。GetValue返回最后一次由SetValue设置的值，如果SetValue从未被调用过，那么就是该属性注册时的默认值。IsDefault .NET属性并不是必需的，Button的使用者可能会直接调用GetValue/SetValue方法，因为它们是公开的。</p>\n<p>注意：<strong>在运行时，绕过了.NET属性包装器在XAML中设置依赖属性。</strong></p>\n<p>虽然XAML编译器在编译时是依靠该属性包装器的，但在运行时WPF是直接调用GetValue和SetValue的。因此，为让使用XAML设置属性与使用过程式代码设置属性保持一致，在属性包装器中除了GetValue/SetValue调用外，不应该包含任何其他逻辑，这是至关重要的。如果要添加自定义逻辑，应该在注册的回调函数中添加。<br>表面上看，上例代码像是一种冗长的呈现简单布尔属性的方式。然而，因为GetValue和SetValue内部使用了高效的稀疏存储系统，而IsDefaultProperty是一个静态成员（而不是一个实例成员），与典型的.NET属性相比，依赖属性的实现节省了保存每个实现所需要的内存。<br>依赖属性的好处远不止节约内存而已。它把相当一部分代码集中起来，并做标准化处理。</p>\n<h3 id=\"变更通知\"><a href=\"#变更通知\" class=\"headerlink\" title=\"变更通知\"></a>变更通知</h3><p>无论何时，只要依赖属性的值变了，WPF就会自动根据属性的元数据（metadata）触发一系列动作。内建的变更通知最有趣的特性之一是属性触发器，它可以在属性值改变时执行自定义动作，而不用更改任何过程式代码。<br>例如，你想让Button在鼠标移上去时变为蓝色。如果没有属性触发器的话，你要为每个Button添加两个事件处理程序，一个为MouseEvent事件准备，一个为MouseLeave事件准备。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">MouseEnter</span>=<span class=\"string\">\"Button_MouseEnter\"</span> <span class=\"attr\">MouseLeave</span>=<span class=\"string\">\"Button_MouseLeave\"</span> </span><br><span class=\"line\"><span class=\"attr\">MinWidth</span>=<span class=\"string\">\"75\"</span> <span class=\"attr\">Margin</span>=<span class=\"string\">\"10\"</span>&gt;</span></span><br><span class=\"line\">    Help<span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">MouseEnter</span>=<span class=\"string\">\"Button_MouseEnter\"</span> <span class=\"attr\">MouseLeave</span>=<span class=\"string\">\"Button_MouseLeave\"</span> </span><br><span class=\"line\"><span class=\"attr\">MinWidth</span>=<span class=\"string\">\"75\"</span> <span class=\"attr\">Margin</span>=<span class=\"string\">\"10\"</span>&gt;</span></span><br><span class=\"line\">    OK<span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>下面的代码实现了这两个事件处理程序：</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> Button_MouseEnter(sender <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span>, e <span class=\"keyword\">As</span> MouseEventArgs)</span><br><span class=\"line\">\t<span class=\"keyword\">Dim</span> b <span class=\"keyword\">As</span> Button = <span class=\"built_in\">TryCast</span>(sender, Button)</span><br><span class=\"line\">\t<span class=\"keyword\">If</span> b <span class=\"keyword\">IsNot</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">Then</span></span><br><span class=\"line\">\t\tb.Foreground = Brushed.Blue</span><br><span class=\"line\">\t<span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> Mouse_MouseLeave(sender <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span>, e <span class=\"keyword\">As</span> MouseEventArgs)</span><br><span class=\"line\">\t<span class=\"keyword\">Dim</span> b <span class=\"keyword\">As</span> Button = <span class=\"built_in\">TryCast</span>(sender, Button)</span><br><span class=\"line\">\t<span class=\"keyword\">If</span> b <span class=\"keyword\">IsNot</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">Then</span></span><br><span class=\"line\">\t\tb.Foreground = Brushed.Black</span><br><span class=\"line\">\t<span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br></pre></td></tr></table></figure>\n<p>然而有了属性触发器，完全可以在XAML中完成相同的行为：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">MinWidth</span>=<span class=\"string\">\"75\"</span> <span class=\"attr\">Margin</span>=<span class=\"string\">\"10\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button.Style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Style</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">\"&#123;x:Type Button&#125;\"</span>&gt;</span><span class=\"xml\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Style.Triggers</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Trigger</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"IsMouseOver\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"True\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Foreground\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"Blue\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">Trigger</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Style.Triggers</span>&gt;</span></span><br><span class=\"line\">    </span><span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button.Style</span>&gt;</span></span><br><span class=\"line\">    OK</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>属性触发器仅仅是WPF支持的3种触发器之一。数据触发器是属性触发器的另一种形式，它可以在任何.NET属性中工作（而不仅仅是依赖属性）。事件触发器会通过声明方式指定动作，该动作在路由事件触发时生效。</p>\n<h3 id=\"属性值继承\"><a href=\"#属性值继承\" class=\"headerlink\" title=\"属性值继承\"></a>属性值继承</h3><p>术语“<strong>属性值继承</strong>”并不是指传统的面向对象的类继承，而是指属性值自顶向下沿着元素树传递。<br>属性值的继承行为由以下两个因素决定：</p>\n<ul>\n<li>并不是每个依赖属性都参与属性值继承。（从内部来讲，依赖属性会通过传递FrameworkPropertyMetadataOptions.Inherits给DependencyProperty-.Register方法来完成继承。</li>\n<li>有其他一些优先级更高的源来设置这些属性值。</li>\n</ul>\n<h3 id=\"对多个提供程序的支持\"><a href=\"#对多个提供程序的支持\" class=\"headerlink\" title=\"对多个提供程序的支持\"></a>对多个提供程序的支持</h3><p>WPF有许多强大的机制可以独立地去尝试设置依赖属性的值。如果没有设计良好的机制来处理这些完全不同的属性值提供程序，这个系统会变得混乱，属性值会变得不稳定。当然，正如它们的名字所表达的，依赖属性就是设计为以一致的、有序的方式依靠这些提供程序。<br>下图展示了这5步流程，通过该流程，WPF运行每个依赖属性并最终计算出它的值。依靠依赖属性中内嵌的变更通知，这个流程才可自动发生。</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/2011111212113221.gif\" alt=\"\"></p>\n<h3 id=\"判断基础值\"><a href=\"#判断基础值\" class=\"headerlink\" title=\"判断基础值\"></a>判断基础值</h3><p>大多数属性值提供程序会把基础值的计算纳入考虑范畴。下面的清单显示了8个提供程序，它们可以设置大多数依赖属性的值，优先级顺序从高到低为：</p>\n<blockquote>\n<p>本地值-&gt;样式触发器-&gt;模板触发器-&gt;样式设置程序-&gt;主题样式触发器-&gt;主题样式设置程序-&gt;属性值继承-&gt;默认值</p>\n</blockquote>\n<p>本地值技术上的含义是任何对DependencyObject.SetValue的调用，但它通常会有一个简单的属性赋值，这是用XAML或过程式代码完成的。<br>默认值指的是依赖属性注册时使用的初始值。</p>\n<h3 id=\"计算\"><a href=\"#计算\" class=\"headerlink\" title=\"计算\"></a>计算</h3><p>如果第一步中的值是表达式（派生自System.Windows.Expression的一个对象），那么WPF会执行一种特殊的演算步骤–把表达式转换为具体的结果。在WPF 3.0中，表达式仅在使用动态资源或数据绑定时起作用。</p>\n<h3 id=\"应用动画\"><a href=\"#应用动画\" class=\"headerlink\" title=\"应用动画\"></a>应用动画</h3><p>如果一个或多个动画在运行，它们有能力改变当前的属性值或完全替代当前的属性值。</p>\n<h3 id=\"限制\"><a href=\"#限制\" class=\"headerlink\" title=\"限制\"></a>限制</h3><p>在所有属性值提供程序处理过后，WPF将拿到一个几乎是终值的属性值，如果依赖属性已经注册了CoerceValueCallback，还会把这个属性值传递给Coerce-ValueCallback委托。该回调函数负责返回一个新的值，它是基于自定义逻辑实现的。</p>\n<h3 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h3><p>最后，如果依赖属性已经注册了ValidateValueCallback，之前的限制中的值将被传入ValidateValueCallback委托。如果输入值有效，该回调函数返回true，否则返回false。返回false将会导致抛出一个异常，并使整个流程被取消。<br>如果没办法判断依赖属性从哪里获得当前值，那么可以得到静态方法DependencyPropertyHelper.GetValueSource作为调试助手。该方法将返回一个ValueSource结构，其中包含以下一些数据：一个BaseValueSource枚举值，它反映的是基础值从哪里来的（流程中的第一步）；IsExpression、IsAnimated和IsCoerced几个布尔类型属性，它反映了第二步到第四步的信息。<br>请不要在程序代码中使用这个方法，WPF以后的版本中将打破值计算的假设，会根据它的源类型采用不同的方式处理属性值，而不是根据假设WPF应用程序中的方式来处理。<br>你很可能需要清除本地值，并让WPF从下一个最高优先级的提供程序中获得值，然后使用这个值来设置最终的属性值。DependencyObject提供了这样的机制，可通过调用ClearValue方法来实现。</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">' b为Button实例</span></span><br><span class=\"line\">b.ClearValue(Button.ForegroundProperty)</span><br></pre></td></tr></table></figure>\n<p><code>Button.ForegroundProperty</code>是一个<code>DependencyProperty</code>静态成员，在调用<code>ClearValue</code>后，会重新计算基础值，并把本地值从方程式中删除。</p>\n<h3 id=\"附加属性\"><a href=\"#附加属性\" class=\"headerlink\" title=\"附加属性\"></a>附加属性</h3><p>附加属性是依赖属性的一种特殊形式，可以被有效地添加到任何对象中。这可能听上去很奇怪，但这个机制在WPF中有多种应用。</p>\n<p>类似于WinForm那样的技术，许多WPF类定义了一个Tag属性（类型是System.Object），目的是为了存储每一个实例的自定义数据。但要添加自定义数据给任何一个派生自DependencyObject的对象，附加属性是一种更加强大、更加灵活的机制。通常我们会忽略一点，即可以用附加属性高效的向密封类（sealed class）的实例添加自定义数据。</p>\n<p>另外，大家对附加属性有一个曲解，虽然在XAML中设置它们依赖于SetXXX静态方法，但可在过程式代码中绕过这个方法，直接去调用DependencyObject-.SetValue方法。这意味着在过程式代码中，可以把任何一个依赖属性作为一个附加属性。如，下面的代码把ListBox的IsTextSearchEnabled属性添加到了Button控件上，并赋予该属性一个值：</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">' 向Button添加一个不相关的属性，并把它的值设置为true</span></span><br><span class=\"line\">okButton.SetValue(ListBox.IsTextSearchEnabledProperty, <span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n<p>虽然这似乎没有任何意义，但你可以用一种对应用程序或组件有意义的方式来随意使用这个属性值。</p>\n<h3 id=\"路由事件\"><a href=\"#路由事件\" class=\"headerlink\" title=\"路由事件\"></a>路由事件</h3><p>正如WPF在简单的.NET属性概念上添加了许多基础的东西一样，它也为.NET事件添加了许多基础的东西。路由事件是专门设计用于在元素树中使用的事件。当路由事件触发后，它可以向上或向下遍历可视树和逻辑树，用一种简单而且持久的方式在每个元素上触发，而不需要使用任何定制代码。<br>事件路由让许多程序不去留意可视树的细节（对于样式重置来说这是很不错的），并且对于成功的WPF元素创作至关重要。<br>在前面的文章部分之中，对于VCR样式的Stop按钮来说，一个用户可能在Rectangle逻辑子元素上直接按下鼠标左键。由于事件遍历了逻辑树，Button元素还是会发现这个事件，并处理该事件。因此，你可以在一个元素（如Button）中嵌入任何复杂内容或设置一棵复杂的可视树，鼠标左键单击其中任何一个内部元素，仍然会触发父元素Button的Click事件。如果没有路由事件，内部内容的创造者或按钮的使用者不得不编写代码来把事件串起来。<br>路由事件的实现和行为与依赖属性有许多相同的地方。</p>\n<h3 id=\"路由事件的实现\"><a href=\"#路由事件的实现\" class=\"headerlink\" title=\"路由事件的实现\"></a>路由事件的实现</h3><p>与依赖属性一样，没有一种.NET语言（除XAML外）天生具有理解路由指派的能力。<br>就像依赖属性是由公共的静态DependencyProperty成员加上一个约定的Property后缀名构成的一样，路由事件也是由公共的静态RoutedEvent成员加上一个约定的Event后缀名构成的。路由事件的注册很像静态构建器中注册依赖属性，它会定义一个普通的.NET事件或一个事件包装器，这样可以保证在过程式代码中使用起来更加熟悉，并且可以在XAML中用事件特性语法添加一个事件处理程序。与属性包装器一样，事件包装器在访问器中只能调用AddHandler和RemoveHandler，而不应该做其他事件。</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> Button</span><br><span class=\"line\">\t<span class=\"keyword\">Inherits</span> ButtonBase</span><br><span class=\"line\">\t<span class=\"comment\">'路由事件</span></span><br><span class=\"line\">\t<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> ClickEvent <span class=\"keyword\">As</span> RoutedEvent</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"keyword\">New</span>()</span><br><span class=\"line\">\t\t<span class=\"comment\">'注册事件</span></span><br><span class=\"line\">\t\t\t<span class=\"comment\">' ...</span></span><br><span class=\"line\">\t\tButton.ClickEvent = EventManager.RegisterRoutedEvent(</span><br><span class=\"line\">        <span class=\"string\">\"Click\"</span>, </span><br><span class=\"line\">        RoutingStrategy.Bubble, </span><br><span class=\"line\">        <span class=\"built_in\">GetType</span>(RoutedEventHandler), </span><br><span class=\"line\">        <span class=\"built_in\">GetType</span>(Button))</span><br><span class=\"line\">\t<span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">'.NET事件包装器（可选）</span></span><br><span class=\"line\">\t<span class=\"keyword\">Public</span> <span class=\"keyword\">Custom</span> <span class=\"keyword\">Event</span> Click <span class=\"keyword\">As</span> RoutedEventHandler</span><br><span class=\"line\">\t\t<span class=\"keyword\">AddHandler</span>(<span class=\"keyword\">ByVal</span> value <span class=\"keyword\">As</span> RoutedEventHandler)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">Call</span> [<span class=\"keyword\">AddHandler</span>](Button.ClickEvent, value)</span><br><span class=\"line\">\t\t<span class=\"keyword\">End</span> <span class=\"keyword\">AddHandler</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">RemoveHandler</span>(<span class=\"keyword\">ByVal</span> value <span class=\"keyword\">As</span> RoutedEventHandler)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">Call</span> [<span class=\"keyword\">RemoveHandler</span>](Button.ClickEvent, value)</span><br><span class=\"line\">\t\t<span class=\"keyword\">End</span> <span class=\"keyword\">RemoveHandler</span></span><br><span class=\"line\">\t<span class=\"keyword\">End</span> <span class=\"keyword\">Event</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">Protected</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Sub</span> OnMouseLeftButtonDown(e <span class=\"keyword\">As</span> MouseButtonEventArgs)</span><br><span class=\"line\">\t\t<span class=\"comment\">' ...</span></span><br><span class=\"line\">\t\t<span class=\"comment\">'触发事件</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">Call</span> [<span class=\"keyword\">RaiseEvent</span>](<span class=\"keyword\">New</span> RoutedEventArgs(Button.ClickEvent, <span class=\"keyword\">Me</span>))</span><br><span class=\"line\">\t\t<span class=\"comment\">' ...</span></span><br><span class=\"line\">\t<span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\">\t<span class=\"comment\">' ...</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<p>这些<code>AddHandler</code>和<code>RemoveHandler</code>方法没有从DependencyObject继承，而是从System.Windows.UIElement继承的，UIElement是一个更高层的供元素（如Button元素）继承的基类。这些方法可以向一个适当的路由事件添加一个委托或从路由事件移除一个委托。在<code>OnMouseLeftButtonDown</code>中，它使用适当的RoutedEvent成员调用RaiseEvent来触发Click事件。当前的Button实例（this）被传递给事件的源元素（source element）。在代码清单中没有列出，但是作为对KeyDown事件的响应，Button的Click事件将被触发，这样就可以处理由空格健或回车键完成点击动作的情况。</p>\n<h3 id=\"路由策略和事件处理程序\"><a href=\"#路由策略和事件处理程序\" class=\"headerlink\" title=\"路由策略和事件处理程序\"></a>路由策略和事件处理程序</h3><p>当注册完成后，每个路由事件将选择3个路由策略中的一个。所谓路由策略就是事件触发遍历整棵元素树的方式，这些策略由<code>RoutingStategy</code>枚举值提供。</p>\n<ul>\n<li>Tunneling（管道传递）—-事件首先在根元素上被触发，然后从每一个元素向下沿着树传递，直至到达源元素为止（或者直至处理程序把事件标记为已处理为止）。</li>\n<li>Bubbling（冒泡）—-事件首先在源元素上被触发，然后从每一个元素向上沿着树传递，直至到达根元素为止（或者直至处理程序把事件标记为已处理为止）。</li>\n<li>Direct（直接）—-事件仅在源元素上触发。这与普通.NET事件的行为相同，不同的是这样的事件仍然会参与一些路由事件的特定机制，如事件触发器。</li>\n</ul>\n<p>路由事件的事件处理程序有一个签名，它与通用.NET事件处理程序的模式匹配：第一个参数是一个System.Object对象，名为sender，第二个参数（一般命名为e）是一个派生自<code>System.EventArgs</code>的类。传递给事件处理程序的sender参数就是该处理程序被添加到的元素。参数e是RoutedEventArgs的一个实例（或者派生自RoutedEventArgs），RoutedEventArgs是EventArgs的一个子类，它提供了4个有用的属性：</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Source</td>\n<td>逻辑树中一开始触发该事件的元素。</td>\n</tr>\n<tr>\n<td>OriginalSource</td>\n<td>可视树中一开始触发该事件的元素（例如，TextBlock或标准的Button元素的ButtonChrome子元素）。</td>\n</tr>\n<tr>\n<td>Handled</td>\n<td>布尔值，设置为true表示标记事件为已处理，这就是用于停止Tunneling或Bubbling的标记。</td>\n</tr>\n<tr>\n<td>RoutedEvent</td>\n<td>真正的路由事件对象（如Button.ClickEvent），当一个事件处理程序同时被用于多个路由事件时，它可以有效的识别被触发的事件。</td>\n</tr>\n</tbody>\n</table>\n<p><code>Source</code>和<code>OriginalSource</code>的存在允许使用更高级别的逻辑树或更低级别的可视树。然而，这种区别仅对于像鼠标事件这样的物理事件有效。对于更抽象的事件来说，不需要与可视树中的某个元素建立直接关系（就像由于键盘支持的<code>Click</code>），WPF会传递相同的对象给<code>Source</code>和<code>OriginalSource</code>。</p>\n<h3 id=\"路由事件的实现-1\"><a href=\"#路由事件的实现-1\" class=\"headerlink\" title=\"路由事件的实现\"></a>路由事件的实现</h3><p>UIElement类为键盘、鼠标、指示笔输入定义了许多路由事件。大多数路由事件是冒泡事件，但许多事件与管道事件是配对的。管道事件很容易被识别，因为按照惯例，它们的名字中都有一个Preview前缀，在它们的配对冒泡事件发生前，这些事件会立即被触发。例如，<code>PreviewMouseMove</code>就是一个管道事件，在MouseMove冒泡事件前被触发。<br>为许多不同的行为提供一对事件是为了给元素一个有效地取消事件或在事件即将发生前修改事件的机会。根据惯例，（当定义了冒泡和管道的事件对后）WPF的内嵌元素只会在响应一个冒泡事件时采取行动，这样可以保证管道事件能够名副其实的做到“预览”。例如，在TextBox控件的Preview事件中对录入的文本进行校验，过滤不符合规范的文本。</p>\n<h3 id=\"处理单击鼠标中键的事件在哪里？\"><a href=\"#处理单击鼠标中键的事件在哪里？\" class=\"headerlink\" title=\"处理单击鼠标中键的事件在哪里？\"></a>处理单击鼠标中键的事件在哪里？</h3><p>如果浏览一遍UIElement或ConentElement提供的所有鼠标事件，可以找到<code>MouseLeftButtonDown</code>、<code>MouseLeftButtonUp</code>、<code>MouseRightButtonDown</code>、<code>MouseRightButtonUp</code>事件，但有些鼠标上出现的附加按键该怎么办呢？<br>这一信息可以通过更加通用的MouseDown和MouseUp事件获得。传入这样的事件处理程序的参数包括一个MouseButton枚举值，它表示鼠标状态Left、Right、Midle、XButton1、XButton2，还有一个MouseButtonState枚举值，表示这个按钮是Pressed还是Released。</p>\n<h3 id=\"中止路由事件是一种假象\"><a href=\"#中止路由事件是一种假象\" class=\"headerlink\" title=\"中止路由事件是一种假象\"></a>中止路由事件是一种假象</h3><p>虽然在事件处理程序中设置RoutedEventArgs参数的Handled属性为true，可以终止管道传递或冒泡，但是进一步沿着树向上或向下的每个处理程序还是可以收到这些事件。这只能在代码中完成。在任何时候，都应该尽可能地避免处理已处理过的事件，因为事件应该是在第一时间被处理的。<br>总之，终止管理传递或冒泡仅仅是一种假像而已。更加准确的说法应该是，当一个路由事件标记为已处理时，管道传递和冒泡仍然会继续，但默认情况下，事件处理程序只会处理没有处理过的事件。</p>\n<h3 id=\"附加事件\"><a href=\"#附加事件\" class=\"headerlink\" title=\"附加事件\"></a>附加事件</h3><p>通过附加事件，WPF可以通过一个没有定义过该事件的元素来完成路由事件的管道传递和冒泡。<br>附加事件与附加属性操作起来很像。每个路由事件都可以被当作附加事件使用。<br>由于需要传递许多信息给路由事件，可以用上层的“megahandler”来处理每一个管道或冒泡事件。这个处理程序通过分析RoutedEvent对象判断哪个事件被触发了，并把RoutedEventArgs参数转换为一个合适的子类，然后继续。</p>\n<h3 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h3><p>WPF提供了内建的命令支持，这是一个更为抽象且松耦合的事件版本。尽管事件是与某个用户动作相关联的，但命令表示的是那些与用户界面分离的动作，最标准的命令示例是剪切（Cut）、复制（Copy）、粘贴（Paste）。应用程序总能通过许多同步的机制提供这些动作：Menu控件中的MenuItem、ContextMenu控件中的MenuItem、ToolBar控件中的Button、键盘快捷方式等。</p>\n<h3 id=\"内建命令\"><a href=\"#内建命令\" class=\"headerlink\" title=\"内建命令\"></a>内建命令</h3><p>命令是任何一个实现了<code>ICommand</code>接口（位于<code>System.Windows.Input</code>命名空间）的对象，每个对象定义了3个简单的成员：</p>\n<table>\n<thead>\n<tr>\n<th>成员</th>\n<th>介绍</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Execute</td>\n<td>执行特定命令的逻辑的方法。</td>\n</tr>\n<tr>\n<td>CanExecute</td>\n<td>如果命令允许被执行，则返回true，否则返回false。</td>\n</tr>\n<tr>\n<td>CanExecuteChanged</td>\n<td>无论何时，只要CanExecute的值改变，该事件就会触发。</td>\n</tr>\n</tbody>\n</table>\n<p>如果需要创建剪切、复制和粘贴命令，可以定义3个实现ICommand接口的类，找一个地方存储这3个类（如放在主窗口的静态成员中），从相关的事件处理程序中调用Execute（当CanExecute返回true时），处理CanExecuteChanged事件，改变相关用户界面中的IsEnabled属性。</p>\n<p>像Button、CheckBox、MenuItem这样的控件有相关的逻辑会与任何命令做交互。它们会有一个简单的Command属性（类型为ICommand），当设置了Command属性后，无论何时Click事件触发，这些控件会自动调用命令的Execute方法（只要CanExecute返回true时）。另外，它们会自动保持IsEnabled的值与CanExecute的值同步，这是通过CanExecuteChanged事件实现的。通过这种给属性赋值的方式，任何逻辑在XAML下都是可以实现的。</p>\n<p>同时，WPF已经定义了一系列命令，因此不需要为Cut、Copy和Paste命令实现ICommand对象，也不用担心在哪里保存这些命令。WPF有5个类的静态属性实现了WPF的内建命令：</p>\n<blockquote>\n<p>ApplicationCommands:<br>Close、Copy、Cut、Delete、Find、Help、New、Open、Paste、Print、PrintPreview、Properties、Redo、Replace、Save、SaveAs、SelectAll、Stop、Undo等。</p>\n</blockquote>\n<p>其他4个类为<code>ComponentCommands</code>、<code>MediaCommands</code>、<code>NavigationCommands</code>、<code>EditCommands</code>。<br>每个属性返回<code>RoutedUICommand</code>的实例，<code>RoutedUIElement</code>类不仅实现了<code>ICommand</code>接口，还可以像路由事件一样支持冒泡。</p>\n","excerpt":"<h2 id=\"XAML定义\"><a href=\"#XAML定义\" class=\"headerlink\" title=\"XAML定义\"></a>XAML定义</h2><p><code>XAML</code>是一种相对简单、通用的声明式编程语言，它适合于构建和初始化.NET对象。<br><code>XAML</code>仅仅是一种使用.NET API的方式，把它与HTML、可伸缩向量图形（SVG）或其他特定领域的格式或语言作比较是完全错误的。XAML由一些规则（告诉解析器和编译器如何处理XML）和一些关键字组成，但它自己没有任何有意义的元素。因此，如果在没有WPF这样的框架的基础上讨论XAML，就如同在没有.NET Framework的基础上讨论VisualBasic一样。<br><code>XAML</code>在WPF中扮演的角色通常是令人困惑的，因此第一件要搞清楚的事情是WPF和XAML可以独立使用，它们并不是互相依赖的。虽然XAML最初是为WPF而设计，但它也可以应用于其他技术（如WF）。由于XAML的通用性，实际上可以把它应用于任何.NET技术。然而，是否在使用WPF时使用XAML是可选的，每一件XAML能做的事情完全可以由任何一种你喜欢的.NET语言来实现（但反过来则不行）。但是，由于XAML的诸多好处，很少会看到现实世界中使用WPF却不使用XAML的情况。</p>","more":"<h2 id=\"元素和特性\"><a href=\"#元素和特性\" class=\"headerlink\" title=\"元素和特性\"></a>元素和特性</h2><p>XAML规范定义了一些规则，用于把.NET命名空间、类型、属性和事件映射为XML命名空间、元素和特性。以下面为例，它定义了一个WPF按钮，跟另一段与之功能一致的VisualBasic代码比较一下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"OK\"</span> <span class=\"attr\">Click</span>=<span class=\"string\">\"button_Click\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> b <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> System.Window.Controls.Button()</span><br><span class=\"line\">b.Content = <span class=\"string\">\"OK\"</span></span><br><span class=\"line\"><span class=\"keyword\">AddHandler</span> b.Click, <span class=\"keyword\">AddressOf</span> button_Click</span><br></pre></td></tr></table></figure>\n<p>虽然这两段代码功能是相同的，但如果去除掉<code>XAML</code>中的<code>Click</code>特性，你可以很快地在IE浏览器中查看<code>XAML</code>，还会看到一个活生生的按钮放在浏览器窗口中。而VisualBasic代码则必须要额外的代码编译方可使用。<br>在XAML中定义一个XML元素（叫作对象元素）与在.NET中实例化一个对应的对象（总是使用默认的构造函数）是等价的。设置对象元素的一个特性（attribute），与设置一个同名属性（property attribute，称为属性特性）或者为一个同名事件设置一个事件处理程序（也称为事件特性），也是等价的。</p>\n<h2 id=\"生成和事件处理的顺序\"><a href=\"#生成和事件处理的顺序\" class=\"headerlink\" title=\"生成和事件处理的顺序\"></a>生成和事件处理的顺序</h2><p>在运行时（run-time）模式下，为任何一个<code>XAML</code>声明的对象设置属性之前，总要添加一些事件处理程序，这样就可以让某个事件在属性被设置时被触发，而不用担心XAML使用特性的顺序。<br>至于多个属性集或添加多个事件处理程序，它们总会遵照一定顺序，即属性特性和事件属性是在对象元素中指定的。这一排序方式不会在实际应用中产生影响，因为.NET设计指南指出：类应该允许以任何顺序设置属性，添加事件处理程序也是如此。</p>\n<h2 id=\"命名空间\"><a href=\"#命名空间\" class=\"headerlink\" title=\"命名空间\"></a>命名空间</h2><p>比较上述XAML代码示例和相应的VisualBasic代码示例，最神秘的地方在于XAML命名空间（<a href=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\">http://schemas.microsoft.com/winfx/2006/xaml/presentation</a>）是如何被映射到.NET命名空间（<code>System.Windows.Controls</code>）上的。该映射及其他WPF命名空间的映射是在WPF程序集中硬编码完成的，里面有好几个<code>Xmlns-DefinitionAttribute</code>自定义特性的实例。（在<code>schemas.microsoft.com</code>这个URL中不存在网页，这仅仅是一个人为设定的字符串，就像其他命名空间一样。）<br><code>XAML</code>文件的根对象元素属性指定至少一个XML命名空间，用于验证自己和子元素。你可以（在根元素或子元素上）声明额外的XML命名空间，但每一个命名空间下的标识符都必须有一个唯一的前缀。例如，WPF的XAML文件都会使用第二个命名空间加上前缀x（记作<code>xmlns:x</code>而不仅仅是<code>xmlns</code>）：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns:x=http://schemas.microsoft.com/winfx/2006/xaml</span><br></pre></td></tr></table></figure>\n<p>这是XAML语言命名空间，用于映射<code>System.Windows.Markup</code>命名空间中的类型，而且它也定义了XAML编译器或解析器中的一些特殊的指令。这些指令通常是作为XAML元素的特性出现的，因此，它们看上去像宿主元素的属性，但实际上并不是如此。<br>我们把<a href=\"http://schemas.microfost.com/winfx/2006/xaml/presentation\">http://schemas.microfost.com/winfx/2006/xaml/presentation</a>作为默认（主要）命名空间，把<a href=\"http://schemas.microsoft.com/winfx/2006-/xaml\">http://schemas.microsoft.com/winfx/2006-/xaml</a>作为次要命名空间。次要命名空间的前缀是<code>x</code>，这仅仅是一个规则，就像VisualBasic文件要以<code>Imports System</code>指令开始一样。你可以改写原来那个<code>XAML</code>文件，含义是相同的：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">WpfNamespace:Button</span> <span class=\"attr\">xmlns:WpfNamespace</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"OK\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p>当然，从可读性来讲，在使用这些常见的命名空间的时候不需要前缀（即原始的XML命名空间），其他一些命名空间则使用一个短前缀。</p>\n<h2 id=\"属性元素\"><a href=\"#属性元素\" class=\"headerlink\" title=\"属性元素\"></a>属性元素</h2><p>富创建是WPF的亮点之一，我们可以用<code>Button</code>来演示。你可以把任意内容放在<code>Button</code>里面，不仅限于文本，如下所示（在<code>Button</code>中嵌入了一个简单的方形来做一个VCR的停止按钮）：</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> b <span class=\"keyword\">As</span> <span class=\"keyword\">new</span> System.Windows.Controls.Button()</span><br><span class=\"line\"><span class=\"keyword\">Dim</span> r <span class=\"keyword\">As</span> <span class=\"keyword\">new</span> System.Windows.Shapes.Rectangle()</span><br><span class=\"line\"></span><br><span class=\"line\">r.Width = <span class=\"number\">40</span></span><br><span class=\"line\">r.Height = <span class=\"number\">40</span></span><br><span class=\"line\">r.Fill = System.Windows.Media.Brushes.Black</span><br><span class=\"line\">b.Content = r  <span class=\"comment\">' 将按钮中的内容设置为方格</span></span><br></pre></td></tr></table></figure>\n<p><code>Button</code>的<code>Content</code>属性是<code>System.Object</code>类型的，因此它很容易被设置到40*40的<code>Rectangle</code>对象。但如何才能在XAML中用属性特性语法做相同的事呢？你该为<code>Content</code>属性设置哪种字串才能完成VisualBasic中声明的<code>Rectangle</code>功能呢？没有这样的字串，但XAML提供了一种替代的语法来设置复杂的属性值，即属性元素。如下所示：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button.Content</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Rectangle</span> <span class=\"attr\">Height</span>=<span class=\"string\">\"40\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"40\"</span> <span class=\"attr\">Fill</span>=<span class=\"string\">\"Black\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button.Content</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><code>Content</code>属性被设置为一个XML元素而不是XML特性，<code>Button.Content</code>中的句点用于区分对象元素（object element）与属性元素（property element）。它们总会以“<strong>类型名，属性名TypeName.PropertyName</strong>”的形式出现，总会包含在“类型名”对象元素中，但它们没有属于自己的特性。<br>属性元素语法也可以用于简单的属性值。下面的Button使用特性设置了两个属性，它们是<code>Content</code>和<code>Background</code>：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schema.microsoft.com/winfx/2006/xaml/presentation\"</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"OK\"</span> <span class=\"attr\">Background</span>=<span class=\"string\">\"White\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这等同于使用元素设置该Button的两个相同的属性：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button.Content</span>&gt;</span></span><br><span class=\"line\">     OK</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button.Content</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button.Background</span>&gt;</span></span><br><span class=\"line\">     White</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button.Background</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>当然，在任何可以使用特性的地方使用特性更为便捷。</p>\n<h2 id=\"类型转换器\"><a href=\"#类型转换器\" class=\"headerlink\" title=\"类型转换器\"></a>类型转换器</h2><p>上例XAML文件中的<code>white</code>是如何与VisualBasic中的<code>System.Windows.Media.Brushes.White</code>等价的呢？这个示例提供了一些如何使用字符串设置XAML属性的细节，这些属性的类型即不是<code>System.String</code>，也不是<code>System.Object</code>。在这种情况下，XAML解析器或编译器必须寻找一个类型转换器，该转换器知道如何将一个字符串表达式转换为一种想要的数据类型。WPF提供了许多常用数据类型的类型转换器，如<code>Brush</code>、<code>Color</code>、<code>FontWeight</code>、<code>Point</code>等，它们都派生自Type-Converter的类（如<code>BrushConverter</code>、<code>ColorConverter</code>等），你也可以为自定义的数据类型写类型转换器。与XAML语言不同，类型转换器通常支持不区分大小写的字符串。<br>如果没有<code>Brush</code>类型转换器，你就必须使用属性元素语法来设置XAML中的<code>Background</code>属性，如下所示：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"OK\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button.Background</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">SolidColorBrush</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">SolidColorBrush.Color</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Color</span> <span class=\"attr\">A</span>=<span class=\"string\">\"255\"</span> <span class=\"attr\">R</span>=<span class=\"string\">\"255\"</span> <span class=\"attr\">G</span>=<span class=\"string\">\"255\"</span> <span class=\"attr\">B</span>=<span class=\"string\">\"255\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">SolidColorBrush.Color</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">SolidColorBrush</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button.Background</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>由上可见，类型转换器不仅增强了XAML的可读性，也使一些本来不能被表达的概念得以表达。<br>下面的代码更精确地表达了运行时获取和执行适合Brush的类型转换器的过程：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Dim b As New System.Windows.Controls.Button()</span><br><span class=\"line\">Dim brType As Type = System.ComponentModel.TypeDescriptor.GetConverter(GetType(Brush))</span><br><span class=\"line\"></span><br><span class=\"line\">b.Content = \"OK\"</span><br><span class=\"line\">b.Background = brType.ConvertFromInvariantString(\"White\").As(Of Brush)</span><br></pre></td></tr></table></figure>\n<h2 id=\"标记扩展\"><a href=\"#标记扩展\" class=\"headerlink\" title=\"标记扩展\"></a>标记扩展</h2><p>标记扩展就像类型转换器一样，可用于扩展<code>XAML</code>的表达能力。它们都可以在运行时计算字符串特性的值，并生成一个合适的基于字符串的对象。WPF有好几个内建的标记扩展，你会发现它们都派生自本书最前面的内封中的<code>MarkupExtension</code>。<br>与类型转换器不同的是，标记扩展是通过XAML的显式的、一致的语法调用的，因此，标记扩展是最好的扩展XAML的方法。<br>只要特性值由花括号括起来，XAML编译器或解析器就会把它认作一个标记扩展值而不是一个普通的字符串。下面的按钮使用了3个不同的标记扩展类型，其中分别用到了3个不同的特性：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span></span><br><span class=\"line\"><span class=\"attr\">xmlns:x</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml\"</span></span><br><span class=\"line\"><span class=\"attr\">Background</span>=<span class=\"string\">\"&#123;x:Null&#125;\"</span></span><br><span class=\"line\"><span class=\"attr\">Height</span>=<span class=\"string\">\"&#123;x:Static SystemParameters.IconHeight&#125;\"</span></span><br><span class=\"line\"><span class=\"attr\">Content</span>=<span class=\"string\">\"&#123;Binding Path=Height, RelativeSource=&#123;RelativeSource Self&#125;&#125;\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p>每个花括号中的第一个识别符是标记扩展类的名称。按照惯例，这样的类都以<code>Extension</code>后缀结尾，但在XAML中使用它时，可以不用该后缀。在上面例子中，<code>NullExtension</code>（即<code>x:Null</code>）和<code>StaticExtension</code>（即<code>x:Static</code>）是<code>System.Windows.Markup</code>命名空间的类，因此必须使用前缀x来定位它们。<code>Binding</code>（没有<code>Extension</code>后缀）是在<code>System.Windows.Data</code>命名空间下的，因此在默认的XML命名空间下就可以找到它。<br>如果标记扩展支持，可使用逗号分隔的参数来指定它的值。<br>定位参数（如本例中的<code>SystemParameters.IconHeight</code>）被作为字符串参数传入扩展类的相应构造函数中。命名参数（如本例中的<code>Path</code>和<code>RelativeSource</code>）可用来在已构造好的扩展对象上设置相应名字的属性。这些属性的值可以是标记扩展值自己，也可以是文本值，它们可通过普通的类型转换过程。你可能注意到设计和使用标记扩展与设计和使用自定义特性很相似，这是被有意设计的。<br>在本例中，<code>NullExtension</code>允许设置<code>Background</code>笔刷为<code>null</code>。<code>StaticExtension</code>允许使用静态属性、字段、常量和枚举值，而不使用XAML写的硬编码字面值。在这个例子中，<code>Button</code>的高度是遵循操作系统当前的图标高度设置的，这一设置可通过<code>System.Windows.SystemParameters</code>类的<code>IconHeight</code>静态字段获得。<code>Binding</code>可以把<code>Content</code>设置为与它的<code>Height</code>属性相同的值。<br>如果你需要设置一个属性特性值为字面字符串（以左花括号开始），就必须将其转义，我们可通过在其前面增加一对空花括号来实现，如：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span></span><br><span class=\"line\"><span class=\"attr\">Content</span>=<span class=\"string\">\"&#123;&#125;&#123;This is not a markup extension!&#125;\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p>此外，也可以使用属性元素语法，因为花括号在上下文中不会有特殊的意义：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span>&gt;</span></span><br><span class=\"line\">    &#123;This is not a markup extension&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>因为标记扩展是有默认构造函数的类，它们可以与属性元素语法一起使用，如下例：</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Button xmlns=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span> xmlns:x=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml\"</span>&gt;</span><br><span class=\"line\">&lt;Button.Background&gt;</span><br><span class=\"line\">    &lt;x:Null/&gt;</span><br><span class=\"line\">&lt;/Button.Background&gt;</span><br><span class=\"line\">&lt;Button.Height&gt;</span><br><span class=\"line\">    &lt;x:<span class=\"keyword\">Static</span> Member=<span class=\"string\">\"SystemParameters.IconHeight\"</span>/&gt;</span><br><span class=\"line\">&lt;/Button.Height&gt;</span><br><span class=\"line\">&lt;Button.Content&gt;</span><br><span class=\"line\">    &lt;Binding Path=<span class=\"string\">\"Height\"</span>&gt;</span><br><span class=\"line\">    &lt;Binding.RelativeSource&gt;</span><br><span class=\"line\">        &lt;RelativeSource Mode=<span class=\"string\">\"Self\"</span>/&gt;</span><br><span class=\"line\">    &lt;/Binding.RelativeSource&gt;</span><br><span class=\"line\">    &lt;/Binding&gt;</span><br><span class=\"line\">&lt;/Button.Content&gt;</span><br><span class=\"line\">&lt;/Button&gt;</span><br></pre></td></tr></table></figure>\n<p>该转换之所以可以执行是因为这些标记扩展都有与形参化的构造函数的实参（使用属性特性语法的定位实参）对应的属性。例如，<code>StaticExtension</code>有一个<code>Member</code>属性与之前传入到开参化构造函数中的实参意思是一样的，<code>RelativeSource</code>有一个对应于构造函数实参的<code>Mode</code>属性。<br>由于标记扩展完成的实际工作对于每个扩展都是不同的。如下面的VisualBasic代码与使用<code>NullExtension</code>、<code>StaticExtension</code>和<code>Binding</code>的基于XAML表示的按钮是一个意思：</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> b <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> System.Windows.Controls.Button()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">' 设置Background</span></span><br><span class=\"line\">b.Background = null</span><br><span class=\"line\"><span class=\"comment\">' 设置Height</span></span><br><span class=\"line\">b.Height = System.Windows.SystemParameters.IconHeight</span><br><span class=\"line\"><span class=\"comment\">' 设置Content</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> binding <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> System.Windows.Data.Binding()</span><br><span class=\"line\">binding.Path = <span class=\"keyword\">new</span> System.Windows.PropertyPath(<span class=\"string\">\"Height\"</span>)</span><br><span class=\"line\">binding.RelativeSource = System.Windows.Data.RelativeSource.Self</span><br><span class=\"line\">b.SetBinding(System.Windows.Controls.Button.ContentProperty, binding)</span><br></pre></td></tr></table></figure>\n<p>尽管如此，这里的代码与<code>XAML</code>解析器或编译器使用的机制是不同的，解析器和编译器是依靠每个标记扩展在运行时设置合适的值（本质上是通过调用每个类的<code>ProvideValue</code>方法来实现的）。与这一机制完全对应的过程式代码通常很复杂。</p>\n<h2 id=\"对象元素的子元素\"><a href=\"#对象元素的子元素\" class=\"headerlink\" title=\"对象元素的子元素\"></a>对象元素的子元素</h2><p>XAML文件就像所有的XML文件一样，必须有一个单独的根对象元素。对象元素是可以支持子对象元素的。一个对象元素可以有3种类型的子元素：一个内容属性值，集合项，或一个能够通过类型转换到它的父元素的值。</p>\n<h2 id=\"内容属性\"><a href=\"#内容属性\" class=\"headerlink\" title=\"内容属性\"></a>内容属性</h2><p>大多数WPF类（通过定制特性）指定了一个属性，该属性可以被设置为XML元素中的任何内容。这个属性叫作内容属性，它确实是一个让XAML呈现变得更轻便简单的捷径。从某种意义上讲，这些内容属性有点像VB中的默认属性。<code>Button</code>中的<code>Content</code>属性就是这样指定的，如：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"OK\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p>可以被重写为：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span>&gt;</span></span><br><span class=\"line\">OK</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>还有更复杂的方式：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button.Content</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Rectangle</span> <span class=\"attr\">Height</span>=<span class=\"string\">\"40\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"40\"</span> <span class=\"attr\">Fill</span>=<span class=\"string\">\"Black\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button.Content</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>可以被重写为：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Rectangle</span> <span class=\"attr\">Height</span>=<span class=\"string\">\"40\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"40\"</span> <span class=\"attr\">Fill</span>=<span class=\"string\">\"Black\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"集合项\"><a href=\"#集合项\" class=\"headerlink\" title=\"集合项\"></a>集合项</h2><p>XAML允许将项添加到支持索引的两种类型的集合中：<code>List</code>和<code>Dictionary</code>。</p>\n<h3 id=\"List\"><a href=\"#List\" class=\"headerlink\" title=\"List\"></a>List</h3><p><code>List</code>是实现了<code>System.Collection.IList</code>接口的集合，如<code>System.Collections.ArrayList</code>和许多WPF定义的集合类都是<code>List</code>。如，下面的XAML向<code>ListBox</code>添加了两个项，它的<code>Items</code>属性是实现了<code>IList</code>的<code>ItemCollection</code>类型：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ListBox</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ListBox.Items</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">ListBoxItem</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"Item 1\"</span>/&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">ListBoxItem</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"Item 2\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ListBox.Items</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ListBox</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>因为<code>Items</code>是<code>ListBox</code>的内容属性，可以进一步简化：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ListBox</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ListBoxItem</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"Item 1\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ListBoxItem</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"Item 2\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ListBox</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Dictionary\"><a href=\"#Dictionary\" class=\"headerlink\" title=\"Dictionary\"></a>Dictionary</h3><p><code>System.Windows.ResourceDictionary</code>是WPF中的一个常用的集合类型，它实现了<code>System.Collections.IDictionary</code>接口，能够支持在过程式代码中添加、移除枚举键/值对。下面的XAML添加了两个<code>Color</code>对象到一个<code>ResourceDictionary</code>中。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span></span><br><span class=\"line\"><span class=\"attr\">xmlns:x</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Color</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">A</span>=<span class=\"string\">\"255\"</span> <span class=\"attr\">R</span>=<span class=\"string\">\"255\"</span> <span class=\"attr\">G</span>=<span class=\"string\">\"255\"</span> <span class=\"attr\">B</span>=<span class=\"string\">\"255\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Color</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"2\"</span> <span class=\"attr\">A</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">R</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">G</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">B</span>=<span class=\"string\">\"0\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ResourceDictionary</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>注意，在带有x:Key的XAML中指定的值总是被作为字符串处理的，除非使用标记扩展，但不会尝试使用类型转换。</strong></p>\n<p>XAML是设计用来与.NET类型系统一起工作的，你可以在其中使用任何类型的.NET对象，也可以使用自己定义的对象。但对象必须以“友好声明”的方式进行设计。如果一个类没有默认构造函数，也没有提供有用的实例属性，那么它在XAML中是无法直接使用的。<br>WPF程序集都被加上了<code>XmlnsDefinitionAttribute</code>属性，这样可以将.NET命名空间映射为XAML文件中的XML命名空间，但对于那个不是专门为XAML设计的程序集又该如何处理呢？它们的类型仍然可以使用，只需要一个特殊的指令作为XML命名空间就可以了。如下例：</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> h <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> System.Collections.Hashtable()</span><br><span class=\"line\">h.Add(<span class=\"string\">\"key1\"</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">h.Add(<span class=\"string\">\"key2\"</span>, <span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n<p>以上代码在XAML中表示为：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">collections:Hashtable</span> <span class=\"attr\">xmlns:collections</span>=<span class=\"string\">\"clr-namespace:System.Collections;assembly=mscorlib\"</span></span><br><span class=\"line\"><span class=\"attr\">xmlns:sys</span>=<span class=\"string\">\"clr-namespace:System;assembly=mscorlib\"</span></span><br><span class=\"line\"><span class=\"attr\">xmlns:x</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">sys:Int32</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"key1\"</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">sys:Int32</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">sys:Int32</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"key2\"</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">sys:Int32</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">collections:Hashtable</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><code>clr-namespace</code>标记允许直接在XAML中放入一个.NET命名空间。</p>\n<p>为了避免混淆，在转换子元素时，任何一个有效的XAML解析器或编译器必须遵循下面的规则：</p>\n<ul>\n<li>如果该类型实现了IList接口，就为每个子元素调用IList.Add。</li>\n<li>否则，如果该类型实现了IDictionary，就为每个子元素调用IDictionary.Add，在该值的键和元素中使用x:Key特性值。</li>\n<li>否则，如果父元素支持内容属性（由System.Windows.Markup.ContentPropertyAttribute表示），而且子元素的类型与该内容属性是兼容的，就把子元素作为它的值。</li>\n<li>否则，如果子对象是普通文本，且有类型转换器将子对象转换为父类型（没有在父元素上设置属性），则把子元素作为类型转换器的输入，将输出作为父对象的实例。</li>\n<li>其他情况下则抛出错误。</li>\n</ul>\n<h2 id=\"编译：将XAML与过程式代码混合使用\"><a href=\"#编译：将XAML与过程式代码混合使用\" class=\"headerlink\" title=\"编译：将XAML与过程式代码混合使用\"></a>编译：将XAML与过程式代码混合使用</h2><p>大多数WPF应用程序是XAML与过程式代码的混合体。</p>\n<h2 id=\"在运行时加载和解析XAML\"><a href=\"#在运行时加载和解析XAML\" class=\"headerlink\" title=\"在运行时加载和解析XAML\"></a>在运行时加载和解析XAML</h2><p>WPF的运行时XAML解析器公开为两个类，它们都位于<code>System.Windows.Markup</code>命名空间中：<code>XamlReader</code>和<code>XamlWriter</code>。<code>XamlReader</code>包含了一些对静态<code>Load</code>方法的重载，而<code>XamlWriter</code>包含了一些对静态<code>Save</code>方法的重载。因此，用任何一种.NET语言写的程序都可以在运行时依赖XAML，而不用程序员付出太多努力。</p>\n<h2 id=\"XamlReader\"><a href=\"#XamlReader\" class=\"headerlink\" title=\"XamlReader\"></a>XamlReader</h2><p><code>XamlReader.Load</code>方法的设置将解析XAML，创建合适的.NET对象，然后返回一个根元素的实例。因此，如果在当前目录下有一个XAML文件叫作MyWindow-.xaml，它包含了一个<code>Window</code>对象作为根结点，那么可以使用下面的代码来加载和获得<code>Window</code>对象。</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> window <span class=\"keyword\">As</span> Window = null</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Using</span> fs <span class=\"keyword\">As</span> FileStream = <span class=\"keyword\">New</span> FileStream(<span class=\"string\">\"MyWindow.xaml\"</span>, FileMode.Open, FileAccess.Read)</span><br><span class=\"line\">    <span class=\"comment\">' 获得根元素，该元素是一个Window对象</span></span><br><span class=\"line\">    Window = (Window)XamlReader.Load(fs)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Using</span></span><br></pre></td></tr></table></figure>\n<p>在<code>Load</code>返回之后，整个XAML文件的对象层级将在内存中被实例化，因此就不再需要XAML文件了。退出<code>Using</code>代码块后，<code>FileSteam</code>将被立即关闭。由于可向<code>XamlReader</code>传入一个任意的<code>Stream</code>（或使用另一个重载来传入<code>System.Xml.XmlReader</code>对象），所以有许多可选择的方式来获得XAML的内容。<br><code>XamlReader</code>也定义了<code>LoadAsync</code>实例方法用于异步加载和解析XAML内容。在加载大文件或网络文件时，可使用<code>LoadAsync</code>保持用户界面处于响应状态。<code>CancelAsync</code>方法用于停止处理，<code>LoadCompleted</code>事件可让我们知道处理何时完成。<br>既然已有一个根元素的实例存在，就可利用适当的内容属性或集合属性来获得子元素。下面的代码假设<code>Window</code>有一个类行为<code>StackPanel</code>的子元素，Stack-Panel的第5个子对象是一个OK Button。</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> window <span class=\"keyword\">As</span> Window = <span class=\"literal\">Nothing</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Using</span> fs <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> FileStream(<span class=\"string\">\"MyWindow.xaml\"</span>, FileMode.Open, FileAccess.Read)</span><br><span class=\"line\">    <span class=\"comment\">' 获得根元素，该元素是一个Window对象</span></span><br><span class=\"line\">    window = <span class=\"built_in\">DirectCast</span>(XamlReader.Load(fs), Window)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Using</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">' 通过（硬编码知识）遍历子元素获取OK按钮</span></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> panel <span class=\"keyword\">As</span> StackPanel = <span class=\"built_in\">DirectCast</span>(window.Content, StackPanel)</span><br><span class=\"line\"><span class=\"keyword\">Dim</span> okButton <span class=\"keyword\">As</span> Button = <span class=\"built_in\">DirectCast</span>(panel.Children(<span class=\"number\">4</span>), Button)</span><br></pre></td></tr></table></figure>\n<p>有了这个<code>Button</code>的引用，就可以做任何想做的事：设置额外的属性，添加事件处理程序，或执行一些无法用XAML完成的动作。<br>但使用硬编码索引和其他关于用户界面结构假设的代码并不能让人满意。XAML支持元素命名，这样就可以从过程式代码中找到这些元素并放心地使用它们。</p>\n<h2 id=\"命名XAML元素\"><a href=\"#命名XAML元素\" class=\"headerlink\" title=\"命名XAML元素\"></a>命名XAML元素</h2><p>XAML语言命名空间有一个Name关键字，它是用来给元素命名的。示例如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">\"okButton\"</span>&gt;</span>OK<span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上例代码可改如下：</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> window <span class=\"keyword\">As</span> Window = <span class=\"literal\">Nothing</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Using</span> fs <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> FileStream(<span class=\"string\">\"MyWindow.xaml\"</span>, FileMode.Open, FileAccess.Read)</span><br><span class=\"line\">    <span class=\"comment\">' 获得根元素，该元素是一个Window对象</span></span><br><span class=\"line\">    window = <span class=\"built_in\">DirectCast</span>(XamlReader.Load(fs), Window)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Using</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">' 通过按钮的名称获得OK按钮Button</span></span><br><span class=\"line\">okButton = <span class=\"built_in\">DirectCast</span>(window.FindName(<span class=\"string\">\"okButton\"</span>), Button)</span><br></pre></td></tr></table></figure>\n<p><code>FindName</code>并不仅仅在<code>Window</code>类中存在，在<code>FrameworkElement</code>、<code>FrameworkContentElement</code>及许多重要的WPF类的基类中也有<code>FindName</code>的定义。</p>\n<h2 id=\"编译XAML\"><a href=\"#编译XAML\" class=\"headerlink\" title=\"编译XAML\"></a>编译XAML</h2><p>XAML编译包括三项事件：</p>\n<ul>\n<li>将一个XAML文件转换为一种特殊的二进制格式。</li>\n<li>将转换好的内容作为二进制资源嵌入到正在被创建的程序集中。</li>\n<li>执行链接操作，将XAML和过程式代码自动连接起来。</li>\n</ul>\n<p>如果你不在乎将XAML文件和过程式代码融合，那么只需把它添加到VS的WPF项目中来，并用界面中的Build动作来完成编译即可。但如果要编译一个XAML文件并将它与过程式代码混合，第一步要做的就是为XAML文件的根元素指定一个子类，可以用XAML语言命名空间中的Class关键字来完成。例如：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span></span><br><span class=\"line\"><span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml\"</span></span><br><span class=\"line\"><span class=\"attr\">x:Class</span>=<span class=\"string\">\"MyNamespace.MyWindow\"</span>&gt;</span></span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Window</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在一个独立的源文件中（但是在同一个项目中），可以一个子类，并添加任何想添加的成员：</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Namespace</span> MyNamespace</span><br><span class=\"line\">\t<span class=\"keyword\">Partial</span> <span class=\"keyword\">Class</span> MyWindow</span><br><span class=\"line\">\t\t<span class=\"keyword\">Inherits</span> Window</span><br><span class=\"line\">\t\t<span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> <span class=\"keyword\">New</span>()</span><br><span class=\"line\">\t\t\t<span class=\"comment\">'一定要调用，这样才能加载XAML定义的内容</span></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">' ...</span></span><br><span class=\"line\">\t\t\tInitializeComponent()</span><br><span class=\"line\">\t\t<span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\">\t\t<span class=\"comment\">' Any other members can go here...</span></span><br><span class=\"line\">\t<span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Namespace</span></span><br></pre></td></tr></table></figure>\n<p>通常我们把这样的文件叫作代码隐藏文件。如果你引用XAML中的任何一个事件处理程序（通过事件特性，如Button的Click特性），这里就是我们定义这些事件处理程序的地方。<br>当在VS中创建一个基于WPF的VisualBasic或VB项目，或当使用<code>Add New Item...</code>来添加某WPF项目时，VS会自动创建一个XAML文件，并把<code>x:Class</code>作为根元素，同时创建一个具有部分类定义的代码隐藏源文件，最后把两者连接起来，这样代码构建（build）才能顺利进行。</p>\n<h2 id=\"BAML\"><a href=\"#BAML\" class=\"headerlink\" title=\"BAML\"></a>BAML</h2><p>BAML是<code>Binary Application Markup Language</code>的缩写，意思是二进制应用程序标记语言，它其实是被解析、标记化，最后转换为二进制形式的XAML。虽然大块的XAML代码可以被表示为过程式代码，但XAML到BAML的编译过程不会生成过程源代码。因此，BAML不像MSIL，它是一个压缩的声明格式，比加载和解析普通的XAML文件快，且比普通XAML文件要小。BAML仅仅是XAML编译过程的详细实现，没有任何直接公开的方法，在未来可能会被一些其他东西所取代。</p>\n<h2 id=\"生成的源代码\"><a href=\"#生成的源代码\" class=\"headerlink\" title=\"生成的源代码\"></a>生成的源代码</h2><p><code>x:Class</code>只能在要编译的XAML文件中使用。但在没有<code>x:Class</code>的情况下，编译XAML文件也是没有问题的。这意味着没有对应的代码隐藏文件，因此不能使用任何需要过程式代码才能实现的特性。<br>每个生成的源文件中包含了一个由根对象元素中的<code>x:Class</code>指定的类的部分类定义。XAML文件中的每个已命名的元素在该部分类中都有一个成员（默认是私有的），这些成员的名称就是元素名称。其中还有一个<code>InitializeComponent</code>方法用于完成一大堆烦人的工作。</p>\n<h2 id=\"BAML可以反编译为XAML吗？\"><a href=\"#BAML可以反编译为XAML吗？\" class=\"headerlink\" title=\"BAML可以反编译为XAML吗？\"></a>BAML可以反编译为XAML吗？</h2><p>可以，无论怎么声明，任何一个公司的.NET类实例都可以被序列化为XAML。第一个步骤是获取一个实例，这个实例是用来作为根对象的。如果你还没有这个对象，可以调用静态的<code>System.Windows.Application.LoadComponent</code>方法，如下所示：</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> uri <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> System.Uri(<span class=\"string\">\"MyWindow.xaml\"</span>, System.UriKind.Relative)</span><br><span class=\"line\"><span class=\"keyword\">Dim</span> window <span class=\"keyword\">As</span> Window = Application.LoadComponent(uri).<span class=\"keyword\">As</span>(<span class=\"keyword\">Of</span> Window)</span><br></pre></td></tr></table></figure>\n<p>由URI指定的名称并不要求物理上存在一个独立的xaml文件。当指定了一个合适的URI后，<code>LoadComponent</code>可以自动获得作为资源嵌入的BAML。实际上，VS自动生成的<code>InitializeComponent</code>方法就是调用<code>Application.LoadComponent</code>来加载嵌入的BAML。<br>获得根元素的实例后，可以使用<code>System.Windows.Markup.XamlWrite</code>类来获得根元素的XAML表示。<code>XamlWriter</code>包含了5个静态<code>Save</code>方法的重载，是最简单的返回一个适当XAML字符串的方法，通过传入一个对象实例来实现。如：</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> xaml <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> = XamlWriter.Save(window)</span><br></pre></td></tr></table></figure>\n<h2 id=\"XAML关键字\"><a href=\"#XAML关键字\" class=\"headerlink\" title=\"XAML关键字\"></a>XAML关键字</h2><p>XAML语言的命名空间（<a href=\"http://schemas.microsoft.com/winfx/2006/xaml\">http://schemas.microsoft.com/winfx/2006/xaml</a>）定义了一批XAML编译器或解析器必须特殊处理的关键字。它们主要控制元素如何被提供给过程式代码，但即使没有过程式代码，有一些关键字还是有用的。如<code>Key</code>、<code>Name</code>、<code>Class</code>、<code>Subclass</code>和<code>Code</code>。</p>\n<h2 id=\"WPF的重要新概念\"><a href=\"#WPF的重要新概念\" class=\"headerlink\" title=\"WPF的重要新概念\"></a>WPF的重要新概念</h2><h3 id=\"逻辑树与可视树\"><a href=\"#逻辑树与可视树\" class=\"headerlink\" title=\"逻辑树与可视树\"></a>逻辑树与可视树</h3><p>XAML天生就是用来呈现用户界面的，这是由于它具有层次化的特性。在WPF中，用户界面由一个对象树构建而成，这棵树叫作逻辑树。<br>WPF用户界面的逻辑树也并不一定用XAML创建，它完全可能用过程式代码来实现。<br>逻辑树的概念很直观，但为什么要关注它呢？因为几乎WPF的每一方面（属性、资源、事件等）都有与逻辑树相关联的行为。如，属性值有时会沿着树自动传递给子元素，而触发的事件可以自底向上或自顶向下遍历树。<br>与逻辑树类似的一个概念是可视树。可视树基本上是逻辑树的扩展，在可视树中，节点都被打散，分放到核心可视组件中。可视树提供了一些详细的可视化实现，而不是把每个元素当作一个“黑盒”。如，虽然<code>ListBox</code>从逻辑上讲是一个单独的控件，但它的默认可视呈现是由更多的原始WPF元素组成的：一个<code>Border</code>对象、两个<code>ScrollBar</code>及其他一些元素。<br>并非所有的逻辑树节点都会出现在可视树中，只有从<code>System.Windows.Media.Visual</code>或<code>System.Windows.Media.Visual3D</code>派生的元素才会被包含进去。其他元素不会包含在内，因为它们自己并没有与生俱来的呈现行为。<br>使用<code>System.Windows.LogicTreeHelper</code>和<code>System.Windows.Media.VisualTreeHelper</code>这两个有些对象的类可以方便地遍历逻辑树和可视树。</p>\n<p>注意：<strong>不要根据具体的可视树写代码。逻辑树是静态的，不会受到程序员的干扰（例如动态添加/删除）元素，但只要用户切换不同的Windows主题，可视树就会改变。</strong></p>\n<p>遍历和打印逻辑树和可视树的示例代码：</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Imports</span> System.Diagnostics</span><br><span class=\"line\"><span class=\"keyword\">Imports</span> System.Windows</span><br><span class=\"line\"><span class=\"keyword\">Imports</span> System.Windows.Media</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Partial</span> <span class=\"keyword\">Class</span> AboutDialog</span><br><span class=\"line\">\t<span class=\"keyword\">Inherits</span> Window</span><br><span class=\"line\">\t<span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> <span class=\"keyword\">New</span>()</span><br><span class=\"line\">\t\tIntializeComponent()</span><br><span class=\"line\">\t\tPrintLogicalTree(<span class=\"number\">0</span>, <span class=\"keyword\">Me</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\">\t<span class=\"keyword\">Protected</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Sub</span> OnContentRendered(e <span class=\"keyword\">As</span> EventArgs)</span><br><span class=\"line\">\t\t<span class=\"keyword\">MyBase</span>.OnContentRendered(e)</span><br><span class=\"line\">\t\tPrintVisualTree(<span class=\"number\">0</span>, <span class=\"keyword\">Me</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> PrintLogicalTree(depth <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span>, obj <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span>)</span><br><span class=\"line\">\t\t<span class=\"comment\">'打印对象，使用前置空格表示深度</span></span><br><span class=\"line\">\t\tDebug.WriteLine(<span class=\"keyword\">New</span> <span class=\"built_in\">String</span>(<span class=\"string\">\" \"</span>, depth) &amp; Convert.ToString(obj))</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">'有时，叶子节点不是DependencyObject，如string</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">If</span> <span class=\"keyword\">Not</span> (<span class=\"built_in\">TypeOf</span> obj <span class=\"keyword\">Is</span> DependencyObject) <span class=\"keyword\">Then</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">Return</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">'递归调用每个逻辑子节点</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">For</span> <span class=\"keyword\">Each</span> child <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span> <span class=\"keyword\">In</span> LogicalTreeHelper.GetChildren(<span class=\"built_in\">TryCast</span>(obj, DependencyObject))</span><br><span class=\"line\">\t\t\tPrintLogicalTree(depth + <span class=\"number\">1</span>, child)</span><br><span class=\"line\">\t\t<span class=\"keyword\">Next</span></span><br><span class=\"line\">\t<span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> PrintVisualTree(depth <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span>, obj <span class=\"keyword\">As</span> DependencyObject)</span><br><span class=\"line\">\t\t<span class=\"comment\">'打印对象，使用前置空格表示深度</span></span><br><span class=\"line\">\t\tDebug.WriteLine(<span class=\"keyword\">New</span> <span class=\"built_in\">String</span>(<span class=\"string\">\" \"</span>, depth) &amp; Convert.ToString(obj))</span><br><span class=\"line\">\t\t<span class=\"comment\">'递归调用每个可视子节点</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">For</span> i <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> = <span class=\"number\">0</span> <span class=\"keyword\">To</span> VisualTreeHelper.GetChildrenCount(obj) - <span class=\"number\">1</span></span><br><span class=\"line\">\t\t\tPrintVisualTree(depth + <span class=\"number\">1</span>, VisualTreeHelper.GetChild(obj, i))</span><br><span class=\"line\">\t\t<span class=\"keyword\">Next</span></span><br><span class=\"line\">\t<span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<p>虽然在Window的构造函数中就可以遍历逻辑树，但可视树真到Window完成至少一次布局后才会有节点，否则是空的。这也是为什么<code>PrintVisualTree</code>是在<code>On-ContentRendered</code>中调用的，因为<code>OnContentRendered</code>是在布局完成后才被调用的。</p>\n<h3 id=\"依赖属性\"><a href=\"#依赖属性\" class=\"headerlink\" title=\"依赖属性\"></a>依赖属性</h3><p>WPF引入了一个新的属性类型叫作依赖属性，整个WPF平台中都会使用到它，用来实现样式化、自动数据绑定、动画等。<br>依赖属性在任何时刻都是依靠多个提供程序来判断它的值的。这些提供程序可以是一段一直在改变值的动画，或者一个父元素的属性值从上慢慢传递给子元素等。依赖属性的最大特征是其内建的传递变更通知的能力。<br>添加这样的智能给属性，其动力在于能够声明标记中直接启用富功能。WPF友好声明设计的关键在于它使用了很多属性。例如，<code>Button</code>控件有96个公共属性。属性可以方便地在XAML中设置而不用程序代码。但如果依赖属性没有额外的垂直传递，在不写额外代码的情况下，很难在设置属性这样简单的动作中获得想要的结果。</p>\n<h3 id=\"依赖属性的实现\"><a href=\"#依赖属性的实现\" class=\"headerlink\" title=\"依赖属性的实现\"></a>依赖属性的实现</h3><p>实际上，依赖属性仅仅是普通的.NET属性，只不过它已融入到了WPF架构中。它完全是由WPF API实现的，没有一种.NET语言天生就能理解依赖属性。<br>下例展示了一个<code>Button</code>如何有效地实现一个叫<code>IsDefault</code>的依赖属性：</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> Button : <span class=\"keyword\">Inherits</span> ButtonBase</span><br><span class=\"line\">\t<span class=\"comment\">' 依赖属性</span></span><br><span class=\"line\">\t<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> IsDefaultProperty <span class=\"keyword\">As</span> DependencyProperty</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"keyword\">New</span>()</span><br><span class=\"line\">\t\t<span class=\"comment\">' 注册属性</span></span><br><span class=\"line\">\t\t<span class=\"comment\">' ...</span></span><br><span class=\"line\">\t\tButton.IsDefaultProperty = DependencyProperty.Register(</span><br><span class=\"line\">\t\t    <span class=\"string\">\"IsDefault\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">GetType</span>(<span class=\"built_in\">Boolean</span>),</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">GetType</span>(Button),</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">New</span> FrameworkPropertyMetadata(<span class=\"literal\">False</span>, <span class=\"keyword\">New</span> PropertyChangedCallback(<span class=\"keyword\">AddressOf</span> OnIsDefaultChanged)))</span><br><span class=\"line\">\t<span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">' .NET属性包装器（可选）</span></span><br><span class=\"line\">\t<span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> IsDefault() <span class=\"keyword\">As</span> <span class=\"built_in\">Boolean</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">Get</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">Return</span> <span class=\"built_in\">CBool</span>(GetValue(Button.IsDefaultProperty))</span><br><span class=\"line\">\t\t<span class=\"keyword\">End</span> <span class=\"keyword\">Get</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">Set</span></span><br><span class=\"line\">\t\t\tSetValue(Button.IsDefaultProperty, value)</span><br><span class=\"line\">\t\t<span class=\"keyword\">End</span> <span class=\"keyword\">Set</span></span><br><span class=\"line\">\t<span class=\"keyword\">End</span> <span class=\"keyword\">Property</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">' 属性改变的回调（可选）</span></span><br><span class=\"line\">\t<span class=\"keyword\">Private</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> OnIsDefaultChanged(o <span class=\"keyword\">As</span> DependencyObject, e <span class=\"keyword\">As</span> DependencyPropertyChangedEventArgs)</span><br><span class=\"line\">\t\t<span class=\"comment\">' ...</span></span><br><span class=\"line\">\t<span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<p><code>IsDefaultProperty</code>静态成员是真正的依赖属性，类型为System.Windows.DependencyProperty。按规则，所有的DependencyProperty成员都必须是public、static，并且有一个Property作为后缀。依赖属性通常调用DependencyProperty.Register静态方法创建，这样的方法需要一个名称（IsDefault）、一个属性类型（bool）及拥有这个属性的类（Button类）。通过不同的Register方法重载，你可以传入metadata（元数据）来告诉WPF如何处理该属性、如何处理属性值改变的回调、如何处理强制值转换、及如何验证值。Button会在它的静态构造函数中调用Register的重载，给依赖属性一个默认值false，并为变更通知添加一个委托。<br>最后，那个叫作IsDefault的传统.NET属性会调用继承自System.Windows.DependencyObject的GetValue和SetValue方法来实现自己的访问器，System.-Windows.DependencyObject是底层基类，这是拥有依赖属性的类必须继承的。GetValue返回最后一次由SetValue设置的值，如果SetValue从未被调用过，那么就是该属性注册时的默认值。IsDefault .NET属性并不是必需的，Button的使用者可能会直接调用GetValue/SetValue方法，因为它们是公开的。</p>\n<p>注意：<strong>在运行时，绕过了.NET属性包装器在XAML中设置依赖属性。</strong></p>\n<p>虽然XAML编译器在编译时是依靠该属性包装器的，但在运行时WPF是直接调用GetValue和SetValue的。因此，为让使用XAML设置属性与使用过程式代码设置属性保持一致，在属性包装器中除了GetValue/SetValue调用外，不应该包含任何其他逻辑，这是至关重要的。如果要添加自定义逻辑，应该在注册的回调函数中添加。<br>表面上看，上例代码像是一种冗长的呈现简单布尔属性的方式。然而，因为GetValue和SetValue内部使用了高效的稀疏存储系统，而IsDefaultProperty是一个静态成员（而不是一个实例成员），与典型的.NET属性相比，依赖属性的实现节省了保存每个实现所需要的内存。<br>依赖属性的好处远不止节约内存而已。它把相当一部分代码集中起来，并做标准化处理。</p>\n<h3 id=\"变更通知\"><a href=\"#变更通知\" class=\"headerlink\" title=\"变更通知\"></a>变更通知</h3><p>无论何时，只要依赖属性的值变了，WPF就会自动根据属性的元数据（metadata）触发一系列动作。内建的变更通知最有趣的特性之一是属性触发器，它可以在属性值改变时执行自定义动作，而不用更改任何过程式代码。<br>例如，你想让Button在鼠标移上去时变为蓝色。如果没有属性触发器的话，你要为每个Button添加两个事件处理程序，一个为MouseEvent事件准备，一个为MouseLeave事件准备。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">MouseEnter</span>=<span class=\"string\">\"Button_MouseEnter\"</span> <span class=\"attr\">MouseLeave</span>=<span class=\"string\">\"Button_MouseLeave\"</span> </span><br><span class=\"line\"><span class=\"attr\">MinWidth</span>=<span class=\"string\">\"75\"</span> <span class=\"attr\">Margin</span>=<span class=\"string\">\"10\"</span>&gt;</span></span><br><span class=\"line\">    Help<span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">MouseEnter</span>=<span class=\"string\">\"Button_MouseEnter\"</span> <span class=\"attr\">MouseLeave</span>=<span class=\"string\">\"Button_MouseLeave\"</span> </span><br><span class=\"line\"><span class=\"attr\">MinWidth</span>=<span class=\"string\">\"75\"</span> <span class=\"attr\">Margin</span>=<span class=\"string\">\"10\"</span>&gt;</span></span><br><span class=\"line\">    OK<span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>下面的代码实现了这两个事件处理程序：</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> Button_MouseEnter(sender <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span>, e <span class=\"keyword\">As</span> MouseEventArgs)</span><br><span class=\"line\">\t<span class=\"keyword\">Dim</span> b <span class=\"keyword\">As</span> Button = <span class=\"built_in\">TryCast</span>(sender, Button)</span><br><span class=\"line\">\t<span class=\"keyword\">If</span> b <span class=\"keyword\">IsNot</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">Then</span></span><br><span class=\"line\">\t\tb.Foreground = Brushed.Blue</span><br><span class=\"line\">\t<span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Private</span> <span class=\"keyword\">Sub</span> Mouse_MouseLeave(sender <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span>, e <span class=\"keyword\">As</span> MouseEventArgs)</span><br><span class=\"line\">\t<span class=\"keyword\">Dim</span> b <span class=\"keyword\">As</span> Button = <span class=\"built_in\">TryCast</span>(sender, Button)</span><br><span class=\"line\">\t<span class=\"keyword\">If</span> b <span class=\"keyword\">IsNot</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">Then</span></span><br><span class=\"line\">\t\tb.Foreground = Brushed.Black</span><br><span class=\"line\">\t<span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br></pre></td></tr></table></figure>\n<p>然而有了属性触发器，完全可以在XAML中完成相同的行为：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">MinWidth</span>=<span class=\"string\">\"75\"</span> <span class=\"attr\">Margin</span>=<span class=\"string\">\"10\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button.Style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Style</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">\"&#123;x:Type Button&#125;\"</span>&gt;</span><span class=\"xml\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Style.Triggers</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Trigger</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"IsMouseOver\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"True\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Foreground\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"Blue\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">Trigger</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Style.Triggers</span>&gt;</span></span><br><span class=\"line\">    </span><span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button.Style</span>&gt;</span></span><br><span class=\"line\">    OK</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>属性触发器仅仅是WPF支持的3种触发器之一。数据触发器是属性触发器的另一种形式，它可以在任何.NET属性中工作（而不仅仅是依赖属性）。事件触发器会通过声明方式指定动作，该动作在路由事件触发时生效。</p>\n<h3 id=\"属性值继承\"><a href=\"#属性值继承\" class=\"headerlink\" title=\"属性值继承\"></a>属性值继承</h3><p>术语“<strong>属性值继承</strong>”并不是指传统的面向对象的类继承，而是指属性值自顶向下沿着元素树传递。<br>属性值的继承行为由以下两个因素决定：</p>\n<ul>\n<li>并不是每个依赖属性都参与属性值继承。（从内部来讲，依赖属性会通过传递FrameworkPropertyMetadataOptions.Inherits给DependencyProperty-.Register方法来完成继承。</li>\n<li>有其他一些优先级更高的源来设置这些属性值。</li>\n</ul>\n<h3 id=\"对多个提供程序的支持\"><a href=\"#对多个提供程序的支持\" class=\"headerlink\" title=\"对多个提供程序的支持\"></a>对多个提供程序的支持</h3><p>WPF有许多强大的机制可以独立地去尝试设置依赖属性的值。如果没有设计良好的机制来处理这些完全不同的属性值提供程序，这个系统会变得混乱，属性值会变得不稳定。当然，正如它们的名字所表达的，依赖属性就是设计为以一致的、有序的方式依靠这些提供程序。<br>下图展示了这5步流程，通过该流程，WPF运行每个依赖属性并最终计算出它的值。依靠依赖属性中内嵌的变更通知，这个流程才可自动发生。</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/2011111212113221.gif\" alt=\"\"></p>\n<h3 id=\"判断基础值\"><a href=\"#判断基础值\" class=\"headerlink\" title=\"判断基础值\"></a>判断基础值</h3><p>大多数属性值提供程序会把基础值的计算纳入考虑范畴。下面的清单显示了8个提供程序，它们可以设置大多数依赖属性的值，优先级顺序从高到低为：</p>\n<blockquote>\n<p>本地值-&gt;样式触发器-&gt;模板触发器-&gt;样式设置程序-&gt;主题样式触发器-&gt;主题样式设置程序-&gt;属性值继承-&gt;默认值</p>\n</blockquote>\n<p>本地值技术上的含义是任何对DependencyObject.SetValue的调用，但它通常会有一个简单的属性赋值，这是用XAML或过程式代码完成的。<br>默认值指的是依赖属性注册时使用的初始值。</p>\n<h3 id=\"计算\"><a href=\"#计算\" class=\"headerlink\" title=\"计算\"></a>计算</h3><p>如果第一步中的值是表达式（派生自System.Windows.Expression的一个对象），那么WPF会执行一种特殊的演算步骤–把表达式转换为具体的结果。在WPF 3.0中，表达式仅在使用动态资源或数据绑定时起作用。</p>\n<h3 id=\"应用动画\"><a href=\"#应用动画\" class=\"headerlink\" title=\"应用动画\"></a>应用动画</h3><p>如果一个或多个动画在运行，它们有能力改变当前的属性值或完全替代当前的属性值。</p>\n<h3 id=\"限制\"><a href=\"#限制\" class=\"headerlink\" title=\"限制\"></a>限制</h3><p>在所有属性值提供程序处理过后，WPF将拿到一个几乎是终值的属性值，如果依赖属性已经注册了CoerceValueCallback，还会把这个属性值传递给Coerce-ValueCallback委托。该回调函数负责返回一个新的值，它是基于自定义逻辑实现的。</p>\n<h3 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h3><p>最后，如果依赖属性已经注册了ValidateValueCallback，之前的限制中的值将被传入ValidateValueCallback委托。如果输入值有效，该回调函数返回true，否则返回false。返回false将会导致抛出一个异常，并使整个流程被取消。<br>如果没办法判断依赖属性从哪里获得当前值，那么可以得到静态方法DependencyPropertyHelper.GetValueSource作为调试助手。该方法将返回一个ValueSource结构，其中包含以下一些数据：一个BaseValueSource枚举值，它反映的是基础值从哪里来的（流程中的第一步）；IsExpression、IsAnimated和IsCoerced几个布尔类型属性，它反映了第二步到第四步的信息。<br>请不要在程序代码中使用这个方法，WPF以后的版本中将打破值计算的假设，会根据它的源类型采用不同的方式处理属性值，而不是根据假设WPF应用程序中的方式来处理。<br>你很可能需要清除本地值，并让WPF从下一个最高优先级的提供程序中获得值，然后使用这个值来设置最终的属性值。DependencyObject提供了这样的机制，可通过调用ClearValue方法来实现。</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">' b为Button实例</span></span><br><span class=\"line\">b.ClearValue(Button.ForegroundProperty)</span><br></pre></td></tr></table></figure>\n<p><code>Button.ForegroundProperty</code>是一个<code>DependencyProperty</code>静态成员，在调用<code>ClearValue</code>后，会重新计算基础值，并把本地值从方程式中删除。</p>\n<h3 id=\"附加属性\"><a href=\"#附加属性\" class=\"headerlink\" title=\"附加属性\"></a>附加属性</h3><p>附加属性是依赖属性的一种特殊形式，可以被有效地添加到任何对象中。这可能听上去很奇怪，但这个机制在WPF中有多种应用。</p>\n<p>类似于WinForm那样的技术，许多WPF类定义了一个Tag属性（类型是System.Object），目的是为了存储每一个实例的自定义数据。但要添加自定义数据给任何一个派生自DependencyObject的对象，附加属性是一种更加强大、更加灵活的机制。通常我们会忽略一点，即可以用附加属性高效的向密封类（sealed class）的实例添加自定义数据。</p>\n<p>另外，大家对附加属性有一个曲解，虽然在XAML中设置它们依赖于SetXXX静态方法，但可在过程式代码中绕过这个方法，直接去调用DependencyObject-.SetValue方法。这意味着在过程式代码中，可以把任何一个依赖属性作为一个附加属性。如，下面的代码把ListBox的IsTextSearchEnabled属性添加到了Button控件上，并赋予该属性一个值：</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">' 向Button添加一个不相关的属性，并把它的值设置为true</span></span><br><span class=\"line\">okButton.SetValue(ListBox.IsTextSearchEnabledProperty, <span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n<p>虽然这似乎没有任何意义，但你可以用一种对应用程序或组件有意义的方式来随意使用这个属性值。</p>\n<h3 id=\"路由事件\"><a href=\"#路由事件\" class=\"headerlink\" title=\"路由事件\"></a>路由事件</h3><p>正如WPF在简单的.NET属性概念上添加了许多基础的东西一样，它也为.NET事件添加了许多基础的东西。路由事件是专门设计用于在元素树中使用的事件。当路由事件触发后，它可以向上或向下遍历可视树和逻辑树，用一种简单而且持久的方式在每个元素上触发，而不需要使用任何定制代码。<br>事件路由让许多程序不去留意可视树的细节（对于样式重置来说这是很不错的），并且对于成功的WPF元素创作至关重要。<br>在前面的文章部分之中，对于VCR样式的Stop按钮来说，一个用户可能在Rectangle逻辑子元素上直接按下鼠标左键。由于事件遍历了逻辑树，Button元素还是会发现这个事件，并处理该事件。因此，你可以在一个元素（如Button）中嵌入任何复杂内容或设置一棵复杂的可视树，鼠标左键单击其中任何一个内部元素，仍然会触发父元素Button的Click事件。如果没有路由事件，内部内容的创造者或按钮的使用者不得不编写代码来把事件串起来。<br>路由事件的实现和行为与依赖属性有许多相同的地方。</p>\n<h3 id=\"路由事件的实现\"><a href=\"#路由事件的实现\" class=\"headerlink\" title=\"路由事件的实现\"></a>路由事件的实现</h3><p>与依赖属性一样，没有一种.NET语言（除XAML外）天生具有理解路由指派的能力。<br>就像依赖属性是由公共的静态DependencyProperty成员加上一个约定的Property后缀名构成的一样，路由事件也是由公共的静态RoutedEvent成员加上一个约定的Event后缀名构成的。路由事件的注册很像静态构建器中注册依赖属性，它会定义一个普通的.NET事件或一个事件包装器，这样可以保证在过程式代码中使用起来更加熟悉，并且可以在XAML中用事件特性语法添加一个事件处理程序。与属性包装器一样，事件包装器在访问器中只能调用AddHandler和RemoveHandler，而不应该做其他事件。</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> Button</span><br><span class=\"line\">\t<span class=\"keyword\">Inherits</span> ButtonBase</span><br><span class=\"line\">\t<span class=\"comment\">'路由事件</span></span><br><span class=\"line\">\t<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> ClickEvent <span class=\"keyword\">As</span> RoutedEvent</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"keyword\">New</span>()</span><br><span class=\"line\">\t\t<span class=\"comment\">'注册事件</span></span><br><span class=\"line\">\t\t\t<span class=\"comment\">' ...</span></span><br><span class=\"line\">\t\tButton.ClickEvent = EventManager.RegisterRoutedEvent(</span><br><span class=\"line\">        <span class=\"string\">\"Click\"</span>, </span><br><span class=\"line\">        RoutingStrategy.Bubble, </span><br><span class=\"line\">        <span class=\"built_in\">GetType</span>(RoutedEventHandler), </span><br><span class=\"line\">        <span class=\"built_in\">GetType</span>(Button))</span><br><span class=\"line\">\t<span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">'.NET事件包装器（可选）</span></span><br><span class=\"line\">\t<span class=\"keyword\">Public</span> <span class=\"keyword\">Custom</span> <span class=\"keyword\">Event</span> Click <span class=\"keyword\">As</span> RoutedEventHandler</span><br><span class=\"line\">\t\t<span class=\"keyword\">AddHandler</span>(<span class=\"keyword\">ByVal</span> value <span class=\"keyword\">As</span> RoutedEventHandler)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">Call</span> [<span class=\"keyword\">AddHandler</span>](Button.ClickEvent, value)</span><br><span class=\"line\">\t\t<span class=\"keyword\">End</span> <span class=\"keyword\">AddHandler</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">RemoveHandler</span>(<span class=\"keyword\">ByVal</span> value <span class=\"keyword\">As</span> RoutedEventHandler)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">Call</span> [<span class=\"keyword\">RemoveHandler</span>](Button.ClickEvent, value)</span><br><span class=\"line\">\t\t<span class=\"keyword\">End</span> <span class=\"keyword\">RemoveHandler</span></span><br><span class=\"line\">\t<span class=\"keyword\">End</span> <span class=\"keyword\">Event</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">Protected</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Sub</span> OnMouseLeftButtonDown(e <span class=\"keyword\">As</span> MouseButtonEventArgs)</span><br><span class=\"line\">\t\t<span class=\"comment\">' ...</span></span><br><span class=\"line\">\t\t<span class=\"comment\">'触发事件</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">Call</span> [<span class=\"keyword\">RaiseEvent</span>](<span class=\"keyword\">New</span> RoutedEventArgs(Button.ClickEvent, <span class=\"keyword\">Me</span>))</span><br><span class=\"line\">\t\t<span class=\"comment\">' ...</span></span><br><span class=\"line\">\t<span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\">\t<span class=\"comment\">' ...</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<p>这些<code>AddHandler</code>和<code>RemoveHandler</code>方法没有从DependencyObject继承，而是从System.Windows.UIElement继承的，UIElement是一个更高层的供元素（如Button元素）继承的基类。这些方法可以向一个适当的路由事件添加一个委托或从路由事件移除一个委托。在<code>OnMouseLeftButtonDown</code>中，它使用适当的RoutedEvent成员调用RaiseEvent来触发Click事件。当前的Button实例（this）被传递给事件的源元素（source element）。在代码清单中没有列出，但是作为对KeyDown事件的响应，Button的Click事件将被触发，这样就可以处理由空格健或回车键完成点击动作的情况。</p>\n<h3 id=\"路由策略和事件处理程序\"><a href=\"#路由策略和事件处理程序\" class=\"headerlink\" title=\"路由策略和事件处理程序\"></a>路由策略和事件处理程序</h3><p>当注册完成后，每个路由事件将选择3个路由策略中的一个。所谓路由策略就是事件触发遍历整棵元素树的方式，这些策略由<code>RoutingStategy</code>枚举值提供。</p>\n<ul>\n<li>Tunneling（管道传递）—-事件首先在根元素上被触发，然后从每一个元素向下沿着树传递，直至到达源元素为止（或者直至处理程序把事件标记为已处理为止）。</li>\n<li>Bubbling（冒泡）—-事件首先在源元素上被触发，然后从每一个元素向上沿着树传递，直至到达根元素为止（或者直至处理程序把事件标记为已处理为止）。</li>\n<li>Direct（直接）—-事件仅在源元素上触发。这与普通.NET事件的行为相同，不同的是这样的事件仍然会参与一些路由事件的特定机制，如事件触发器。</li>\n</ul>\n<p>路由事件的事件处理程序有一个签名，它与通用.NET事件处理程序的模式匹配：第一个参数是一个System.Object对象，名为sender，第二个参数（一般命名为e）是一个派生自<code>System.EventArgs</code>的类。传递给事件处理程序的sender参数就是该处理程序被添加到的元素。参数e是RoutedEventArgs的一个实例（或者派生自RoutedEventArgs），RoutedEventArgs是EventArgs的一个子类，它提供了4个有用的属性：</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Source</td>\n<td>逻辑树中一开始触发该事件的元素。</td>\n</tr>\n<tr>\n<td>OriginalSource</td>\n<td>可视树中一开始触发该事件的元素（例如，TextBlock或标准的Button元素的ButtonChrome子元素）。</td>\n</tr>\n<tr>\n<td>Handled</td>\n<td>布尔值，设置为true表示标记事件为已处理，这就是用于停止Tunneling或Bubbling的标记。</td>\n</tr>\n<tr>\n<td>RoutedEvent</td>\n<td>真正的路由事件对象（如Button.ClickEvent），当一个事件处理程序同时被用于多个路由事件时，它可以有效的识别被触发的事件。</td>\n</tr>\n</tbody>\n</table>\n<p><code>Source</code>和<code>OriginalSource</code>的存在允许使用更高级别的逻辑树或更低级别的可视树。然而，这种区别仅对于像鼠标事件这样的物理事件有效。对于更抽象的事件来说，不需要与可视树中的某个元素建立直接关系（就像由于键盘支持的<code>Click</code>），WPF会传递相同的对象给<code>Source</code>和<code>OriginalSource</code>。</p>\n<h3 id=\"路由事件的实现-1\"><a href=\"#路由事件的实现-1\" class=\"headerlink\" title=\"路由事件的实现\"></a>路由事件的实现</h3><p>UIElement类为键盘、鼠标、指示笔输入定义了许多路由事件。大多数路由事件是冒泡事件，但许多事件与管道事件是配对的。管道事件很容易被识别，因为按照惯例，它们的名字中都有一个Preview前缀，在它们的配对冒泡事件发生前，这些事件会立即被触发。例如，<code>PreviewMouseMove</code>就是一个管道事件，在MouseMove冒泡事件前被触发。<br>为许多不同的行为提供一对事件是为了给元素一个有效地取消事件或在事件即将发生前修改事件的机会。根据惯例，（当定义了冒泡和管道的事件对后）WPF的内嵌元素只会在响应一个冒泡事件时采取行动，这样可以保证管道事件能够名副其实的做到“预览”。例如，在TextBox控件的Preview事件中对录入的文本进行校验，过滤不符合规范的文本。</p>\n<h3 id=\"处理单击鼠标中键的事件在哪里？\"><a href=\"#处理单击鼠标中键的事件在哪里？\" class=\"headerlink\" title=\"处理单击鼠标中键的事件在哪里？\"></a>处理单击鼠标中键的事件在哪里？</h3><p>如果浏览一遍UIElement或ConentElement提供的所有鼠标事件，可以找到<code>MouseLeftButtonDown</code>、<code>MouseLeftButtonUp</code>、<code>MouseRightButtonDown</code>、<code>MouseRightButtonUp</code>事件，但有些鼠标上出现的附加按键该怎么办呢？<br>这一信息可以通过更加通用的MouseDown和MouseUp事件获得。传入这样的事件处理程序的参数包括一个MouseButton枚举值，它表示鼠标状态Left、Right、Midle、XButton1、XButton2，还有一个MouseButtonState枚举值，表示这个按钮是Pressed还是Released。</p>\n<h3 id=\"中止路由事件是一种假象\"><a href=\"#中止路由事件是一种假象\" class=\"headerlink\" title=\"中止路由事件是一种假象\"></a>中止路由事件是一种假象</h3><p>虽然在事件处理程序中设置RoutedEventArgs参数的Handled属性为true，可以终止管道传递或冒泡，但是进一步沿着树向上或向下的每个处理程序还是可以收到这些事件。这只能在代码中完成。在任何时候，都应该尽可能地避免处理已处理过的事件，因为事件应该是在第一时间被处理的。<br>总之，终止管理传递或冒泡仅仅是一种假像而已。更加准确的说法应该是，当一个路由事件标记为已处理时，管道传递和冒泡仍然会继续，但默认情况下，事件处理程序只会处理没有处理过的事件。</p>\n<h3 id=\"附加事件\"><a href=\"#附加事件\" class=\"headerlink\" title=\"附加事件\"></a>附加事件</h3><p>通过附加事件，WPF可以通过一个没有定义过该事件的元素来完成路由事件的管道传递和冒泡。<br>附加事件与附加属性操作起来很像。每个路由事件都可以被当作附加事件使用。<br>由于需要传递许多信息给路由事件，可以用上层的“megahandler”来处理每一个管道或冒泡事件。这个处理程序通过分析RoutedEvent对象判断哪个事件被触发了，并把RoutedEventArgs参数转换为一个合适的子类，然后继续。</p>\n<h3 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h3><p>WPF提供了内建的命令支持，这是一个更为抽象且松耦合的事件版本。尽管事件是与某个用户动作相关联的，但命令表示的是那些与用户界面分离的动作，最标准的命令示例是剪切（Cut）、复制（Copy）、粘贴（Paste）。应用程序总能通过许多同步的机制提供这些动作：Menu控件中的MenuItem、ContextMenu控件中的MenuItem、ToolBar控件中的Button、键盘快捷方式等。</p>\n<h3 id=\"内建命令\"><a href=\"#内建命令\" class=\"headerlink\" title=\"内建命令\"></a>内建命令</h3><p>命令是任何一个实现了<code>ICommand</code>接口（位于<code>System.Windows.Input</code>命名空间）的对象，每个对象定义了3个简单的成员：</p>\n<table>\n<thead>\n<tr>\n<th>成员</th>\n<th>介绍</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Execute</td>\n<td>执行特定命令的逻辑的方法。</td>\n</tr>\n<tr>\n<td>CanExecute</td>\n<td>如果命令允许被执行，则返回true，否则返回false。</td>\n</tr>\n<tr>\n<td>CanExecuteChanged</td>\n<td>无论何时，只要CanExecute的值改变，该事件就会触发。</td>\n</tr>\n</tbody>\n</table>\n<p>如果需要创建剪切、复制和粘贴命令，可以定义3个实现ICommand接口的类，找一个地方存储这3个类（如放在主窗口的静态成员中），从相关的事件处理程序中调用Execute（当CanExecute返回true时），处理CanExecuteChanged事件，改变相关用户界面中的IsEnabled属性。</p>\n<p>像Button、CheckBox、MenuItem这样的控件有相关的逻辑会与任何命令做交互。它们会有一个简单的Command属性（类型为ICommand），当设置了Command属性后，无论何时Click事件触发，这些控件会自动调用命令的Execute方法（只要CanExecute返回true时）。另外，它们会自动保持IsEnabled的值与CanExecute的值同步，这是通过CanExecuteChanged事件实现的。通过这种给属性赋值的方式，任何逻辑在XAML下都是可以实现的。</p>\n<p>同时，WPF已经定义了一系列命令，因此不需要为Cut、Copy和Paste命令实现ICommand对象，也不用担心在哪里保存这些命令。WPF有5个类的静态属性实现了WPF的内建命令：</p>\n<blockquote>\n<p>ApplicationCommands:<br>Close、Copy、Cut、Delete、Find、Help、New、Open、Paste、Print、PrintPreview、Properties、Redo、Replace、Save、SaveAs、SelectAll、Stop、Undo等。</p>\n</blockquote>\n<p>其他4个类为<code>ComponentCommands</code>、<code>MediaCommands</code>、<code>NavigationCommands</code>、<code>EditCommands</code>。<br>每个属性返回<code>RoutedUICommand</code>的实例，<code>RoutedUIElement</code>类不仅实现了<code>ICommand</code>接口，还可以像路由事件一样支持冒泡。</p>"},{"title":"暧昧ばんび~な - 鹿乃","date":"2016-06-20T16:00:00.000Z","_content":"\n![暧昧ばんび~な - 鹿乃](http://p3.music.126.net/el98CuInVKeFUPsQKAovPg==/874111744105990.jpg?param=90y90)\n\n**暧昧ばんび~な**\n_Aimai Bambina_\n\n歌手： 鹿乃\n发行时间：2012-08-11\n发行公司： ばんび~の\n\n<!--more-->\n\n------------------------------------------------------------------------------------------------\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=450 src=\"http://music.163.com/outchain/player?type=1&id=2083669&auto=1&height=430\"></iframe>","source":"_posts/暧昧ばんび~な.md","raw":"---\ntitle: 暧昧ばんび~な - 鹿乃\ntags: [music, 鹿乃]\ndate: 2016-06-21\n---\n\n![暧昧ばんび~な - 鹿乃](http://p3.music.126.net/el98CuInVKeFUPsQKAovPg==/874111744105990.jpg?param=90y90)\n\n**暧昧ばんび~な**\n_Aimai Bambina_\n\n歌手： 鹿乃\n发行时间：2012-08-11\n发行公司： ばんび~の\n\n<!--more-->\n\n------------------------------------------------------------------------------------------------\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=450 src=\"http://music.163.com/outchain/player?type=1&id=2083669&auto=1&height=430\"></iframe>","slug":"暧昧ばんび~な","published":1,"updated":"2016-08-04T19:50:55.692Z","_id":"cippgdo580000asv4dml6m6yz","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"http://p3.music.126.net/el98CuInVKeFUPsQKAovPg==/874111744105990.jpg?param=90y90\" alt=\"暧昧ばんび~な - 鹿乃\"></p>\n<p><strong>暧昧ばんび~な</strong><br><em>Aimai Bambina</em></p>\n<p>歌手： 鹿乃<br>发行时间：2012-08-11<br>发行公司： ばんび~の</p>\n<a id=\"more\"></a>\n<hr>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"450\" src=\"http://music.163.com/outchain/player?type=1&id=2083669&auto=1&height=430\"></iframe>","excerpt":"<p><img src=\"http://p3.music.126.net/el98CuInVKeFUPsQKAovPg==/874111744105990.jpg?param=90y90\" alt=\"暧昧ばんび~な - 鹿乃\"></p>\n<p><strong>暧昧ばんび~な</strong><br><em>Aimai Bambina</em></p>\n<p>歌手： 鹿乃<br>发行时间：2012-08-11<br>发行公司： ばんび~の</p>","more":"<hr>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=450 src=\"http://music.163.com/outchain/player?type=1&id=2083669&auto=1&height=430\"></iframe>"},{"title":"Extension Property in VisualBasic","date":"2016-06-22T16:00:00.000Z","_content":"\n``Extension`` methods (``Function`` or ``Sub``) are a powerful tool to extend an otherwise sealed object. It's easier than creating a ``Class`` extension because you do not need to update your (maybe already deployed) code, e.g. change ``Dim nice As SomeClass`` to ``Dim nice As SomeClassExtendedAndNicer``. Obviously, different situations call for different solutions and you need an extended Class, but I prefer extension methods if I can solve the situation with those. One big huge drawback with extension methods is that you cannot write extension properties! See on [MSDN here](https://msdn.microsoft.com/en-us/library/bb384936.aspx).\n\nIn this tip, I show how to use the ``Extension`` Property in vb.net Class Object for a proxy of an extension property or AlmostExtensionProperty. This tip was inspired by Mr. veen_rp's article: [An Almost Extension Property](http://www.codeproject.com/Articles/1087921/An-Almost-Extension-Property). Instead of by using the ``tag`` property on the Control, and this trick is works on the ``Extension`` Property in the VisualBasic class, so that this trick is not only works on the Controls.\n\n<!--more-->\n\n## VisualBasic Class\n\nFirst of all, let's see how does the basically class object was defined in the VisualBasic language:\n\n```vbnet\nNamespace Microsoft.VisualBasic.Language\n\n    ''' <summary>\n    ''' The base class object in VisualBasic language\n    ''' </summary>\n    Public Class ClassObject\n\n        ''' <summary>\n        ''' The extension property.(为了节省内存的需要，这个附加属性尽量不要被自动初始化)\n        ''' </summary>\n        ''' <returns></returns>\n        ''' <remarks>\n        ''' Dummy field for solve the problem of xml serialization >>>simpleContent&lt;&lt;&lt;\n        '''\n        ''' http://stackoverflow.com/questions/2501466/xmltext-attribute-in-base-class-breakes-serialization\n        '''\n        ''' So I think you could make it work by adding a dummy property or field that you never use in the LookupItem class.\n        ''' If you're never assign a value to it, it will remain null and will not be serialized, but it will prevent your\n        ''' class from being treated as simpleContent. I know it's a dirty workaround, but I see no other easy way...\n        ''' </remarks>\n        <XmlIgnore> <ScriptIgnore> Public Overridable Property Extension As ExtendedProps\n\n        ''' <summary>\n        ''' Get dynamics property value.\n        ''' </summary>\n        ''' <typeparam name=\"T\"></typeparam>\n        ''' <param name=\"name\"></param>\n        ''' <returns></returns>\n        Public Function ReadProperty(Of T)(name As String) As PropertyValue(Of T)\n            Return PropertyValue(Of T).Read(Me, name)\n        End Function\n\n        ' ......\n    End Class\n```\n\nFor this part of the class object definition that we can see that, every classobject in the VisualBasic may have a property named ``Extension``, and this property is implemented by using a hash table ``Dictionary(Of String, Object)`` to stores the additional tag data. So that the dynamics extension property value is going to stored at here.\n\n## Property Value\n\nBy knowing how this extension property it works, first we look into how to implements a property. From the language of VB6, **the class property is defined by union a get function and a set method**, The property definition in vb.net goes simple, just using the ``Property`` keyword then we can simply define a property in a line of code. But by expands the vb.net class property or viewing the il code or the reflection result, that we can known that the property it is works as the way of VB6: but the difference is that the property get and set using two inline function in vb.net. And the java language is also does in this way, using a ``get`` word prefix named function as the property read method and using a ``set`` word prefix named method as the property write.\n\nSo that the extension property in VisualBasic is working as the Class instance Property it does: **using a get function lambda for get custom value, and using a set method lambda for set the custom value.**\n\n```vbnet\nPublic Class PropertyValue(Of T) : Inherits Value(Of T)\n\n    ReadOnly __get As Func(Of T)\n    ReadOnly __set As Action(Of T)\n\n    Public Overrides Property Value As T\n        Get\n            Return __get()\n        End Get\n        Set(value As T)\n            MyBase.Value = value\n            If Not __set Is Nothing Then\n                Call __set(value)  ' 因为在初始化的时候会对这个属性赋值，但是set没有被初始化，所以会出错，在这里加了一个if判断来避免空引用的错误\n            End If\n        End Set\n    End Property\n\n    ''' <summary>\n    ''' The instance object for this extension property\n    ''' </summary>\n    ''' <returns></returns>\n    Public Property obj As ClassObject\n\n    ''' <summary>\n    '''\n    ''' </summary>\n    ''' <param name=\"[get]\">请勿使用<see cref=\"GetValue\"/></param>函数，否则会出现栈空间溢出\n    ''' <param name=\"[set]\">请勿使用<see cref=\"SetValue\"/></param>方法，否则会出现栈空间溢出\n    Sub New([get] As Func(Of T), [set] As Action(Of T))\n        __get = [get]\n        __set = [set]\n    End Sub\n\n    ''' <summary>\n    ''' 默认是将数据写入到基本类型的值之中\n    ''' </summary>\n    Sub New()\n        __get = Function() MyBase.Value\n\t\t__set = Sub(v) MyBase.Value = v\n\tEnd Sub\n\n    ''' <summary>\n    ''' 这个主要是应用于Linq表达式之中，将属性值设置之后返回宿主对象实例\n    ''' </summary>\n    ''' <param name=\"value\"></param>\n    ''' <returns></returns>\n    Public Function SetValue(value As T) As ClassObject\n        Call __set(value)\n        Return obj\n    End Function\n\n    Public Overloads Shared Narrowing Operator CType(x As PropertyValue(Of T)) As T\n        Return x.Value\n    End Operator\n\n    Public Overrides Function ToString() As String\n        Return Value.GetJson\n    End Function\n\n    ' ......\nEnd Class\n```\n\n## Get Extension Property\n\nBy invoke get or set the value of the extension property, first we should get the extension property definition, as we should gets the ``PropertyInfo`` at first to using the property in the Reflection operation, and here is how to gets the property definition from the ``Extension`` property from the VisualBasic class object.\n\n```vbnet\nPublic Shared Function [New](Of Cls As ClassObject)(x As Cls, name As String) As PropertyValue(Of T)\n    Dim value As New PropertyValue(Of T)()\n    x.Extension.DynamicHash.Value(name) = value\n    value.obj = x\n    Return value\nEnd Function\n\n''' <summary>\n''' 读取<see cref=\"ClassObject\"/>对象之中的一个拓展属性\n''' </summary>\n''' <typeparam name=\"Cls\"></typeparam>\n''' <param name=\"x\"></param>\n''' <param name=\"name\"></param>\n''' <returns></returns>\nPublic Shared Function Read(Of Cls As ClassObject)(x As Cls, name As String) As PropertyValue(Of T)\n    If x.Extension Is Nothing Then\n        x.Extension = New ExtendedProps\n    End If\n    Dim prop As Object = x.Extension.DynamicHash(name)\n    If prop Is Nothing Then\n        prop = PropertyValue(Of T).[New](Of Cls)(x, name)\n    End If\n    Return DirectCast(prop, PropertyValue(Of T))\nEnd Function\n```\n\nGets the property value definition just very easy, right? we just gets the value from the dictionary by using the property name as the key.\n\nSo that this extension property usage may becomes this style:\n\n1. First define a Extension function in a module\n2. You can using ``NameOf`` keyword to get property name or just using ``MethodBase.GetCurrentMethod`` for get current function name\n3. Using shared function ``PropertyValue(Of <Type>).Read(Of T)`` to get the property definition of your ``ClassObject``\n\nAnd here is a simple example by using this extension property, here is the property definition example:\n\n```vbnet\nPublic Module PropertyDefinitionModule\n\n    ''' <summary>\n    ''' Example of the extension property in VisualBasic\n    ''' </summary>\n    ''' <typeparam name=\"T\"></typeparam>\n    ''' <param name=\"x\"></param>\n    ''' <returns></returns>\n    <Extension>\n    Public Function Uid(Of T As ClassObject)(x As T) As PropertyValue(Of Long)\n        Return PropertyValue(Of Long).Read(Of T)(x, NameOf(Uid))\n    End Function\n\n    ' Or\n\n    ''' <summary>\n    ''' Example of the extension property in VisualBasic\n    ''' </summary>\n    ''' <typeparam name=\"T\"></typeparam>\n    ''' <param name=\"x\"></param>\n    ''' <returns></returns>\n    <Extension>\n    Public Function Uid(Of T As ClassObject)(x As T) As PropertyValue(Of Long)\n        ' Just copy this statement without any big modification.\n        ' just modify the generics type constraint to use this extension property language feature.\n        Return PropertyValue(Of Long).Read(Of T)(x, MethodBase.GetCurrentMethod)\n    End Function\nEnd Module\n```\n\nSo that by using this extension property, that for get value, we can do as this:\n\n```vbnet\nDim n As Long = x.Uid\n```\n\nFor set property value, that we can write the code:\n\n```vbnet\nDim n As Long = VBMath.Rnd() * 100000000000L\nx.Uid.value = n\nCall x.Uid.__DEBUG_ECHO()\n```\n\nAnd here is the code example for csharp:\n\n```csharp\nusing Microsoft.VisualBasic;\nusing Microsoft.VisualBasic.ComponentModel.DataSourceModel;\nusing Microsoft.VisualBasic.Language;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Reflection;\nusing System.Text;\nusing System.Threading.Tasks;\nusing static Microsoft.VisualBasic.Extensions;\n\nnamespace Test2\n{\n    public static class Program\n    {\n\n        public static PropertyValue<long> myId<T>(this T x) where T : ClassObject\n        {\n            // Just copy this statement without any big modification. just modify the generics type constraint.\n            return PropertyValue<long>.Read<T>(x, MethodBase.GetCurrentMethod());\n        }\n\n        static void Main(string[] args)\n        {\n            var x = new ClassObject();\n            long n = x.myId().Value; // The init value is ZERO\n\n            x.myId().Value = 55;     // Extension property set value\n\n            n = -100;\n            n = x.myId().Value;      // Extension property get value, value should be 55 not -100\n            n.__DEBUG_ECHO();        // display the value\n\n            Pause();\n        }\n    }\n}\n```\n\n## Extension Property with Linq\n\nRecently I have lots of works on the bacterial genome annotation, one of this job is using the circos software to visualize the finial result data. For construct a bacterial genome with some plasmid its visualization data model in the circos, I using a linq expression to do this job, and the extension property language feature helps me a lot on this job:\n\n```vbnet\nImports Microsoft.VisualBasic.Language\n\nPublic Class Karyotype : Inherits ClassObject\n    Implements IKaryotype\n\n    Public Property chrName As String Implements IKaryotype.chrName\n    Public Property chrLabel As String\n    Public Property start As Integer Implements IKaryotype.start\n    Public Property [end] As Integer Implements IKaryotype.end\n    Public Property color As String Implements IKaryotype.color\n\n    Public Overrides Function ToString() As String Implements IKaryotype.GetData\n        Return $\"chr - {chrName} {chrLabel} {start} {[end]} {color}\"\n    End Function\nEnd Class\n```\n\n```vbnet\nPublic Module KaryotypeExtensions\n\n    ''' <summary>\n    ''' nt核苷酸基因组序列拓展属性\n    ''' </summary>\n    ''' <param name=\"x\"></param>\n    ''' <returns></returns>\n    <Extension>\n    Public Function nt(x As Karyotype) As PropertyValue(Of FastaToken)\n        Return PropertyValue(Of FastaToken).Read(Of Karyotype)(x, NameOf(nt))\n    End Function\nEnd Module\n```\n\nIn Some of the situation, we just want to avoided of the anonymous type in the code, so that by using the extension property, we can easily extended our class code with modify the original code, and avoid the anonymous type in the linq.\n\n```vbnet\n''' <summary>\n''' Creates the model for the multiple chromosomes genome data in circos.(使用这个函数进行创建多条染色体的)\n''' </summary>\n''' <param name=\"source\">Band数据</param>\n''' <param name=\"chrs\">karyotype数据</param>\n''' <returns></returns>\nPublic Shared Function FromBlastnMappings(source As IEnumerable(Of BlastnMapping), chrs As IEnumerable(Of FastaToken)) As BasicGenomeSkeleton\n    Dim ks As Karyotype() =\n        LinqAPI.Exec(Of Karyotype) <= From nt As SeqValue(Of FastaToken)\n                                      In chrs.SeqIterator\n                                      Let name As String = nt.obj.Title.NormalizePathString(True).Replace(\" \", \"_\")\n                                      Select New Karyotype With {\n                                          .chrName = \"chr\" & nt.i,\n                                          .chrLabel = name,\n                                          .color = \"\",\n                                          .start = 0,\n                                          .end = nt.obj.Length\n                                      }.nt.SetValue(nt.obj).As(Of Karyotype)\n    Dim labels As Dictionary(Of String, Karyotype) =\n        ks.ToDictionary(Function(x) x.nt.Value.Title, Function(x) x)\n    Dim bands As List(Of Band) =\n        LinqAPI.MakeList(Of Band) <= From x As SeqValue(Of BlastnMapping)\n                                     In source.SeqIterator\n                                     Let chr As String = labels(x.obj.Reference).chrName\n                                     Let loci As NucleotideLocation = x.obj.MappingLocation\n                                     Select New Band With {\n                                         .chrName = chr,\n                                         .start = loci.Left,\n                                         .end = loci.Right,\n                                         .color = \"\",\n                                         .bandX = \"band\" & x.i,\n                                         .bandY = \"band\" & x.i\n                                    }\n    Return New BasicGenomeSkeleton With {\n         .__bands = bands,\n         .__karyotypes = New List(Of Karyotype)(ks)\n    }\nEnd Function\n```\n\nYou can found this example code at github: [https://github.com/SMRUCC/GCModeller.Circos/blob/master/Circos/Karyotype/BasicGenome.vb](https://github.com/SMRUCC/GCModeller.Circos/blob/master/Circos/Karyotype/BasicGenome.vb)","source":"_posts/extensions-property.md","raw":"---\ntitle: Extension Property in VisualBasic\ntags: [vb.net, architecture, language, circos, 架构设计]\ndate: 2016.06.23\n---\n\n``Extension`` methods (``Function`` or ``Sub``) are a powerful tool to extend an otherwise sealed object. It's easier than creating a ``Class`` extension because you do not need to update your (maybe already deployed) code, e.g. change ``Dim nice As SomeClass`` to ``Dim nice As SomeClassExtendedAndNicer``. Obviously, different situations call for different solutions and you need an extended Class, but I prefer extension methods if I can solve the situation with those. One big huge drawback with extension methods is that you cannot write extension properties! See on [MSDN here](https://msdn.microsoft.com/en-us/library/bb384936.aspx).\n\nIn this tip, I show how to use the ``Extension`` Property in vb.net Class Object for a proxy of an extension property or AlmostExtensionProperty. This tip was inspired by Mr. veen_rp's article: [An Almost Extension Property](http://www.codeproject.com/Articles/1087921/An-Almost-Extension-Property). Instead of by using the ``tag`` property on the Control, and this trick is works on the ``Extension`` Property in the VisualBasic class, so that this trick is not only works on the Controls.\n\n<!--more-->\n\n## VisualBasic Class\n\nFirst of all, let's see how does the basically class object was defined in the VisualBasic language:\n\n```vbnet\nNamespace Microsoft.VisualBasic.Language\n\n    ''' <summary>\n    ''' The base class object in VisualBasic language\n    ''' </summary>\n    Public Class ClassObject\n\n        ''' <summary>\n        ''' The extension property.(为了节省内存的需要，这个附加属性尽量不要被自动初始化)\n        ''' </summary>\n        ''' <returns></returns>\n        ''' <remarks>\n        ''' Dummy field for solve the problem of xml serialization >>>simpleContent&lt;&lt;&lt;\n        '''\n        ''' http://stackoverflow.com/questions/2501466/xmltext-attribute-in-base-class-breakes-serialization\n        '''\n        ''' So I think you could make it work by adding a dummy property or field that you never use in the LookupItem class.\n        ''' If you're never assign a value to it, it will remain null and will not be serialized, but it will prevent your\n        ''' class from being treated as simpleContent. I know it's a dirty workaround, but I see no other easy way...\n        ''' </remarks>\n        <XmlIgnore> <ScriptIgnore> Public Overridable Property Extension As ExtendedProps\n\n        ''' <summary>\n        ''' Get dynamics property value.\n        ''' </summary>\n        ''' <typeparam name=\"T\"></typeparam>\n        ''' <param name=\"name\"></param>\n        ''' <returns></returns>\n        Public Function ReadProperty(Of T)(name As String) As PropertyValue(Of T)\n            Return PropertyValue(Of T).Read(Me, name)\n        End Function\n\n        ' ......\n    End Class\n```\n\nFor this part of the class object definition that we can see that, every classobject in the VisualBasic may have a property named ``Extension``, and this property is implemented by using a hash table ``Dictionary(Of String, Object)`` to stores the additional tag data. So that the dynamics extension property value is going to stored at here.\n\n## Property Value\n\nBy knowing how this extension property it works, first we look into how to implements a property. From the language of VB6, **the class property is defined by union a get function and a set method**, The property definition in vb.net goes simple, just using the ``Property`` keyword then we can simply define a property in a line of code. But by expands the vb.net class property or viewing the il code or the reflection result, that we can known that the property it is works as the way of VB6: but the difference is that the property get and set using two inline function in vb.net. And the java language is also does in this way, using a ``get`` word prefix named function as the property read method and using a ``set`` word prefix named method as the property write.\n\nSo that the extension property in VisualBasic is working as the Class instance Property it does: **using a get function lambda for get custom value, and using a set method lambda for set the custom value.**\n\n```vbnet\nPublic Class PropertyValue(Of T) : Inherits Value(Of T)\n\n    ReadOnly __get As Func(Of T)\n    ReadOnly __set As Action(Of T)\n\n    Public Overrides Property Value As T\n        Get\n            Return __get()\n        End Get\n        Set(value As T)\n            MyBase.Value = value\n            If Not __set Is Nothing Then\n                Call __set(value)  ' 因为在初始化的时候会对这个属性赋值，但是set没有被初始化，所以会出错，在这里加了一个if判断来避免空引用的错误\n            End If\n        End Set\n    End Property\n\n    ''' <summary>\n    ''' The instance object for this extension property\n    ''' </summary>\n    ''' <returns></returns>\n    Public Property obj As ClassObject\n\n    ''' <summary>\n    '''\n    ''' </summary>\n    ''' <param name=\"[get]\">请勿使用<see cref=\"GetValue\"/></param>函数，否则会出现栈空间溢出\n    ''' <param name=\"[set]\">请勿使用<see cref=\"SetValue\"/></param>方法，否则会出现栈空间溢出\n    Sub New([get] As Func(Of T), [set] As Action(Of T))\n        __get = [get]\n        __set = [set]\n    End Sub\n\n    ''' <summary>\n    ''' 默认是将数据写入到基本类型的值之中\n    ''' </summary>\n    Sub New()\n        __get = Function() MyBase.Value\n\t\t__set = Sub(v) MyBase.Value = v\n\tEnd Sub\n\n    ''' <summary>\n    ''' 这个主要是应用于Linq表达式之中，将属性值设置之后返回宿主对象实例\n    ''' </summary>\n    ''' <param name=\"value\"></param>\n    ''' <returns></returns>\n    Public Function SetValue(value As T) As ClassObject\n        Call __set(value)\n        Return obj\n    End Function\n\n    Public Overloads Shared Narrowing Operator CType(x As PropertyValue(Of T)) As T\n        Return x.Value\n    End Operator\n\n    Public Overrides Function ToString() As String\n        Return Value.GetJson\n    End Function\n\n    ' ......\nEnd Class\n```\n\n## Get Extension Property\n\nBy invoke get or set the value of the extension property, first we should get the extension property definition, as we should gets the ``PropertyInfo`` at first to using the property in the Reflection operation, and here is how to gets the property definition from the ``Extension`` property from the VisualBasic class object.\n\n```vbnet\nPublic Shared Function [New](Of Cls As ClassObject)(x As Cls, name As String) As PropertyValue(Of T)\n    Dim value As New PropertyValue(Of T)()\n    x.Extension.DynamicHash.Value(name) = value\n    value.obj = x\n    Return value\nEnd Function\n\n''' <summary>\n''' 读取<see cref=\"ClassObject\"/>对象之中的一个拓展属性\n''' </summary>\n''' <typeparam name=\"Cls\"></typeparam>\n''' <param name=\"x\"></param>\n''' <param name=\"name\"></param>\n''' <returns></returns>\nPublic Shared Function Read(Of Cls As ClassObject)(x As Cls, name As String) As PropertyValue(Of T)\n    If x.Extension Is Nothing Then\n        x.Extension = New ExtendedProps\n    End If\n    Dim prop As Object = x.Extension.DynamicHash(name)\n    If prop Is Nothing Then\n        prop = PropertyValue(Of T).[New](Of Cls)(x, name)\n    End If\n    Return DirectCast(prop, PropertyValue(Of T))\nEnd Function\n```\n\nGets the property value definition just very easy, right? we just gets the value from the dictionary by using the property name as the key.\n\nSo that this extension property usage may becomes this style:\n\n1. First define a Extension function in a module\n2. You can using ``NameOf`` keyword to get property name or just using ``MethodBase.GetCurrentMethod`` for get current function name\n3. Using shared function ``PropertyValue(Of <Type>).Read(Of T)`` to get the property definition of your ``ClassObject``\n\nAnd here is a simple example by using this extension property, here is the property definition example:\n\n```vbnet\nPublic Module PropertyDefinitionModule\n\n    ''' <summary>\n    ''' Example of the extension property in VisualBasic\n    ''' </summary>\n    ''' <typeparam name=\"T\"></typeparam>\n    ''' <param name=\"x\"></param>\n    ''' <returns></returns>\n    <Extension>\n    Public Function Uid(Of T As ClassObject)(x As T) As PropertyValue(Of Long)\n        Return PropertyValue(Of Long).Read(Of T)(x, NameOf(Uid))\n    End Function\n\n    ' Or\n\n    ''' <summary>\n    ''' Example of the extension property in VisualBasic\n    ''' </summary>\n    ''' <typeparam name=\"T\"></typeparam>\n    ''' <param name=\"x\"></param>\n    ''' <returns></returns>\n    <Extension>\n    Public Function Uid(Of T As ClassObject)(x As T) As PropertyValue(Of Long)\n        ' Just copy this statement without any big modification.\n        ' just modify the generics type constraint to use this extension property language feature.\n        Return PropertyValue(Of Long).Read(Of T)(x, MethodBase.GetCurrentMethod)\n    End Function\nEnd Module\n```\n\nSo that by using this extension property, that for get value, we can do as this:\n\n```vbnet\nDim n As Long = x.Uid\n```\n\nFor set property value, that we can write the code:\n\n```vbnet\nDim n As Long = VBMath.Rnd() * 100000000000L\nx.Uid.value = n\nCall x.Uid.__DEBUG_ECHO()\n```\n\nAnd here is the code example for csharp:\n\n```csharp\nusing Microsoft.VisualBasic;\nusing Microsoft.VisualBasic.ComponentModel.DataSourceModel;\nusing Microsoft.VisualBasic.Language;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Reflection;\nusing System.Text;\nusing System.Threading.Tasks;\nusing static Microsoft.VisualBasic.Extensions;\n\nnamespace Test2\n{\n    public static class Program\n    {\n\n        public static PropertyValue<long> myId<T>(this T x) where T : ClassObject\n        {\n            // Just copy this statement without any big modification. just modify the generics type constraint.\n            return PropertyValue<long>.Read<T>(x, MethodBase.GetCurrentMethod());\n        }\n\n        static void Main(string[] args)\n        {\n            var x = new ClassObject();\n            long n = x.myId().Value; // The init value is ZERO\n\n            x.myId().Value = 55;     // Extension property set value\n\n            n = -100;\n            n = x.myId().Value;      // Extension property get value, value should be 55 not -100\n            n.__DEBUG_ECHO();        // display the value\n\n            Pause();\n        }\n    }\n}\n```\n\n## Extension Property with Linq\n\nRecently I have lots of works on the bacterial genome annotation, one of this job is using the circos software to visualize the finial result data. For construct a bacterial genome with some plasmid its visualization data model in the circos, I using a linq expression to do this job, and the extension property language feature helps me a lot on this job:\n\n```vbnet\nImports Microsoft.VisualBasic.Language\n\nPublic Class Karyotype : Inherits ClassObject\n    Implements IKaryotype\n\n    Public Property chrName As String Implements IKaryotype.chrName\n    Public Property chrLabel As String\n    Public Property start As Integer Implements IKaryotype.start\n    Public Property [end] As Integer Implements IKaryotype.end\n    Public Property color As String Implements IKaryotype.color\n\n    Public Overrides Function ToString() As String Implements IKaryotype.GetData\n        Return $\"chr - {chrName} {chrLabel} {start} {[end]} {color}\"\n    End Function\nEnd Class\n```\n\n```vbnet\nPublic Module KaryotypeExtensions\n\n    ''' <summary>\n    ''' nt核苷酸基因组序列拓展属性\n    ''' </summary>\n    ''' <param name=\"x\"></param>\n    ''' <returns></returns>\n    <Extension>\n    Public Function nt(x As Karyotype) As PropertyValue(Of FastaToken)\n        Return PropertyValue(Of FastaToken).Read(Of Karyotype)(x, NameOf(nt))\n    End Function\nEnd Module\n```\n\nIn Some of the situation, we just want to avoided of the anonymous type in the code, so that by using the extension property, we can easily extended our class code with modify the original code, and avoid the anonymous type in the linq.\n\n```vbnet\n''' <summary>\n''' Creates the model for the multiple chromosomes genome data in circos.(使用这个函数进行创建多条染色体的)\n''' </summary>\n''' <param name=\"source\">Band数据</param>\n''' <param name=\"chrs\">karyotype数据</param>\n''' <returns></returns>\nPublic Shared Function FromBlastnMappings(source As IEnumerable(Of BlastnMapping), chrs As IEnumerable(Of FastaToken)) As BasicGenomeSkeleton\n    Dim ks As Karyotype() =\n        LinqAPI.Exec(Of Karyotype) <= From nt As SeqValue(Of FastaToken)\n                                      In chrs.SeqIterator\n                                      Let name As String = nt.obj.Title.NormalizePathString(True).Replace(\" \", \"_\")\n                                      Select New Karyotype With {\n                                          .chrName = \"chr\" & nt.i,\n                                          .chrLabel = name,\n                                          .color = \"\",\n                                          .start = 0,\n                                          .end = nt.obj.Length\n                                      }.nt.SetValue(nt.obj).As(Of Karyotype)\n    Dim labels As Dictionary(Of String, Karyotype) =\n        ks.ToDictionary(Function(x) x.nt.Value.Title, Function(x) x)\n    Dim bands As List(Of Band) =\n        LinqAPI.MakeList(Of Band) <= From x As SeqValue(Of BlastnMapping)\n                                     In source.SeqIterator\n                                     Let chr As String = labels(x.obj.Reference).chrName\n                                     Let loci As NucleotideLocation = x.obj.MappingLocation\n                                     Select New Band With {\n                                         .chrName = chr,\n                                         .start = loci.Left,\n                                         .end = loci.Right,\n                                         .color = \"\",\n                                         .bandX = \"band\" & x.i,\n                                         .bandY = \"band\" & x.i\n                                    }\n    Return New BasicGenomeSkeleton With {\n         .__bands = bands,\n         .__karyotypes = New List(Of Karyotype)(ks)\n    }\nEnd Function\n```\n\nYou can found this example code at github: [https://github.com/SMRUCC/GCModeller.Circos/blob/master/Circos/Karyotype/BasicGenome.vb](https://github.com/SMRUCC/GCModeller.Circos/blob/master/Circos/Karyotype/BasicGenome.vb)","slug":"extensions-property","published":1,"updated":"2016-06-23T13:00:20.439Z","_id":"cips22v7q0000owv4xy8uxgcx","comments":1,"layout":"post","photos":[],"link":"","content":"<p><code>Extension</code> methods (<code>Function</code> or <code>Sub</code>) are a powerful tool to extend an otherwise sealed object. It’s easier than creating a <code>Class</code> extension because you do not need to update your (maybe already deployed) code, e.g. change <code>Dim nice As SomeClass</code> to <code>Dim nice As SomeClassExtendedAndNicer</code>. Obviously, different situations call for different solutions and you need an extended Class, but I prefer extension methods if I can solve the situation with those. One big huge drawback with extension methods is that you cannot write extension properties! See on <a href=\"https://msdn.microsoft.com/en-us/library/bb384936.aspx\" target=\"_blank\" rel=\"external\">MSDN here</a>.</p>\n<p>In this tip, I show how to use the <code>Extension</code> Property in vb.net Class Object for a proxy of an extension property or AlmostExtensionProperty. This tip was inspired by Mr. veen_rp’s article: <a href=\"http://www.codeproject.com/Articles/1087921/An-Almost-Extension-Property\" target=\"_blank\" rel=\"external\">An Almost Extension Property</a>. Instead of by using the <code>tag</code> property on the Control, and this trick is works on the <code>Extension</code> Property in the VisualBasic class, so that this trick is not only works on the Controls.</p>\n<a id=\"more\"></a>\n<h2 id=\"VisualBasic-Class\"><a href=\"#VisualBasic-Class\" class=\"headerlink\" title=\"VisualBasic Class\"></a>VisualBasic Class</h2><p>First of all, let’s see how does the basically class object was defined in the VisualBasic language:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Namespace</span> Microsoft.VisualBasic.Language</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> The base class object in VisualBasic language</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> ClassObject</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> The extension property.(为了节省内存的需要，这个附加属性尽量不要被自动初始化)</span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;remarks&gt;</span></span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> Dummy field for solve the problem of xml serialization &gt;&gt;&gt;simpleContent&amp;lt;&amp;lt;&amp;lt;</span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span></span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> http://stackoverflow.com/questions/2501466/xmltext-attribute-in-base-class-breakes-serialization</span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span></span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> So I think you could make it work by adding a dummy property or field that you never use in the LookupItem class.</span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> If you're never assign a value to it, it will remain null and will not be serialized, but it will prevent your</span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> class from being treated as simpleContent. I know it's a dirty workaround, but I see no other easy way...</span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/remarks&gt;</span></span></span><br><span class=\"line\">        &lt;XmlIgnore&gt; &lt;ScriptIgnore&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Overridable</span> <span class=\"keyword\">Property</span> Extension <span class=\"keyword\">As</span> ExtendedProps</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> Get dynamics property value.</span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;typeparam name=\"T\"&gt;</span><span class=\"doctag\">&lt;/typeparam&gt;</span></span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"name\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">        <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> ReadProperty(<span class=\"keyword\">Of</span> T)(name <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>) <span class=\"keyword\">As</span> PropertyValue(<span class=\"keyword\">Of</span> T)</span><br><span class=\"line\">            <span class=\"keyword\">Return</span> PropertyValue(<span class=\"keyword\">Of</span> T).Read(<span class=\"keyword\">Me</span>, name)</span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">' ......</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<p>For this part of the class object definition that we can see that, every classobject in the VisualBasic may have a property named <code>Extension</code>, and this property is implemented by using a hash table <code>Dictionary(Of String, Object)</code> to stores the additional tag data. So that the dynamics extension property value is going to stored at here.</p>\n<h2 id=\"Property-Value\"><a href=\"#Property-Value\" class=\"headerlink\" title=\"Property Value\"></a>Property Value</h2><p>By knowing how this extension property it works, first we look into how to implements a property. From the language of VB6, <strong>the class property is defined by union a get function and a set method</strong>, The property definition in vb.net goes simple, just using the <code>Property</code> keyword then we can simply define a property in a line of code. But by expands the vb.net class property or viewing the il code or the reflection result, that we can known that the property it is works as the way of VB6: but the difference is that the property get and set using two inline function in vb.net. And the java language is also does in this way, using a <code>get</code> word prefix named function as the property read method and using a <code>set</code> word prefix named method as the property write.</p>\n<p>So that the extension property in VisualBasic is working as the Class instance Property it does: <strong>using a get function lambda for get custom value, and using a set method lambda for set the custom value.</strong></p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> PropertyValue(<span class=\"keyword\">Of</span> T) : <span class=\"keyword\">Inherits</span> Value(<span class=\"keyword\">Of</span> T)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">ReadOnly</span> __get <span class=\"keyword\">As</span> Func(<span class=\"keyword\">Of</span> T)</span><br><span class=\"line\">    <span class=\"keyword\">ReadOnly</span> __set <span class=\"keyword\">As</span> Action(<span class=\"keyword\">Of</span> T)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Property</span> Value <span class=\"keyword\">As</span> T</span><br><span class=\"line\">        <span class=\"keyword\">Get</span></span><br><span class=\"line\">            <span class=\"keyword\">Return</span> __get()</span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">Get</span></span><br><span class=\"line\">        <span class=\"keyword\">Set</span>(value <span class=\"keyword\">As</span> T)</span><br><span class=\"line\">            <span class=\"keyword\">MyBase</span>.Value = value</span><br><span class=\"line\">            <span class=\"keyword\">If</span> <span class=\"keyword\">Not</span> __set <span class=\"keyword\">Is</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">Then</span></span><br><span class=\"line\">                <span class=\"keyword\">Call</span> __set(value)  <span class=\"comment\">' 因为在初始化的时候会对这个属性赋值，但是set没有被初始化，所以会出错，在这里加了一个if判断来避免空引用的错误</span></span><br><span class=\"line\">            <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">Set</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Property</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> The instance object for this extension property</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> obj <span class=\"keyword\">As</span> ClassObject</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"[get]\"&gt;</span>请勿使用<span class=\"doctag\">&lt;see cref=\"GetValue\"/&gt;</span><span class=\"doctag\">&lt;/param&gt;</span>函数，否则会出现栈空间溢出</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"[set]\"&gt;</span>请勿使用<span class=\"doctag\">&lt;see cref=\"SetValue\"/&gt;</span><span class=\"doctag\">&lt;/param&gt;</span>方法，否则会出现栈空间溢出</span></span><br><span class=\"line\">    <span class=\"keyword\">Sub</span> <span class=\"keyword\">New</span>([<span class=\"keyword\">get</span>] <span class=\"keyword\">As</span> Func(<span class=\"keyword\">Of</span> T), [<span class=\"keyword\">set</span>] <span class=\"keyword\">As</span> Action(<span class=\"keyword\">Of</span> T))</span><br><span class=\"line\">        __get = [<span class=\"keyword\">get</span>]</span><br><span class=\"line\">        __set = [<span class=\"keyword\">set</span>]</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> 默认是将数据写入到基本类型的值之中</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Sub</span> <span class=\"keyword\">New</span>()</span><br><span class=\"line\">        __get = <span class=\"keyword\">Function</span>() <span class=\"keyword\">MyBase</span>.Value</span><br><span class=\"line\">\t\t__set = <span class=\"keyword\">Sub</span>(v) <span class=\"keyword\">MyBase</span>.Value = v</span><br><span class=\"line\">\t<span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> 这个主要是应用于Linq表达式之中，将属性值设置之后返回宿主对象实例</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"value\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> SetValue(value <span class=\"keyword\">As</span> T) <span class=\"keyword\">As</span> ClassObject</span><br><span class=\"line\">        <span class=\"keyword\">Call</span> __set(value)</span><br><span class=\"line\">        <span class=\"keyword\">Return</span> obj</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Overloads</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Narrowing</span> <span class=\"keyword\">Operator</span> <span class=\"built_in\">CType</span>(x <span class=\"keyword\">As</span> PropertyValue(<span class=\"keyword\">Of</span> T)) <span class=\"keyword\">As</span> T</span><br><span class=\"line\">        <span class=\"keyword\">Return</span> x.Value</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Operator</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> ToString() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> Value.GetJson</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">' ......</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Get-Extension-Property\"><a href=\"#Get-Extension-Property\" class=\"headerlink\" title=\"Get Extension Property\"></a>Get Extension Property</h2><p>By invoke get or set the value of the extension property, first we should get the extension property definition, as we should gets the <code>PropertyInfo</code> at first to using the property in the Reflection operation, and here is how to gets the property definition from the <code>Extension</code> property from the VisualBasic class object.</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> [<span class=\"keyword\">New</span>](<span class=\"keyword\">Of</span> Cls <span class=\"keyword\">As</span> ClassObject)(x <span class=\"keyword\">As</span> Cls, name <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>) <span class=\"keyword\">As</span> PropertyValue(<span class=\"keyword\">Of</span> T)</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> value <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> PropertyValue(<span class=\"keyword\">Of</span> T)()</span><br><span class=\"line\">    x.Extension.DynamicHash.Value(name) = value</span><br><span class=\"line\">    value.obj = x</span><br><span class=\"line\">    <span class=\"keyword\">Return</span> value</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> 读取<span class=\"doctag\">&lt;see cref=\"ClassObject\"/&gt;</span>对象之中的一个拓展属性</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;typeparam name=\"Cls\"&gt;</span><span class=\"doctag\">&lt;/typeparam&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"x\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"name\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> Read(<span class=\"keyword\">Of</span> Cls <span class=\"keyword\">As</span> ClassObject)(x <span class=\"keyword\">As</span> Cls, name <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>) <span class=\"keyword\">As</span> PropertyValue(<span class=\"keyword\">Of</span> T)</span><br><span class=\"line\">    <span class=\"keyword\">If</span> x.Extension <span class=\"keyword\">Is</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">Then</span></span><br><span class=\"line\">        x.Extension = <span class=\"keyword\">New</span> ExtendedProps</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> prop <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span> = x.Extension.DynamicHash(name)</span><br><span class=\"line\">    <span class=\"keyword\">If</span> prop <span class=\"keyword\">Is</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">Then</span></span><br><span class=\"line\">        prop = PropertyValue(<span class=\"keyword\">Of</span> T).[<span class=\"keyword\">New</span>](<span class=\"keyword\">Of</span> Cls)(x, name)</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">    <span class=\"keyword\">Return</span> <span class=\"built_in\">DirectCast</span>(prop, PropertyValue(<span class=\"keyword\">Of</span> T))</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure>\n<p>Gets the property value definition just very easy, right? we just gets the value from the dictionary by using the property name as the key.</p>\n<p>So that this extension property usage may becomes this style:</p>\n<ol>\n<li>First define a Extension function in a module</li>\n<li>You can using <code>NameOf</code> keyword to get property name or just using <code>MethodBase.GetCurrentMethod</code> for get current function name</li>\n<li>Using shared function <code>PropertyValue(Of &lt;Type&gt;).Read(Of T)</code> to get the property definition of your <code>ClassObject</code></li>\n</ol>\n<p>And here is a simple example by using this extension property, here is the property definition example:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Module</span> PropertyDefinitionModule</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Example of the extension property in VisualBasic</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;typeparam name=\"T\"&gt;</span><span class=\"doctag\">&lt;/typeparam&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"x\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    &lt;Extension&gt;</span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> Uid(<span class=\"keyword\">Of</span> T <span class=\"keyword\">As</span> ClassObject)(x <span class=\"keyword\">As</span> T) <span class=\"keyword\">As</span> PropertyValue(<span class=\"keyword\">Of</span> <span class=\"built_in\">Long</span>)</span><br><span class=\"line\">        <span class=\"keyword\">Return</span> PropertyValue(<span class=\"keyword\">Of</span> <span class=\"built_in\">Long</span>).Read(<span class=\"keyword\">Of</span> T)(x, NameOf(Uid))</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">' Or</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Example of the extension property in VisualBasic</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;typeparam name=\"T\"&gt;</span><span class=\"doctag\">&lt;/typeparam&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"x\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    &lt;Extension&gt;</span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> Uid(<span class=\"keyword\">Of</span> T <span class=\"keyword\">As</span> ClassObject)(x <span class=\"keyword\">As</span> T) <span class=\"keyword\">As</span> PropertyValue(<span class=\"keyword\">Of</span> <span class=\"built_in\">Long</span>)</span><br><span class=\"line\">        <span class=\"comment\">' Just copy this statement without any big modification.</span></span><br><span class=\"line\">        <span class=\"comment\">' just modify the generics type constraint to use this extension property language feature.</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> PropertyValue(<span class=\"keyword\">Of</span> <span class=\"built_in\">Long</span>).Read(<span class=\"keyword\">Of</span> T)(x, MethodBase.GetCurrentMethod)</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Module</span></span><br></pre></td></tr></table></figure>\n<p>So that by using this extension property, that for get value, we can do as this:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> n <span class=\"keyword\">As</span> <span class=\"built_in\">Long</span> = x.Uid</span><br></pre></td></tr></table></figure>\n<p>For set property value, that we can write the code:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> n <span class=\"keyword\">As</span> <span class=\"built_in\">Long</span> = VBMath.Rnd() * <span class=\"number\">100000000000</span>L</span><br><span class=\"line\">x.Uid.value = n</span><br><span class=\"line\"><span class=\"keyword\">Call</span> x.Uid.__DEBUG_ECHO()</span><br></pre></td></tr></table></figure>\n<p>And here is the code example for csharp:</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> Microsoft.VisualBasic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> Microsoft.VisualBasic.ComponentModel.DataSourceModel;</span><br><span class=\"line\"><span class=\"keyword\">using</span> Microsoft.VisualBasic.Language;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Linq;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Reflection;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Text;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Threading.Tasks;</span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">static</span> Microsoft.VisualBasic.Extensions;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">Test2</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> PropertyValue&lt;<span class=\"keyword\">long</span>&gt; myId&lt;T&gt;(<span class=\"keyword\">this</span> T x) <span class=\"keyword\">where</span> T : ClassObject</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// Just copy this statement without any big modification. just modify the generics type constraint.</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> PropertyValue&lt;<span class=\"keyword\">long</span>&gt;.Read&lt;T&gt;(x, MethodBase.GetCurrentMethod());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span><br><span class=\"line\">        </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> x = <span class=\"keyword\">new</span> ClassObject();</span><br><span class=\"line\">            <span class=\"keyword\">long</span> n = x.myId().Value; <span class=\"comment\">// The init value is ZERO</span></span><br><span class=\"line\"></span><br><span class=\"line\">            x.myId().Value = <span class=\"number\">55</span>;     <span class=\"comment\">// Extension property set value</span></span><br><span class=\"line\"></span><br><span class=\"line\">            n = <span class=\"number\">-100</span>;</span><br><span class=\"line\">            n = x.myId().Value;      <span class=\"comment\">// Extension property get value, value should be 55 not -100</span></span><br><span class=\"line\">            n.__DEBUG_ECHO();        <span class=\"comment\">// display the value</span></span><br><span class=\"line\"></span><br><span class=\"line\">            Pause();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Extension-Property-with-Linq\"><a href=\"#Extension-Property-with-Linq\" class=\"headerlink\" title=\"Extension Property with Linq\"></a>Extension Property with Linq</h2><p>Recently I have lots of works on the bacterial genome annotation, one of this job is using the circos software to visualize the finial result data. For construct a bacterial genome with some plasmid its visualization data model in the circos, I using a linq expression to do this job, and the extension property language feature helps me a lot on this job:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Imports</span> Microsoft.VisualBasic.Language</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> Karyotype : <span class=\"keyword\">Inherits</span> ClassObject</span><br><span class=\"line\">    <span class=\"keyword\">Implements</span> IKaryotype</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> chrName <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> <span class=\"keyword\">Implements</span> IKaryotype.chrName</span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> chrLabel <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> start <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> <span class=\"keyword\">Implements</span> IKaryotype.start</span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> [<span class=\"keyword\">end</span>] <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> <span class=\"keyword\">Implements</span> IKaryotype.<span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> color <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> <span class=\"keyword\">Implements</span> IKaryotype.color</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> ToString() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> <span class=\"keyword\">Implements</span> IKaryotype.GetData</span><br><span class=\"line\">        <span class=\"keyword\">Return</span> $<span class=\"string\">\"chr - &#123;chrName&#125; &#123;chrLabel&#125; &#123;start&#125; &#123;[end]&#125; &#123;color&#125;\"</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Module</span> KaryotypeExtensions</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> nt核苷酸基因组序列拓展属性</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"x\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    &lt;Extension&gt;</span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> nt(x <span class=\"keyword\">As</span> Karyotype) <span class=\"keyword\">As</span> PropertyValue(<span class=\"keyword\">Of</span> FastaToken)</span><br><span class=\"line\">        <span class=\"keyword\">Return</span> PropertyValue(<span class=\"keyword\">Of</span> FastaToken).Read(<span class=\"keyword\">Of</span> Karyotype)(x, NameOf(nt))</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Module</span></span><br></pre></td></tr></table></figure>\n<p>In Some of the situation, we just want to avoided of the anonymous type in the code, so that by using the extension property, we can easily extended our class code with modify the original code, and avoid the anonymous type in the linq.</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">''' &lt;summary&gt;</span><br><span class=\"line\">''' Creates the model for the multiple chromosomes genome data in circos.(使用这个函数进行创建多条染色体的)</span><br><span class=\"line\">''' &lt;/summary&gt;</span><br><span class=\"line\">''' &lt;param name=\"source\"&gt;Band数据&lt;/param&gt;</span><br><span class=\"line\">''' &lt;param name=\"chrs\"&gt;karyotype数据&lt;/param&gt;</span><br><span class=\"line\">''' &lt;returns&gt;&lt;/returns&gt;</span><br><span class=\"line\">Public Shared Function FromBlastnMappings(source As IEnumerable(Of BlastnMapping), chrs As IEnumerable(Of FastaToken)) As BasicGenomeSkeleton</span><br><span class=\"line\">    Dim ks As Karyotype() =</span><br><span class=\"line\">        LinqAPI.Exec(Of Karyotype) &lt;= From nt As SeqValue(Of FastaToken)</span><br><span class=\"line\">                                      In chrs.SeqIterator</span><br><span class=\"line\">                                      Let name As String = nt.obj.Title.NormalizePathString(True).Replace(\" \", \"_\")</span><br><span class=\"line\">                                      Select New Karyotype With &#123;</span><br><span class=\"line\">                                          .chrName = \"chr\" &amp; nt.i,</span><br><span class=\"line\">                                          .chrLabel = name,</span><br><span class=\"line\">                                          .color = \"\",</span><br><span class=\"line\">                                          .start = 0,</span><br><span class=\"line\">                                          .end = nt.obj.Length</span><br><span class=\"line\">                                      &#125;.nt.SetValue(nt.obj).As(Of Karyotype)</span><br><span class=\"line\">    Dim labels As Dictionary(Of String, Karyotype) =</span><br><span class=\"line\">        ks.ToDictionary(Function(x) x.nt.Value.Title, Function(x) x)</span><br><span class=\"line\">    Dim bands As List(Of Band) =</span><br><span class=\"line\">        LinqAPI.MakeList(Of Band) &lt;= From x As SeqValue(Of BlastnMapping)</span><br><span class=\"line\">                                     In source.SeqIterator</span><br><span class=\"line\">                                     Let chr As String = labels(x.obj.Reference).chrName</span><br><span class=\"line\">                                     Let loci As NucleotideLocation = x.obj.MappingLocation</span><br><span class=\"line\">                                     Select New Band With &#123;</span><br><span class=\"line\">                                         .chrName = chr,</span><br><span class=\"line\">                                         .start = loci.Left,</span><br><span class=\"line\">                                         .end = loci.Right,</span><br><span class=\"line\">                                         .color = \"\",</span><br><span class=\"line\">                                         .bandX = \"band\" &amp; x.i,</span><br><span class=\"line\">                                         .bandY = \"band\" &amp; x.i</span><br><span class=\"line\">                                    &#125;</span><br><span class=\"line\">    Return New BasicGenomeSkeleton With &#123;</span><br><span class=\"line\">         .__bands = bands,</span><br><span class=\"line\">         .__karyotypes = New List(Of Karyotype)(ks)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">End Function</span><br></pre></td></tr></table></figure>\n<p>You can found this example code at github: <a href=\"https://github.com/SMRUCC/GCModeller.Circos/blob/master/Circos/Karyotype/BasicGenome.vb\" target=\"_blank\" rel=\"external\">https://github.com/SMRUCC/GCModeller.Circos/blob/master/Circos/Karyotype/BasicGenome.vb</a></p>\n","excerpt":"<p><code>Extension</code> methods (<code>Function</code> or <code>Sub</code>) are a powerful tool to extend an otherwise sealed object. It’s easier than creating a <code>Class</code> extension because you do not need to update your (maybe already deployed) code, e.g. change <code>Dim nice As SomeClass</code> to <code>Dim nice As SomeClassExtendedAndNicer</code>. Obviously, different situations call for different solutions and you need an extended Class, but I prefer extension methods if I can solve the situation with those. One big huge drawback with extension methods is that you cannot write extension properties! See on <a href=\"https://msdn.microsoft.com/en-us/library/bb384936.aspx\">MSDN here</a>.</p>\n<p>In this tip, I show how to use the <code>Extension</code> Property in vb.net Class Object for a proxy of an extension property or AlmostExtensionProperty. This tip was inspired by Mr. veen_rp’s article: <a href=\"http://www.codeproject.com/Articles/1087921/An-Almost-Extension-Property\">An Almost Extension Property</a>. Instead of by using the <code>tag</code> property on the Control, and this trick is works on the <code>Extension</code> Property in the VisualBasic class, so that this trick is not only works on the Controls.</p>","more":"<h2 id=\"VisualBasic-Class\"><a href=\"#VisualBasic-Class\" class=\"headerlink\" title=\"VisualBasic Class\"></a>VisualBasic Class</h2><p>First of all, let’s see how does the basically class object was defined in the VisualBasic language:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Namespace</span> Microsoft.VisualBasic.Language</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> The base class object in VisualBasic language</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> ClassObject</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> The extension property.(为了节省内存的需要，这个附加属性尽量不要被自动初始化)</span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;remarks&gt;</span></span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> Dummy field for solve the problem of xml serialization &gt;&gt;&gt;simpleContent&amp;lt;&amp;lt;&amp;lt;</span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span></span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> http://stackoverflow.com/questions/2501466/xmltext-attribute-in-base-class-breakes-serialization</span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span></span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> So I think you could make it work by adding a dummy property or field that you never use in the LookupItem class.</span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> If you're never assign a value to it, it will remain null and will not be serialized, but it will prevent your</span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> class from being treated as simpleContent. I know it's a dirty workaround, but I see no other easy way...</span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/remarks&gt;</span></span></span><br><span class=\"line\">        &lt;XmlIgnore&gt; &lt;ScriptIgnore&gt; <span class=\"keyword\">Public</span> <span class=\"keyword\">Overridable</span> <span class=\"keyword\">Property</span> Extension <span class=\"keyword\">As</span> ExtendedProps</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> Get dynamics property value.</span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;typeparam name=\"T\"&gt;</span><span class=\"doctag\">&lt;/typeparam&gt;</span></span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"name\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">        <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">        <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> ReadProperty(<span class=\"keyword\">Of</span> T)(name <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>) <span class=\"keyword\">As</span> PropertyValue(<span class=\"keyword\">Of</span> T)</span><br><span class=\"line\">            <span class=\"keyword\">Return</span> PropertyValue(<span class=\"keyword\">Of</span> T).Read(<span class=\"keyword\">Me</span>, name)</span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">' ......</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<p>For this part of the class object definition that we can see that, every classobject in the VisualBasic may have a property named <code>Extension</code>, and this property is implemented by using a hash table <code>Dictionary(Of String, Object)</code> to stores the additional tag data. So that the dynamics extension property value is going to stored at here.</p>\n<h2 id=\"Property-Value\"><a href=\"#Property-Value\" class=\"headerlink\" title=\"Property Value\"></a>Property Value</h2><p>By knowing how this extension property it works, first we look into how to implements a property. From the language of VB6, <strong>the class property is defined by union a get function and a set method</strong>, The property definition in vb.net goes simple, just using the <code>Property</code> keyword then we can simply define a property in a line of code. But by expands the vb.net class property or viewing the il code or the reflection result, that we can known that the property it is works as the way of VB6: but the difference is that the property get and set using two inline function in vb.net. And the java language is also does in this way, using a <code>get</code> word prefix named function as the property read method and using a <code>set</code> word prefix named method as the property write.</p>\n<p>So that the extension property in VisualBasic is working as the Class instance Property it does: <strong>using a get function lambda for get custom value, and using a set method lambda for set the custom value.</strong></p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> PropertyValue(<span class=\"keyword\">Of</span> T) : <span class=\"keyword\">Inherits</span> Value(<span class=\"keyword\">Of</span> T)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">ReadOnly</span> __get <span class=\"keyword\">As</span> Func(<span class=\"keyword\">Of</span> T)</span><br><span class=\"line\">    <span class=\"keyword\">ReadOnly</span> __set <span class=\"keyword\">As</span> Action(<span class=\"keyword\">Of</span> T)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Property</span> Value <span class=\"keyword\">As</span> T</span><br><span class=\"line\">        <span class=\"keyword\">Get</span></span><br><span class=\"line\">            <span class=\"keyword\">Return</span> __get()</span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">Get</span></span><br><span class=\"line\">        <span class=\"keyword\">Set</span>(value <span class=\"keyword\">As</span> T)</span><br><span class=\"line\">            <span class=\"keyword\">MyBase</span>.Value = value</span><br><span class=\"line\">            <span class=\"keyword\">If</span> <span class=\"keyword\">Not</span> __set <span class=\"keyword\">Is</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">Then</span></span><br><span class=\"line\">                <span class=\"keyword\">Call</span> __set(value)  <span class=\"comment\">' 因为在初始化的时候会对这个属性赋值，但是set没有被初始化，所以会出错，在这里加了一个if判断来避免空引用的错误</span></span><br><span class=\"line\">            <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">        <span class=\"keyword\">End</span> <span class=\"keyword\">Set</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Property</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> The instance object for this extension property</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> obj <span class=\"keyword\">As</span> ClassObject</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"[get]\"&gt;</span>请勿使用<span class=\"doctag\">&lt;see cref=\"GetValue\"/&gt;</span><span class=\"doctag\">&lt;/param&gt;</span>函数，否则会出现栈空间溢出</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"[set]\"&gt;</span>请勿使用<span class=\"doctag\">&lt;see cref=\"SetValue\"/&gt;</span><span class=\"doctag\">&lt;/param&gt;</span>方法，否则会出现栈空间溢出</span></span><br><span class=\"line\">    <span class=\"keyword\">Sub</span> <span class=\"keyword\">New</span>([<span class=\"keyword\">get</span>] <span class=\"keyword\">As</span> Func(<span class=\"keyword\">Of</span> T), [<span class=\"keyword\">set</span>] <span class=\"keyword\">As</span> Action(<span class=\"keyword\">Of</span> T))</span><br><span class=\"line\">        __get = [<span class=\"keyword\">get</span>]</span><br><span class=\"line\">        __set = [<span class=\"keyword\">set</span>]</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> 默认是将数据写入到基本类型的值之中</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Sub</span> <span class=\"keyword\">New</span>()</span><br><span class=\"line\">        __get = <span class=\"keyword\">Function</span>() <span class=\"keyword\">MyBase</span>.Value</span><br><span class=\"line\">\t\t__set = <span class=\"keyword\">Sub</span>(v) <span class=\"keyword\">MyBase</span>.Value = v</span><br><span class=\"line\">\t<span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> 这个主要是应用于Linq表达式之中，将属性值设置之后返回宿主对象实例</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"value\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> SetValue(value <span class=\"keyword\">As</span> T) <span class=\"keyword\">As</span> ClassObject</span><br><span class=\"line\">        <span class=\"keyword\">Call</span> __set(value)</span><br><span class=\"line\">        <span class=\"keyword\">Return</span> obj</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Overloads</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Narrowing</span> <span class=\"keyword\">Operator</span> <span class=\"built_in\">CType</span>(x <span class=\"keyword\">As</span> PropertyValue(<span class=\"keyword\">Of</span> T)) <span class=\"keyword\">As</span> T</span><br><span class=\"line\">        <span class=\"keyword\">Return</span> x.Value</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Operator</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> ToString() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> Value.GetJson</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">' ......</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Get-Extension-Property\"><a href=\"#Get-Extension-Property\" class=\"headerlink\" title=\"Get Extension Property\"></a>Get Extension Property</h2><p>By invoke get or set the value of the extension property, first we should get the extension property definition, as we should gets the <code>PropertyInfo</code> at first to using the property in the Reflection operation, and here is how to gets the property definition from the <code>Extension</code> property from the VisualBasic class object.</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> [<span class=\"keyword\">New</span>](<span class=\"keyword\">Of</span> Cls <span class=\"keyword\">As</span> ClassObject)(x <span class=\"keyword\">As</span> Cls, name <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>) <span class=\"keyword\">As</span> PropertyValue(<span class=\"keyword\">Of</span> T)</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> value <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> PropertyValue(<span class=\"keyword\">Of</span> T)()</span><br><span class=\"line\">    x.Extension.DynamicHash.Value(name) = value</span><br><span class=\"line\">    value.obj = x</span><br><span class=\"line\">    <span class=\"keyword\">Return</span> value</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> 读取<span class=\"doctag\">&lt;see cref=\"ClassObject\"/&gt;</span>对象之中的一个拓展属性</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;typeparam name=\"Cls\"&gt;</span><span class=\"doctag\">&lt;/typeparam&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"x\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"name\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> Read(<span class=\"keyword\">Of</span> Cls <span class=\"keyword\">As</span> ClassObject)(x <span class=\"keyword\">As</span> Cls, name <span class=\"keyword\">As</span> <span class=\"built_in\">String</span>) <span class=\"keyword\">As</span> PropertyValue(<span class=\"keyword\">Of</span> T)</span><br><span class=\"line\">    <span class=\"keyword\">If</span> x.Extension <span class=\"keyword\">Is</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">Then</span></span><br><span class=\"line\">        x.Extension = <span class=\"keyword\">New</span> ExtendedProps</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> prop <span class=\"keyword\">As</span> <span class=\"built_in\">Object</span> = x.Extension.DynamicHash(name)</span><br><span class=\"line\">    <span class=\"keyword\">If</span> prop <span class=\"keyword\">Is</span> <span class=\"literal\">Nothing</span> <span class=\"keyword\">Then</span></span><br><span class=\"line\">        prop = PropertyValue(<span class=\"keyword\">Of</span> T).[<span class=\"keyword\">New</span>](<span class=\"keyword\">Of</span> Cls)(x, name)</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">If</span></span><br><span class=\"line\">    <span class=\"keyword\">Return</span> <span class=\"built_in\">DirectCast</span>(prop, PropertyValue(<span class=\"keyword\">Of</span> T))</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure>\n<p>Gets the property value definition just very easy, right? we just gets the value from the dictionary by using the property name as the key.</p>\n<p>So that this extension property usage may becomes this style:</p>\n<ol>\n<li>First define a Extension function in a module</li>\n<li>You can using <code>NameOf</code> keyword to get property name or just using <code>MethodBase.GetCurrentMethod</code> for get current function name</li>\n<li>Using shared function <code>PropertyValue(Of &lt;Type&gt;).Read(Of T)</code> to get the property definition of your <code>ClassObject</code></li>\n</ol>\n<p>And here is a simple example by using this extension property, here is the property definition example:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Module</span> PropertyDefinitionModule</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Example of the extension property in VisualBasic</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;typeparam name=\"T\"&gt;</span><span class=\"doctag\">&lt;/typeparam&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"x\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    &lt;Extension&gt;</span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> Uid(<span class=\"keyword\">Of</span> T <span class=\"keyword\">As</span> ClassObject)(x <span class=\"keyword\">As</span> T) <span class=\"keyword\">As</span> PropertyValue(<span class=\"keyword\">Of</span> <span class=\"built_in\">Long</span>)</span><br><span class=\"line\">        <span class=\"keyword\">Return</span> PropertyValue(<span class=\"keyword\">Of</span> <span class=\"built_in\">Long</span>).Read(<span class=\"keyword\">Of</span> T)(x, NameOf(Uid))</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">' Or</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> Example of the extension property in VisualBasic</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;typeparam name=\"T\"&gt;</span><span class=\"doctag\">&lt;/typeparam&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"x\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    &lt;Extension&gt;</span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> Uid(<span class=\"keyword\">Of</span> T <span class=\"keyword\">As</span> ClassObject)(x <span class=\"keyword\">As</span> T) <span class=\"keyword\">As</span> PropertyValue(<span class=\"keyword\">Of</span> <span class=\"built_in\">Long</span>)</span><br><span class=\"line\">        <span class=\"comment\">' Just copy this statement without any big modification.</span></span><br><span class=\"line\">        <span class=\"comment\">' just modify the generics type constraint to use this extension property language feature.</span></span><br><span class=\"line\">        <span class=\"keyword\">Return</span> PropertyValue(<span class=\"keyword\">Of</span> <span class=\"built_in\">Long</span>).Read(<span class=\"keyword\">Of</span> T)(x, MethodBase.GetCurrentMethod)</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Module</span></span><br></pre></td></tr></table></figure>\n<p>So that by using this extension property, that for get value, we can do as this:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> n <span class=\"keyword\">As</span> <span class=\"built_in\">Long</span> = x.Uid</span><br></pre></td></tr></table></figure>\n<p>For set property value, that we can write the code:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Dim</span> n <span class=\"keyword\">As</span> <span class=\"built_in\">Long</span> = VBMath.Rnd() * <span class=\"number\">100000000000</span>L</span><br><span class=\"line\">x.Uid.value = n</span><br><span class=\"line\"><span class=\"keyword\">Call</span> x.Uid.__DEBUG_ECHO()</span><br></pre></td></tr></table></figure>\n<p>And here is the code example for csharp:</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> Microsoft.VisualBasic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> Microsoft.VisualBasic.ComponentModel.DataSourceModel;</span><br><span class=\"line\"><span class=\"keyword\">using</span> Microsoft.VisualBasic.Language;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Linq;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Reflection;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Text;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Threading.Tasks;</span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">static</span> Microsoft.VisualBasic.Extensions;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">Test2</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> PropertyValue&lt;<span class=\"keyword\">long</span>&gt; myId&lt;T&gt;(<span class=\"keyword\">this</span> T x) <span class=\"keyword\">where</span> T : ClassObject</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// Just copy this statement without any big modification. just modify the generics type constraint.</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> PropertyValue&lt;<span class=\"keyword\">long</span>&gt;.Read&lt;T&gt;(x, MethodBase.GetCurrentMethod());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span><br><span class=\"line\">        </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> x = <span class=\"keyword\">new</span> ClassObject();</span><br><span class=\"line\">            <span class=\"keyword\">long</span> n = x.myId().Value; <span class=\"comment\">// The init value is ZERO</span></span><br><span class=\"line\"></span><br><span class=\"line\">            x.myId().Value = <span class=\"number\">55</span>;     <span class=\"comment\">// Extension property set value</span></span><br><span class=\"line\"></span><br><span class=\"line\">            n = <span class=\"number\">-100</span>;</span><br><span class=\"line\">            n = x.myId().Value;      <span class=\"comment\">// Extension property get value, value should be 55 not -100</span></span><br><span class=\"line\">            n.__DEBUG_ECHO();        <span class=\"comment\">// display the value</span></span><br><span class=\"line\"></span><br><span class=\"line\">            Pause();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Extension-Property-with-Linq\"><a href=\"#Extension-Property-with-Linq\" class=\"headerlink\" title=\"Extension Property with Linq\"></a>Extension Property with Linq</h2><p>Recently I have lots of works on the bacterial genome annotation, one of this job is using the circos software to visualize the finial result data. For construct a bacterial genome with some plasmid its visualization data model in the circos, I using a linq expression to do this job, and the extension property language feature helps me a lot on this job:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Imports</span> Microsoft.VisualBasic.Language</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> Karyotype : <span class=\"keyword\">Inherits</span> ClassObject</span><br><span class=\"line\">    <span class=\"keyword\">Implements</span> IKaryotype</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> chrName <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> <span class=\"keyword\">Implements</span> IKaryotype.chrName</span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> chrLabel <span class=\"keyword\">As</span> <span class=\"built_in\">String</span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> start <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> <span class=\"keyword\">Implements</span> IKaryotype.start</span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> [<span class=\"keyword\">end</span>] <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span> <span class=\"keyword\">Implements</span> IKaryotype.<span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> color <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> <span class=\"keyword\">Implements</span> IKaryotype.color</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Overrides</span> <span class=\"keyword\">Function</span> ToString() <span class=\"keyword\">As</span> <span class=\"built_in\">String</span> <span class=\"keyword\">Implements</span> IKaryotype.GetData</span><br><span class=\"line\">        <span class=\"keyword\">Return</span> $<span class=\"string\">\"chr - &#123;chrName&#125; &#123;chrLabel&#125; &#123;start&#125; &#123;[end]&#125; &#123;color&#125;\"</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Module</span> KaryotypeExtensions</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> nt核苷酸基因组序列拓展属性</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"x\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    &lt;Extension&gt;</span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> nt(x <span class=\"keyword\">As</span> Karyotype) <span class=\"keyword\">As</span> PropertyValue(<span class=\"keyword\">Of</span> FastaToken)</span><br><span class=\"line\">        <span class=\"keyword\">Return</span> PropertyValue(<span class=\"keyword\">Of</span> FastaToken).Read(<span class=\"keyword\">Of</span> Karyotype)(x, NameOf(nt))</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Module</span></span><br></pre></td></tr></table></figure>\n<p>In Some of the situation, we just want to avoided of the anonymous type in the code, so that by using the extension property, we can easily extended our class code with modify the original code, and avoid the anonymous type in the linq.</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">''' &lt;summary&gt;</span><br><span class=\"line\">''' Creates the model for the multiple chromosomes genome data in circos.(使用这个函数进行创建多条染色体的)</span><br><span class=\"line\">''' &lt;/summary&gt;</span><br><span class=\"line\">''' &lt;param name=\"source\"&gt;Band数据&lt;/param&gt;</span><br><span class=\"line\">''' &lt;param name=\"chrs\"&gt;karyotype数据&lt;/param&gt;</span><br><span class=\"line\">''' &lt;returns&gt;&lt;/returns&gt;</span><br><span class=\"line\">Public Shared Function FromBlastnMappings(source As IEnumerable(Of BlastnMapping), chrs As IEnumerable(Of FastaToken)) As BasicGenomeSkeleton</span><br><span class=\"line\">    Dim ks As Karyotype() =</span><br><span class=\"line\">        LinqAPI.Exec(Of Karyotype) &lt;= From nt As SeqValue(Of FastaToken)</span><br><span class=\"line\">                                      In chrs.SeqIterator</span><br><span class=\"line\">                                      Let name As String = nt.obj.Title.NormalizePathString(True).Replace(\" \", \"_\")</span><br><span class=\"line\">                                      Select New Karyotype With &#123;</span><br><span class=\"line\">                                          .chrName = \"chr\" &amp; nt.i,</span><br><span class=\"line\">                                          .chrLabel = name,</span><br><span class=\"line\">                                          .color = \"\",</span><br><span class=\"line\">                                          .start = 0,</span><br><span class=\"line\">                                          .end = nt.obj.Length</span><br><span class=\"line\">                                      &#125;.nt.SetValue(nt.obj).As(Of Karyotype)</span><br><span class=\"line\">    Dim labels As Dictionary(Of String, Karyotype) =</span><br><span class=\"line\">        ks.ToDictionary(Function(x) x.nt.Value.Title, Function(x) x)</span><br><span class=\"line\">    Dim bands As List(Of Band) =</span><br><span class=\"line\">        LinqAPI.MakeList(Of Band) &lt;= From x As SeqValue(Of BlastnMapping)</span><br><span class=\"line\">                                     In source.SeqIterator</span><br><span class=\"line\">                                     Let chr As String = labels(x.obj.Reference).chrName</span><br><span class=\"line\">                                     Let loci As NucleotideLocation = x.obj.MappingLocation</span><br><span class=\"line\">                                     Select New Band With &#123;</span><br><span class=\"line\">                                         .chrName = chr,</span><br><span class=\"line\">                                         .start = loci.Left,</span><br><span class=\"line\">                                         .end = loci.Right,</span><br><span class=\"line\">                                         .color = \"\",</span><br><span class=\"line\">                                         .bandX = \"band\" &amp; x.i,</span><br><span class=\"line\">                                         .bandY = \"band\" &amp; x.i</span><br><span class=\"line\">                                    &#125;</span><br><span class=\"line\">    Return New BasicGenomeSkeleton With &#123;</span><br><span class=\"line\">         .__bands = bands,</span><br><span class=\"line\">         .__karyotypes = New List(Of Karyotype)(ks)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">End Function</span><br></pre></td></tr></table></figure>\n<p>You can found this example code at github: <a href=\"https://github.com/SMRUCC/GCModeller.Circos/blob/master/Circos/Karyotype/BasicGenome.vb\">https://github.com/SMRUCC/GCModeller.Circos/blob/master/Circos/Karyotype/BasicGenome.vb</a></p>"},{"title":"My Windows10 Desktop","date":"2016-06-13T16:00:00.000Z","_content":"\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/win10/start.png)\n<!--more-->\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/win10/wmp.png)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/win10/explorer.png)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/win10/desktop.png)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/win10/chrome.png)","source":"_posts/my-win10.md","raw":"---\ntitle: My Windows10 Desktop\ntags: [win10, desktop]\ndate: 2016-06-14\n---\n\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/win10/start.png)\n<!--more-->\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/win10/wmp.png)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/win10/explorer.png)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/win10/desktop.png)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/win10/chrome.png)","slug":"my-win10","published":1,"updated":"2016-06-23T16:27:25.514Z","_id":"cipsiqnq500006gv4kbq7u9zb","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/win10/start.png\" alt=\"\"><br><a id=\"more\"></a><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/win10/wmp.png\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/win10/explorer.png\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/win10/desktop.png\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/win10/chrome.png\" alt=\"\"></p>\n","excerpt":"<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/win10/start.png\" alt=\"\"><br>","more":"<br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/win10/wmp.png\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/win10/explorer.png\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/win10/desktop.png\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/win10/chrome.png\" alt=\"\"></p>"},{"title":"关于浏览器你不知道的事","date":"2016-06-23T16:00:00.000Z","_content":"\n你是否好奇标识浏览器身份的``User-Agent``，为什么每个浏览器都有Mozilla字样？\n\n```vbnet\nMozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.94 Safari/537.36\nMozilla/5.0 (Linux; U; Android 4.1.2; zh-tw; GT-I9300 Build/JZO54K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30\nMozilla/5.0 (Windows NT 6.1; WOW64; rv:20.0) Gecko/20100101 Firefox/20.0\nMozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0)\n```\n\n故事还得从头说起<!--more-->，最初的主角叫NCSA Mosaic，简称Mosaic（马赛克），是1992年末位于伊利诺伊大学厄巴纳-香槟分校的国家超级计算机应用中心（National Center for Supercomputing Applications，简称NCSA）开发，并于1993年发布的一款浏览器。它自称``NCSA_Mosaic/2.0（Windows 3.1）``，Mosaic可以同时展示文字和图片，从此浏览器变得有趣多了。\n\n然而很快就出现了另一个浏览器，这就是著名的Mozilla，中文名称摩斯拉。一说 ``Mozilla = Mosaic + Killer``，意为Mosaic杀手，也有说法是 ``Mozilla = Mosaic & Godzilla``，意为马赛克和哥斯拉，而Mozilla最初的吉祥物是只绿色大蜥蜴，后来更改为红色暴龙，跟哥斯拉长得一样。\n\n但Mosaic对此非常不高兴，于是后来Mozilla更名为Netscape，也就是网景。Netscape自称``Mozilla/1.0(Win3.1)``，事情开始变得更加有趣。网景支持框架（frame），由于大家的喜欢框架变得流行起来，但是Mosaic不支持框架，于是网站管理员探测user agent，对Mozilla浏览器发送含有框架的页面，对非Mozilla浏览器发送没有框架的页面。\n\n后来网景拿微软寻开心，称微软的Windows是“**没有调试过的硬件驱动程序**”。微软很生气，后果很严重。此后微软开发了自己的浏览器，这就是``Internet Explorer``，并希望它可以成为Netscape Killer。IE同样支持框架，但它不是Mozilla，所以它总是收不到含有框架的页面。微软很郁闷很快就沉不住气了，它不想等到所有的网站管理员都了解IE并且给IE发送含有框架的页面，它选择宣布IE是兼容Mozilla，并且模仿Netscape称IE为``Mozilla/1.22(compatible; MSIE 2.0; Windows 95)``，于是IE可以收到含有框架的页面了，所有微软的人都嗨皮了，但是网站管理员开始晕了。\n因为微软将IE和Windows捆绑销售，并且把IE做得比Netscape更好，于是第一次浏览器血腥大战爆发了，结果是Netscape以失败退出历史舞台，微软更加嗨皮。但没想到Netscape居然以Mozilla的名义重生了，并且开发了Gecko，这次它自称为``Mozilla/5.0(Windows; U; Windows NT 5.0; en-US; rv:1.1) Gecko/20020826``。\n\nGecko是一款渲染引擎并且很出色。Mozilla后来变成了Firefox，并自称``Mozilla/5.0 (Windows; U; Windows NT 5.1; sv-SE; rv:1.7.5) Gecko/20041108 Firefox/1.0``。Firefox性能很出色，Gecko也开始攻城略地，其他新的浏览器使用了它的代码，并且将它们自己称为``Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.7.2) Gecko/20040825 Camino/0.8.1``，以及``Mozilla/5.0 (Windows; U; Windows NT 5.1; de; rv:1.8.1.8) Gecko/20071008 SeaMonkey/1.0``，每一个都将自己装作``Mozilla``，而它们全都使用Gecko。\n\nGecko很出色，而IE完全跟不上它，因此user agent探测规则变了，使用``Gecko``的浏览器被发送了更好的代码，而其他浏览器则没有这种待遇。Linux的追随者对此很难过，因为他们编写了``Konqueror``，它的引擎是KHTML，他们认为KHTML和Gecko一样出色，但却因为不是Gecko而得不到好的页面，于是Konqueror为得到更好的页面开始将自己伪装成``like Gecko``，并自称为``Mozilla/5.0 (compatible; Konqueror/3.2; FreeBSD) (KHTML, like Gecko)``。自此user agent变得更加混乱。\n\n这时更有Opera跳出来说“_毫无疑问，我们应该让用户来决定他们想让我们伪装成哪个浏览器。_”于是Opera干脆创建了菜单项让用户自主选择让Opera浏览器变成``Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 9.51``，或者``Mozilla/5.0 (Windows NT 6.0; U; en; rv:1.8.1) Gecko/20061208Firefox/2.0.0 Opera 9.51``， 或者``Opera/9.51 (Windows NT 5.1; U; en)``。\n\n后来苹果开发了Safari浏览器，并使用KHTML作为渲染引擎，但苹果加入了许多新的特性，于是苹果从KHTML另辟分支称之为WebKit，但它又不想抛弃那些为KHTML编写的页面，于是Safari自称为``Mozilla/5.0 (Macintosh; U; PPC Mac OS X; de-de) AppleWebKit/85.7 (KHTML, like Gecko) Safari/85.5``，这进一步加剧了user agent的混乱局面。\n\n因为微软十分忌惮Firefox，于是IE重装上阵，这次它自称为``Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0)``，并且渲染效果同样出色，但是需要网站管理员的指令它这么做才行。\n\n再后来，谷歌开发了Chrome浏览器，Chrome使用Webkit作为渲染引擎，和Safari之前一样，它想要那些为Safari编写的页面，于是它伪装成了Safari。于是Chrome使用WebKit，并将自己伪装成Safari，WebKit伪装成KHTML，KHTML伪装成Gecko，**最后所有的浏览器都伪装成了Mozilla，这就是为什么所有的浏览器User-Agent里都有``Mozilla``**。Chrome自称为``Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.13 (KHTML, like Gecko) Chrome/0.2.149.27 Safari/525.13``。\n\n因为以上这段历史，现在的``User-Agent``字符串变得一团糟，几乎根本无法彰显它最初的意义。追根溯源，微软可以说是这一切的始作俑者，但后来每一个人都在试图假扮别人，最终把``User-Agent``搞得混乱不堪。\n\n一句话结论：因为网站开发者可能会因为你是某浏览器（这里是 ``Mozilla``），所以输出一些特殊功能的程序代码（这里指好的特殊功能），所以当其它浏览器也支持这种好功能时，就试图去模仿 Mozilla 浏览器让网站输出跟 Mozilla 一样的内容，而不是输出被阉割功能的程序代码。**大家都为了让网站输出最好的内容，都试图假装自己是 ``Mozilla`` 一个已经不存在的浏览器……**\n\n##### 附各大浏览器诞生年表：\n+ 1993年1月23日：Mosaic\n+ 1994年12月：Netscape\n+ 1994年：Opera\n+ 1995年8月16日：Internet Explorer\n+ 1996年10月14日：Kongqueror\n+ 2003年1月7日：Safari\n+ 2008年9月2日：Chrome\n\n\n> ![关于浏览器你不知道的事](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/qrcode/user-agent.png)","source":"_posts/user-agent.md","raw":"---\ntitle: 关于浏览器你不知道的事\ntags: [web, user-agent, chrome, firefox, IE]\ndate: 2016-06-24\n---\n\n你是否好奇标识浏览器身份的``User-Agent``，为什么每个浏览器都有Mozilla字样？\n\n```vbnet\nMozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.94 Safari/537.36\nMozilla/5.0 (Linux; U; Android 4.1.2; zh-tw; GT-I9300 Build/JZO54K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30\nMozilla/5.0 (Windows NT 6.1; WOW64; rv:20.0) Gecko/20100101 Firefox/20.0\nMozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0)\n```\n\n故事还得从头说起<!--more-->，最初的主角叫NCSA Mosaic，简称Mosaic（马赛克），是1992年末位于伊利诺伊大学厄巴纳-香槟分校的国家超级计算机应用中心（National Center for Supercomputing Applications，简称NCSA）开发，并于1993年发布的一款浏览器。它自称``NCSA_Mosaic/2.0（Windows 3.1）``，Mosaic可以同时展示文字和图片，从此浏览器变得有趣多了。\n\n然而很快就出现了另一个浏览器，这就是著名的Mozilla，中文名称摩斯拉。一说 ``Mozilla = Mosaic + Killer``，意为Mosaic杀手，也有说法是 ``Mozilla = Mosaic & Godzilla``，意为马赛克和哥斯拉，而Mozilla最初的吉祥物是只绿色大蜥蜴，后来更改为红色暴龙，跟哥斯拉长得一样。\n\n但Mosaic对此非常不高兴，于是后来Mozilla更名为Netscape，也就是网景。Netscape自称``Mozilla/1.0(Win3.1)``，事情开始变得更加有趣。网景支持框架（frame），由于大家的喜欢框架变得流行起来，但是Mosaic不支持框架，于是网站管理员探测user agent，对Mozilla浏览器发送含有框架的页面，对非Mozilla浏览器发送没有框架的页面。\n\n后来网景拿微软寻开心，称微软的Windows是“**没有调试过的硬件驱动程序**”。微软很生气，后果很严重。此后微软开发了自己的浏览器，这就是``Internet Explorer``，并希望它可以成为Netscape Killer。IE同样支持框架，但它不是Mozilla，所以它总是收不到含有框架的页面。微软很郁闷很快就沉不住气了，它不想等到所有的网站管理员都了解IE并且给IE发送含有框架的页面，它选择宣布IE是兼容Mozilla，并且模仿Netscape称IE为``Mozilla/1.22(compatible; MSIE 2.0; Windows 95)``，于是IE可以收到含有框架的页面了，所有微软的人都嗨皮了，但是网站管理员开始晕了。\n因为微软将IE和Windows捆绑销售，并且把IE做得比Netscape更好，于是第一次浏览器血腥大战爆发了，结果是Netscape以失败退出历史舞台，微软更加嗨皮。但没想到Netscape居然以Mozilla的名义重生了，并且开发了Gecko，这次它自称为``Mozilla/5.0(Windows; U; Windows NT 5.0; en-US; rv:1.1) Gecko/20020826``。\n\nGecko是一款渲染引擎并且很出色。Mozilla后来变成了Firefox，并自称``Mozilla/5.0 (Windows; U; Windows NT 5.1; sv-SE; rv:1.7.5) Gecko/20041108 Firefox/1.0``。Firefox性能很出色，Gecko也开始攻城略地，其他新的浏览器使用了它的代码，并且将它们自己称为``Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.7.2) Gecko/20040825 Camino/0.8.1``，以及``Mozilla/5.0 (Windows; U; Windows NT 5.1; de; rv:1.8.1.8) Gecko/20071008 SeaMonkey/1.0``，每一个都将自己装作``Mozilla``，而它们全都使用Gecko。\n\nGecko很出色，而IE完全跟不上它，因此user agent探测规则变了，使用``Gecko``的浏览器被发送了更好的代码，而其他浏览器则没有这种待遇。Linux的追随者对此很难过，因为他们编写了``Konqueror``，它的引擎是KHTML，他们认为KHTML和Gecko一样出色，但却因为不是Gecko而得不到好的页面，于是Konqueror为得到更好的页面开始将自己伪装成``like Gecko``，并自称为``Mozilla/5.0 (compatible; Konqueror/3.2; FreeBSD) (KHTML, like Gecko)``。自此user agent变得更加混乱。\n\n这时更有Opera跳出来说“_毫无疑问，我们应该让用户来决定他们想让我们伪装成哪个浏览器。_”于是Opera干脆创建了菜单项让用户自主选择让Opera浏览器变成``Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 9.51``，或者``Mozilla/5.0 (Windows NT 6.0; U; en; rv:1.8.1) Gecko/20061208Firefox/2.0.0 Opera 9.51``， 或者``Opera/9.51 (Windows NT 5.1; U; en)``。\n\n后来苹果开发了Safari浏览器，并使用KHTML作为渲染引擎，但苹果加入了许多新的特性，于是苹果从KHTML另辟分支称之为WebKit，但它又不想抛弃那些为KHTML编写的页面，于是Safari自称为``Mozilla/5.0 (Macintosh; U; PPC Mac OS X; de-de) AppleWebKit/85.7 (KHTML, like Gecko) Safari/85.5``，这进一步加剧了user agent的混乱局面。\n\n因为微软十分忌惮Firefox，于是IE重装上阵，这次它自称为``Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0)``，并且渲染效果同样出色，但是需要网站管理员的指令它这么做才行。\n\n再后来，谷歌开发了Chrome浏览器，Chrome使用Webkit作为渲染引擎，和Safari之前一样，它想要那些为Safari编写的页面，于是它伪装成了Safari。于是Chrome使用WebKit，并将自己伪装成Safari，WebKit伪装成KHTML，KHTML伪装成Gecko，**最后所有的浏览器都伪装成了Mozilla，这就是为什么所有的浏览器User-Agent里都有``Mozilla``**。Chrome自称为``Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.13 (KHTML, like Gecko) Chrome/0.2.149.27 Safari/525.13``。\n\n因为以上这段历史，现在的``User-Agent``字符串变得一团糟，几乎根本无法彰显它最初的意义。追根溯源，微软可以说是这一切的始作俑者，但后来每一个人都在试图假扮别人，最终把``User-Agent``搞得混乱不堪。\n\n一句话结论：因为网站开发者可能会因为你是某浏览器（这里是 ``Mozilla``），所以输出一些特殊功能的程序代码（这里指好的特殊功能），所以当其它浏览器也支持这种好功能时，就试图去模仿 Mozilla 浏览器让网站输出跟 Mozilla 一样的内容，而不是输出被阉割功能的程序代码。**大家都为了让网站输出最好的内容，都试图假装自己是 ``Mozilla`` 一个已经不存在的浏览器……**\n\n##### 附各大浏览器诞生年表：\n+ 1993年1月23日：Mosaic\n+ 1994年12月：Netscape\n+ 1994年：Opera\n+ 1995年8月16日：Internet Explorer\n+ 1996年10月14日：Kongqueror\n+ 2003年1月7日：Safari\n+ 2008年9月2日：Chrome\n\n\n> ![关于浏览器你不知道的事](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/qrcode/user-agent.png)","slug":"user-agent","published":1,"updated":"2016-08-04T20:34:08.894Z","_id":"cipted0f10000hcv413nrj5vp","comments":1,"layout":"post","photos":[],"link":"","content":"<p>你是否好奇标识浏览器身份的<code>User-Agent</code>，为什么每个浏览器都有Mozilla字样？</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mozilla/<span class=\"number\">5.0</span> (Windows NT <span class=\"number\">6.1</span>; WOW64) AppleWebKit/<span class=\"number\">537.36</span> (KHTML, <span class=\"keyword\">like</span> Gecko) Chrome/<span class=\"number\">27.0</span><span class=\"number\">.1453</span><span class=\"number\">.94</span> Safari/<span class=\"number\">537.36</span></span><br><span class=\"line\">Mozilla/<span class=\"number\">5.0</span> (Linux; U; Android <span class=\"number\">4.1</span><span class=\"number\">.2</span>; zh-tw; GT-I9300 Build/JZO54K) AppleWebKit/<span class=\"number\">534.30</span> (KHTML, <span class=\"keyword\">like</span> Gecko) Version/<span class=\"number\">4.0</span> Mobile Safari/<span class=\"number\">534.30</span></span><br><span class=\"line\">Mozilla/<span class=\"number\">5.0</span> (Windows NT <span class=\"number\">6.1</span>; WOW64; rv:<span class=\"number\">20.0</span>) Gecko/<span class=\"number\">20100101</span> Firefox/<span class=\"number\">20.0</span></span><br><span class=\"line\">Mozilla/<span class=\"number\">5.0</span> (compatible; MSIE <span class=\"number\">9.0</span>; Windows NT <span class=\"number\">6.0</span>; Trident/<span class=\"number\">5.0</span>)</span><br></pre></td></tr></table></figure>\n<p>故事还得从头说起<a id=\"more\"></a>，最初的主角叫NCSA Mosaic，简称Mosaic（马赛克），是1992年末位于伊利诺伊大学厄巴纳-香槟分校的国家超级计算机应用中心（National Center for Supercomputing Applications，简称NCSA）开发，并于1993年发布的一款浏览器。它自称<code>NCSA_Mosaic/2.0（Windows 3.1）</code>，Mosaic可以同时展示文字和图片，从此浏览器变得有趣多了。</p>\n<p>然而很快就出现了另一个浏览器，这就是著名的Mozilla，中文名称摩斯拉。一说 <code>Mozilla = Mosaic + Killer</code>，意为Mosaic杀手，也有说法是 <code>Mozilla = Mosaic &amp; Godzilla</code>，意为马赛克和哥斯拉，而Mozilla最初的吉祥物是只绿色大蜥蜴，后来更改为红色暴龙，跟哥斯拉长得一样。</p>\n<p>但Mosaic对此非常不高兴，于是后来Mozilla更名为Netscape，也就是网景。Netscape自称<code>Mozilla/1.0(Win3.1)</code>，事情开始变得更加有趣。网景支持框架（frame），由于大家的喜欢框架变得流行起来，但是Mosaic不支持框架，于是网站管理员探测user agent，对Mozilla浏览器发送含有框架的页面，对非Mozilla浏览器发送没有框架的页面。</p>\n<p>后来网景拿微软寻开心，称微软的Windows是“<strong>没有调试过的硬件驱动程序</strong>”。微软很生气，后果很严重。此后微软开发了自己的浏览器，这就是<code>Internet Explorer</code>，并希望它可以成为Netscape Killer。IE同样支持框架，但它不是Mozilla，所以它总是收不到含有框架的页面。微软很郁闷很快就沉不住气了，它不想等到所有的网站管理员都了解IE并且给IE发送含有框架的页面，它选择宣布IE是兼容Mozilla，并且模仿Netscape称IE为<code>Mozilla/1.22(compatible; MSIE 2.0; Windows 95)</code>，于是IE可以收到含有框架的页面了，所有微软的人都嗨皮了，但是网站管理员开始晕了。<br>因为微软将IE和Windows捆绑销售，并且把IE做得比Netscape更好，于是第一次浏览器血腥大战爆发了，结果是Netscape以失败退出历史舞台，微软更加嗨皮。但没想到Netscape居然以Mozilla的名义重生了，并且开发了Gecko，这次它自称为<code>Mozilla/5.0(Windows; U; Windows NT 5.0; en-US; rv:1.1) Gecko/20020826</code>。</p>\n<p>Gecko是一款渲染引擎并且很出色。Mozilla后来变成了Firefox，并自称<code>Mozilla/5.0 (Windows; U; Windows NT 5.1; sv-SE; rv:1.7.5) Gecko/20041108 Firefox/1.0</code>。Firefox性能很出色，Gecko也开始攻城略地，其他新的浏览器使用了它的代码，并且将它们自己称为<code>Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.7.2) Gecko/20040825 Camino/0.8.1</code>，以及<code>Mozilla/5.0 (Windows; U; Windows NT 5.1; de; rv:1.8.1.8) Gecko/20071008 SeaMonkey/1.0</code>，每一个都将自己装作<code>Mozilla</code>，而它们全都使用Gecko。</p>\n<p>Gecko很出色，而IE完全跟不上它，因此user agent探测规则变了，使用<code>Gecko</code>的浏览器被发送了更好的代码，而其他浏览器则没有这种待遇。Linux的追随者对此很难过，因为他们编写了<code>Konqueror</code>，它的引擎是KHTML，他们认为KHTML和Gecko一样出色，但却因为不是Gecko而得不到好的页面，于是Konqueror为得到更好的页面开始将自己伪装成<code>like Gecko</code>，并自称为<code>Mozilla/5.0 (compatible; Konqueror/3.2; FreeBSD) (KHTML, like Gecko)</code>。自此user agent变得更加混乱。</p>\n<p>这时更有Opera跳出来说“<em>毫无疑问，我们应该让用户来决定他们想让我们伪装成哪个浏览器。</em>”于是Opera干脆创建了菜单项让用户自主选择让Opera浏览器变成<code>Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 9.51</code>，或者<code>Mozilla/5.0 (Windows NT 6.0; U; en; rv:1.8.1) Gecko/20061208Firefox/2.0.0 Opera 9.51</code>， 或者<code>Opera/9.51 (Windows NT 5.1; U; en)</code>。</p>\n<p>后来苹果开发了Safari浏览器，并使用KHTML作为渲染引擎，但苹果加入了许多新的特性，于是苹果从KHTML另辟分支称之为WebKit，但它又不想抛弃那些为KHTML编写的页面，于是Safari自称为<code>Mozilla/5.0 (Macintosh; U; PPC Mac OS X; de-de) AppleWebKit/85.7 (KHTML, like Gecko) Safari/85.5</code>，这进一步加剧了user agent的混乱局面。</p>\n<p>因为微软十分忌惮Firefox，于是IE重装上阵，这次它自称为<code>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0)</code>，并且渲染效果同样出色，但是需要网站管理员的指令它这么做才行。</p>\n<p>再后来，谷歌开发了Chrome浏览器，Chrome使用Webkit作为渲染引擎，和Safari之前一样，它想要那些为Safari编写的页面，于是它伪装成了Safari。于是Chrome使用WebKit，并将自己伪装成Safari，WebKit伪装成KHTML，KHTML伪装成Gecko，<strong>最后所有的浏览器都伪装成了Mozilla，这就是为什么所有的浏览器User-Agent里都有<code>Mozilla</code></strong>。Chrome自称为<code>Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.13 (KHTML, like Gecko) Chrome/0.2.149.27 Safari/525.13</code>。</p>\n<p>因为以上这段历史，现在的<code>User-Agent</code>字符串变得一团糟，几乎根本无法彰显它最初的意义。追根溯源，微软可以说是这一切的始作俑者，但后来每一个人都在试图假扮别人，最终把<code>User-Agent</code>搞得混乱不堪。</p>\n<p>一句话结论：因为网站开发者可能会因为你是某浏览器（这里是 <code>Mozilla</code>），所以输出一些特殊功能的程序代码（这里指好的特殊功能），所以当其它浏览器也支持这种好功能时，就试图去模仿 Mozilla 浏览器让网站输出跟 Mozilla 一样的内容，而不是输出被阉割功能的程序代码。<strong>大家都为了让网站输出最好的内容，都试图假装自己是 <code>Mozilla</code> 一个已经不存在的浏览器……</strong></p>\n<h5 id=\"附各大浏览器诞生年表：\"><a href=\"#附各大浏览器诞生年表：\" class=\"headerlink\" title=\"附各大浏览器诞生年表：\"></a>附各大浏览器诞生年表：</h5><ul>\n<li>1993年1月23日：Mosaic</li>\n<li>1994年12月：Netscape</li>\n<li>1994年：Opera</li>\n<li>1995年8月16日：Internet Explorer</li>\n<li>1996年10月14日：Kongqueror</li>\n<li>2003年1月7日：Safari</li>\n<li>2008年9月2日：Chrome</li>\n</ul>\n<blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/qrcode/user-agent.png\" alt=\"关于浏览器你不知道的事\"></p>\n</blockquote>\n","excerpt":"<p>你是否好奇标识浏览器身份的<code>User-Agent</code>，为什么每个浏览器都有Mozilla字样？</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mozilla/<span class=\"number\">5.0</span> (Windows NT <span class=\"number\">6.1</span>; WOW64) AppleWebKit/<span class=\"number\">537.36</span> (KHTML, <span class=\"keyword\">like</span> Gecko) Chrome/<span class=\"number\">27.0</span><span class=\"number\">.1453</span><span class=\"number\">.94</span> Safari/<span class=\"number\">537.36</span></span><br><span class=\"line\">Mozilla/<span class=\"number\">5.0</span> (Linux; U; Android <span class=\"number\">4.1</span><span class=\"number\">.2</span>; zh-tw; GT-I9300 Build/JZO54K) AppleWebKit/<span class=\"number\">534.30</span> (KHTML, <span class=\"keyword\">like</span> Gecko) Version/<span class=\"number\">4.0</span> Mobile Safari/<span class=\"number\">534.30</span></span><br><span class=\"line\">Mozilla/<span class=\"number\">5.0</span> (Windows NT <span class=\"number\">6.1</span>; WOW64; rv:<span class=\"number\">20.0</span>) Gecko/<span class=\"number\">20100101</span> Firefox/<span class=\"number\">20.0</span></span><br><span class=\"line\">Mozilla/<span class=\"number\">5.0</span> (compatible; MSIE <span class=\"number\">9.0</span>; Windows NT <span class=\"number\">6.0</span>; Trident/<span class=\"number\">5.0</span>)</span><br></pre></td></tr></table></figure>\n<p>故事还得从头说起","more":"，最初的主角叫NCSA Mosaic，简称Mosaic（马赛克），是1992年末位于伊利诺伊大学厄巴纳-香槟分校的国家超级计算机应用中心（National Center for Supercomputing Applications，简称NCSA）开发，并于1993年发布的一款浏览器。它自称<code>NCSA_Mosaic/2.0（Windows 3.1）</code>，Mosaic可以同时展示文字和图片，从此浏览器变得有趣多了。</p>\n<p>然而很快就出现了另一个浏览器，这就是著名的Mozilla，中文名称摩斯拉。一说 <code>Mozilla = Mosaic + Killer</code>，意为Mosaic杀手，也有说法是 <code>Mozilla = Mosaic &amp; Godzilla</code>，意为马赛克和哥斯拉，而Mozilla最初的吉祥物是只绿色大蜥蜴，后来更改为红色暴龙，跟哥斯拉长得一样。</p>\n<p>但Mosaic对此非常不高兴，于是后来Mozilla更名为Netscape，也就是网景。Netscape自称<code>Mozilla/1.0(Win3.1)</code>，事情开始变得更加有趣。网景支持框架（frame），由于大家的喜欢框架变得流行起来，但是Mosaic不支持框架，于是网站管理员探测user agent，对Mozilla浏览器发送含有框架的页面，对非Mozilla浏览器发送没有框架的页面。</p>\n<p>后来网景拿微软寻开心，称微软的Windows是“<strong>没有调试过的硬件驱动程序</strong>”。微软很生气，后果很严重。此后微软开发了自己的浏览器，这就是<code>Internet Explorer</code>，并希望它可以成为Netscape Killer。IE同样支持框架，但它不是Mozilla，所以它总是收不到含有框架的页面。微软很郁闷很快就沉不住气了，它不想等到所有的网站管理员都了解IE并且给IE发送含有框架的页面，它选择宣布IE是兼容Mozilla，并且模仿Netscape称IE为<code>Mozilla/1.22(compatible; MSIE 2.0; Windows 95)</code>，于是IE可以收到含有框架的页面了，所有微软的人都嗨皮了，但是网站管理员开始晕了。<br>因为微软将IE和Windows捆绑销售，并且把IE做得比Netscape更好，于是第一次浏览器血腥大战爆发了，结果是Netscape以失败退出历史舞台，微软更加嗨皮。但没想到Netscape居然以Mozilla的名义重生了，并且开发了Gecko，这次它自称为<code>Mozilla/5.0(Windows; U; Windows NT 5.0; en-US; rv:1.1) Gecko/20020826</code>。</p>\n<p>Gecko是一款渲染引擎并且很出色。Mozilla后来变成了Firefox，并自称<code>Mozilla/5.0 (Windows; U; Windows NT 5.1; sv-SE; rv:1.7.5) Gecko/20041108 Firefox/1.0</code>。Firefox性能很出色，Gecko也开始攻城略地，其他新的浏览器使用了它的代码，并且将它们自己称为<code>Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.7.2) Gecko/20040825 Camino/0.8.1</code>，以及<code>Mozilla/5.0 (Windows; U; Windows NT 5.1; de; rv:1.8.1.8) Gecko/20071008 SeaMonkey/1.0</code>，每一个都将自己装作<code>Mozilla</code>，而它们全都使用Gecko。</p>\n<p>Gecko很出色，而IE完全跟不上它，因此user agent探测规则变了，使用<code>Gecko</code>的浏览器被发送了更好的代码，而其他浏览器则没有这种待遇。Linux的追随者对此很难过，因为他们编写了<code>Konqueror</code>，它的引擎是KHTML，他们认为KHTML和Gecko一样出色，但却因为不是Gecko而得不到好的页面，于是Konqueror为得到更好的页面开始将自己伪装成<code>like Gecko</code>，并自称为<code>Mozilla/5.0 (compatible; Konqueror/3.2; FreeBSD) (KHTML, like Gecko)</code>。自此user agent变得更加混乱。</p>\n<p>这时更有Opera跳出来说“<em>毫无疑问，我们应该让用户来决定他们想让我们伪装成哪个浏览器。</em>”于是Opera干脆创建了菜单项让用户自主选择让Opera浏览器变成<code>Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 9.51</code>，或者<code>Mozilla/5.0 (Windows NT 6.0; U; en; rv:1.8.1) Gecko/20061208Firefox/2.0.0 Opera 9.51</code>， 或者<code>Opera/9.51 (Windows NT 5.1; U; en)</code>。</p>\n<p>后来苹果开发了Safari浏览器，并使用KHTML作为渲染引擎，但苹果加入了许多新的特性，于是苹果从KHTML另辟分支称之为WebKit，但它又不想抛弃那些为KHTML编写的页面，于是Safari自称为<code>Mozilla/5.0 (Macintosh; U; PPC Mac OS X; de-de) AppleWebKit/85.7 (KHTML, like Gecko) Safari/85.5</code>，这进一步加剧了user agent的混乱局面。</p>\n<p>因为微软十分忌惮Firefox，于是IE重装上阵，这次它自称为<code>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0)</code>，并且渲染效果同样出色，但是需要网站管理员的指令它这么做才行。</p>\n<p>再后来，谷歌开发了Chrome浏览器，Chrome使用Webkit作为渲染引擎，和Safari之前一样，它想要那些为Safari编写的页面，于是它伪装成了Safari。于是Chrome使用WebKit，并将自己伪装成Safari，WebKit伪装成KHTML，KHTML伪装成Gecko，<strong>最后所有的浏览器都伪装成了Mozilla，这就是为什么所有的浏览器User-Agent里都有<code>Mozilla</code></strong>。Chrome自称为<code>Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.13 (KHTML, like Gecko) Chrome/0.2.149.27 Safari/525.13</code>。</p>\n<p>因为以上这段历史，现在的<code>User-Agent</code>字符串变得一团糟，几乎根本无法彰显它最初的意义。追根溯源，微软可以说是这一切的始作俑者，但后来每一个人都在试图假扮别人，最终把<code>User-Agent</code>搞得混乱不堪。</p>\n<p>一句话结论：因为网站开发者可能会因为你是某浏览器（这里是 <code>Mozilla</code>），所以输出一些特殊功能的程序代码（这里指好的特殊功能），所以当其它浏览器也支持这种好功能时，就试图去模仿 Mozilla 浏览器让网站输出跟 Mozilla 一样的内容，而不是输出被阉割功能的程序代码。<strong>大家都为了让网站输出最好的内容，都试图假装自己是 <code>Mozilla</code> 一个已经不存在的浏览器……</strong></p>\n<h5 id=\"附各大浏览器诞生年表：\"><a href=\"#附各大浏览器诞生年表：\" class=\"headerlink\" title=\"附各大浏览器诞生年表：\"></a>附各大浏览器诞生年表：</h5><ul>\n<li>1993年1月23日：Mosaic</li>\n<li>1994年12月：Netscape</li>\n<li>1994年：Opera</li>\n<li>1995年8月16日：Internet Explorer</li>\n<li>1996年10月14日：Kongqueror</li>\n<li>2003年1月7日：Safari</li>\n<li>2008年9月2日：Chrome</li>\n</ul>\n<blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/qrcode/user-agent.png\" alt=\"关于浏览器你不知道的事\"></p>\n</blockquote>"},{"title":"Dependency Injection In Programming","date":"2016-06-24T16:00:00.000Z","_content":"\n## What is Dependency Injection ?\n\nDependency injection mean **if your class depend on another class or another external login so you will need to create object of this dependent class to use its logic in your designed class.**\n\nFor example:\n\n> If you want to design laptop class that use another class called electric power that supply your laptop class by power to run.\n\nSo you will use electric power object in laptop class (**Not Good Design**) Like this:\n\n```vbnet\nPublic Class Laptop\n\n    Dim _electricPowerObj As ElectricPower\n\n    Public Sub New()\n        _electricPowerObj = New ElectricPower()\n    End Sub\n\n    Public Sub Start()\n        ' any logic\n    End Sub\nEnd Class\n```\n\n<!--more-->\n\nThe problems of this designed if you want to change and test and Power source Object you must change constructor method and other variables.\nThe solution of this problem is using ``Dependency Injection Design Pattern`` that allow you to inject your dependencies as parameters to method and if you want to change dependencies only simply change passed or injected parameter:\n\n```vbnet\nPublic Interface IPowerSource\n    Sub SupplyPower()\nEnd Interface\n\nPublic Class ElectricPower : Implements IPowerSource\n\n    Public Sub SupplyPower() Implements IPowerSource.SupplyPower\n        ' Any login to supply power\n    End Sub\nEnd Class\n\nPublic Class Laptop\n\n    Dim _PowerObj As IPowerSource\n\n    Public Sub New(power As IPowerSource)\n        _PowerObj = power\n    End Sub\n\n    Public Sub Start()\n        ' any logic\n    End Sub\nEnd Class\n\nPublic Module Program\n\n    Public Sub Main ()\n        Dim powersourceObj As New ElectricPower()\n        Dim laptopObj As New Laptop(powersourceObj)\n\n        Call laptopObj.Start()\n    End Sub\nEnd Module\n```\n\nThis model is useful if alter there are another power sources solutions like power source from gas engine. Simply you can change laptop power source like:\n\n```vbnet\nPublic Class ElectricPowerFromEngine : Implements IPowerSource\n\n    Public Sub SupplyPower() Implements IPowerSource.SupplyPower\n        ' any login to supply power\n    End Sub\nEnd Class\n\nPublic Module Program\n\n    Public Sub Main()\n        Dim powersourceObj As New ElectricPowerFromEngine()\n        Dim laptopObj As New Laptop(powersourceObj)\n\n        Call laptopObj.Start()\n    End Sub\nEnd Module\n```\n\nWithout any changes in laptop class, just inject another object.\n\n## Why Dependency Injection?\nDependency Injection is useful because it make your program easy to main and testable\n\n## Inversion of Control?\nWhen you use dependency injection in your program, this mean you inverse control instead of class hard depend on its dependencies, no dependencies injected to class.\n\n## What is automatic dependency injection?\nThere are many tools that make dependency injection automatic and enable to create IOC(Inversion of Control) Container to register your all dependencies objects and its resolve in one place. These tools like ``Unity``, ``AutoFac``.\n\n> source [Ahmed Abd EL-Latif](http://www.codeproject.com/Tips/1108797/Dependency-Injection-In-Programming), 25 Jun 2016","source":"_posts/DependencyInjection.md","raw":"---\ntitle: Dependency Injection In Programming\ntags: [vb.net, 架构, CodeProject, interface]\ndate: 2016-06-25\n---\n\n## What is Dependency Injection ?\n\nDependency injection mean **if your class depend on another class or another external login so you will need to create object of this dependent class to use its logic in your designed class.**\n\nFor example:\n\n> If you want to design laptop class that use another class called electric power that supply your laptop class by power to run.\n\nSo you will use electric power object in laptop class (**Not Good Design**) Like this:\n\n```vbnet\nPublic Class Laptop\n\n    Dim _electricPowerObj As ElectricPower\n\n    Public Sub New()\n        _electricPowerObj = New ElectricPower()\n    End Sub\n\n    Public Sub Start()\n        ' any logic\n    End Sub\nEnd Class\n```\n\n<!--more-->\n\nThe problems of this designed if you want to change and test and Power source Object you must change constructor method and other variables.\nThe solution of this problem is using ``Dependency Injection Design Pattern`` that allow you to inject your dependencies as parameters to method and if you want to change dependencies only simply change passed or injected parameter:\n\n```vbnet\nPublic Interface IPowerSource\n    Sub SupplyPower()\nEnd Interface\n\nPublic Class ElectricPower : Implements IPowerSource\n\n    Public Sub SupplyPower() Implements IPowerSource.SupplyPower\n        ' Any login to supply power\n    End Sub\nEnd Class\n\nPublic Class Laptop\n\n    Dim _PowerObj As IPowerSource\n\n    Public Sub New(power As IPowerSource)\n        _PowerObj = power\n    End Sub\n\n    Public Sub Start()\n        ' any logic\n    End Sub\nEnd Class\n\nPublic Module Program\n\n    Public Sub Main ()\n        Dim powersourceObj As New ElectricPower()\n        Dim laptopObj As New Laptop(powersourceObj)\n\n        Call laptopObj.Start()\n    End Sub\nEnd Module\n```\n\nThis model is useful if alter there are another power sources solutions like power source from gas engine. Simply you can change laptop power source like:\n\n```vbnet\nPublic Class ElectricPowerFromEngine : Implements IPowerSource\n\n    Public Sub SupplyPower() Implements IPowerSource.SupplyPower\n        ' any login to supply power\n    End Sub\nEnd Class\n\nPublic Module Program\n\n    Public Sub Main()\n        Dim powersourceObj As New ElectricPowerFromEngine()\n        Dim laptopObj As New Laptop(powersourceObj)\n\n        Call laptopObj.Start()\n    End Sub\nEnd Module\n```\n\nWithout any changes in laptop class, just inject another object.\n\n## Why Dependency Injection?\nDependency Injection is useful because it make your program easy to main and testable\n\n## Inversion of Control?\nWhen you use dependency injection in your program, this mean you inverse control instead of class hard depend on its dependencies, no dependencies injected to class.\n\n## What is automatic dependency injection?\nThere are many tools that make dependency injection automatic and enable to create IOC(Inversion of Control) Container to register your all dependencies objects and its resolve in one place. These tools like ``Unity``, ``AutoFac``.\n\n> source [Ahmed Abd EL-Latif](http://www.codeproject.com/Tips/1108797/Dependency-Injection-In-Programming), 25 Jun 2016","slug":"DependencyInjection","published":1,"updated":"2016-08-03T13:24:59.467Z","_id":"cipv59q5q0000dsv4730n3aef","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"What-is-Dependency-Injection\"><a href=\"#What-is-Dependency-Injection\" class=\"headerlink\" title=\"What is Dependency Injection ?\"></a>What is Dependency Injection ?</h2><p>Dependency injection mean <strong>if your class depend on another class or another external login so you will need to create object of this dependent class to use its logic in your designed class.</strong></p>\n<p>For example:</p>\n<blockquote>\n<p>If you want to design laptop class that use another class called electric power that supply your laptop class by power to run.</p>\n</blockquote>\n<p>So you will use electric power object in laptop class (<strong>Not Good Design</strong>) Like this:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> Laptop</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> _electricPowerObj <span class=\"keyword\">As</span> ElectricPower</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> <span class=\"keyword\">New</span>()</span><br><span class=\"line\">        _electricPowerObj = <span class=\"keyword\">New</span> ElectricPower()</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> Start()</span><br><span class=\"line\">        <span class=\"comment\">' any logic</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>The problems of this designed if you want to change and test and Power source Object you must change constructor method and other variables.<br>The solution of this problem is using <code>Dependency Injection Design Pattern</code> that allow you to inject your dependencies as parameters to method and if you want to change dependencies only simply change passed or injected parameter:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Interface</span> IPowerSource</span><br><span class=\"line\">    <span class=\"keyword\">Sub</span> SupplyPower()</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Interface</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> ElectricPower : <span class=\"keyword\">Implements</span> IPowerSource</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> SupplyPower() <span class=\"keyword\">Implements</span> IPowerSource.SupplyPower</span><br><span class=\"line\">        <span class=\"comment\">' Any login to supply power</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> Laptop</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> _PowerObj <span class=\"keyword\">As</span> IPowerSource</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> <span class=\"keyword\">New</span>(power <span class=\"keyword\">As</span> IPowerSource)</span><br><span class=\"line\">        _PowerObj = power</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> Start()</span><br><span class=\"line\">        <span class=\"comment\">' any logic</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Module</span> Program</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> Main ()</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> powersourceObj <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> ElectricPower()</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> laptopObj <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> Laptop(powersourceObj)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">Call</span> laptopObj.Start()</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Module</span></span><br></pre></td></tr></table></figure>\n<p>This model is useful if alter there are another power sources solutions like power source from gas engine. Simply you can change laptop power source like:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> ElectricPowerFromEngine : <span class=\"keyword\">Implements</span> IPowerSource</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> SupplyPower() <span class=\"keyword\">Implements</span> IPowerSource.SupplyPower</span><br><span class=\"line\">        <span class=\"comment\">' any login to supply power</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Module</span> Program</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> Main()</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> powersourceObj <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> ElectricPowerFromEngine()</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> laptopObj <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> Laptop(powersourceObj)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">Call</span> laptopObj.Start()</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Module</span></span><br></pre></td></tr></table></figure>\n<p>Without any changes in laptop class, just inject another object.</p>\n<h2 id=\"Why-Dependency-Injection\"><a href=\"#Why-Dependency-Injection\" class=\"headerlink\" title=\"Why Dependency Injection?\"></a>Why Dependency Injection?</h2><p>Dependency Injection is useful because it make your program easy to main and testable</p>\n<h2 id=\"Inversion-of-Control\"><a href=\"#Inversion-of-Control\" class=\"headerlink\" title=\"Inversion of Control?\"></a>Inversion of Control?</h2><p>When you use dependency injection in your program, this mean you inverse control instead of class hard depend on its dependencies, no dependencies injected to class.</p>\n<h2 id=\"What-is-automatic-dependency-injection\"><a href=\"#What-is-automatic-dependency-injection\" class=\"headerlink\" title=\"What is automatic dependency injection?\"></a>What is automatic dependency injection?</h2><p>There are many tools that make dependency injection automatic and enable to create IOC(Inversion of Control) Container to register your all dependencies objects and its resolve in one place. These tools like <code>Unity</code>, <code>AutoFac</code>.</p>\n<blockquote>\n<p>source <a href=\"http://www.codeproject.com/Tips/1108797/Dependency-Injection-In-Programming\" target=\"_blank\" rel=\"external\">Ahmed Abd EL-Latif</a>, 25 Jun 2016</p>\n</blockquote>\n","excerpt":"<h2 id=\"What-is-Dependency-Injection\"><a href=\"#What-is-Dependency-Injection\" class=\"headerlink\" title=\"What is Dependency Injection ?\"></a>What is Dependency Injection ?</h2><p>Dependency injection mean <strong>if your class depend on another class or another external login so you will need to create object of this dependent class to use its logic in your designed class.</strong></p>\n<p>For example:</p>\n<blockquote>\n<p>If you want to design laptop class that use another class called electric power that supply your laptop class by power to run.</p>\n</blockquote>\n<p>So you will use electric power object in laptop class (<strong>Not Good Design</strong>) Like this:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> Laptop</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> _electricPowerObj <span class=\"keyword\">As</span> ElectricPower</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> <span class=\"keyword\">New</span>()</span><br><span class=\"line\">        _electricPowerObj = <span class=\"keyword\">New</span> ElectricPower()</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> Start()</span><br><span class=\"line\">        <span class=\"comment\">' any logic</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br></pre></td></tr></table></figure>","more":"<p>The problems of this designed if you want to change and test and Power source Object you must change constructor method and other variables.<br>The solution of this problem is using <code>Dependency Injection Design Pattern</code> that allow you to inject your dependencies as parameters to method and if you want to change dependencies only simply change passed or injected parameter:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Interface</span> IPowerSource</span><br><span class=\"line\">    <span class=\"keyword\">Sub</span> SupplyPower()</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Interface</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> ElectricPower : <span class=\"keyword\">Implements</span> IPowerSource</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> SupplyPower() <span class=\"keyword\">Implements</span> IPowerSource.SupplyPower</span><br><span class=\"line\">        <span class=\"comment\">' Any login to supply power</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> Laptop</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> _PowerObj <span class=\"keyword\">As</span> IPowerSource</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> <span class=\"keyword\">New</span>(power <span class=\"keyword\">As</span> IPowerSource)</span><br><span class=\"line\">        _PowerObj = power</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> Start()</span><br><span class=\"line\">        <span class=\"comment\">' any logic</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Module</span> Program</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> Main ()</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> powersourceObj <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> ElectricPower()</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> laptopObj <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> Laptop(powersourceObj)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">Call</span> laptopObj.Start()</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Module</span></span><br></pre></td></tr></table></figure>\n<p>This model is useful if alter there are another power sources solutions like power source from gas engine. Simply you can change laptop power source like:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> ElectricPowerFromEngine : <span class=\"keyword\">Implements</span> IPowerSource</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> SupplyPower() <span class=\"keyword\">Implements</span> IPowerSource.SupplyPower</span><br><span class=\"line\">        <span class=\"comment\">' any login to supply power</span></span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Class</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Module</span> Program</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Sub</span> Main()</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> powersourceObj <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> ElectricPowerFromEngine()</span><br><span class=\"line\">        <span class=\"keyword\">Dim</span> laptopObj <span class=\"keyword\">As</span> <span class=\"keyword\">New</span> Laptop(powersourceObj)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">Call</span> laptopObj.Start()</span><br><span class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Module</span></span><br></pre></td></tr></table></figure>\n<p>Without any changes in laptop class, just inject another object.</p>\n<h2 id=\"Why-Dependency-Injection\"><a href=\"#Why-Dependency-Injection\" class=\"headerlink\" title=\"Why Dependency Injection?\"></a>Why Dependency Injection?</h2><p>Dependency Injection is useful because it make your program easy to main and testable</p>\n<h2 id=\"Inversion-of-Control\"><a href=\"#Inversion-of-Control\" class=\"headerlink\" title=\"Inversion of Control?\"></a>Inversion of Control?</h2><p>When you use dependency injection in your program, this mean you inverse control instead of class hard depend on its dependencies, no dependencies injected to class.</p>\n<h2 id=\"What-is-automatic-dependency-injection\"><a href=\"#What-is-automatic-dependency-injection\" class=\"headerlink\" title=\"What is automatic dependency injection?\"></a>What is automatic dependency injection?</h2><p>There are many tools that make dependency injection automatic and enable to create IOC(Inversion of Control) Container to register your all dependencies objects and its resolve in one place. These tools like <code>Unity</code>, <code>AutoFac</code>.</p>\n<blockquote>\n<p>source <a href=\"http://www.codeproject.com/Tips/1108797/Dependency-Injection-In-Programming\">Ahmed Abd EL-Latif</a>, 25 Jun 2016</p>\n</blockquote>"},{"title":"What does the Visual Studio “Any CPU” target mean?","date":"2016-06-10T16:00:00.000Z","_content":"\nAn ``AnyCPU`` assembly will ``JIT`` to ``64 bit`` code when loaded into ``64 bit`` process and ``32 bit`` when loaded into a ``32 bit`` process.\nBy limiting the CPU you would be saying there is something being used by the assembly (something likely unmanaged) that requires 32 bits or 64 bits.\nI think most of the important stuff has been said, but I just thought I'd add one thing:\n\n+ If you compile as ``Any CPU`` and run on an ``x64`` platform, then you won't be able to load 32-bit dlls, because your app wasn't started in ``WOW64``, but those dlls need to run there.\n+ If you compile as ``x86``, then the ``x64`` system will run you app in ``WOW64``, and you'll be able to load ``32-bit`` dlls.\n\nSo I think you should choose ``Any CPU`` if your dependencies can run in either environment, but choose ``x86`` if you have ``32-bit`` dependencies. This article from Microsoft explains this a bit:\n\n> [/CLRIMAGETYPE (Specify Type of CLR Image)](https://msdn.microsoft.com/en-us/library/31zwwc39.aspx)\n\n<!--more-->\n\n## /CLRIMAGETYPE (Specify Type of CLR Image)\n\n``Visual Studio 2015``\n\n```\n/CLRIMAGETYPE:{IJW|PURE|SAFE|SAFE32BITPREFERRED}\n```\n\n#### Remarks\nThe linker accepts native objects and also ``MSIL`` objects that are compiled by using ``/clr``, ``/clr:pure``, or ``/clr:safe``. When mixed objects in the same build are passed, the verifiability of the resulting output file is, by default, equal to the lowest level of verifiability of the input modules. For example, if you pass both a safe and a pure module to the linker, the output file will be pure. If you pass a native image and a mixed mode image (compiled by using ``/clr``), the resulting image will be a mixed mode image.\nYou can use ``/CLRIMAGETYPE`` to specify a lower level of verifiability, if that is what you need.\nIn .NET 4.5, ``/CLRIMAGETYPE`` supports a ``SAFE32BITPREFERRED`` option. This sets—in the ``PE`` header of the ``image—flags`` that indicate that the ``MSIL`` objects are safe and can be run on all platforms, but that ``32-bit`` execution environments are preferred. This option enables an app to run on ARM platforms and also specifies that it should run under ``WOW64`` on ``64-bit`` operating systems instead of using the ``64-bit`` execution environment.\nWhen an ``.exe`` that was compiled by using ``/clr`` or ``/clr:pure`` is run on a ``64-bit`` operating system, the application is run under ``WOW64``, which enables a ``32-bit`` application to run on a ``64-bit`` operating system. By default, an .exe that's compiled by using ``/clr:safe`` is run under the operating system's ``64-bit`` support. However, it is possible that your safe application loads a ``32-bit`` component. In that case, a safe image running under the operating system's ``64-bit`` support will fail when it loads the ``32-bit`` application. To ensure that a safe image continues to run when it loads a ``32-bit`` component on a ``64-bit`` operating system, use the ``/CLRIMAGETYPE:SAFE32BITPREFERRED`` option. If your code does not have to run on ``ARM`` platforms, you can specify the ``/CLRIMAGETYPE:PURE`` option to change the metadata (``.corflags``), marking it to be run under ``WOW64`` (and substituting your own entry symbol):\n\n```\ncl /clr:safe t.cpp /link /clrimagetype:pure /entry:?main@@$$HYMHXZ /subsystem:console\n```\n\nFor information about how to determine the ``CLR`` image type of a file, see [``/CLRHEADER``](https://msdn.microsoft.com/en-us/library/ds03hhk8.aspx).\n\n##### To set this linker option in the Visual Studio development environment\nOpen the project's **Property Pages** dialog box. For details, see [How to: Open Project Property Pages](https://msdn.microsoft.com/en-us/library/e79xc5h1.aspx).\nExpand the **Configuration Properties** node.\nExpand the **Linker** node.\nSelect the **Advanced** property page.\nModify the **CLR Image Type** property.\n\n##### To set this linker option programmatically\nSee [CLRImageType](https://msdn.microsoft.com/en-us/library/microsoft.visualstudio.vcprojectengine.vclinkertool.clrimagetype.aspx).\n\n##### See Also\n[Setting Linker Options](https://msdn.microsoft.com/en-us/library/wk97ab1b.aspx)\n[Linker Options](https://msdn.microsoft.com/en-us/library/y0zzbyt4.aspx)\n\n> stackoverflow: http://stackoverflow.com/questions/516730/what-does-the-visual-studio-any-cpu-target-mean","source":"_posts/CLR_types.md","raw":"---\ntitle: What does the Visual Studio “Any CPU” target mean?\ntags: [note, VisualStudio, Compiler, MSDN]\ndate: 2016-06-11\n---\n\nAn ``AnyCPU`` assembly will ``JIT`` to ``64 bit`` code when loaded into ``64 bit`` process and ``32 bit`` when loaded into a ``32 bit`` process.\nBy limiting the CPU you would be saying there is something being used by the assembly (something likely unmanaged) that requires 32 bits or 64 bits.\nI think most of the important stuff has been said, but I just thought I'd add one thing:\n\n+ If you compile as ``Any CPU`` and run on an ``x64`` platform, then you won't be able to load 32-bit dlls, because your app wasn't started in ``WOW64``, but those dlls need to run there.\n+ If you compile as ``x86``, then the ``x64`` system will run you app in ``WOW64``, and you'll be able to load ``32-bit`` dlls.\n\nSo I think you should choose ``Any CPU`` if your dependencies can run in either environment, but choose ``x86`` if you have ``32-bit`` dependencies. This article from Microsoft explains this a bit:\n\n> [/CLRIMAGETYPE (Specify Type of CLR Image)](https://msdn.microsoft.com/en-us/library/31zwwc39.aspx)\n\n<!--more-->\n\n## /CLRIMAGETYPE (Specify Type of CLR Image)\n\n``Visual Studio 2015``\n\n```\n/CLRIMAGETYPE:{IJW|PURE|SAFE|SAFE32BITPREFERRED}\n```\n\n#### Remarks\nThe linker accepts native objects and also ``MSIL`` objects that are compiled by using ``/clr``, ``/clr:pure``, or ``/clr:safe``. When mixed objects in the same build are passed, the verifiability of the resulting output file is, by default, equal to the lowest level of verifiability of the input modules. For example, if you pass both a safe and a pure module to the linker, the output file will be pure. If you pass a native image and a mixed mode image (compiled by using ``/clr``), the resulting image will be a mixed mode image.\nYou can use ``/CLRIMAGETYPE`` to specify a lower level of verifiability, if that is what you need.\nIn .NET 4.5, ``/CLRIMAGETYPE`` supports a ``SAFE32BITPREFERRED`` option. This sets—in the ``PE`` header of the ``image—flags`` that indicate that the ``MSIL`` objects are safe and can be run on all platforms, but that ``32-bit`` execution environments are preferred. This option enables an app to run on ARM platforms and also specifies that it should run under ``WOW64`` on ``64-bit`` operating systems instead of using the ``64-bit`` execution environment.\nWhen an ``.exe`` that was compiled by using ``/clr`` or ``/clr:pure`` is run on a ``64-bit`` operating system, the application is run under ``WOW64``, which enables a ``32-bit`` application to run on a ``64-bit`` operating system. By default, an .exe that's compiled by using ``/clr:safe`` is run under the operating system's ``64-bit`` support. However, it is possible that your safe application loads a ``32-bit`` component. In that case, a safe image running under the operating system's ``64-bit`` support will fail when it loads the ``32-bit`` application. To ensure that a safe image continues to run when it loads a ``32-bit`` component on a ``64-bit`` operating system, use the ``/CLRIMAGETYPE:SAFE32BITPREFERRED`` option. If your code does not have to run on ``ARM`` platforms, you can specify the ``/CLRIMAGETYPE:PURE`` option to change the metadata (``.corflags``), marking it to be run under ``WOW64`` (and substituting your own entry symbol):\n\n```\ncl /clr:safe t.cpp /link /clrimagetype:pure /entry:?main@@$$HYMHXZ /subsystem:console\n```\n\nFor information about how to determine the ``CLR`` image type of a file, see [``/CLRHEADER``](https://msdn.microsoft.com/en-us/library/ds03hhk8.aspx).\n\n##### To set this linker option in the Visual Studio development environment\nOpen the project's **Property Pages** dialog box. For details, see [How to: Open Project Property Pages](https://msdn.microsoft.com/en-us/library/e79xc5h1.aspx).\nExpand the **Configuration Properties** node.\nExpand the **Linker** node.\nSelect the **Advanced** property page.\nModify the **CLR Image Type** property.\n\n##### To set this linker option programmatically\nSee [CLRImageType](https://msdn.microsoft.com/en-us/library/microsoft.visualstudio.vcprojectengine.vclinkertool.clrimagetype.aspx).\n\n##### See Also\n[Setting Linker Options](https://msdn.microsoft.com/en-us/library/wk97ab1b.aspx)\n[Linker Options](https://msdn.microsoft.com/en-us/library/y0zzbyt4.aspx)\n\n> stackoverflow: http://stackoverflow.com/questions/516730/what-does-the-visual-studio-any-cpu-target-mean","slug":"CLR_types","published":1,"updated":"2016-08-04T18:53:13.784Z","_id":"cipw1vb240000a4v42cmbx3r2","comments":1,"layout":"post","photos":[],"link":"","content":"<p>An <code>AnyCPU</code> assembly will <code>JIT</code> to <code>64 bit</code> code when loaded into <code>64 bit</code> process and <code>32 bit</code> when loaded into a <code>32 bit</code> process.<br>By limiting the CPU you would be saying there is something being used by the assembly (something likely unmanaged) that requires 32 bits or 64 bits.<br>I think most of the important stuff has been said, but I just thought I’d add one thing:</p>\n<ul>\n<li>If you compile as <code>Any CPU</code> and run on an <code>x64</code> platform, then you won’t be able to load 32-bit dlls, because your app wasn’t started in <code>WOW64</code>, but those dlls need to run there.</li>\n<li>If you compile as <code>x86</code>, then the <code>x64</code> system will run you app in <code>WOW64</code>, and you’ll be able to load <code>32-bit</code> dlls.</li>\n</ul>\n<p>So I think you should choose <code>Any CPU</code> if your dependencies can run in either environment, but choose <code>x86</code> if you have <code>32-bit</code> dependencies. This article from Microsoft explains this a bit:</p>\n<blockquote>\n<p><a href=\"https://msdn.microsoft.com/en-us/library/31zwwc39.aspx\" target=\"_blank\" rel=\"external\">/CLRIMAGETYPE (Specify Type of CLR Image)</a></p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"CLRIMAGETYPE-Specify-Type-of-CLR-Image\"><a href=\"#CLRIMAGETYPE-Specify-Type-of-CLR-Image\" class=\"headerlink\" title=\"/CLRIMAGETYPE (Specify Type of CLR Image)\"></a>/CLRIMAGETYPE (Specify Type of CLR Image)</h2><p><code>Visual Studio 2015</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/CLRIMAGETYPE:&#123;IJW|PURE|SAFE|SAFE32BITPREFERRED&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Remarks\"><a href=\"#Remarks\" class=\"headerlink\" title=\"Remarks\"></a>Remarks</h4><p>The linker accepts native objects and also <code>MSIL</code> objects that are compiled by using <code>/clr</code>, <code>/clr:pure</code>, or <code>/clr:safe</code>. When mixed objects in the same build are passed, the verifiability of the resulting output file is, by default, equal to the lowest level of verifiability of the input modules. For example, if you pass both a safe and a pure module to the linker, the output file will be pure. If you pass a native image and a mixed mode image (compiled by using <code>/clr</code>), the resulting image will be a mixed mode image.<br>You can use <code>/CLRIMAGETYPE</code> to specify a lower level of verifiability, if that is what you need.<br>In .NET 4.5, <code>/CLRIMAGETYPE</code> supports a <code>SAFE32BITPREFERRED</code> option. This sets—in the <code>PE</code> header of the <code>image—flags</code> that indicate that the <code>MSIL</code> objects are safe and can be run on all platforms, but that <code>32-bit</code> execution environments are preferred. This option enables an app to run on ARM platforms and also specifies that it should run under <code>WOW64</code> on <code>64-bit</code> operating systems instead of using the <code>64-bit</code> execution environment.<br>When an <code>.exe</code> that was compiled by using <code>/clr</code> or <code>/clr:pure</code> is run on a <code>64-bit</code> operating system, the application is run under <code>WOW64</code>, which enables a <code>32-bit</code> application to run on a <code>64-bit</code> operating system. By default, an .exe that’s compiled by using <code>/clr:safe</code> is run under the operating system’s <code>64-bit</code> support. However, it is possible that your safe application loads a <code>32-bit</code> component. In that case, a safe image running under the operating system’s <code>64-bit</code> support will fail when it loads the <code>32-bit</code> application. To ensure that a safe image continues to run when it loads a <code>32-bit</code> component on a <code>64-bit</code> operating system, use the <code>/CLRIMAGETYPE:SAFE32BITPREFERRED</code> option. If your code does not have to run on <code>ARM</code> platforms, you can specify the <code>/CLRIMAGETYPE:PURE</code> option to change the metadata (<code>.corflags</code>), marking it to be run under <code>WOW64</code> (and substituting your own entry symbol):</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cl /clr:safe t.cpp /link /clrimagetype:pure /entry:?main@@$$HYMHXZ /subsystem:console</span><br></pre></td></tr></table></figure>\n<p>For information about how to determine the <code>CLR</code> image type of a file, see <a href=\"https://msdn.microsoft.com/en-us/library/ds03hhk8.aspx\" target=\"_blank\" rel=\"external\"><code>/CLRHEADER</code></a>.</p>\n<h5 id=\"To-set-this-linker-option-in-the-Visual-Studio-development-environment\"><a href=\"#To-set-this-linker-option-in-the-Visual-Studio-development-environment\" class=\"headerlink\" title=\"To set this linker option in the Visual Studio development environment\"></a>To set this linker option in the Visual Studio development environment</h5><p>Open the project’s <strong>Property Pages</strong> dialog box. For details, see <a href=\"https://msdn.microsoft.com/en-us/library/e79xc5h1.aspx\" target=\"_blank\" rel=\"external\">How to: Open Project Property Pages</a>.<br>Expand the <strong>Configuration Properties</strong> node.<br>Expand the <strong>Linker</strong> node.<br>Select the <strong>Advanced</strong> property page.<br>Modify the <strong>CLR Image Type</strong> property.</p>\n<h5 id=\"To-set-this-linker-option-programmatically\"><a href=\"#To-set-this-linker-option-programmatically\" class=\"headerlink\" title=\"To set this linker option programmatically\"></a>To set this linker option programmatically</h5><p>See <a href=\"https://msdn.microsoft.com/en-us/library/microsoft.visualstudio.vcprojectengine.vclinkertool.clrimagetype.aspx\" target=\"_blank\" rel=\"external\">CLRImageType</a>.</p>\n<h5 id=\"See-Also\"><a href=\"#See-Also\" class=\"headerlink\" title=\"See Also\"></a>See Also</h5><p><a href=\"https://msdn.microsoft.com/en-us/library/wk97ab1b.aspx\" target=\"_blank\" rel=\"external\">Setting Linker Options</a><br><a href=\"https://msdn.microsoft.com/en-us/library/y0zzbyt4.aspx\" target=\"_blank\" rel=\"external\">Linker Options</a></p>\n<blockquote>\n<p>stackoverflow: <a href=\"http://stackoverflow.com/questions/516730/what-does-the-visual-studio-any-cpu-target-mean\" target=\"_blank\" rel=\"external\">http://stackoverflow.com/questions/516730/what-does-the-visual-studio-any-cpu-target-mean</a></p>\n</blockquote>\n","excerpt":"<p>An <code>AnyCPU</code> assembly will <code>JIT</code> to <code>64 bit</code> code when loaded into <code>64 bit</code> process and <code>32 bit</code> when loaded into a <code>32 bit</code> process.<br>By limiting the CPU you would be saying there is something being used by the assembly (something likely unmanaged) that requires 32 bits or 64 bits.<br>I think most of the important stuff has been said, but I just thought I’d add one thing:</p>\n<ul>\n<li>If you compile as <code>Any CPU</code> and run on an <code>x64</code> platform, then you won’t be able to load 32-bit dlls, because your app wasn’t started in <code>WOW64</code>, but those dlls need to run there.</li>\n<li>If you compile as <code>x86</code>, then the <code>x64</code> system will run you app in <code>WOW64</code>, and you’ll be able to load <code>32-bit</code> dlls.</li>\n</ul>\n<p>So I think you should choose <code>Any CPU</code> if your dependencies can run in either environment, but choose <code>x86</code> if you have <code>32-bit</code> dependencies. This article from Microsoft explains this a bit:</p>\n<blockquote>\n<p><a href=\"https://msdn.microsoft.com/en-us/library/31zwwc39.aspx\">/CLRIMAGETYPE (Specify Type of CLR Image)</a></p>\n</blockquote>","more":"<h2 id=\"CLRIMAGETYPE-Specify-Type-of-CLR-Image\"><a href=\"#CLRIMAGETYPE-Specify-Type-of-CLR-Image\" class=\"headerlink\" title=\"/CLRIMAGETYPE (Specify Type of CLR Image)\"></a>/CLRIMAGETYPE (Specify Type of CLR Image)</h2><p><code>Visual Studio 2015</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/CLRIMAGETYPE:&#123;IJW|PURE|SAFE|SAFE32BITPREFERRED&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Remarks\"><a href=\"#Remarks\" class=\"headerlink\" title=\"Remarks\"></a>Remarks</h4><p>The linker accepts native objects and also <code>MSIL</code> objects that are compiled by using <code>/clr</code>, <code>/clr:pure</code>, or <code>/clr:safe</code>. When mixed objects in the same build are passed, the verifiability of the resulting output file is, by default, equal to the lowest level of verifiability of the input modules. For example, if you pass both a safe and a pure module to the linker, the output file will be pure. If you pass a native image and a mixed mode image (compiled by using <code>/clr</code>), the resulting image will be a mixed mode image.<br>You can use <code>/CLRIMAGETYPE</code> to specify a lower level of verifiability, if that is what you need.<br>In .NET 4.5, <code>/CLRIMAGETYPE</code> supports a <code>SAFE32BITPREFERRED</code> option. This sets—in the <code>PE</code> header of the <code>image—flags</code> that indicate that the <code>MSIL</code> objects are safe and can be run on all platforms, but that <code>32-bit</code> execution environments are preferred. This option enables an app to run on ARM platforms and also specifies that it should run under <code>WOW64</code> on <code>64-bit</code> operating systems instead of using the <code>64-bit</code> execution environment.<br>When an <code>.exe</code> that was compiled by using <code>/clr</code> or <code>/clr:pure</code> is run on a <code>64-bit</code> operating system, the application is run under <code>WOW64</code>, which enables a <code>32-bit</code> application to run on a <code>64-bit</code> operating system. By default, an .exe that’s compiled by using <code>/clr:safe</code> is run under the operating system’s <code>64-bit</code> support. However, it is possible that your safe application loads a <code>32-bit</code> component. In that case, a safe image running under the operating system’s <code>64-bit</code> support will fail when it loads the <code>32-bit</code> application. To ensure that a safe image continues to run when it loads a <code>32-bit</code> component on a <code>64-bit</code> operating system, use the <code>/CLRIMAGETYPE:SAFE32BITPREFERRED</code> option. If your code does not have to run on <code>ARM</code> platforms, you can specify the <code>/CLRIMAGETYPE:PURE</code> option to change the metadata (<code>.corflags</code>), marking it to be run under <code>WOW64</code> (and substituting your own entry symbol):</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cl /clr:safe t.cpp /link /clrimagetype:pure /entry:?main@@$$HYMHXZ /subsystem:console</span><br></pre></td></tr></table></figure>\n<p>For information about how to determine the <code>CLR</code> image type of a file, see <a href=\"https://msdn.microsoft.com/en-us/library/ds03hhk8.aspx\"><code>/CLRHEADER</code></a>.</p>\n<h5 id=\"To-set-this-linker-option-in-the-Visual-Studio-development-environment\"><a href=\"#To-set-this-linker-option-in-the-Visual-Studio-development-environment\" class=\"headerlink\" title=\"To set this linker option in the Visual Studio development environment\"></a>To set this linker option in the Visual Studio development environment</h5><p>Open the project’s <strong>Property Pages</strong> dialog box. For details, see <a href=\"https://msdn.microsoft.com/en-us/library/e79xc5h1.aspx\">How to: Open Project Property Pages</a>.<br>Expand the <strong>Configuration Properties</strong> node.<br>Expand the <strong>Linker</strong> node.<br>Select the <strong>Advanced</strong> property page.<br>Modify the <strong>CLR Image Type</strong> property.</p>\n<h5 id=\"To-set-this-linker-option-programmatically\"><a href=\"#To-set-this-linker-option-programmatically\" class=\"headerlink\" title=\"To set this linker option programmatically\"></a>To set this linker option programmatically</h5><p>See <a href=\"https://msdn.microsoft.com/en-us/library/microsoft.visualstudio.vcprojectengine.vclinkertool.clrimagetype.aspx\">CLRImageType</a>.</p>\n<h5 id=\"See-Also\"><a href=\"#See-Also\" class=\"headerlink\" title=\"See Also\"></a>See Also</h5><p><a href=\"https://msdn.microsoft.com/en-us/library/wk97ab1b.aspx\">Setting Linker Options</a><br><a href=\"https://msdn.microsoft.com/en-us/library/y0zzbyt4.aspx\">Linker Options</a></p>\n<blockquote>\n<p>stackoverflow: <a href=\"http://stackoverflow.com/questions/516730/what-does-the-visual-studio-any-cpu-target-mean\">http://stackoverflow.com/questions/516730/what-does-the-visual-studio-any-cpu-target-mean</a></p>\n</blockquote>"},{"title":"中國·桂林","date":"2016-07-06T16:00:00.000Z","_content":"\n![](https://github.com/xieguigang/xieguigang.github.io-hexo/raw/master/images/china_guangxi_guilin_yangsuo_by_andyanansu-d43r04m.jpg)\n\n<!--more-->\n\n> source: [deviantart]()","source":"_posts/china_guangxi_guilin_yangsuo_by_andyanansu-d43r04m.md","raw":"---\ntitle: 中國·桂林\ntags: [art work, repost]\ndate: 2016-7-7\n---\n\n![](https://github.com/xieguigang/xieguigang.github.io-hexo/raw/master/images/china_guangxi_guilin_yangsuo_by_andyanansu-d43r04m.jpg)\n\n<!--more-->\n\n> source: [deviantart]()","slug":"china_guangxi_guilin_yangsuo_by_andyanansu-d43r04m","published":1,"updated":"2016-08-03T13:20:33.251Z","_id":"ciqc9c1d70000c0v4x402iu0j","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"https://github.com/xieguigang/xieguigang.github.io-hexo/raw/master/images/china_guangxi_guilin_yangsuo_by_andyanansu-d43r04m.jpg\" alt=\"\"></p>\n<a id=\"more\"></a>\n<blockquote>\n<p>source: <a href=\"\">deviantart</a></p>\n</blockquote>\n","excerpt":"<p><img src=\"https://github.com/xieguigang/xieguigang.github.io-hexo/raw/master/images/china_guangxi_guilin_yangsuo_by_andyanansu-d43r04m.jpg\" alt=\"\"></p>","more":"<blockquote>\n<p>source: <a href=\"\">deviantart</a></p>\n</blockquote>"},{"title":"Take screenshot of Login Screen in Ubuntu, Elementary & Pear OS","date":"2016-07-25T16:00:00.000Z","_content":"\nThis simple tutorial shows you how to capture screenshot of the ``LightDM`` / ``GDM`` login screen in ``Ubuntu``, ``Elementary OS``, or ``Pear OS``.\n\nBesides installing your system as ``Virtualbox`` or ``Vmware`` Guest OS, we can follow the steps below to capture and share our login screens.\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/c/login_screenshot_bash.png)\n\n<!--More-->\n\n**1. Press ``Ctrl+Alt+T`` on your keyboard to open terminal**\nWhen it opens, run command blow to check out your display manager:\n\n```bash\ncat /etc/X11/default-display-manager\n\n# handbook@handbook-1310:~$ cat /etc/X11/default-display-manager\n# /usr/sbin/lightdm\n```\n\nBy default:\n\n+ Ubuntu Unity and Elementary OS Luna uses ``LightDM``\n+ Pear OS 8 and Ubuntu Gnome uses ``GDM``\n\n**2. Check out the value of ``$DISPLAY``**\n\n```bash\necho $DISPLAY\n\n# handbook@handbook-1310:~$ echo $DISPLAY\n# :0\n```\n\n**3. Now create a simple script**\n\n```bash\necho 'sleep 20; DISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/$DISPLAY xwd -root' > /tmp/shot.sh\n```\n\nYou may change:\n\n+ ``20`` : the seconds of delay.\n+ ``:0`` : the value of ``$DISPLAY``. In my Pear OS 8, the value of ``$DISPLAY`` changes every login (``$DISPLAY=$DISPAY +1``).\n+ ``lightdm`` : the display manager.\n\n**4. Press ``Ctrl+Alt+F1`` and log into ``TTY1``**\n**5. Run command below to start the script**\n\n```perl\nsudo bash /tmp/shot.sh >/tmp/shot.xwd\n```\n\n**6. Return to GUI mode by pressing ``Ctrl+Alt+F7``**\n**7. Logout by normal way. While you can see login screen, wait for some seconds.**\n**8. Login by normal way. Install ``imagemagick`` if you don’t have it installed yet.**\n\n```perl\nsudo apt-get install -y imagemagick\n```\n\n**9. Run command below and finally you can check out the image under user Pictures folder.**\n\n```perl\nconvert /tmp/shot.xwd ~/Pictures/loginscreen.png\n```\n\n> ![Take screenshot of Login Screen in Ubuntu, Elementary & Pear OS](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/qrcode/take_screenshot_login_screen.png)","source":"_posts/take_screenshot_login_screen.md","raw":"---\ntitle: Take screenshot of Login Screen in Ubuntu, Elementary & Pear OS\ntags: [bash, ubuntu, elementary os, repost]\ndate: 2016-7-26\n---\n\nThis simple tutorial shows you how to capture screenshot of the ``LightDM`` / ``GDM`` login screen in ``Ubuntu``, ``Elementary OS``, or ``Pear OS``.\n\nBesides installing your system as ``Virtualbox`` or ``Vmware`` Guest OS, we can follow the steps below to capture and share our login screens.\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/c/login_screenshot_bash.png)\n\n<!--More-->\n\n**1. Press ``Ctrl+Alt+T`` on your keyboard to open terminal**\nWhen it opens, run command blow to check out your display manager:\n\n```bash\ncat /etc/X11/default-display-manager\n\n# handbook@handbook-1310:~$ cat /etc/X11/default-display-manager\n# /usr/sbin/lightdm\n```\n\nBy default:\n\n+ Ubuntu Unity and Elementary OS Luna uses ``LightDM``\n+ Pear OS 8 and Ubuntu Gnome uses ``GDM``\n\n**2. Check out the value of ``$DISPLAY``**\n\n```bash\necho $DISPLAY\n\n# handbook@handbook-1310:~$ echo $DISPLAY\n# :0\n```\n\n**3. Now create a simple script**\n\n```bash\necho 'sleep 20; DISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/$DISPLAY xwd -root' > /tmp/shot.sh\n```\n\nYou may change:\n\n+ ``20`` : the seconds of delay.\n+ ``:0`` : the value of ``$DISPLAY``. In my Pear OS 8, the value of ``$DISPLAY`` changes every login (``$DISPLAY=$DISPAY +1``).\n+ ``lightdm`` : the display manager.\n\n**4. Press ``Ctrl+Alt+F1`` and log into ``TTY1``**\n**5. Run command below to start the script**\n\n```perl\nsudo bash /tmp/shot.sh >/tmp/shot.xwd\n```\n\n**6. Return to GUI mode by pressing ``Ctrl+Alt+F7``**\n**7. Logout by normal way. While you can see login screen, wait for some seconds.**\n**8. Login by normal way. Install ``imagemagick`` if you don’t have it installed yet.**\n\n```perl\nsudo apt-get install -y imagemagick\n```\n\n**9. Run command below and finally you can check out the image under user Pictures folder.**\n\n```perl\nconvert /tmp/shot.xwd ~/Pictures/loginscreen.png\n```\n\n> ![Take screenshot of Login Screen in Ubuntu, Elementary & Pear OS](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/qrcode/take_screenshot_login_screen.png)","slug":"take_screenshot_login_screen","published":1,"updated":"2016-08-04T20:27:52.878Z","_id":"cir3jql4z0000jkv4kp9zk67v","comments":1,"layout":"post","photos":[],"link":"","content":"<p>This simple tutorial shows you how to capture screenshot of the <code>LightDM</code> / <code>GDM</code> login screen in <code>Ubuntu</code>, <code>Elementary OS</code>, or <code>Pear OS</code>.</p>\n<p>Besides installing your system as <code>Virtualbox</code> or <code>Vmware</code> Guest OS, we can follow the steps below to capture and share our login screens.</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/c/login_screenshot_bash.png\" alt=\"\"></p>\n<a id=\"more\"></a>\n<p><strong>1. Press <code>Ctrl+Alt+T</code> on your keyboard to open terminal</strong><br>When it opens, run command blow to check out your display manager:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/X11/default-display-manager</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># handbook@handbook-1310:~$ cat /etc/X11/default-display-manager</span></span><br><span class=\"line\"><span class=\"comment\"># /usr/sbin/lightdm</span></span><br></pre></td></tr></table></figure>\n<p>By default:</p>\n<ul>\n<li>Ubuntu Unity and Elementary OS Luna uses <code>LightDM</code></li>\n<li>Pear OS 8 and Ubuntu Gnome uses <code>GDM</code></li>\n</ul>\n<p><strong>2. Check out the value of <code>$DISPLAY</code></strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$DISPLAY</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># handbook@handbook-1310:~$ echo $DISPLAY</span></span><br><span class=\"line\"><span class=\"comment\"># :0</span></span><br></pre></td></tr></table></figure>\n<p><strong>3. Now create a simple script</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'sleep 20; DISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/$DISPLAY xwd -root'</span> &gt; /tmp/shot.sh</span><br></pre></td></tr></table></figure>\n<p>You may change:</p>\n<ul>\n<li><code>20</code> : the seconds of delay.</li>\n<li><code>:0</code> : the value of <code>$DISPLAY</code>. In my Pear OS 8, the value of <code>$DISPLAY</code> changes every login (<code>$DISPLAY=$DISPAY +1</code>).</li>\n<li><code>lightdm</code> : the display manager.</li>\n</ul>\n<p><strong>4. Press <code>Ctrl+Alt+F1</code> and log into <code>TTY1</code></strong><br><strong>5. Run command below to start the script</strong></p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo bash /tmp/shot.sh &gt;<span class=\"regexp\">/tmp/shot</span>.xwd</span><br></pre></td></tr></table></figure>\n<p><strong>6. Return to GUI mode by pressing <code>Ctrl+Alt+F7</code></strong><br><strong>7. Logout by normal way. While you can see login screen, wait for some seconds.</strong><br><strong>8. Login by normal way. Install <code>imagemagick</code> if you don’t have it installed yet.</strong></p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install -<span class=\"keyword\">y</span> imagemagick</span><br></pre></td></tr></table></figure>\n<p><strong>9. Run command below and finally you can check out the image under user Pictures folder.</strong></p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">convert /tmp/shot.xwd ~<span class=\"regexp\">/Pictures/loginscreen</span>.png</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/qrcode/take_screenshot_login_screen.png\" alt=\"Take screenshot of Login Screen in Ubuntu, Elementary &amp; Pear OS\"></p>\n</blockquote>\n","excerpt":"<p>This simple tutorial shows you how to capture screenshot of the <code>LightDM</code> / <code>GDM</code> login screen in <code>Ubuntu</code>, <code>Elementary OS</code>, or <code>Pear OS</code>.</p>\n<p>Besides installing your system as <code>Virtualbox</code> or <code>Vmware</code> Guest OS, we can follow the steps below to capture and share our login screens.</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/c/login_screenshot_bash.png\" alt=\"\"></p>","more":"<p><strong>1. Press <code>Ctrl+Alt+T</code> on your keyboard to open terminal</strong><br>When it opens, run command blow to check out your display manager:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/X11/default-display-manager</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># handbook@handbook-1310:~$ cat /etc/X11/default-display-manager</span></span><br><span class=\"line\"><span class=\"comment\"># /usr/sbin/lightdm</span></span><br></pre></td></tr></table></figure>\n<p>By default:</p>\n<ul>\n<li>Ubuntu Unity and Elementary OS Luna uses <code>LightDM</code></li>\n<li>Pear OS 8 and Ubuntu Gnome uses <code>GDM</code></li>\n</ul>\n<p><strong>2. Check out the value of <code>$DISPLAY</code></strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$DISPLAY</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># handbook@handbook-1310:~$ echo $DISPLAY</span></span><br><span class=\"line\"><span class=\"comment\"># :0</span></span><br></pre></td></tr></table></figure>\n<p><strong>3. Now create a simple script</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'sleep 20; DISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/$DISPLAY xwd -root'</span> &gt; /tmp/shot.sh</span><br></pre></td></tr></table></figure>\n<p>You may change:</p>\n<ul>\n<li><code>20</code> : the seconds of delay.</li>\n<li><code>:0</code> : the value of <code>$DISPLAY</code>. In my Pear OS 8, the value of <code>$DISPLAY</code> changes every login (<code>$DISPLAY=$DISPAY +1</code>).</li>\n<li><code>lightdm</code> : the display manager.</li>\n</ul>\n<p><strong>4. Press <code>Ctrl+Alt+F1</code> and log into <code>TTY1</code></strong><br><strong>5. Run command below to start the script</strong></p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo bash /tmp/shot.sh &gt;<span class=\"regexp\">/tmp/shot</span>.xwd</span><br></pre></td></tr></table></figure>\n<p><strong>6. Return to GUI mode by pressing <code>Ctrl+Alt+F7</code></strong><br><strong>7. Logout by normal way. While you can see login screen, wait for some seconds.</strong><br><strong>8. Login by normal way. Install <code>imagemagick</code> if you don’t have it installed yet.</strong></p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install -<span class=\"keyword\">y</span> imagemagick</span><br></pre></td></tr></table></figure>\n<p><strong>9. Run command below and finally you can check out the image under user Pictures folder.</strong></p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">convert /tmp/shot.xwd ~<span class=\"regexp\">/Pictures/loginscreen</span>.png</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/qrcode/take_screenshot_login_screen.png\" alt=\"Take screenshot of Login Screen in Ubuntu, Elementary &amp; Pear OS\"></p>\n</blockquote>"},{"title":"程序员应该做开源项目的 6 个原因","date":"2016-07-29T16:00:00.000Z","_content":"\n“**开源开发人员都是义务劳动者**” 的观点已经成为编程世界中的陈词滥调，即使是那些伟大的开源举措也无法驳倒这种风靡一时的心态。\n\n但是真理总是掌握在少数人手里——即使是在开源惯例中，也需要参与开源的开发人员主动为其他人贡献他们的技能，一些企业（或企业集团）往往会因此雇用——并支付——这些程序员去研究特定的开源项目（如``Linux Kernel``）。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/640.jpg)\n\n<!--more-->\n\n除了开发人员确实可以从开源代码项目中得到薪酬这个事实外，还有6个理由可以说服你去做更多的开源项目——如果你是一个开发人员的话：\n\n### 学习和实践\n还有什么能让我们一直紧密关联自己的工作领域？\n作为一个程序员，你需要不断学习编码的最新趋势，你需要不断练习以进一步磨练自己的技能。开源是助你攀登这两座高峰的阶梯。开源的确是预防我们生锈的最佳途径。\n\n### 经验和简历\n你是一个新手开发者？那么，从开源项目中学习，并致力于开源项目是你获得经验和打造有吸引力的简历的最佳方法，它能让你争取到原本不可能的就业机会。\n在IT界找工作并不容易，而且如果你没有任何实战经验的话，那么情况就更糟了。但是如果当雇主看到你的简历，看到你已经参与过一些开源工作，那么可能会认为你主动积极，愿意工作，有工作经验——从而增加你被雇用的机会。\n\n### 网络和协作\n这是开源的主要精髓——也是开源培养的精神。你需要作为团队一员和其他程序员一起工作——优化项目，寻找并修复bug，等等。\n你可以与其他伟大的程序员联网，建立项目之外的关系。这是增加Twitter粉丝的好办法。开源还可以帮助你和那些志趣相投的，优质的联系人建立网络联系。\n你和你的小伙伴还可以一起工作于以后的项目，或者创建一个交流技巧的组群。各种可能数不胜数。\n\n### 展现（技能，代码等）\n参与开源项目能让你获得大量的曝光机会——无论是技能还是工作机会。\n通过使用以前写的代码，能让你节省大量编写开源代码的时间。此外，在你贡献了自己的代码之后，其他程序员可能会紧随你的身后去扩展这些代码——你可能会发现代码变得更高级。这是一个开发和机遇无休止的循环，可能会大大影响你的职业生涯。\n\n### 社区建设\n除了能让你获取伟大的实践和经验，开源还能帮助构建一个伟大的社区。因为它是开源的，所以大家可以互相学习彼此的技巧，提高自己的编码技能。\n教学相长。就像其他职业一样，你在教授别人的过程中，在为开源项目或社区简单地贡献自己的专业知识的同时，也可以学到东西。\n\n### 更好的收入机会\n现在，如果我们再回过头谈谈钱，为大家揭示所谓的“自由工作”神话。真的能赚到钱的编程或许就是开源领域了。\n为什么？这是因为虽然开源软件产品大多是免费提供给公司使用的，但是公司往往还是会雇用程序员（尤其是那些对此有贡献的程序员）来提供与开源软件相关的服务——例如，安装，支持，维护，等等。\n\n------------------------------------------------\n具有讽刺意味的是：这些服务很赚钱，而且比销售类似付费软件所赚的钱更多——反而这些付费软件不需要这些相关服务。\n现在，你知道开源的好处了吧，所以每个开发人员都应该致力于开源项目。而且开源不仅对开发人员有利，对企业而言，也是好事，因为它保证了最高的安全性和质量。\n开源并不是完全免费的志愿活动。相反，从长期来看，它能让你渐渐地超越你的同龄人，它会成为一棵真正的摇钱树。\n你以前有没有参与过开源项目？你获得的经验？好处？欢迎和我们一起分享。\n\n> ![程序员应该做开源项目的6个原因](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/qrcode/6_reason_for_opensource.png)","source":"_posts/6_reason_for_opensource.md","raw":"---\ntitle: 程序员应该做开源项目的 6 个原因\ntags: [转载搬运, open-source]\ndate: 2016.07.30\n---\n\n“**开源开发人员都是义务劳动者**” 的观点已经成为编程世界中的陈词滥调，即使是那些伟大的开源举措也无法驳倒这种风靡一时的心态。\n\n但是真理总是掌握在少数人手里——即使是在开源惯例中，也需要参与开源的开发人员主动为其他人贡献他们的技能，一些企业（或企业集团）往往会因此雇用——并支付——这些程序员去研究特定的开源项目（如``Linux Kernel``）。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/640.jpg)\n\n<!--more-->\n\n除了开发人员确实可以从开源代码项目中得到薪酬这个事实外，还有6个理由可以说服你去做更多的开源项目——如果你是一个开发人员的话：\n\n### 学习和实践\n还有什么能让我们一直紧密关联自己的工作领域？\n作为一个程序员，你需要不断学习编码的最新趋势，你需要不断练习以进一步磨练自己的技能。开源是助你攀登这两座高峰的阶梯。开源的确是预防我们生锈的最佳途径。\n\n### 经验和简历\n你是一个新手开发者？那么，从开源项目中学习，并致力于开源项目是你获得经验和打造有吸引力的简历的最佳方法，它能让你争取到原本不可能的就业机会。\n在IT界找工作并不容易，而且如果你没有任何实战经验的话，那么情况就更糟了。但是如果当雇主看到你的简历，看到你已经参与过一些开源工作，那么可能会认为你主动积极，愿意工作，有工作经验——从而增加你被雇用的机会。\n\n### 网络和协作\n这是开源的主要精髓——也是开源培养的精神。你需要作为团队一员和其他程序员一起工作——优化项目，寻找并修复bug，等等。\n你可以与其他伟大的程序员联网，建立项目之外的关系。这是增加Twitter粉丝的好办法。开源还可以帮助你和那些志趣相投的，优质的联系人建立网络联系。\n你和你的小伙伴还可以一起工作于以后的项目，或者创建一个交流技巧的组群。各种可能数不胜数。\n\n### 展现（技能，代码等）\n参与开源项目能让你获得大量的曝光机会——无论是技能还是工作机会。\n通过使用以前写的代码，能让你节省大量编写开源代码的时间。此外，在你贡献了自己的代码之后，其他程序员可能会紧随你的身后去扩展这些代码——你可能会发现代码变得更高级。这是一个开发和机遇无休止的循环，可能会大大影响你的职业生涯。\n\n### 社区建设\n除了能让你获取伟大的实践和经验，开源还能帮助构建一个伟大的社区。因为它是开源的，所以大家可以互相学习彼此的技巧，提高自己的编码技能。\n教学相长。就像其他职业一样，你在教授别人的过程中，在为开源项目或社区简单地贡献自己的专业知识的同时，也可以学到东西。\n\n### 更好的收入机会\n现在，如果我们再回过头谈谈钱，为大家揭示所谓的“自由工作”神话。真的能赚到钱的编程或许就是开源领域了。\n为什么？这是因为虽然开源软件产品大多是免费提供给公司使用的，但是公司往往还是会雇用程序员（尤其是那些对此有贡献的程序员）来提供与开源软件相关的服务——例如，安装，支持，维护，等等。\n\n------------------------------------------------\n具有讽刺意味的是：这些服务很赚钱，而且比销售类似付费软件所赚的钱更多——反而这些付费软件不需要这些相关服务。\n现在，你知道开源的好处了吧，所以每个开发人员都应该致力于开源项目。而且开源不仅对开发人员有利，对企业而言，也是好事，因为它保证了最高的安全性和质量。\n开源并不是完全免费的志愿活动。相反，从长期来看，它能让你渐渐地超越你的同龄人，它会成为一棵真正的摇钱树。\n你以前有没有参与过开源项目？你获得的经验？好处？欢迎和我们一起分享。\n\n> ![程序员应该做开源项目的6个原因](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/qrcode/6_reason_for_opensource.png)","slug":"6_reason_for_opensource","published":1,"updated":"2016-08-04T20:26:40.334Z","_id":"cir9hv5ye00007sv427d02qla","comments":1,"layout":"post","photos":[],"link":"","content":"<p>“<strong>开源开发人员都是义务劳动者</strong>” 的观点已经成为编程世界中的陈词滥调，即使是那些伟大的开源举措也无法驳倒这种风靡一时的心态。</p>\n<p>但是真理总是掌握在少数人手里——即使是在开源惯例中，也需要参与开源的开发人员主动为其他人贡献他们的技能，一些企业（或企业集团）往往会因此雇用——并支付——这些程序员去研究特定的开源项目（如<code>Linux Kernel</code>）。</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/640.jpg\" alt=\"\"></p>\n<a id=\"more\"></a>\n<p>除了开发人员确实可以从开源代码项目中得到薪酬这个事实外，还有6个理由可以说服你去做更多的开源项目——如果你是一个开发人员的话：</p>\n<h3 id=\"学习和实践\"><a href=\"#学习和实践\" class=\"headerlink\" title=\"学习和实践\"></a>学习和实践</h3><p>还有什么能让我们一直紧密关联自己的工作领域？<br>作为一个程序员，你需要不断学习编码的最新趋势，你需要不断练习以进一步磨练自己的技能。开源是助你攀登这两座高峰的阶梯。开源的确是预防我们生锈的最佳途径。</p>\n<h3 id=\"经验和简历\"><a href=\"#经验和简历\" class=\"headerlink\" title=\"经验和简历\"></a>经验和简历</h3><p>你是一个新手开发者？那么，从开源项目中学习，并致力于开源项目是你获得经验和打造有吸引力的简历的最佳方法，它能让你争取到原本不可能的就业机会。<br>在IT界找工作并不容易，而且如果你没有任何实战经验的话，那么情况就更糟了。但是如果当雇主看到你的简历，看到你已经参与过一些开源工作，那么可能会认为你主动积极，愿意工作，有工作经验——从而增加你被雇用的机会。</p>\n<h3 id=\"网络和协作\"><a href=\"#网络和协作\" class=\"headerlink\" title=\"网络和协作\"></a>网络和协作</h3><p>这是开源的主要精髓——也是开源培养的精神。你需要作为团队一员和其他程序员一起工作——优化项目，寻找并修复bug，等等。<br>你可以与其他伟大的程序员联网，建立项目之外的关系。这是增加Twitter粉丝的好办法。开源还可以帮助你和那些志趣相投的，优质的联系人建立网络联系。<br>你和你的小伙伴还可以一起工作于以后的项目，或者创建一个交流技巧的组群。各种可能数不胜数。</p>\n<h3 id=\"展现（技能，代码等）\"><a href=\"#展现（技能，代码等）\" class=\"headerlink\" title=\"展现（技能，代码等）\"></a>展现（技能，代码等）</h3><p>参与开源项目能让你获得大量的曝光机会——无论是技能还是工作机会。<br>通过使用以前写的代码，能让你节省大量编写开源代码的时间。此外，在你贡献了自己的代码之后，其他程序员可能会紧随你的身后去扩展这些代码——你可能会发现代码变得更高级。这是一个开发和机遇无休止的循环，可能会大大影响你的职业生涯。</p>\n<h3 id=\"社区建设\"><a href=\"#社区建设\" class=\"headerlink\" title=\"社区建设\"></a>社区建设</h3><p>除了能让你获取伟大的实践和经验，开源还能帮助构建一个伟大的社区。因为它是开源的，所以大家可以互相学习彼此的技巧，提高自己的编码技能。<br>教学相长。就像其他职业一样，你在教授别人的过程中，在为开源项目或社区简单地贡献自己的专业知识的同时，也可以学到东西。</p>\n<h3 id=\"更好的收入机会\"><a href=\"#更好的收入机会\" class=\"headerlink\" title=\"更好的收入机会\"></a>更好的收入机会</h3><p>现在，如果我们再回过头谈谈钱，为大家揭示所谓的“自由工作”神话。真的能赚到钱的编程或许就是开源领域了。<br>为什么？这是因为虽然开源软件产品大多是免费提供给公司使用的，但是公司往往还是会雇用程序员（尤其是那些对此有贡献的程序员）来提供与开源软件相关的服务——例如，安装，支持，维护，等等。</p>\n<hr>\n<p>具有讽刺意味的是：这些服务很赚钱，而且比销售类似付费软件所赚的钱更多——反而这些付费软件不需要这些相关服务。<br>现在，你知道开源的好处了吧，所以每个开发人员都应该致力于开源项目。而且开源不仅对开发人员有利，对企业而言，也是好事，因为它保证了最高的安全性和质量。<br>开源并不是完全免费的志愿活动。相反，从长期来看，它能让你渐渐地超越你的同龄人，它会成为一棵真正的摇钱树。<br>你以前有没有参与过开源项目？你获得的经验？好处？欢迎和我们一起分享。</p>\n<blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/qrcode/6_reason_for_opensource.png\" alt=\"程序员应该做开源项目的6个原因\"></p>\n</blockquote>\n","excerpt":"<p>“<strong>开源开发人员都是义务劳动者</strong>” 的观点已经成为编程世界中的陈词滥调，即使是那些伟大的开源举措也无法驳倒这种风靡一时的心态。</p>\n<p>但是真理总是掌握在少数人手里——即使是在开源惯例中，也需要参与开源的开发人员主动为其他人贡献他们的技能，一些企业（或企业集团）往往会因此雇用——并支付——这些程序员去研究特定的开源项目（如<code>Linux Kernel</code>）。</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/640.jpg\" alt=\"\"></p>","more":"<p>除了开发人员确实可以从开源代码项目中得到薪酬这个事实外，还有6个理由可以说服你去做更多的开源项目——如果你是一个开发人员的话：</p>\n<h3 id=\"学习和实践\"><a href=\"#学习和实践\" class=\"headerlink\" title=\"学习和实践\"></a>学习和实践</h3><p>还有什么能让我们一直紧密关联自己的工作领域？<br>作为一个程序员，你需要不断学习编码的最新趋势，你需要不断练习以进一步磨练自己的技能。开源是助你攀登这两座高峰的阶梯。开源的确是预防我们生锈的最佳途径。</p>\n<h3 id=\"经验和简历\"><a href=\"#经验和简历\" class=\"headerlink\" title=\"经验和简历\"></a>经验和简历</h3><p>你是一个新手开发者？那么，从开源项目中学习，并致力于开源项目是你获得经验和打造有吸引力的简历的最佳方法，它能让你争取到原本不可能的就业机会。<br>在IT界找工作并不容易，而且如果你没有任何实战经验的话，那么情况就更糟了。但是如果当雇主看到你的简历，看到你已经参与过一些开源工作，那么可能会认为你主动积极，愿意工作，有工作经验——从而增加你被雇用的机会。</p>\n<h3 id=\"网络和协作\"><a href=\"#网络和协作\" class=\"headerlink\" title=\"网络和协作\"></a>网络和协作</h3><p>这是开源的主要精髓——也是开源培养的精神。你需要作为团队一员和其他程序员一起工作——优化项目，寻找并修复bug，等等。<br>你可以与其他伟大的程序员联网，建立项目之外的关系。这是增加Twitter粉丝的好办法。开源还可以帮助你和那些志趣相投的，优质的联系人建立网络联系。<br>你和你的小伙伴还可以一起工作于以后的项目，或者创建一个交流技巧的组群。各种可能数不胜数。</p>\n<h3 id=\"展现（技能，代码等）\"><a href=\"#展现（技能，代码等）\" class=\"headerlink\" title=\"展现（技能，代码等）\"></a>展现（技能，代码等）</h3><p>参与开源项目能让你获得大量的曝光机会——无论是技能还是工作机会。<br>通过使用以前写的代码，能让你节省大量编写开源代码的时间。此外，在你贡献了自己的代码之后，其他程序员可能会紧随你的身后去扩展这些代码——你可能会发现代码变得更高级。这是一个开发和机遇无休止的循环，可能会大大影响你的职业生涯。</p>\n<h3 id=\"社区建设\"><a href=\"#社区建设\" class=\"headerlink\" title=\"社区建设\"></a>社区建设</h3><p>除了能让你获取伟大的实践和经验，开源还能帮助构建一个伟大的社区。因为它是开源的，所以大家可以互相学习彼此的技巧，提高自己的编码技能。<br>教学相长。就像其他职业一样，你在教授别人的过程中，在为开源项目或社区简单地贡献自己的专业知识的同时，也可以学到东西。</p>\n<h3 id=\"更好的收入机会\"><a href=\"#更好的收入机会\" class=\"headerlink\" title=\"更好的收入机会\"></a>更好的收入机会</h3><p>现在，如果我们再回过头谈谈钱，为大家揭示所谓的“自由工作”神话。真的能赚到钱的编程或许就是开源领域了。<br>为什么？这是因为虽然开源软件产品大多是免费提供给公司使用的，但是公司往往还是会雇用程序员（尤其是那些对此有贡献的程序员）来提供与开源软件相关的服务——例如，安装，支持，维护，等等。</p>\n<hr>\n<p>具有讽刺意味的是：这些服务很赚钱，而且比销售类似付费软件所赚的钱更多——反而这些付费软件不需要这些相关服务。<br>现在，你知道开源的好处了吧，所以每个开发人员都应该致力于开源项目。而且开源不仅对开发人员有利，对企业而言，也是好事，因为它保证了最高的安全性和质量。<br>开源并不是完全免费的志愿活动。相反，从长期来看，它能让你渐渐地超越你的同龄人，它会成为一棵真正的摇钱树。<br>你以前有没有参与过开源项目？你获得的经验？好处？欢迎和我们一起分享。</p>\n<blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/qrcode/6_reason_for_opensource.png\" alt=\"程序员应该做开源项目的6个原因\"></p>\n</blockquote>"},{"title":"Github contributions reach 4000 points","sticky":100,"date":"2016-07-30T16:00:00.000Z","_content":"\nHi, fellows,\n\nToday I gladly announced that my personal open source contributions on the github community have reach 4000 points, from the continute works on github have been half year with almost 200 streak days.\n\nCheers! ![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/my/20160708144913.gif)\n\n<img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/my/github_4000_hits.png\" width=\"450\" />\n\n<!--more-->\n### **Check list for year 2016**\n\n+ **√. 100 days streak _#4th, May#_**\n\t+ ![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/my/100_streaks.png)\n+ **√. Publish my first packages on the [nuget.org](https://www.nuget.org/profiles/xieguigang) _#11th, May#_**\n+ **√. Join as a Microsoft company dotnetfoundation contributor _#5th, Jul#_**\n\t+ ![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/my/.net_clas.png)\n+ **√. Fall in loves with my girl**\n\n### **What's my next?**\nThis September I will going to work in the **Bei Jing** city, the capital city of China. A fantastic city that can provide me a more Broader platform for my bioinformatics software development career. With new challenge, Do great things and meet new friends in this new environment.\n\nDue to the reason of start busy with the company works, so that the open source works of [GCModeller](http://gcmodeller.org) project on [github](https://github.com/SMRUCC/GCModeller) may be slowing down, but this open source project development will not be stop, and continue move on in my free time. And probably the GCModeller coding will be more professional as I will benefit from my new job by learning lots of new technical skill knowledge to solving the scientific problems.\n\nGood luck with me! **&lt;(￣︶￣)↗[GO!]**\n\n_#2016-07-31#_  write in Hong Kong University.\n\n> <iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"http://music.163.com/outchain/player?type=2&id=422463176&auto=1&height=66\"></iframe>\n> calling - TV动画《情热传说 the X》片尾曲 / TVアニメ『テイルズ オブ ゼスティリア ザ クロス』ED主題歌\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/c/83f40ada28b2ba3a.jpg)","source":"_posts/github_4000_contribution.md","raw":"---\ntitle: Github contributions reach 4000 points\nsticky: 100\ntags: [github, check-point]\ndate: 2016-07-31\n---\n\nHi, fellows,\n\nToday I gladly announced that my personal open source contributions on the github community have reach 4000 points, from the continute works on github have been half year with almost 200 streak days.\n\nCheers! ![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/my/20160708144913.gif)\n\n<img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/my/github_4000_hits.png\" width=\"450\" />\n\n<!--more-->\n### **Check list for year 2016**\n\n+ **√. 100 days streak _#4th, May#_**\n\t+ ![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/my/100_streaks.png)\n+ **√. Publish my first packages on the [nuget.org](https://www.nuget.org/profiles/xieguigang) _#11th, May#_**\n+ **√. Join as a Microsoft company dotnetfoundation contributor _#5th, Jul#_**\n\t+ ![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/my/.net_clas.png)\n+ **√. Fall in loves with my girl**\n\n### **What's my next?**\nThis September I will going to work in the **Bei Jing** city, the capital city of China. A fantastic city that can provide me a more Broader platform for my bioinformatics software development career. With new challenge, Do great things and meet new friends in this new environment.\n\nDue to the reason of start busy with the company works, so that the open source works of [GCModeller](http://gcmodeller.org) project on [github](https://github.com/SMRUCC/GCModeller) may be slowing down, but this open source project development will not be stop, and continue move on in my free time. And probably the GCModeller coding will be more professional as I will benefit from my new job by learning lots of new technical skill knowledge to solving the scientific problems.\n\nGood luck with me! **&lt;(￣︶￣)↗[GO!]**\n\n_#2016-07-31#_  write in Hong Kong University.\n\n> <iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"http://music.163.com/outchain/player?type=2&id=422463176&auto=1&height=66\"></iframe>\n> calling - TV动画《情热传说 the X》片尾曲 / TVアニメ『テイルズ オブ ゼスティリア ザ クロス』ED主題歌\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/c/83f40ada28b2ba3a.jpg)","slug":"github_4000_contribution","published":1,"updated":"2016-08-04T21:17:57.020Z","_id":"cir9j70jz0000dwv4u851lrv2","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Hi, fellows,</p>\n<p>Today I gladly announced that my personal open source contributions on the github community have reach 4000 points, from the continute works on github have been half year with almost 200 streak days.</p>\n<p>Cheers! <img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/my/20160708144913.gif\" alt=\"\"></p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/my/github_4000_hits.png\" width=\"450\"></p>\n<a id=\"more\"></a>\n<h3 id=\"Check-list-for-year-2016\"><a href=\"#Check-list-for-year-2016\" class=\"headerlink\" title=\"Check list for year 2016\"></a><strong>Check list for year 2016</strong></h3><ul>\n<li><strong>√. 100 days streak <em>#4th, May#</em></strong><ul>\n<li><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/my/100_streaks.png\" alt=\"\"></li>\n</ul>\n</li>\n<li><strong>√. Publish my first packages on the <a href=\"https://www.nuget.org/profiles/xieguigang\" target=\"_blank\" rel=\"external\">nuget.org</a> <em>#11th, May#</em></strong></li>\n<li><strong>√. Join as a Microsoft company dotnetfoundation contributor <em>#5th, Jul#</em></strong><ul>\n<li><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/my/.net_clas.png\" alt=\"\"></li>\n</ul>\n</li>\n<li><strong>√. Fall in loves with my girl</strong></li>\n</ul>\n<h3 id=\"What’s-my-next\"><a href=\"#What’s-my-next\" class=\"headerlink\" title=\"What’s my next?\"></a><strong>What’s my next?</strong></h3><p>This September I will going to work in the <strong>Bei Jing</strong> city, the capital city of China. A fantastic city that can provide me a more Broader platform for my bioinformatics software development career. With new challenge, Do great things and meet new friends in this new environment.</p>\n<p>Due to the reason of start busy with the company works, so that the open source works of <a href=\"http://gcmodeller.org\" target=\"_blank\" rel=\"external\">GCModeller</a> project on <a href=\"https://github.com/SMRUCC/GCModeller\" target=\"_blank\" rel=\"external\">github</a> may be slowing down, but this open source project development will not be stop, and continue move on in my free time. And probably the GCModeller coding will be more professional as I will benefit from my new job by learning lots of new technical skill knowledge to solving the scientific problems.</p>\n<p>Good luck with me! <strong>&lt;(￣︶￣)↗[GO!]</strong></p>\n<p><em>#2016-07-31#</em>  write in Hong Kong University.</p>\n<blockquote>\n<p><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"http://music.163.com/outchain/player?type=2&id=422463176&auto=1&height=66\"></iframe><br>calling - TV动画《情热传说 the X》片尾曲 / TVアニメ『テイルズ オブ ゼスティリア ザ クロス』ED主題歌</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/c/83f40ada28b2ba3a.jpg\" alt=\"\"></p>\n","excerpt":"<p>Hi, fellows,</p>\n<p>Today I gladly announced that my personal open source contributions on the github community have reach 4000 points, from the continute works on github have been half year with almost 200 streak days.</p>\n<p>Cheers! <img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/my/20160708144913.gif\" alt=\"\"></p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/my/github_4000_hits.png\" width=\"450\" /></p>","more":"<h3 id=\"Check-list-for-year-2016\"><a href=\"#Check-list-for-year-2016\" class=\"headerlink\" title=\"Check list for year 2016\"></a><strong>Check list for year 2016</strong></h3><ul>\n<li><strong>√. 100 days streak <em>#4th, May#</em></strong><ul>\n<li><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/my/100_streaks.png\" alt=\"\"></li>\n</ul>\n</li>\n<li><strong>√. Publish my first packages on the <a href=\"https://www.nuget.org/profiles/xieguigang\">nuget.org</a> <em>#11th, May#</em></strong></li>\n<li><strong>√. Join as a Microsoft company dotnetfoundation contributor <em>#5th, Jul#</em></strong><ul>\n<li><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/my/.net_clas.png\" alt=\"\"></li>\n</ul>\n</li>\n<li><strong>√. Fall in loves with my girl</strong></li>\n</ul>\n<h3 id=\"What’s-my-next\"><a href=\"#What’s-my-next\" class=\"headerlink\" title=\"What’s my next?\"></a><strong>What’s my next?</strong></h3><p>This September I will going to work in the <strong>Bei Jing</strong> city, the capital city of China. A fantastic city that can provide me a more Broader platform for my bioinformatics software development career. With new challenge, Do great things and meet new friends in this new environment.</p>\n<p>Due to the reason of start busy with the company works, so that the open source works of <a href=\"http://gcmodeller.org\">GCModeller</a> project on <a href=\"https://github.com/SMRUCC/GCModeller\">github</a> may be slowing down, but this open source project development will not be stop, and continue move on in my free time. And probably the GCModeller coding will be more professional as I will benefit from my new job by learning lots of new technical skill knowledge to solving the scientific problems.</p>\n<p>Good luck with me! <strong>&lt;(￣︶￣)↗[GO!]</strong></p>\n<p><em>#2016-07-31#</em>  write in Hong Kong University.</p>\n<blockquote>\n<p><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"http://music.163.com/outchain/player?type=2&id=422463176&auto=1&height=66\"></iframe><br>calling - TV动画《情热传说 the X》片尾曲 / TVアニメ『テイルズ オブ ゼスティリア ザ クロス』ED主題歌</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/c/83f40ada28b2ba3a.jpg\" alt=\"\"></p>"},{"title":"R语言 假设检验（非参数） 学习笔记","date":"2016-07-31T16:00:00.000Z","_content":"\n### 1. 皮尔森拟合优度塔防检验\n\n+ 假设H0：总体具有某分布F\n+ 备择假设H1：总体不具有该分布。\n\n我们将数轴分成若干个区间，所抽取的样本会分布在这些区间中。在原假设成立的条件下，我们便知道每个区间包含样本的个数的期望值。用实际值``Ni``与期望值``Npi``可以构造统计量``K``。皮尔森证明，**``n``趋向于无穷时，``k``收敛于``m-1``的塔防分布**。``m``为我们分组的个数。有了这个分布，我们就可以做假设检验。\n\n<!--more-->\n\n例：\n> 某消费者协会为了确定市场上消费者对5中品牌啤酒的喜好情况，随机抽取了1000名啤酒爱好者作为样本进行如下实验：每个人得到5种品牌的啤酒各一瓶，但是未标明牌子，这5种啤酒按分别写着A、B、C、D、E字母的5张纸片随机的顺序送给每一个人，下表是根据样本资料整理得到的各种品牌啤酒爱好者的频数分布。试根据这些数据判断消费者对这5种品牌啤酒的爱好有无明显差异？\n>\n\n> ###### 5种品牌啤酒爱好者的频数\n>\n>|最喜欢的牌子|A|B|C|D|E|\n>|-----------|--|--|--|--|--|\n>|人数``X``|210|312|170|85|223|\n\n```R\n# 如果是均匀分布，则没有明显差异 。这里组其实已经分好了，直接用 。H0：人数服从均匀分布\nx <- c(210,312,170,85,223)\nn <- sum(x); m <- length(x)\np <- rep(1/m,m)\nK <- sum((x-n*p)^2/(n*p)); K #计算出K值\n# [1] 136.49\n\np <- 1-pchisq(K,m-1); p #计算出p值\n# [1] 0 #拒绝原假设。\n```\n\n在R语言中 ``chisq.test()``，可以完成拟合优度检验。默认就是检验是否为均匀分布，如果是其他分布，需要自己分组，并在参数``p``中指出。上面题目的解法\n\n```R\nchisq.test(x)\n#\n#         Chi-squared test for given probabilities\n#\n# data:  x\n# X-squared = 136.49, df = 4, p-value < 2.2e-16 #同样拒绝原假设。\n```\n\n例，用这个函数检验其他分布。 抽取31名学生的成绩，检验是否为正态分布。\n\n```R\nx <- c(25,45,50,54,55,61,64,68,72,75,75,78,79,81,83,84,84,84,85, 86,86,86,87,89,89,89,90,91,91,92,100)\nA <- table(cut(x,breaks=c(0,69,79,89,100))) #对样本数据进行分组。\nA\n\n#  (0,69]  (69,79]  (79,89] (89,100]\n#       8        5       13        5\np <- pnorm(c(70,80,90,100),mean(x),sd(x)) #获得理论分布的概率值\np <- c(p[1],p[2]-p[1],p[3]-p[2],1-p[3])\nchisq.test(A,p=p)\n\n#        Chi-squared test for given probabilities\n#\n# data:  A\n# X-squared = 8.334, df = 3, p-value = 0.03959  #检验结果不是正态的。\n```\n\n例：大麦杂交后关于芒性的比例应该是 无芒：长芒：短芒=9:3:4 。 我们的实际观测值是335：125：160 。请问观测值是否符合预期？\n\n```R\np <- c(9/16,3/16,4/16)\nx <- c(335,125,160)\nchisq.test(x,p=p)\n\n#        Chi-squared test for given probabilities\n#\n# data:  x\n# X-squared = 1.362, df = 2, p-value = 0.5061\n```\n\n在分组的时候要注意，每组的频数要大于等于5.\n如果理论分布依赖于多个未知参数，只能先由样本得到参数的估计量。然后构造统计量``K``，此时``K``的自由度减少位置参数的数量个。\n\n### 2. ks检验\n\nR语言中提供了``ks.test()``函数，理论上可以检验任何分布。他既能够做单样本检验，也能做双样本检验。\n\n**单样本**\n例：记录一台设备无故障工作时常，并从小到大排序``420 500 920 1380 1510 1650 1760 2100 2300 2350``。问这些时间是否服从``拉姆达=1/1500``的指数分布？\n\n```R\nx <- c(420,500,920,1380,1510,1650,1760,2100,2300,2350)\nks.test(x,\"pexp\",1/1500)\n\n#        One-sample Kolmogorov-Smirnov test\n#\n# data:  x\n# D = 0.3015, p-value = 0.2654\n# alternative hypothesis: two-sided\n```\n\n**双样本**\n例：有两个分布，分别抽样了一些数据，问他们是否服从相同的分布。\n\n```R\nX<-scan()\n# 1: 0.61 0.29 0.06 0.59 -1.73 -0.74 0.51 -0.56 0.39\n# 10: 1.64 0.05 -0.06 0.64 -0.82 0.37 1.77 1.09 -1.28\n# 19: 2.36 1.31 1.05 -0.32 -0.40 1.06 -2.47\n# 26: \n# Read 25 items\nY<-scan()\n# 1: 2.20 1.66 1.38 0.20 0.36 0.00 0.96 1.56 0.44\n# 10: 1.50 -0.30 0.66 2.31 3.29 -0.27 -0.37 0.38 0.70\n# 19: 0.52 -0.71\n# 21: \n# Read 20 items\nks.test(X,Y)\n\n#        Two-sample Kolmogorov-Smirnov test #原假设为 他们的分布相同\n#\n# data:  X and Y\n# D = 0.23, p-value = 0.5286\n# alternative hypothesis: two-sided\n```\n\n### 3. 列联表数据独立性检验\n\n``chisq.test()``同样可以做列联表数据独立性检验，只要将数据写成矩阵的形式就可以了。\n\n###### 列联表数据\n\n| |患肺癌|未患肺癌|合计|\n|-|-----|-------|---|\n|吸烟|60|32|92|\n|不吸烟|3|11|14|\n|合计|63|43|106|\n\n```R\nx <- matrix(c(60,3,32,11),nrow=2) #参数correct是逻辑变量 表示带不带连续矫正。\nx\n#      [,1] [,2]\n# [1,]   60   32\n# [2,]    3   11\nchisq.test(x)\n\n#\n#        Pearson's Chi-squared test with Yates' continuity correction\n#\n# data:  x\n# X-squared = 7.9327, df = 1, p-value = 0.004855  #拒绝假设 认为有关系\n```\n\n如果一个单元格内的数据小于5 那么做``pearson``检验是无效的。此时应该使用``Fisher``精确检验。\n\n例：\n\n> 某医生为研究乙肝免疫球蛋白预防胎儿宫内感染HBV的效果，将33例HBsAg阳性孕妇随机分为预防注射组和对照组，结果由下表所示。问两组新生儿的HBV总体感染率有无差别？\n> ###### 两组新生儿HBV感染率的比较\n>\n> |组别|阳性|阴性|合计|感染率(%)|\n> |----|---|---|---|---------|\n> |预防注射组|4|18|22|18.18|\n> |对照组|5|6|11|45.45|\n> |合计|9|24|33|27.27|\n\n```R\nx <- matrix(c(4,5,18,6),nrow=2)\nx\n#     [,1] [,2]\n# [1,]    4   18\n# [2,]    5    6\nfisher.test(x)\n\n#        Fisher's Exact Test for Count Data\n#\n# data:  x\n# p-value = 0.121\n# alternative hypothesis: true odds ratio is not equal to 1\n# 95 percent confidence interval:\n# 0.03974151 1.76726409  #p值大与0.05， 区间估计包含1，所以认为没有关系。\n# sample estimates:\n# odds ratio\n# 0.2791061\n```\n\n``McNemar``检验。这个不是相关性检验。是配对卡放检验。也就是说，我们是对一个样本做了两次观测，本身不是独立的样本而是相关的样本，而我们检验的是变化的强度。H0：频数没有发生变化。\n\n###### 相依配对计数资料\n\n| |治疗后具有症状A|治疗后不具有症状A|\n|-|-------------|--------------|\n|治疗前不具有症状A|a|b|\n|治疗前具有症状A|c|d|\n\n> 用法就不举例了。单元格内数字不得小于5.n要大于100.\n\n### 4. 符号检验\n\n当我们以中位数将数据分为两边，一边为正，一边为负，那么样本出现在两边的概率应该都为1/2。因此，使用p=0.2的二项检验就可以做符号检验了。\n例：\n> 统计了66个城市的生活花费指数，北京的生活花费指数为99 。请问北京是否位于中位数以上。\n\n```R\nx <- scan()\n# 1: 66 75 78 80 81 81 82 83 83 83 83\n# 12: 84 85 85 86 86 86 86 87 87 88 88\n# 23: 88 88 88 89 89 89 89 90 90 91 91\n# 34: 91 91 92 93 93 96 96 96 97 99 100\n# 45: 101 102 103 103 104 104 104 105 106 109 109\n# 56: 110 110 110 111 113 115 116 117 118 155 192\n# 67:\n# Read 66 items\n\nbinom.test(sum(x>99),length(x),alternative=\"less\")\n\n#        Exact binomial test\n#\n# data:  sum(x > 99) and length(x)\n# number of successes = 23, number of trials = 66, p-value = 0.009329\n# alternative hypothesis: true probability of success is less than 0.5\n# 95 percent confidence interval:\n# 0.0000000 0.4563087\n# sample estimates:\n# probability of success\n#             0.3484848   #北京位于中位数下。\n```\n\n符号检验也可以用来检验两个总体是否存在明显差异。要是没有差异，那么两者之差为正的概率为0.5.\n\n> 用两种不同的饲料养猪，其增重情况如下表所示，请分析两种饲料\n>\n> ###### 不同饲料养猪的增重情况\n>\n> |对编号|1|2|3|4|5|6|7|8|9|10|11|12|13|14|\n> |-----|-|-|-|-|-|-|-|-|-|--|--|--|--|--|\n> |饲料X|25|30|28|23|27|35|30|28|32|29|30|30|31|16|\n> |饲料Y|19|32|21|19|25|31|31|26|30|25|28|31|25|25|\n\n例：\n\n```R\ny <- c(19,32,21,19,25,31,31,26,30,25,28,31,25,25)\nx <- c(25,30,28,23,27,35,30,28,32,29,30,30,31,16)\nbinom.test(sum(x<y),length(x))\n\n#        Exact binomial test\n#\n# data:  sum(x < y) and length(x)\n# number of successes = 4, number of trials = 14, p-value = 0.1796\n# alternative hypothesis: true probability of success is not equal to 0.5\n# 95 percent confidence interval:\n# 0.08388932 0.58103526\n# sample estimates:\n# probability of success\n#             0.2857143  #无明显差异。这个例子不是很好\n```\n\n例\n> 某饮料店为了解顾客对饮料的爱好情况，进一步改进他们的工作，对顾客喜欢咖啡还是喜欢奶茶，或者两者同样爱好进行了调查。该店在某日随机的抽取了13名顾客进行了调查，顾客喜欢咖啡超过奶茶用正号表示，喜欢奶茶超过咖啡用负号表示，两者同样爱好用0表示，现将调查的结果列在下表中:\n>\n> ###### 不同顾客的爱好情况\n>\n> |顾客编号|1|2|3|4|5|6|7|8|9|10|11|12|13|\n> |-------|-|-|-|-|-|-|-|-|-|--|--|--|--|\n> |喜欢咖啡|1||1|1|1|0|1||1|1|1||1|\n> |喜欢奶茶||1||||||1||||1|||\n\n\n题目中标识为0的意思是两者同样喜欢。\n\n```R\nbinom.test(3,12,alternative=\"less\",conf.level=0.9)\n\n#        Exact binomial test\n#\n# data:  3 and 12\n# number of successes = 3, number of trials = 12, p-value = 0.073\n# alternative hypothesis: true probability of success is less than 0.5\n# 90 percent confidence interval:\n# 0.0000000 0.4752663\n# sample estimates:\n# probability of success  #p<0.1 接受备择假设 认为有差异\n#                  0.25\n```\n\n### 5. 秩相关检验\n\n在R语言中，``rank()``函数用来求秩，如果向量中有相同的数据，求出的秩可能不合我们的要求，对数据做微调即可\n\n```R\nx <- c(1.2,0.8,-3.1,2,1.2)\nrank(x)\n# [1] 3.5 2.0 1.0 5.0 3.5\nx <- c(1.2,0.8,-3.1,2,1.2+1e-5)\nrank(x)\n# [1] 3 2 1 5 4\n```\n\n利用秩可以做相关性检验。具体在上上篇笔记里已经讲了。``cor.test( method=\"spearman,kendell\")``\n\n### 6. wilcoxon检验\n\n符号检验只考虑了符号，没有考虑要差异的大小。``wilcoxon``解决了这个问题。假设，数据是连续分布的，数据是关于中位数对称的。\n\n例：\n> 某电池厂商生产的电池中位数为140.现从新生产的电池中抽取20个测试。请问电池是否合格\n\n```R\nx <- c(137,140,138.3,139,144.3,139.1,141.7,137.3,133.5,138.2,141.1,139.2,136.5,136.5,135.6,138,140.9,140.6,136.3,134.1)\nwilcox.test(x,mu=140,alternative=\"less\",exact=F,correct=F,confi.int=T)\n\n#        Wilcoxon signed rank test\n#\n# data:  x\n# V = 34, p-value = 0.007034\n# alternative hypothesis: true location is less than 140\n```\n\n``wilcox.test()``做成对样本检测。\n\n例：\n> 在农场中选择了10块农田，将每一块农田分成2小块，分别用不同的化肥种菜。请问化肥会不会提高蔬菜产量。\n\n```R\nx <- c(459,367,303,392,310,342,421,446,430,412)\ny <- c(414,306,321,443,281,301,353,391,405,390)\nwilcox.test(x-y,alternative=\"greater\")\n\n#        Wilcoxon signed rank test\n#\n# data:  x - y\n# V = 47, p-value = 0.02441\n# alternative hypothesis: true location is greater than 0 #能够提高产量\n```\n\n非配对双样本检测：\n\n例\n> 今测得10名非铅作业工人和7名铅作业工人的血铅值，如下表所示，试用Wilcoxon秩和检验分析两组工人血铅值有无差异\n>\n> ###### 两组工人的血铅值（单位： 1e-6mmol/L）\n>\n> |非铅作业组|24|26|29|34|43|58|63|72|87|101|\n> |---------|--|--|--|--|--|--|--|--|--|---|\n> |铅作业组|82|87|97|121|164|208|213|||||\n\n```R\nx <- c(24,26,29,34,43,58,63,72,87,101)\ny <- c(82,87,97,121,164,208,213)\nwilcox.test(x,y,alternative=\"less\")\n\n#        Wilcoxon rank sum test with continuity correction\n#\n# data:  x and y\n# W = 4.5, p-value = 0.001698\n# alternative hypothesis: true location shift is less than 0\n#\n# Warning message:\n# In wilcox.test.default(x, y, alternative = \"less\") :\n# cannot compute exact p-value with ties #好奇怪这里为什么会有警告。。明明没有同秩的现象。\n```\n\n例\n\n> 某医院用某种药物治疗两型慢性支气管炎患者共216例，疗效由下表所示。试分析该药物对两型慢性支气管炎的治疗是否相同\n>\n> ###### 某种药物治疗两型慢性支气管炎疗效结果\n>\n> |疗效|控制|显效|进步|无效|\n> |---|----|---|---|---|\n> |单纯型|62|41|14|11|\n> |喘息性|20|37|16|15|\n\n```R\nx <- rep(1:4,c(62,41,14,11))\ny <- rep(1:4,c(20,37,16,15))\nwilcox.test(x,y)\n\n#        Wilcoxon rank sum test with continuity correction\n#\n# data:  x and y\n# W = 3994, p-value = 0.0001242\n# alternative hypothesis: true location shift is not equal to 0\n```\n\n\n> ![一只小桃子 - R语言 假设检验（非参数） 学习笔记](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/qrcode/R_hypothesis_testing.png)","source":"_posts/R_hypothesis_testing.md","raw":"---\ntitle: R语言 假设检验（非参数） 学习笔记\ntags: [R, statics, note, 转载]\ndate: 2016-8-1\n---\n\n### 1. 皮尔森拟合优度塔防检验\n\n+ 假设H0：总体具有某分布F\n+ 备择假设H1：总体不具有该分布。\n\n我们将数轴分成若干个区间，所抽取的样本会分布在这些区间中。在原假设成立的条件下，我们便知道每个区间包含样本的个数的期望值。用实际值``Ni``与期望值``Npi``可以构造统计量``K``。皮尔森证明，**``n``趋向于无穷时，``k``收敛于``m-1``的塔防分布**。``m``为我们分组的个数。有了这个分布，我们就可以做假设检验。\n\n<!--more-->\n\n例：\n> 某消费者协会为了确定市场上消费者对5中品牌啤酒的喜好情况，随机抽取了1000名啤酒爱好者作为样本进行如下实验：每个人得到5种品牌的啤酒各一瓶，但是未标明牌子，这5种啤酒按分别写着A、B、C、D、E字母的5张纸片随机的顺序送给每一个人，下表是根据样本资料整理得到的各种品牌啤酒爱好者的频数分布。试根据这些数据判断消费者对这5种品牌啤酒的爱好有无明显差异？\n>\n\n> ###### 5种品牌啤酒爱好者的频数\n>\n>|最喜欢的牌子|A|B|C|D|E|\n>|-----------|--|--|--|--|--|\n>|人数``X``|210|312|170|85|223|\n\n```R\n# 如果是均匀分布，则没有明显差异 。这里组其实已经分好了，直接用 。H0：人数服从均匀分布\nx <- c(210,312,170,85,223)\nn <- sum(x); m <- length(x)\np <- rep(1/m,m)\nK <- sum((x-n*p)^2/(n*p)); K #计算出K值\n# [1] 136.49\n\np <- 1-pchisq(K,m-1); p #计算出p值\n# [1] 0 #拒绝原假设。\n```\n\n在R语言中 ``chisq.test()``，可以完成拟合优度检验。默认就是检验是否为均匀分布，如果是其他分布，需要自己分组，并在参数``p``中指出。上面题目的解法\n\n```R\nchisq.test(x)\n#\n#         Chi-squared test for given probabilities\n#\n# data:  x\n# X-squared = 136.49, df = 4, p-value < 2.2e-16 #同样拒绝原假设。\n```\n\n例，用这个函数检验其他分布。 抽取31名学生的成绩，检验是否为正态分布。\n\n```R\nx <- c(25,45,50,54,55,61,64,68,72,75,75,78,79,81,83,84,84,84,85, 86,86,86,87,89,89,89,90,91,91,92,100)\nA <- table(cut(x,breaks=c(0,69,79,89,100))) #对样本数据进行分组。\nA\n\n#  (0,69]  (69,79]  (79,89] (89,100]\n#       8        5       13        5\np <- pnorm(c(70,80,90,100),mean(x),sd(x)) #获得理论分布的概率值\np <- c(p[1],p[2]-p[1],p[3]-p[2],1-p[3])\nchisq.test(A,p=p)\n\n#        Chi-squared test for given probabilities\n#\n# data:  A\n# X-squared = 8.334, df = 3, p-value = 0.03959  #检验结果不是正态的。\n```\n\n例：大麦杂交后关于芒性的比例应该是 无芒：长芒：短芒=9:3:4 。 我们的实际观测值是335：125：160 。请问观测值是否符合预期？\n\n```R\np <- c(9/16,3/16,4/16)\nx <- c(335,125,160)\nchisq.test(x,p=p)\n\n#        Chi-squared test for given probabilities\n#\n# data:  x\n# X-squared = 1.362, df = 2, p-value = 0.5061\n```\n\n在分组的时候要注意，每组的频数要大于等于5.\n如果理论分布依赖于多个未知参数，只能先由样本得到参数的估计量。然后构造统计量``K``，此时``K``的自由度减少位置参数的数量个。\n\n### 2. ks检验\n\nR语言中提供了``ks.test()``函数，理论上可以检验任何分布。他既能够做单样本检验，也能做双样本检验。\n\n**单样本**\n例：记录一台设备无故障工作时常，并从小到大排序``420 500 920 1380 1510 1650 1760 2100 2300 2350``。问这些时间是否服从``拉姆达=1/1500``的指数分布？\n\n```R\nx <- c(420,500,920,1380,1510,1650,1760,2100,2300,2350)\nks.test(x,\"pexp\",1/1500)\n\n#        One-sample Kolmogorov-Smirnov test\n#\n# data:  x\n# D = 0.3015, p-value = 0.2654\n# alternative hypothesis: two-sided\n```\n\n**双样本**\n例：有两个分布，分别抽样了一些数据，问他们是否服从相同的分布。\n\n```R\nX<-scan()\n# 1: 0.61 0.29 0.06 0.59 -1.73 -0.74 0.51 -0.56 0.39\n# 10: 1.64 0.05 -0.06 0.64 -0.82 0.37 1.77 1.09 -1.28\n# 19: 2.36 1.31 1.05 -0.32 -0.40 1.06 -2.47\n# 26: \n# Read 25 items\nY<-scan()\n# 1: 2.20 1.66 1.38 0.20 0.36 0.00 0.96 1.56 0.44\n# 10: 1.50 -0.30 0.66 2.31 3.29 -0.27 -0.37 0.38 0.70\n# 19: 0.52 -0.71\n# 21: \n# Read 20 items\nks.test(X,Y)\n\n#        Two-sample Kolmogorov-Smirnov test #原假设为 他们的分布相同\n#\n# data:  X and Y\n# D = 0.23, p-value = 0.5286\n# alternative hypothesis: two-sided\n```\n\n### 3. 列联表数据独立性检验\n\n``chisq.test()``同样可以做列联表数据独立性检验，只要将数据写成矩阵的形式就可以了。\n\n###### 列联表数据\n\n| |患肺癌|未患肺癌|合计|\n|-|-----|-------|---|\n|吸烟|60|32|92|\n|不吸烟|3|11|14|\n|合计|63|43|106|\n\n```R\nx <- matrix(c(60,3,32,11),nrow=2) #参数correct是逻辑变量 表示带不带连续矫正。\nx\n#      [,1] [,2]\n# [1,]   60   32\n# [2,]    3   11\nchisq.test(x)\n\n#\n#        Pearson's Chi-squared test with Yates' continuity correction\n#\n# data:  x\n# X-squared = 7.9327, df = 1, p-value = 0.004855  #拒绝假设 认为有关系\n```\n\n如果一个单元格内的数据小于5 那么做``pearson``检验是无效的。此时应该使用``Fisher``精确检验。\n\n例：\n\n> 某医生为研究乙肝免疫球蛋白预防胎儿宫内感染HBV的效果，将33例HBsAg阳性孕妇随机分为预防注射组和对照组，结果由下表所示。问两组新生儿的HBV总体感染率有无差别？\n> ###### 两组新生儿HBV感染率的比较\n>\n> |组别|阳性|阴性|合计|感染率(%)|\n> |----|---|---|---|---------|\n> |预防注射组|4|18|22|18.18|\n> |对照组|5|6|11|45.45|\n> |合计|9|24|33|27.27|\n\n```R\nx <- matrix(c(4,5,18,6),nrow=2)\nx\n#     [,1] [,2]\n# [1,]    4   18\n# [2,]    5    6\nfisher.test(x)\n\n#        Fisher's Exact Test for Count Data\n#\n# data:  x\n# p-value = 0.121\n# alternative hypothesis: true odds ratio is not equal to 1\n# 95 percent confidence interval:\n# 0.03974151 1.76726409  #p值大与0.05， 区间估计包含1，所以认为没有关系。\n# sample estimates:\n# odds ratio\n# 0.2791061\n```\n\n``McNemar``检验。这个不是相关性检验。是配对卡放检验。也就是说，我们是对一个样本做了两次观测，本身不是独立的样本而是相关的样本，而我们检验的是变化的强度。H0：频数没有发生变化。\n\n###### 相依配对计数资料\n\n| |治疗后具有症状A|治疗后不具有症状A|\n|-|-------------|--------------|\n|治疗前不具有症状A|a|b|\n|治疗前具有症状A|c|d|\n\n> 用法就不举例了。单元格内数字不得小于5.n要大于100.\n\n### 4. 符号检验\n\n当我们以中位数将数据分为两边，一边为正，一边为负，那么样本出现在两边的概率应该都为1/2。因此，使用p=0.2的二项检验就可以做符号检验了。\n例：\n> 统计了66个城市的生活花费指数，北京的生活花费指数为99 。请问北京是否位于中位数以上。\n\n```R\nx <- scan()\n# 1: 66 75 78 80 81 81 82 83 83 83 83\n# 12: 84 85 85 86 86 86 86 87 87 88 88\n# 23: 88 88 88 89 89 89 89 90 90 91 91\n# 34: 91 91 92 93 93 96 96 96 97 99 100\n# 45: 101 102 103 103 104 104 104 105 106 109 109\n# 56: 110 110 110 111 113 115 116 117 118 155 192\n# 67:\n# Read 66 items\n\nbinom.test(sum(x>99),length(x),alternative=\"less\")\n\n#        Exact binomial test\n#\n# data:  sum(x > 99) and length(x)\n# number of successes = 23, number of trials = 66, p-value = 0.009329\n# alternative hypothesis: true probability of success is less than 0.5\n# 95 percent confidence interval:\n# 0.0000000 0.4563087\n# sample estimates:\n# probability of success\n#             0.3484848   #北京位于中位数下。\n```\n\n符号检验也可以用来检验两个总体是否存在明显差异。要是没有差异，那么两者之差为正的概率为0.5.\n\n> 用两种不同的饲料养猪，其增重情况如下表所示，请分析两种饲料\n>\n> ###### 不同饲料养猪的增重情况\n>\n> |对编号|1|2|3|4|5|6|7|8|9|10|11|12|13|14|\n> |-----|-|-|-|-|-|-|-|-|-|--|--|--|--|--|\n> |饲料X|25|30|28|23|27|35|30|28|32|29|30|30|31|16|\n> |饲料Y|19|32|21|19|25|31|31|26|30|25|28|31|25|25|\n\n例：\n\n```R\ny <- c(19,32,21,19,25,31,31,26,30,25,28,31,25,25)\nx <- c(25,30,28,23,27,35,30,28,32,29,30,30,31,16)\nbinom.test(sum(x<y),length(x))\n\n#        Exact binomial test\n#\n# data:  sum(x < y) and length(x)\n# number of successes = 4, number of trials = 14, p-value = 0.1796\n# alternative hypothesis: true probability of success is not equal to 0.5\n# 95 percent confidence interval:\n# 0.08388932 0.58103526\n# sample estimates:\n# probability of success\n#             0.2857143  #无明显差异。这个例子不是很好\n```\n\n例\n> 某饮料店为了解顾客对饮料的爱好情况，进一步改进他们的工作，对顾客喜欢咖啡还是喜欢奶茶，或者两者同样爱好进行了调查。该店在某日随机的抽取了13名顾客进行了调查，顾客喜欢咖啡超过奶茶用正号表示，喜欢奶茶超过咖啡用负号表示，两者同样爱好用0表示，现将调查的结果列在下表中:\n>\n> ###### 不同顾客的爱好情况\n>\n> |顾客编号|1|2|3|4|5|6|7|8|9|10|11|12|13|\n> |-------|-|-|-|-|-|-|-|-|-|--|--|--|--|\n> |喜欢咖啡|1||1|1|1|0|1||1|1|1||1|\n> |喜欢奶茶||1||||||1||||1|||\n\n\n题目中标识为0的意思是两者同样喜欢。\n\n```R\nbinom.test(3,12,alternative=\"less\",conf.level=0.9)\n\n#        Exact binomial test\n#\n# data:  3 and 12\n# number of successes = 3, number of trials = 12, p-value = 0.073\n# alternative hypothesis: true probability of success is less than 0.5\n# 90 percent confidence interval:\n# 0.0000000 0.4752663\n# sample estimates:\n# probability of success  #p<0.1 接受备择假设 认为有差异\n#                  0.25\n```\n\n### 5. 秩相关检验\n\n在R语言中，``rank()``函数用来求秩，如果向量中有相同的数据，求出的秩可能不合我们的要求，对数据做微调即可\n\n```R\nx <- c(1.2,0.8,-3.1,2,1.2)\nrank(x)\n# [1] 3.5 2.0 1.0 5.0 3.5\nx <- c(1.2,0.8,-3.1,2,1.2+1e-5)\nrank(x)\n# [1] 3 2 1 5 4\n```\n\n利用秩可以做相关性检验。具体在上上篇笔记里已经讲了。``cor.test( method=\"spearman,kendell\")``\n\n### 6. wilcoxon检验\n\n符号检验只考虑了符号，没有考虑要差异的大小。``wilcoxon``解决了这个问题。假设，数据是连续分布的，数据是关于中位数对称的。\n\n例：\n> 某电池厂商生产的电池中位数为140.现从新生产的电池中抽取20个测试。请问电池是否合格\n\n```R\nx <- c(137,140,138.3,139,144.3,139.1,141.7,137.3,133.5,138.2,141.1,139.2,136.5,136.5,135.6,138,140.9,140.6,136.3,134.1)\nwilcox.test(x,mu=140,alternative=\"less\",exact=F,correct=F,confi.int=T)\n\n#        Wilcoxon signed rank test\n#\n# data:  x\n# V = 34, p-value = 0.007034\n# alternative hypothesis: true location is less than 140\n```\n\n``wilcox.test()``做成对样本检测。\n\n例：\n> 在农场中选择了10块农田，将每一块农田分成2小块，分别用不同的化肥种菜。请问化肥会不会提高蔬菜产量。\n\n```R\nx <- c(459,367,303,392,310,342,421,446,430,412)\ny <- c(414,306,321,443,281,301,353,391,405,390)\nwilcox.test(x-y,alternative=\"greater\")\n\n#        Wilcoxon signed rank test\n#\n# data:  x - y\n# V = 47, p-value = 0.02441\n# alternative hypothesis: true location is greater than 0 #能够提高产量\n```\n\n非配对双样本检测：\n\n例\n> 今测得10名非铅作业工人和7名铅作业工人的血铅值，如下表所示，试用Wilcoxon秩和检验分析两组工人血铅值有无差异\n>\n> ###### 两组工人的血铅值（单位： 1e-6mmol/L）\n>\n> |非铅作业组|24|26|29|34|43|58|63|72|87|101|\n> |---------|--|--|--|--|--|--|--|--|--|---|\n> |铅作业组|82|87|97|121|164|208|213|||||\n\n```R\nx <- c(24,26,29,34,43,58,63,72,87,101)\ny <- c(82,87,97,121,164,208,213)\nwilcox.test(x,y,alternative=\"less\")\n\n#        Wilcoxon rank sum test with continuity correction\n#\n# data:  x and y\n# W = 4.5, p-value = 0.001698\n# alternative hypothesis: true location shift is less than 0\n#\n# Warning message:\n# In wilcox.test.default(x, y, alternative = \"less\") :\n# cannot compute exact p-value with ties #好奇怪这里为什么会有警告。。明明没有同秩的现象。\n```\n\n例\n\n> 某医院用某种药物治疗两型慢性支气管炎患者共216例，疗效由下表所示。试分析该药物对两型慢性支气管炎的治疗是否相同\n>\n> ###### 某种药物治疗两型慢性支气管炎疗效结果\n>\n> |疗效|控制|显效|进步|无效|\n> |---|----|---|---|---|\n> |单纯型|62|41|14|11|\n> |喘息性|20|37|16|15|\n\n```R\nx <- rep(1:4,c(62,41,14,11))\ny <- rep(1:4,c(20,37,16,15))\nwilcox.test(x,y)\n\n#        Wilcoxon rank sum test with continuity correction\n#\n# data:  x and y\n# W = 3994, p-value = 0.0001242\n# alternative hypothesis: true location shift is not equal to 0\n```\n\n\n> ![一只小桃子 - R语言 假设检验（非参数） 学习笔记](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/qrcode/R_hypothesis_testing.png)","slug":"R_hypothesis_testing","published":1,"updated":"2016-08-04T20:25:26.791Z","_id":"cirat70p20000pcv44kxd9hso","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"1-皮尔森拟合优度塔防检验\"><a href=\"#1-皮尔森拟合优度塔防检验\" class=\"headerlink\" title=\"1. 皮尔森拟合优度塔防检验\"></a>1. 皮尔森拟合优度塔防检验</h3><ul>\n<li>假设H0：总体具有某分布F</li>\n<li>备择假设H1：总体不具有该分布。</li>\n</ul>\n<p>我们将数轴分成若干个区间，所抽取的样本会分布在这些区间中。在原假设成立的条件下，我们便知道每个区间包含样本的个数的期望值。用实际值<code>Ni</code>与期望值<code>Npi</code>可以构造统计量<code>K</code>。皮尔森证明，<strong><code>n</code>趋向于无穷时，<code>k</code>收敛于<code>m-1</code>的塔防分布</strong>。<code>m</code>为我们分组的个数。有了这个分布，我们就可以做假设检验。</p>\n<a id=\"more\"></a>\n<p>例：</p>\n<blockquote>\n<p>某消费者协会为了确定市场上消费者对5中品牌啤酒的喜好情况，随机抽取了1000名啤酒爱好者作为样本进行如下实验：每个人得到5种品牌的啤酒各一瓶，但是未标明牌子，这5种啤酒按分别写着A、B、C、D、E字母的5张纸片随机的顺序送给每一个人，下表是根据样本资料整理得到的各种品牌啤酒爱好者的频数分布。试根据这些数据判断消费者对这5种品牌啤酒的爱好有无明显差异？</p>\n<h6 id=\"5种品牌啤酒爱好者的频数\"><a href=\"#5种品牌啤酒爱好者的频数\" class=\"headerlink\" title=\"5种品牌啤酒爱好者的频数\"></a>5种品牌啤酒爱好者的频数</h6><table>\n<thead>\n<tr>\n<th>最喜欢的牌子</th>\n<th>A</th>\n<th>B</th>\n<th>C</th>\n<th>D</th>\n<th>E</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>人数<code>X</code></td>\n<td>210</td>\n<td>312</td>\n<td>170</td>\n<td>85</td>\n<td>223</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 如果是均匀分布，则没有明显差异 。这里组其实已经分好了，直接用 。H0：人数服从均匀分布</span></span><br><span class=\"line\">x &lt;- c(<span class=\"number\">210</span>,<span class=\"number\">312</span>,<span class=\"number\">170</span>,<span class=\"number\">85</span>,<span class=\"number\">223</span>)</span><br><span class=\"line\">n &lt;- sum(x); m &lt;- length(x)</span><br><span class=\"line\">p &lt;- rep(<span class=\"number\">1</span>/m,m)</span><br><span class=\"line\">K &lt;- sum((x-n*p)^<span class=\"number\">2</span>/(n*p)); K <span class=\"comment\">#计算出K值</span></span><br><span class=\"line\"><span class=\"comment\"># [1] 136.49</span></span><br><span class=\"line\"></span><br><span class=\"line\">p &lt;- <span class=\"number\">1</span>-pchisq(K,m-<span class=\"number\">1</span>); p <span class=\"comment\">#计算出p值</span></span><br><span class=\"line\"><span class=\"comment\"># [1] 0 #拒绝原假设。</span></span><br></pre></td></tr></table></figure>\n<p>在R语言中 <code>chisq.test()</code>，可以完成拟合优度检验。默认就是检验是否为均匀分布，如果是其他分布，需要自己分组，并在参数<code>p</code>中指出。上面题目的解法</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chisq.test(x)</span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#         Chi-squared test for given probabilities</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># data:  x</span></span><br><span class=\"line\"><span class=\"comment\"># X-squared = 136.49, df = 4, p-value &lt; 2.2e-16 #同样拒绝原假设。</span></span><br></pre></td></tr></table></figure>\n<p>例，用这个函数检验其他分布。 抽取31名学生的成绩，检验是否为正态分布。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x &lt;- c(<span class=\"number\">25</span>,<span class=\"number\">45</span>,<span class=\"number\">50</span>,<span class=\"number\">54</span>,<span class=\"number\">55</span>,<span class=\"number\">61</span>,<span class=\"number\">64</span>,<span class=\"number\">68</span>,<span class=\"number\">72</span>,<span class=\"number\">75</span>,<span class=\"number\">75</span>,<span class=\"number\">78</span>,<span class=\"number\">79</span>,<span class=\"number\">81</span>,<span class=\"number\">83</span>,<span class=\"number\">84</span>,<span class=\"number\">84</span>,<span class=\"number\">84</span>,<span class=\"number\">85</span>, <span class=\"number\">86</span>,<span class=\"number\">86</span>,<span class=\"number\">86</span>,<span class=\"number\">87</span>,<span class=\"number\">89</span>,<span class=\"number\">89</span>,<span class=\"number\">89</span>,<span class=\"number\">90</span>,<span class=\"number\">91</span>,<span class=\"number\">91</span>,<span class=\"number\">92</span>,<span class=\"number\">100</span>)</span><br><span class=\"line\">A &lt;- table(cut(x,breaks=c(<span class=\"number\">0</span>,<span class=\"number\">69</span>,<span class=\"number\">79</span>,<span class=\"number\">89</span>,<span class=\"number\">100</span>))) <span class=\"comment\">#对样本数据进行分组。</span></span><br><span class=\"line\">A</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#  (0,69]  (69,79]  (79,89] (89,100]</span></span><br><span class=\"line\"><span class=\"comment\">#       8        5       13        5</span></span><br><span class=\"line\">p &lt;- pnorm(c(<span class=\"number\">70</span>,<span class=\"number\">80</span>,<span class=\"number\">90</span>,<span class=\"number\">100</span>),mean(x),sd(x)) <span class=\"comment\">#获得理论分布的概率值</span></span><br><span class=\"line\">p &lt;- c(p[<span class=\"number\">1</span>],p[<span class=\"number\">2</span>]-p[<span class=\"number\">1</span>],p[<span class=\"number\">3</span>]-p[<span class=\"number\">2</span>],<span class=\"number\">1</span>-p[<span class=\"number\">3</span>])</span><br><span class=\"line\">chisq.test(A,p=p)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#        Chi-squared test for given probabilities</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># data:  A</span></span><br><span class=\"line\"><span class=\"comment\"># X-squared = 8.334, df = 3, p-value = 0.03959  #检验结果不是正态的。</span></span><br></pre></td></tr></table></figure>\n<p>例：大麦杂交后关于芒性的比例应该是 无芒：长芒：短芒=9:3:4 。 我们的实际观测值是335：125：160 。请问观测值是否符合预期？</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p &lt;- c(<span class=\"number\">9</span>/<span class=\"number\">16</span>,<span class=\"number\">3</span>/<span class=\"number\">16</span>,<span class=\"number\">4</span>/<span class=\"number\">16</span>)</span><br><span class=\"line\">x &lt;- c(<span class=\"number\">335</span>,<span class=\"number\">125</span>,<span class=\"number\">160</span>)</span><br><span class=\"line\">chisq.test(x,p=p)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#        Chi-squared test for given probabilities</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># data:  x</span></span><br><span class=\"line\"><span class=\"comment\"># X-squared = 1.362, df = 2, p-value = 0.5061</span></span><br></pre></td></tr></table></figure>\n<p>在分组的时候要注意，每组的频数要大于等于5.<br>如果理论分布依赖于多个未知参数，只能先由样本得到参数的估计量。然后构造统计量<code>K</code>，此时<code>K</code>的自由度减少位置参数的数量个。</p>\n<h3 id=\"2-ks检验\"><a href=\"#2-ks检验\" class=\"headerlink\" title=\"2. ks检验\"></a>2. ks检验</h3><p>R语言中提供了<code>ks.test()</code>函数，理论上可以检验任何分布。他既能够做单样本检验，也能做双样本检验。</p>\n<p><strong>单样本</strong><br>例：记录一台设备无故障工作时常，并从小到大排序<code>420 500 920 1380 1510 1650 1760 2100 2300 2350</code>。问这些时间是否服从<code>拉姆达=1/1500</code>的指数分布？</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x &lt;- c(<span class=\"number\">420</span>,<span class=\"number\">500</span>,<span class=\"number\">920</span>,<span class=\"number\">1380</span>,<span class=\"number\">1510</span>,<span class=\"number\">1650</span>,<span class=\"number\">1760</span>,<span class=\"number\">2100</span>,<span class=\"number\">2300</span>,<span class=\"number\">2350</span>)</span><br><span class=\"line\">ks.test(x,<span class=\"string\">\"pexp\"</span>,<span class=\"number\">1</span>/<span class=\"number\">1500</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#        One-sample Kolmogorov-Smirnov test</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># data:  x</span></span><br><span class=\"line\"><span class=\"comment\"># D = 0.3015, p-value = 0.2654</span></span><br><span class=\"line\"><span class=\"comment\"># alternative hypothesis: two-sided</span></span><br></pre></td></tr></table></figure>\n<p><strong>双样本</strong><br>例：有两个分布，分别抽样了一些数据，问他们是否服从相同的分布。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">X&lt;-scan()</span><br><span class=\"line\"><span class=\"comment\"># 1: 0.61 0.29 0.06 0.59 -1.73 -0.74 0.51 -0.56 0.39</span></span><br><span class=\"line\"><span class=\"comment\"># 10: 1.64 0.05 -0.06 0.64 -0.82 0.37 1.77 1.09 -1.28</span></span><br><span class=\"line\"><span class=\"comment\"># 19: 2.36 1.31 1.05 -0.32 -0.40 1.06 -2.47</span></span><br><span class=\"line\"><span class=\"comment\"># 26: </span></span><br><span class=\"line\"><span class=\"comment\"># Read 25 items</span></span><br><span class=\"line\">Y&lt;-scan()</span><br><span class=\"line\"><span class=\"comment\"># 1: 2.20 1.66 1.38 0.20 0.36 0.00 0.96 1.56 0.44</span></span><br><span class=\"line\"><span class=\"comment\"># 10: 1.50 -0.30 0.66 2.31 3.29 -0.27 -0.37 0.38 0.70</span></span><br><span class=\"line\"><span class=\"comment\"># 19: 0.52 -0.71</span></span><br><span class=\"line\"><span class=\"comment\"># 21: </span></span><br><span class=\"line\"><span class=\"comment\"># Read 20 items</span></span><br><span class=\"line\">ks.test(X,Y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#        Two-sample Kolmogorov-Smirnov test #原假设为 他们的分布相同</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># data:  X and Y</span></span><br><span class=\"line\"><span class=\"comment\"># D = 0.23, p-value = 0.5286</span></span><br><span class=\"line\"><span class=\"comment\"># alternative hypothesis: two-sided</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-列联表数据独立性检验\"><a href=\"#3-列联表数据独立性检验\" class=\"headerlink\" title=\"3. 列联表数据独立性检验\"></a>3. 列联表数据独立性检验</h3><p><code>chisq.test()</code>同样可以做列联表数据独立性检验，只要将数据写成矩阵的形式就可以了。</p>\n<h6 id=\"列联表数据\"><a href=\"#列联表数据\" class=\"headerlink\" title=\"列联表数据\"></a>列联表数据</h6><table>\n<thead>\n<tr>\n<th></th>\n<th>患肺癌</th>\n<th>未患肺癌</th>\n<th>合计</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>吸烟</td>\n<td>60</td>\n<td>32</td>\n<td>92</td>\n</tr>\n<tr>\n<td>不吸烟</td>\n<td>3</td>\n<td>11</td>\n<td>14</td>\n</tr>\n<tr>\n<td>合计</td>\n<td>63</td>\n<td>43</td>\n<td>106</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x &lt;- matrix(c(<span class=\"number\">60</span>,<span class=\"number\">3</span>,<span class=\"number\">32</span>,<span class=\"number\">11</span>),nrow=<span class=\"number\">2</span>) <span class=\"comment\">#参数correct是逻辑变量 表示带不带连续矫正。</span></span><br><span class=\"line\">x</span><br><span class=\"line\"><span class=\"comment\">#      [,1] [,2]</span></span><br><span class=\"line\"><span class=\"comment\"># [1,]   60   32</span></span><br><span class=\"line\"><span class=\"comment\"># [2,]    3   11</span></span><br><span class=\"line\">chisq.test(x)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#        Pearson's Chi-squared test with Yates' continuity correction</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># data:  x</span></span><br><span class=\"line\"><span class=\"comment\"># X-squared = 7.9327, df = 1, p-value = 0.004855  #拒绝假设 认为有关系</span></span><br></pre></td></tr></table></figure>\n<p>如果一个单元格内的数据小于5 那么做<code>pearson</code>检验是无效的。此时应该使用<code>Fisher</code>精确检验。</p>\n<p>例：</p>\n<blockquote>\n<p>某医生为研究乙肝免疫球蛋白预防胎儿宫内感染HBV的效果，将33例HBsAg阳性孕妇随机分为预防注射组和对照组，结果由下表所示。问两组新生儿的HBV总体感染率有无差别？</p>\n<h6 id=\"两组新生儿HBV感染率的比较\"><a href=\"#两组新生儿HBV感染率的比较\" class=\"headerlink\" title=\"两组新生儿HBV感染率的比较\"></a>两组新生儿HBV感染率的比较</h6><table>\n<thead>\n<tr>\n<th>组别</th>\n<th>阳性</th>\n<th>阴性</th>\n<th>合计</th>\n<th>感染率(%)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>预防注射组</td>\n<td>4</td>\n<td>18</td>\n<td>22</td>\n<td>18.18</td>\n</tr>\n<tr>\n<td>对照组</td>\n<td>5</td>\n<td>6</td>\n<td>11</td>\n<td>45.45</td>\n</tr>\n<tr>\n<td>合计</td>\n<td>9</td>\n<td>24</td>\n<td>33</td>\n<td>27.27</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x &lt;- matrix(c(<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">18</span>,<span class=\"number\">6</span>),nrow=<span class=\"number\">2</span>)</span><br><span class=\"line\">x</span><br><span class=\"line\"><span class=\"comment\">#     [,1] [,2]</span></span><br><span class=\"line\"><span class=\"comment\"># [1,]    4   18</span></span><br><span class=\"line\"><span class=\"comment\"># [2,]    5    6</span></span><br><span class=\"line\">fisher.test(x)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#        Fisher's Exact Test for Count Data</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># data:  x</span></span><br><span class=\"line\"><span class=\"comment\"># p-value = 0.121</span></span><br><span class=\"line\"><span class=\"comment\"># alternative hypothesis: true odds ratio is not equal to 1</span></span><br><span class=\"line\"><span class=\"comment\"># 95 percent confidence interval:</span></span><br><span class=\"line\"><span class=\"comment\"># 0.03974151 1.76726409  #p值大与0.05， 区间估计包含1，所以认为没有关系。</span></span><br><span class=\"line\"><span class=\"comment\"># sample estimates:</span></span><br><span class=\"line\"><span class=\"comment\"># odds ratio</span></span><br><span class=\"line\"><span class=\"comment\"># 0.2791061</span></span><br></pre></td></tr></table></figure>\n<p><code>McNemar</code>检验。这个不是相关性检验。是配对卡放检验。也就是说，我们是对一个样本做了两次观测，本身不是独立的样本而是相关的样本，而我们检验的是变化的强度。H0：频数没有发生变化。</p>\n<h6 id=\"相依配对计数资料\"><a href=\"#相依配对计数资料\" class=\"headerlink\" title=\"相依配对计数资料\"></a>相依配对计数资料</h6><table>\n<thead>\n<tr>\n<th></th>\n<th>治疗后具有症状A</th>\n<th>治疗后不具有症状A</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>治疗前不具有症状A</td>\n<td>a</td>\n<td>b</td>\n</tr>\n<tr>\n<td>治疗前具有症状A</td>\n<td>c</td>\n<td>d</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>用法就不举例了。单元格内数字不得小于5.n要大于100.</p>\n</blockquote>\n<h3 id=\"4-符号检验\"><a href=\"#4-符号检验\" class=\"headerlink\" title=\"4. 符号检验\"></a>4. 符号检验</h3><p>当我们以中位数将数据分为两边，一边为正，一边为负，那么样本出现在两边的概率应该都为1/2。因此，使用p=0.2的二项检验就可以做符号检验了。<br>例：</p>\n<blockquote>\n<p>统计了66个城市的生活花费指数，北京的生活花费指数为99 。请问北京是否位于中位数以上。</p>\n</blockquote>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x &lt;- scan()</span><br><span class=\"line\"><span class=\"comment\"># 1: 66 75 78 80 81 81 82 83 83 83 83</span></span><br><span class=\"line\"><span class=\"comment\"># 12: 84 85 85 86 86 86 86 87 87 88 88</span></span><br><span class=\"line\"><span class=\"comment\"># 23: 88 88 88 89 89 89 89 90 90 91 91</span></span><br><span class=\"line\"><span class=\"comment\"># 34: 91 91 92 93 93 96 96 96 97 99 100</span></span><br><span class=\"line\"><span class=\"comment\"># 45: 101 102 103 103 104 104 104 105 106 109 109</span></span><br><span class=\"line\"><span class=\"comment\"># 56: 110 110 110 111 113 115 116 117 118 155 192</span></span><br><span class=\"line\"><span class=\"comment\"># 67:</span></span><br><span class=\"line\"><span class=\"comment\"># Read 66 items</span></span><br><span class=\"line\"></span><br><span class=\"line\">binom.test(sum(x&gt;<span class=\"number\">99</span>),length(x),alternative=<span class=\"string\">\"less\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#        Exact binomial test</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># data:  sum(x &gt; 99) and length(x)</span></span><br><span class=\"line\"><span class=\"comment\"># number of successes = 23, number of trials = 66, p-value = 0.009329</span></span><br><span class=\"line\"><span class=\"comment\"># alternative hypothesis: true probability of success is less than 0.5</span></span><br><span class=\"line\"><span class=\"comment\"># 95 percent confidence interval:</span></span><br><span class=\"line\"><span class=\"comment\"># 0.0000000 0.4563087</span></span><br><span class=\"line\"><span class=\"comment\"># sample estimates:</span></span><br><span class=\"line\"><span class=\"comment\"># probability of success</span></span><br><span class=\"line\"><span class=\"comment\">#             0.3484848   #北京位于中位数下。</span></span><br></pre></td></tr></table></figure>\n<p>符号检验也可以用来检验两个总体是否存在明显差异。要是没有差异，那么两者之差为正的概率为0.5.</p>\n<blockquote>\n<p>用两种不同的饲料养猪，其增重情况如下表所示，请分析两种饲料</p>\n<h6 id=\"不同饲料养猪的增重情况\"><a href=\"#不同饲料养猪的增重情况\" class=\"headerlink\" title=\"不同饲料养猪的增重情况\"></a>不同饲料养猪的增重情况</h6><table>\n<thead>\n<tr>\n<th>对编号</th>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n<th>5</th>\n<th>6</th>\n<th>7</th>\n<th>8</th>\n<th>9</th>\n<th>10</th>\n<th>11</th>\n<th>12</th>\n<th>13</th>\n<th>14</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>饲料X</td>\n<td>25</td>\n<td>30</td>\n<td>28</td>\n<td>23</td>\n<td>27</td>\n<td>35</td>\n<td>30</td>\n<td>28</td>\n<td>32</td>\n<td>29</td>\n<td>30</td>\n<td>30</td>\n<td>31</td>\n<td>16</td>\n</tr>\n<tr>\n<td>饲料Y</td>\n<td>19</td>\n<td>32</td>\n<td>21</td>\n<td>19</td>\n<td>25</td>\n<td>31</td>\n<td>31</td>\n<td>26</td>\n<td>30</td>\n<td>25</td>\n<td>28</td>\n<td>31</td>\n<td>25</td>\n<td>25</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<p>例：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">y &lt;- c(<span class=\"number\">19</span>,<span class=\"number\">32</span>,<span class=\"number\">21</span>,<span class=\"number\">19</span>,<span class=\"number\">25</span>,<span class=\"number\">31</span>,<span class=\"number\">31</span>,<span class=\"number\">26</span>,<span class=\"number\">30</span>,<span class=\"number\">25</span>,<span class=\"number\">28</span>,<span class=\"number\">31</span>,<span class=\"number\">25</span>,<span class=\"number\">25</span>)</span><br><span class=\"line\">x &lt;- c(<span class=\"number\">25</span>,<span class=\"number\">30</span>,<span class=\"number\">28</span>,<span class=\"number\">23</span>,<span class=\"number\">27</span>,<span class=\"number\">35</span>,<span class=\"number\">30</span>,<span class=\"number\">28</span>,<span class=\"number\">32</span>,<span class=\"number\">29</span>,<span class=\"number\">30</span>,<span class=\"number\">30</span>,<span class=\"number\">31</span>,<span class=\"number\">16</span>)</span><br><span class=\"line\">binom.test(sum(x&lt;y),length(x))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#        Exact binomial test</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># data:  sum(x &lt; y) and length(x)</span></span><br><span class=\"line\"><span class=\"comment\"># number of successes = 4, number of trials = 14, p-value = 0.1796</span></span><br><span class=\"line\"><span class=\"comment\"># alternative hypothesis: true probability of success is not equal to 0.5</span></span><br><span class=\"line\"><span class=\"comment\"># 95 percent confidence interval:</span></span><br><span class=\"line\"><span class=\"comment\"># 0.08388932 0.58103526</span></span><br><span class=\"line\"><span class=\"comment\"># sample estimates:</span></span><br><span class=\"line\"><span class=\"comment\"># probability of success</span></span><br><span class=\"line\"><span class=\"comment\">#             0.2857143  #无明显差异。这个例子不是很好</span></span><br></pre></td></tr></table></figure>\n<p>例</p>\n<blockquote>\n<p>某饮料店为了解顾客对饮料的爱好情况，进一步改进他们的工作，对顾客喜欢咖啡还是喜欢奶茶，或者两者同样爱好进行了调查。该店在某日随机的抽取了13名顾客进行了调查，顾客喜欢咖啡超过奶茶用正号表示，喜欢奶茶超过咖啡用负号表示，两者同样爱好用0表示，现将调查的结果列在下表中:</p>\n<h6 id=\"不同顾客的爱好情况\"><a href=\"#不同顾客的爱好情况\" class=\"headerlink\" title=\"不同顾客的爱好情况\"></a>不同顾客的爱好情况</h6><table>\n<thead>\n<tr>\n<th>顾客编号</th>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n<th>5</th>\n<th>6</th>\n<th>7</th>\n<th>8</th>\n<th>9</th>\n<th>10</th>\n<th>11</th>\n<th>12</th>\n<th>13</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>喜欢咖啡</td>\n<td>1</td>\n<td></td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>0</td>\n<td>1</td>\n<td></td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td></td>\n<td>1</td>\n</tr>\n<tr>\n<td>喜欢奶茶</td>\n<td></td>\n<td>1</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td>1</td>\n<td></td>\n<td></td>\n<td></td>\n<td>1</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<p>题目中标识为0的意思是两者同样喜欢。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">binom.test(<span class=\"number\">3</span>,<span class=\"number\">12</span>,alternative=<span class=\"string\">\"less\"</span>,conf.level=<span class=\"number\">0.9</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#        Exact binomial test</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># data:  3 and 12</span></span><br><span class=\"line\"><span class=\"comment\"># number of successes = 3, number of trials = 12, p-value = 0.073</span></span><br><span class=\"line\"><span class=\"comment\"># alternative hypothesis: true probability of success is less than 0.5</span></span><br><span class=\"line\"><span class=\"comment\"># 90 percent confidence interval:</span></span><br><span class=\"line\"><span class=\"comment\"># 0.0000000 0.4752663</span></span><br><span class=\"line\"><span class=\"comment\"># sample estimates:</span></span><br><span class=\"line\"><span class=\"comment\"># probability of success  #p&lt;0.1 接受备择假设 认为有差异</span></span><br><span class=\"line\"><span class=\"comment\">#                  0.25</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"5-秩相关检验\"><a href=\"#5-秩相关检验\" class=\"headerlink\" title=\"5. 秩相关检验\"></a>5. 秩相关检验</h3><p>在R语言中，<code>rank()</code>函数用来求秩，如果向量中有相同的数据，求出的秩可能不合我们的要求，对数据做微调即可</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x &lt;- c(<span class=\"number\">1.2</span>,<span class=\"number\">0.8</span>,-<span class=\"number\">3.1</span>,<span class=\"number\">2</span>,<span class=\"number\">1.2</span>)</span><br><span class=\"line\">rank(x)</span><br><span class=\"line\"><span class=\"comment\"># [1] 3.5 2.0 1.0 5.0 3.5</span></span><br><span class=\"line\">x &lt;- c(<span class=\"number\">1.2</span>,<span class=\"number\">0.8</span>,-<span class=\"number\">3.1</span>,<span class=\"number\">2</span>,<span class=\"number\">1.2</span>+<span class=\"number\">1e-5</span>)</span><br><span class=\"line\">rank(x)</span><br><span class=\"line\"><span class=\"comment\"># [1] 3 2 1 5 4</span></span><br></pre></td></tr></table></figure>\n<p>利用秩可以做相关性检验。具体在上上篇笔记里已经讲了。<code>cor.test( method=&quot;spearman,kendell&quot;)</code></p>\n<h3 id=\"6-wilcoxon检验\"><a href=\"#6-wilcoxon检验\" class=\"headerlink\" title=\"6. wilcoxon检验\"></a>6. wilcoxon检验</h3><p>符号检验只考虑了符号，没有考虑要差异的大小。<code>wilcoxon</code>解决了这个问题。假设，数据是连续分布的，数据是关于中位数对称的。</p>\n<p>例：</p>\n<blockquote>\n<p>某电池厂商生产的电池中位数为140.现从新生产的电池中抽取20个测试。请问电池是否合格</p>\n</blockquote>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x &lt;- c(<span class=\"number\">137</span>,<span class=\"number\">140</span>,<span class=\"number\">138.3</span>,<span class=\"number\">139</span>,<span class=\"number\">144.3</span>,<span class=\"number\">139.1</span>,<span class=\"number\">141.7</span>,<span class=\"number\">137.3</span>,<span class=\"number\">133.5</span>,<span class=\"number\">138.2</span>,<span class=\"number\">141.1</span>,<span class=\"number\">139.2</span>,<span class=\"number\">136.5</span>,<span class=\"number\">136.5</span>,<span class=\"number\">135.6</span>,<span class=\"number\">138</span>,<span class=\"number\">140.9</span>,<span class=\"number\">140.6</span>,<span class=\"number\">136.3</span>,<span class=\"number\">134.1</span>)</span><br><span class=\"line\">wilcox.test(x,mu=<span class=\"number\">140</span>,alternative=<span class=\"string\">\"less\"</span>,exact=<span class=\"literal\">F</span>,correct=<span class=\"literal\">F</span>,confi.int=<span class=\"literal\">T</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#        Wilcoxon signed rank test</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># data:  x</span></span><br><span class=\"line\"><span class=\"comment\"># V = 34, p-value = 0.007034</span></span><br><span class=\"line\"><span class=\"comment\"># alternative hypothesis: true location is less than 140</span></span><br></pre></td></tr></table></figure>\n<p><code>wilcox.test()</code>做成对样本检测。</p>\n<p>例：</p>\n<blockquote>\n<p>在农场中选择了10块农田，将每一块农田分成2小块，分别用不同的化肥种菜。请问化肥会不会提高蔬菜产量。</p>\n</blockquote>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x &lt;- c(<span class=\"number\">459</span>,<span class=\"number\">367</span>,<span class=\"number\">303</span>,<span class=\"number\">392</span>,<span class=\"number\">310</span>,<span class=\"number\">342</span>,<span class=\"number\">421</span>,<span class=\"number\">446</span>,<span class=\"number\">430</span>,<span class=\"number\">412</span>)</span><br><span class=\"line\">y &lt;- c(<span class=\"number\">414</span>,<span class=\"number\">306</span>,<span class=\"number\">321</span>,<span class=\"number\">443</span>,<span class=\"number\">281</span>,<span class=\"number\">301</span>,<span class=\"number\">353</span>,<span class=\"number\">391</span>,<span class=\"number\">405</span>,<span class=\"number\">390</span>)</span><br><span class=\"line\">wilcox.test(x-y,alternative=<span class=\"string\">\"greater\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#        Wilcoxon signed rank test</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># data:  x - y</span></span><br><span class=\"line\"><span class=\"comment\"># V = 47, p-value = 0.02441</span></span><br><span class=\"line\"><span class=\"comment\"># alternative hypothesis: true location is greater than 0 #能够提高产量</span></span><br></pre></td></tr></table></figure>\n<p>非配对双样本检测：</p>\n<p>例</p>\n<blockquote>\n<p>今测得10名非铅作业工人和7名铅作业工人的血铅值，如下表所示，试用Wilcoxon秩和检验分析两组工人血铅值有无差异</p>\n<h6 id=\"两组工人的血铅值（单位：-1e-6mmol-L）\"><a href=\"#两组工人的血铅值（单位：-1e-6mmol-L）\" class=\"headerlink\" title=\"两组工人的血铅值（单位： 1e-6mmol/L）\"></a>两组工人的血铅值（单位： 1e-6mmol/L）</h6><table>\n<thead>\n<tr>\n<th>非铅作业组</th>\n<th>24</th>\n<th>26</th>\n<th>29</th>\n<th>34</th>\n<th>43</th>\n<th>58</th>\n<th>63</th>\n<th>72</th>\n<th>87</th>\n<th>101</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>铅作业组</td>\n<td>82</td>\n<td>87</td>\n<td>97</td>\n<td>121</td>\n<td>164</td>\n<td>208</td>\n<td>213</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x &lt;- c(<span class=\"number\">24</span>,<span class=\"number\">26</span>,<span class=\"number\">29</span>,<span class=\"number\">34</span>,<span class=\"number\">43</span>,<span class=\"number\">58</span>,<span class=\"number\">63</span>,<span class=\"number\">72</span>,<span class=\"number\">87</span>,<span class=\"number\">101</span>)</span><br><span class=\"line\">y &lt;- c(<span class=\"number\">82</span>,<span class=\"number\">87</span>,<span class=\"number\">97</span>,<span class=\"number\">121</span>,<span class=\"number\">164</span>,<span class=\"number\">208</span>,<span class=\"number\">213</span>)</span><br><span class=\"line\">wilcox.test(x,y,alternative=<span class=\"string\">\"less\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#        Wilcoxon rank sum test with continuity correction</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># data:  x and y</span></span><br><span class=\"line\"><span class=\"comment\"># W = 4.5, p-value = 0.001698</span></span><br><span class=\"line\"><span class=\"comment\"># alternative hypothesis: true location shift is less than 0</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Warning message:</span></span><br><span class=\"line\"><span class=\"comment\"># In wilcox.test.default(x, y, alternative = \"less\") :</span></span><br><span class=\"line\"><span class=\"comment\"># cannot compute exact p-value with ties #好奇怪这里为什么会有警告。。明明没有同秩的现象。</span></span><br></pre></td></tr></table></figure>\n<p>例</p>\n<blockquote>\n<p>某医院用某种药物治疗两型慢性支气管炎患者共216例，疗效由下表所示。试分析该药物对两型慢性支气管炎的治疗是否相同</p>\n<h6 id=\"某种药物治疗两型慢性支气管炎疗效结果\"><a href=\"#某种药物治疗两型慢性支气管炎疗效结果\" class=\"headerlink\" title=\"某种药物治疗两型慢性支气管炎疗效结果\"></a>某种药物治疗两型慢性支气管炎疗效结果</h6><table>\n<thead>\n<tr>\n<th>疗效</th>\n<th>控制</th>\n<th>显效</th>\n<th>进步</th>\n<th>无效</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>单纯型</td>\n<td>62</td>\n<td>41</td>\n<td>14</td>\n<td>11</td>\n</tr>\n<tr>\n<td>喘息性</td>\n<td>20</td>\n<td>37</td>\n<td>16</td>\n<td>15</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x &lt;- rep(<span class=\"number\">1</span>:<span class=\"number\">4</span>,c(<span class=\"number\">62</span>,<span class=\"number\">41</span>,<span class=\"number\">14</span>,<span class=\"number\">11</span>))</span><br><span class=\"line\">y &lt;- rep(<span class=\"number\">1</span>:<span class=\"number\">4</span>,c(<span class=\"number\">20</span>,<span class=\"number\">37</span>,<span class=\"number\">16</span>,<span class=\"number\">15</span>))</span><br><span class=\"line\">wilcox.test(x,y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#        Wilcoxon rank sum test with continuity correction</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># data:  x and y</span></span><br><span class=\"line\"><span class=\"comment\"># W = 3994, p-value = 0.0001242</span></span><br><span class=\"line\"><span class=\"comment\"># alternative hypothesis: true location shift is not equal to 0</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/qrcode/R_hypothesis_testing.png\" alt=\"一只小桃子 - R语言 假设检验（非参数） 学习笔记\"></p>\n</blockquote>\n","excerpt":"<h3 id=\"1-皮尔森拟合优度塔防检验\"><a href=\"#1-皮尔森拟合优度塔防检验\" class=\"headerlink\" title=\"1. 皮尔森拟合优度塔防检验\"></a>1. 皮尔森拟合优度塔防检验</h3><ul>\n<li>假设H0：总体具有某分布F</li>\n<li>备择假设H1：总体不具有该分布。</li>\n</ul>\n<p>我们将数轴分成若干个区间，所抽取的样本会分布在这些区间中。在原假设成立的条件下，我们便知道每个区间包含样本的个数的期望值。用实际值<code>Ni</code>与期望值<code>Npi</code>可以构造统计量<code>K</code>。皮尔森证明，<strong><code>n</code>趋向于无穷时，<code>k</code>收敛于<code>m-1</code>的塔防分布</strong>。<code>m</code>为我们分组的个数。有了这个分布，我们就可以做假设检验。</p>","more":"<p>例：</p>\n<blockquote>\n<p>某消费者协会为了确定市场上消费者对5中品牌啤酒的喜好情况，随机抽取了1000名啤酒爱好者作为样本进行如下实验：每个人得到5种品牌的啤酒各一瓶，但是未标明牌子，这5种啤酒按分别写着A、B、C、D、E字母的5张纸片随机的顺序送给每一个人，下表是根据样本资料整理得到的各种品牌啤酒爱好者的频数分布。试根据这些数据判断消费者对这5种品牌啤酒的爱好有无明显差异？</p>\n<h6 id=\"5种品牌啤酒爱好者的频数\"><a href=\"#5种品牌啤酒爱好者的频数\" class=\"headerlink\" title=\"5种品牌啤酒爱好者的频数\"></a>5种品牌啤酒爱好者的频数</h6><table>\n<thead>\n<tr>\n<th>最喜欢的牌子</th>\n<th>A</th>\n<th>B</th>\n<th>C</th>\n<th>D</th>\n<th>E</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>人数<code>X</code></td>\n<td>210</td>\n<td>312</td>\n<td>170</td>\n<td>85</td>\n<td>223</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 如果是均匀分布，则没有明显差异 。这里组其实已经分好了，直接用 。H0：人数服从均匀分布</span></span><br><span class=\"line\">x &lt;- c(<span class=\"number\">210</span>,<span class=\"number\">312</span>,<span class=\"number\">170</span>,<span class=\"number\">85</span>,<span class=\"number\">223</span>)</span><br><span class=\"line\">n &lt;- sum(x); m &lt;- length(x)</span><br><span class=\"line\">p &lt;- rep(<span class=\"number\">1</span>/m,m)</span><br><span class=\"line\">K &lt;- sum((x-n*p)^<span class=\"number\">2</span>/(n*p)); K <span class=\"comment\">#计算出K值</span></span><br><span class=\"line\"><span class=\"comment\"># [1] 136.49</span></span><br><span class=\"line\"></span><br><span class=\"line\">p &lt;- <span class=\"number\">1</span>-pchisq(K,m-<span class=\"number\">1</span>); p <span class=\"comment\">#计算出p值</span></span><br><span class=\"line\"><span class=\"comment\"># [1] 0 #拒绝原假设。</span></span><br></pre></td></tr></table></figure>\n<p>在R语言中 <code>chisq.test()</code>，可以完成拟合优度检验。默认就是检验是否为均匀分布，如果是其他分布，需要自己分组，并在参数<code>p</code>中指出。上面题目的解法</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chisq.test(x)</span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#         Chi-squared test for given probabilities</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># data:  x</span></span><br><span class=\"line\"><span class=\"comment\"># X-squared = 136.49, df = 4, p-value &lt; 2.2e-16 #同样拒绝原假设。</span></span><br></pre></td></tr></table></figure>\n<p>例，用这个函数检验其他分布。 抽取31名学生的成绩，检验是否为正态分布。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x &lt;- c(<span class=\"number\">25</span>,<span class=\"number\">45</span>,<span class=\"number\">50</span>,<span class=\"number\">54</span>,<span class=\"number\">55</span>,<span class=\"number\">61</span>,<span class=\"number\">64</span>,<span class=\"number\">68</span>,<span class=\"number\">72</span>,<span class=\"number\">75</span>,<span class=\"number\">75</span>,<span class=\"number\">78</span>,<span class=\"number\">79</span>,<span class=\"number\">81</span>,<span class=\"number\">83</span>,<span class=\"number\">84</span>,<span class=\"number\">84</span>,<span class=\"number\">84</span>,<span class=\"number\">85</span>, <span class=\"number\">86</span>,<span class=\"number\">86</span>,<span class=\"number\">86</span>,<span class=\"number\">87</span>,<span class=\"number\">89</span>,<span class=\"number\">89</span>,<span class=\"number\">89</span>,<span class=\"number\">90</span>,<span class=\"number\">91</span>,<span class=\"number\">91</span>,<span class=\"number\">92</span>,<span class=\"number\">100</span>)</span><br><span class=\"line\">A &lt;- table(cut(x,breaks=c(<span class=\"number\">0</span>,<span class=\"number\">69</span>,<span class=\"number\">79</span>,<span class=\"number\">89</span>,<span class=\"number\">100</span>))) <span class=\"comment\">#对样本数据进行分组。</span></span><br><span class=\"line\">A</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#  (0,69]  (69,79]  (79,89] (89,100]</span></span><br><span class=\"line\"><span class=\"comment\">#       8        5       13        5</span></span><br><span class=\"line\">p &lt;- pnorm(c(<span class=\"number\">70</span>,<span class=\"number\">80</span>,<span class=\"number\">90</span>,<span class=\"number\">100</span>),mean(x),sd(x)) <span class=\"comment\">#获得理论分布的概率值</span></span><br><span class=\"line\">p &lt;- c(p[<span class=\"number\">1</span>],p[<span class=\"number\">2</span>]-p[<span class=\"number\">1</span>],p[<span class=\"number\">3</span>]-p[<span class=\"number\">2</span>],<span class=\"number\">1</span>-p[<span class=\"number\">3</span>])</span><br><span class=\"line\">chisq.test(A,p=p)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#        Chi-squared test for given probabilities</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># data:  A</span></span><br><span class=\"line\"><span class=\"comment\"># X-squared = 8.334, df = 3, p-value = 0.03959  #检验结果不是正态的。</span></span><br></pre></td></tr></table></figure>\n<p>例：大麦杂交后关于芒性的比例应该是 无芒：长芒：短芒=9:3:4 。 我们的实际观测值是335：125：160 。请问观测值是否符合预期？</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p &lt;- c(<span class=\"number\">9</span>/<span class=\"number\">16</span>,<span class=\"number\">3</span>/<span class=\"number\">16</span>,<span class=\"number\">4</span>/<span class=\"number\">16</span>)</span><br><span class=\"line\">x &lt;- c(<span class=\"number\">335</span>,<span class=\"number\">125</span>,<span class=\"number\">160</span>)</span><br><span class=\"line\">chisq.test(x,p=p)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#        Chi-squared test for given probabilities</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># data:  x</span></span><br><span class=\"line\"><span class=\"comment\"># X-squared = 1.362, df = 2, p-value = 0.5061</span></span><br></pre></td></tr></table></figure>\n<p>在分组的时候要注意，每组的频数要大于等于5.<br>如果理论分布依赖于多个未知参数，只能先由样本得到参数的估计量。然后构造统计量<code>K</code>，此时<code>K</code>的自由度减少位置参数的数量个。</p>\n<h3 id=\"2-ks检验\"><a href=\"#2-ks检验\" class=\"headerlink\" title=\"2. ks检验\"></a>2. ks检验</h3><p>R语言中提供了<code>ks.test()</code>函数，理论上可以检验任何分布。他既能够做单样本检验，也能做双样本检验。</p>\n<p><strong>单样本</strong><br>例：记录一台设备无故障工作时常，并从小到大排序<code>420 500 920 1380 1510 1650 1760 2100 2300 2350</code>。问这些时间是否服从<code>拉姆达=1/1500</code>的指数分布？</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x &lt;- c(<span class=\"number\">420</span>,<span class=\"number\">500</span>,<span class=\"number\">920</span>,<span class=\"number\">1380</span>,<span class=\"number\">1510</span>,<span class=\"number\">1650</span>,<span class=\"number\">1760</span>,<span class=\"number\">2100</span>,<span class=\"number\">2300</span>,<span class=\"number\">2350</span>)</span><br><span class=\"line\">ks.test(x,<span class=\"string\">\"pexp\"</span>,<span class=\"number\">1</span>/<span class=\"number\">1500</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#        One-sample Kolmogorov-Smirnov test</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># data:  x</span></span><br><span class=\"line\"><span class=\"comment\"># D = 0.3015, p-value = 0.2654</span></span><br><span class=\"line\"><span class=\"comment\"># alternative hypothesis: two-sided</span></span><br></pre></td></tr></table></figure>\n<p><strong>双样本</strong><br>例：有两个分布，分别抽样了一些数据，问他们是否服从相同的分布。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">X&lt;-scan()</span><br><span class=\"line\"><span class=\"comment\"># 1: 0.61 0.29 0.06 0.59 -1.73 -0.74 0.51 -0.56 0.39</span></span><br><span class=\"line\"><span class=\"comment\"># 10: 1.64 0.05 -0.06 0.64 -0.82 0.37 1.77 1.09 -1.28</span></span><br><span class=\"line\"><span class=\"comment\"># 19: 2.36 1.31 1.05 -0.32 -0.40 1.06 -2.47</span></span><br><span class=\"line\"><span class=\"comment\"># 26: </span></span><br><span class=\"line\"><span class=\"comment\"># Read 25 items</span></span><br><span class=\"line\">Y&lt;-scan()</span><br><span class=\"line\"><span class=\"comment\"># 1: 2.20 1.66 1.38 0.20 0.36 0.00 0.96 1.56 0.44</span></span><br><span class=\"line\"><span class=\"comment\"># 10: 1.50 -0.30 0.66 2.31 3.29 -0.27 -0.37 0.38 0.70</span></span><br><span class=\"line\"><span class=\"comment\"># 19: 0.52 -0.71</span></span><br><span class=\"line\"><span class=\"comment\"># 21: </span></span><br><span class=\"line\"><span class=\"comment\"># Read 20 items</span></span><br><span class=\"line\">ks.test(X,Y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#        Two-sample Kolmogorov-Smirnov test #原假设为 他们的分布相同</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># data:  X and Y</span></span><br><span class=\"line\"><span class=\"comment\"># D = 0.23, p-value = 0.5286</span></span><br><span class=\"line\"><span class=\"comment\"># alternative hypothesis: two-sided</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-列联表数据独立性检验\"><a href=\"#3-列联表数据独立性检验\" class=\"headerlink\" title=\"3. 列联表数据独立性检验\"></a>3. 列联表数据独立性检验</h3><p><code>chisq.test()</code>同样可以做列联表数据独立性检验，只要将数据写成矩阵的形式就可以了。</p>\n<h6 id=\"列联表数据\"><a href=\"#列联表数据\" class=\"headerlink\" title=\"列联表数据\"></a>列联表数据</h6><table>\n<thead>\n<tr>\n<th></th>\n<th>患肺癌</th>\n<th>未患肺癌</th>\n<th>合计</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>吸烟</td>\n<td>60</td>\n<td>32</td>\n<td>92</td>\n</tr>\n<tr>\n<td>不吸烟</td>\n<td>3</td>\n<td>11</td>\n<td>14</td>\n</tr>\n<tr>\n<td>合计</td>\n<td>63</td>\n<td>43</td>\n<td>106</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x &lt;- matrix(c(<span class=\"number\">60</span>,<span class=\"number\">3</span>,<span class=\"number\">32</span>,<span class=\"number\">11</span>),nrow=<span class=\"number\">2</span>) <span class=\"comment\">#参数correct是逻辑变量 表示带不带连续矫正。</span></span><br><span class=\"line\">x</span><br><span class=\"line\"><span class=\"comment\">#      [,1] [,2]</span></span><br><span class=\"line\"><span class=\"comment\"># [1,]   60   32</span></span><br><span class=\"line\"><span class=\"comment\"># [2,]    3   11</span></span><br><span class=\"line\">chisq.test(x)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#        Pearson's Chi-squared test with Yates' continuity correction</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># data:  x</span></span><br><span class=\"line\"><span class=\"comment\"># X-squared = 7.9327, df = 1, p-value = 0.004855  #拒绝假设 认为有关系</span></span><br></pre></td></tr></table></figure>\n<p>如果一个单元格内的数据小于5 那么做<code>pearson</code>检验是无效的。此时应该使用<code>Fisher</code>精确检验。</p>\n<p>例：</p>\n<blockquote>\n<p>某医生为研究乙肝免疫球蛋白预防胎儿宫内感染HBV的效果，将33例HBsAg阳性孕妇随机分为预防注射组和对照组，结果由下表所示。问两组新生儿的HBV总体感染率有无差别？</p>\n<h6 id=\"两组新生儿HBV感染率的比较\"><a href=\"#两组新生儿HBV感染率的比较\" class=\"headerlink\" title=\"两组新生儿HBV感染率的比较\"></a>两组新生儿HBV感染率的比较</h6><table>\n<thead>\n<tr>\n<th>组别</th>\n<th>阳性</th>\n<th>阴性</th>\n<th>合计</th>\n<th>感染率(%)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>预防注射组</td>\n<td>4</td>\n<td>18</td>\n<td>22</td>\n<td>18.18</td>\n</tr>\n<tr>\n<td>对照组</td>\n<td>5</td>\n<td>6</td>\n<td>11</td>\n<td>45.45</td>\n</tr>\n<tr>\n<td>合计</td>\n<td>9</td>\n<td>24</td>\n<td>33</td>\n<td>27.27</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x &lt;- matrix(c(<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">18</span>,<span class=\"number\">6</span>),nrow=<span class=\"number\">2</span>)</span><br><span class=\"line\">x</span><br><span class=\"line\"><span class=\"comment\">#     [,1] [,2]</span></span><br><span class=\"line\"><span class=\"comment\"># [1,]    4   18</span></span><br><span class=\"line\"><span class=\"comment\"># [2,]    5    6</span></span><br><span class=\"line\">fisher.test(x)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#        Fisher's Exact Test for Count Data</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># data:  x</span></span><br><span class=\"line\"><span class=\"comment\"># p-value = 0.121</span></span><br><span class=\"line\"><span class=\"comment\"># alternative hypothesis: true odds ratio is not equal to 1</span></span><br><span class=\"line\"><span class=\"comment\"># 95 percent confidence interval:</span></span><br><span class=\"line\"><span class=\"comment\"># 0.03974151 1.76726409  #p值大与0.05， 区间估计包含1，所以认为没有关系。</span></span><br><span class=\"line\"><span class=\"comment\"># sample estimates:</span></span><br><span class=\"line\"><span class=\"comment\"># odds ratio</span></span><br><span class=\"line\"><span class=\"comment\"># 0.2791061</span></span><br></pre></td></tr></table></figure>\n<p><code>McNemar</code>检验。这个不是相关性检验。是配对卡放检验。也就是说，我们是对一个样本做了两次观测，本身不是独立的样本而是相关的样本，而我们检验的是变化的强度。H0：频数没有发生变化。</p>\n<h6 id=\"相依配对计数资料\"><a href=\"#相依配对计数资料\" class=\"headerlink\" title=\"相依配对计数资料\"></a>相依配对计数资料</h6><table>\n<thead>\n<tr>\n<th></th>\n<th>治疗后具有症状A</th>\n<th>治疗后不具有症状A</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>治疗前不具有症状A</td>\n<td>a</td>\n<td>b</td>\n</tr>\n<tr>\n<td>治疗前具有症状A</td>\n<td>c</td>\n<td>d</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>用法就不举例了。单元格内数字不得小于5.n要大于100.</p>\n</blockquote>\n<h3 id=\"4-符号检验\"><a href=\"#4-符号检验\" class=\"headerlink\" title=\"4. 符号检验\"></a>4. 符号检验</h3><p>当我们以中位数将数据分为两边，一边为正，一边为负，那么样本出现在两边的概率应该都为1/2。因此，使用p=0.2的二项检验就可以做符号检验了。<br>例：</p>\n<blockquote>\n<p>统计了66个城市的生活花费指数，北京的生活花费指数为99 。请问北京是否位于中位数以上。</p>\n</blockquote>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x &lt;- scan()</span><br><span class=\"line\"><span class=\"comment\"># 1: 66 75 78 80 81 81 82 83 83 83 83</span></span><br><span class=\"line\"><span class=\"comment\"># 12: 84 85 85 86 86 86 86 87 87 88 88</span></span><br><span class=\"line\"><span class=\"comment\"># 23: 88 88 88 89 89 89 89 90 90 91 91</span></span><br><span class=\"line\"><span class=\"comment\"># 34: 91 91 92 93 93 96 96 96 97 99 100</span></span><br><span class=\"line\"><span class=\"comment\"># 45: 101 102 103 103 104 104 104 105 106 109 109</span></span><br><span class=\"line\"><span class=\"comment\"># 56: 110 110 110 111 113 115 116 117 118 155 192</span></span><br><span class=\"line\"><span class=\"comment\"># 67:</span></span><br><span class=\"line\"><span class=\"comment\"># Read 66 items</span></span><br><span class=\"line\"></span><br><span class=\"line\">binom.test(sum(x&gt;<span class=\"number\">99</span>),length(x),alternative=<span class=\"string\">\"less\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#        Exact binomial test</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># data:  sum(x &gt; 99) and length(x)</span></span><br><span class=\"line\"><span class=\"comment\"># number of successes = 23, number of trials = 66, p-value = 0.009329</span></span><br><span class=\"line\"><span class=\"comment\"># alternative hypothesis: true probability of success is less than 0.5</span></span><br><span class=\"line\"><span class=\"comment\"># 95 percent confidence interval:</span></span><br><span class=\"line\"><span class=\"comment\"># 0.0000000 0.4563087</span></span><br><span class=\"line\"><span class=\"comment\"># sample estimates:</span></span><br><span class=\"line\"><span class=\"comment\"># probability of success</span></span><br><span class=\"line\"><span class=\"comment\">#             0.3484848   #北京位于中位数下。</span></span><br></pre></td></tr></table></figure>\n<p>符号检验也可以用来检验两个总体是否存在明显差异。要是没有差异，那么两者之差为正的概率为0.5.</p>\n<blockquote>\n<p>用两种不同的饲料养猪，其增重情况如下表所示，请分析两种饲料</p>\n<h6 id=\"不同饲料养猪的增重情况\"><a href=\"#不同饲料养猪的增重情况\" class=\"headerlink\" title=\"不同饲料养猪的增重情况\"></a>不同饲料养猪的增重情况</h6><table>\n<thead>\n<tr>\n<th>对编号</th>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n<th>5</th>\n<th>6</th>\n<th>7</th>\n<th>8</th>\n<th>9</th>\n<th>10</th>\n<th>11</th>\n<th>12</th>\n<th>13</th>\n<th>14</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>饲料X</td>\n<td>25</td>\n<td>30</td>\n<td>28</td>\n<td>23</td>\n<td>27</td>\n<td>35</td>\n<td>30</td>\n<td>28</td>\n<td>32</td>\n<td>29</td>\n<td>30</td>\n<td>30</td>\n<td>31</td>\n<td>16</td>\n</tr>\n<tr>\n<td>饲料Y</td>\n<td>19</td>\n<td>32</td>\n<td>21</td>\n<td>19</td>\n<td>25</td>\n<td>31</td>\n<td>31</td>\n<td>26</td>\n<td>30</td>\n<td>25</td>\n<td>28</td>\n<td>31</td>\n<td>25</td>\n<td>25</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<p>例：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">y &lt;- c(<span class=\"number\">19</span>,<span class=\"number\">32</span>,<span class=\"number\">21</span>,<span class=\"number\">19</span>,<span class=\"number\">25</span>,<span class=\"number\">31</span>,<span class=\"number\">31</span>,<span class=\"number\">26</span>,<span class=\"number\">30</span>,<span class=\"number\">25</span>,<span class=\"number\">28</span>,<span class=\"number\">31</span>,<span class=\"number\">25</span>,<span class=\"number\">25</span>)</span><br><span class=\"line\">x &lt;- c(<span class=\"number\">25</span>,<span class=\"number\">30</span>,<span class=\"number\">28</span>,<span class=\"number\">23</span>,<span class=\"number\">27</span>,<span class=\"number\">35</span>,<span class=\"number\">30</span>,<span class=\"number\">28</span>,<span class=\"number\">32</span>,<span class=\"number\">29</span>,<span class=\"number\">30</span>,<span class=\"number\">30</span>,<span class=\"number\">31</span>,<span class=\"number\">16</span>)</span><br><span class=\"line\">binom.test(sum(x&lt;y),length(x))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#        Exact binomial test</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># data:  sum(x &lt; y) and length(x)</span></span><br><span class=\"line\"><span class=\"comment\"># number of successes = 4, number of trials = 14, p-value = 0.1796</span></span><br><span class=\"line\"><span class=\"comment\"># alternative hypothesis: true probability of success is not equal to 0.5</span></span><br><span class=\"line\"><span class=\"comment\"># 95 percent confidence interval:</span></span><br><span class=\"line\"><span class=\"comment\"># 0.08388932 0.58103526</span></span><br><span class=\"line\"><span class=\"comment\"># sample estimates:</span></span><br><span class=\"line\"><span class=\"comment\"># probability of success</span></span><br><span class=\"line\"><span class=\"comment\">#             0.2857143  #无明显差异。这个例子不是很好</span></span><br></pre></td></tr></table></figure>\n<p>例</p>\n<blockquote>\n<p>某饮料店为了解顾客对饮料的爱好情况，进一步改进他们的工作，对顾客喜欢咖啡还是喜欢奶茶，或者两者同样爱好进行了调查。该店在某日随机的抽取了13名顾客进行了调查，顾客喜欢咖啡超过奶茶用正号表示，喜欢奶茶超过咖啡用负号表示，两者同样爱好用0表示，现将调查的结果列在下表中:</p>\n<h6 id=\"不同顾客的爱好情况\"><a href=\"#不同顾客的爱好情况\" class=\"headerlink\" title=\"不同顾客的爱好情况\"></a>不同顾客的爱好情况</h6><table>\n<thead>\n<tr>\n<th>顾客编号</th>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n<th>5</th>\n<th>6</th>\n<th>7</th>\n<th>8</th>\n<th>9</th>\n<th>10</th>\n<th>11</th>\n<th>12</th>\n<th>13</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>喜欢咖啡</td>\n<td>1</td>\n<td></td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>0</td>\n<td>1</td>\n<td></td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td></td>\n<td>1</td>\n</tr>\n<tr>\n<td>喜欢奶茶</td>\n<td></td>\n<td>1</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td>1</td>\n<td></td>\n<td></td>\n<td></td>\n<td>1</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<p>题目中标识为0的意思是两者同样喜欢。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">binom.test(<span class=\"number\">3</span>,<span class=\"number\">12</span>,alternative=<span class=\"string\">\"less\"</span>,conf.level=<span class=\"number\">0.9</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#        Exact binomial test</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># data:  3 and 12</span></span><br><span class=\"line\"><span class=\"comment\"># number of successes = 3, number of trials = 12, p-value = 0.073</span></span><br><span class=\"line\"><span class=\"comment\"># alternative hypothesis: true probability of success is less than 0.5</span></span><br><span class=\"line\"><span class=\"comment\"># 90 percent confidence interval:</span></span><br><span class=\"line\"><span class=\"comment\"># 0.0000000 0.4752663</span></span><br><span class=\"line\"><span class=\"comment\"># sample estimates:</span></span><br><span class=\"line\"><span class=\"comment\"># probability of success  #p&lt;0.1 接受备择假设 认为有差异</span></span><br><span class=\"line\"><span class=\"comment\">#                  0.25</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"5-秩相关检验\"><a href=\"#5-秩相关检验\" class=\"headerlink\" title=\"5. 秩相关检验\"></a>5. 秩相关检验</h3><p>在R语言中，<code>rank()</code>函数用来求秩，如果向量中有相同的数据，求出的秩可能不合我们的要求，对数据做微调即可</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x &lt;- c(<span class=\"number\">1.2</span>,<span class=\"number\">0.8</span>,-<span class=\"number\">3.1</span>,<span class=\"number\">2</span>,<span class=\"number\">1.2</span>)</span><br><span class=\"line\">rank(x)</span><br><span class=\"line\"><span class=\"comment\"># [1] 3.5 2.0 1.0 5.0 3.5</span></span><br><span class=\"line\">x &lt;- c(<span class=\"number\">1.2</span>,<span class=\"number\">0.8</span>,-<span class=\"number\">3.1</span>,<span class=\"number\">2</span>,<span class=\"number\">1.2</span>+<span class=\"number\">1e-5</span>)</span><br><span class=\"line\">rank(x)</span><br><span class=\"line\"><span class=\"comment\"># [1] 3 2 1 5 4</span></span><br></pre></td></tr></table></figure>\n<p>利用秩可以做相关性检验。具体在上上篇笔记里已经讲了。<code>cor.test( method=&quot;spearman,kendell&quot;)</code></p>\n<h3 id=\"6-wilcoxon检验\"><a href=\"#6-wilcoxon检验\" class=\"headerlink\" title=\"6. wilcoxon检验\"></a>6. wilcoxon检验</h3><p>符号检验只考虑了符号，没有考虑要差异的大小。<code>wilcoxon</code>解决了这个问题。假设，数据是连续分布的，数据是关于中位数对称的。</p>\n<p>例：</p>\n<blockquote>\n<p>某电池厂商生产的电池中位数为140.现从新生产的电池中抽取20个测试。请问电池是否合格</p>\n</blockquote>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x &lt;- c(<span class=\"number\">137</span>,<span class=\"number\">140</span>,<span class=\"number\">138.3</span>,<span class=\"number\">139</span>,<span class=\"number\">144.3</span>,<span class=\"number\">139.1</span>,<span class=\"number\">141.7</span>,<span class=\"number\">137.3</span>,<span class=\"number\">133.5</span>,<span class=\"number\">138.2</span>,<span class=\"number\">141.1</span>,<span class=\"number\">139.2</span>,<span class=\"number\">136.5</span>,<span class=\"number\">136.5</span>,<span class=\"number\">135.6</span>,<span class=\"number\">138</span>,<span class=\"number\">140.9</span>,<span class=\"number\">140.6</span>,<span class=\"number\">136.3</span>,<span class=\"number\">134.1</span>)</span><br><span class=\"line\">wilcox.test(x,mu=<span class=\"number\">140</span>,alternative=<span class=\"string\">\"less\"</span>,exact=<span class=\"literal\">F</span>,correct=<span class=\"literal\">F</span>,confi.int=<span class=\"literal\">T</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#        Wilcoxon signed rank test</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># data:  x</span></span><br><span class=\"line\"><span class=\"comment\"># V = 34, p-value = 0.007034</span></span><br><span class=\"line\"><span class=\"comment\"># alternative hypothesis: true location is less than 140</span></span><br></pre></td></tr></table></figure>\n<p><code>wilcox.test()</code>做成对样本检测。</p>\n<p>例：</p>\n<blockquote>\n<p>在农场中选择了10块农田，将每一块农田分成2小块，分别用不同的化肥种菜。请问化肥会不会提高蔬菜产量。</p>\n</blockquote>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x &lt;- c(<span class=\"number\">459</span>,<span class=\"number\">367</span>,<span class=\"number\">303</span>,<span class=\"number\">392</span>,<span class=\"number\">310</span>,<span class=\"number\">342</span>,<span class=\"number\">421</span>,<span class=\"number\">446</span>,<span class=\"number\">430</span>,<span class=\"number\">412</span>)</span><br><span class=\"line\">y &lt;- c(<span class=\"number\">414</span>,<span class=\"number\">306</span>,<span class=\"number\">321</span>,<span class=\"number\">443</span>,<span class=\"number\">281</span>,<span class=\"number\">301</span>,<span class=\"number\">353</span>,<span class=\"number\">391</span>,<span class=\"number\">405</span>,<span class=\"number\">390</span>)</span><br><span class=\"line\">wilcox.test(x-y,alternative=<span class=\"string\">\"greater\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#        Wilcoxon signed rank test</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># data:  x - y</span></span><br><span class=\"line\"><span class=\"comment\"># V = 47, p-value = 0.02441</span></span><br><span class=\"line\"><span class=\"comment\"># alternative hypothesis: true location is greater than 0 #能够提高产量</span></span><br></pre></td></tr></table></figure>\n<p>非配对双样本检测：</p>\n<p>例</p>\n<blockquote>\n<p>今测得10名非铅作业工人和7名铅作业工人的血铅值，如下表所示，试用Wilcoxon秩和检验分析两组工人血铅值有无差异</p>\n<h6 id=\"两组工人的血铅值（单位：-1e-6mmol-L）\"><a href=\"#两组工人的血铅值（单位：-1e-6mmol-L）\" class=\"headerlink\" title=\"两组工人的血铅值（单位： 1e-6mmol/L）\"></a>两组工人的血铅值（单位： 1e-6mmol/L）</h6><table>\n<thead>\n<tr>\n<th>非铅作业组</th>\n<th>24</th>\n<th>26</th>\n<th>29</th>\n<th>34</th>\n<th>43</th>\n<th>58</th>\n<th>63</th>\n<th>72</th>\n<th>87</th>\n<th>101</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>铅作业组</td>\n<td>82</td>\n<td>87</td>\n<td>97</td>\n<td>121</td>\n<td>164</td>\n<td>208</td>\n<td>213</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x &lt;- c(<span class=\"number\">24</span>,<span class=\"number\">26</span>,<span class=\"number\">29</span>,<span class=\"number\">34</span>,<span class=\"number\">43</span>,<span class=\"number\">58</span>,<span class=\"number\">63</span>,<span class=\"number\">72</span>,<span class=\"number\">87</span>,<span class=\"number\">101</span>)</span><br><span class=\"line\">y &lt;- c(<span class=\"number\">82</span>,<span class=\"number\">87</span>,<span class=\"number\">97</span>,<span class=\"number\">121</span>,<span class=\"number\">164</span>,<span class=\"number\">208</span>,<span class=\"number\">213</span>)</span><br><span class=\"line\">wilcox.test(x,y,alternative=<span class=\"string\">\"less\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#        Wilcoxon rank sum test with continuity correction</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># data:  x and y</span></span><br><span class=\"line\"><span class=\"comment\"># W = 4.5, p-value = 0.001698</span></span><br><span class=\"line\"><span class=\"comment\"># alternative hypothesis: true location shift is less than 0</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Warning message:</span></span><br><span class=\"line\"><span class=\"comment\"># In wilcox.test.default(x, y, alternative = \"less\") :</span></span><br><span class=\"line\"><span class=\"comment\"># cannot compute exact p-value with ties #好奇怪这里为什么会有警告。。明明没有同秩的现象。</span></span><br></pre></td></tr></table></figure>\n<p>例</p>\n<blockquote>\n<p>某医院用某种药物治疗两型慢性支气管炎患者共216例，疗效由下表所示。试分析该药物对两型慢性支气管炎的治疗是否相同</p>\n<h6 id=\"某种药物治疗两型慢性支气管炎疗效结果\"><a href=\"#某种药物治疗两型慢性支气管炎疗效结果\" class=\"headerlink\" title=\"某种药物治疗两型慢性支气管炎疗效结果\"></a>某种药物治疗两型慢性支气管炎疗效结果</h6><table>\n<thead>\n<tr>\n<th>疗效</th>\n<th>控制</th>\n<th>显效</th>\n<th>进步</th>\n<th>无效</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>单纯型</td>\n<td>62</td>\n<td>41</td>\n<td>14</td>\n<td>11</td>\n</tr>\n<tr>\n<td>喘息性</td>\n<td>20</td>\n<td>37</td>\n<td>16</td>\n<td>15</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x &lt;- rep(<span class=\"number\">1</span>:<span class=\"number\">4</span>,c(<span class=\"number\">62</span>,<span class=\"number\">41</span>,<span class=\"number\">14</span>,<span class=\"number\">11</span>))</span><br><span class=\"line\">y &lt;- rep(<span class=\"number\">1</span>:<span class=\"number\">4</span>,c(<span class=\"number\">20</span>,<span class=\"number\">37</span>,<span class=\"number\">16</span>,<span class=\"number\">15</span>))</span><br><span class=\"line\">wilcox.test(x,y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#        Wilcoxon rank sum test with continuity correction</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># data:  x and y</span></span><br><span class=\"line\"><span class=\"comment\"># W = 3994, p-value = 0.0001242</span></span><br><span class=\"line\"><span class=\"comment\"># alternative hypothesis: true location shift is not equal to 0</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/qrcode/R_hypothesis_testing.png\" alt=\"一只小桃子 - R语言 假设检验（非参数） 学习笔记\"></p>\n</blockquote>"},{"title":"MCMXC, A.D.","date":"2016-08-01T16:00:00.000Z","_content":"\n![MCMXC, A.D.](http://p4.music.126.net/H3fov4Vxb2yDErM3z4HUlw==/738871813874129.jpg?param=177y177)\n\n**MCMXC, A.D.**\n\n歌手： Enigma\n发行时间：2006-11-28\n发行公司： Capitol Catalog\n\n<!--more-->\n\n-----------------------------------------------------------------------------------\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=450 src=\"http://music.163.com/outchain/player?type=1&id=1618355&auto=1&height=430\"></iframe>","source":"_posts/MCMXC_A_D.md","raw":"---\ntitle: MCMXC, A.D.\ntags: [music, Enigma]\ndate: 2016-8-2\n---\n\n![MCMXC, A.D.](http://p4.music.126.net/H3fov4Vxb2yDErM3z4HUlw==/738871813874129.jpg?param=177y177)\n\n**MCMXC, A.D.**\n\n歌手： Enigma\n发行时间：2006-11-28\n发行公司： Capitol Catalog\n\n<!--more-->\n\n-----------------------------------------------------------------------------------\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=450 src=\"http://music.163.com/outchain/player?type=1&id=1618355&auto=1&height=430\"></iframe>","slug":"MCMXC_A_D","published":1,"updated":"2016-08-04T19:50:25.582Z","_id":"cire2rihe0000y8v4oja7laby","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"http://p4.music.126.net/H3fov4Vxb2yDErM3z4HUlw==/738871813874129.jpg?param=177y177\" alt=\"MCMXC, A.D.\"></p>\n<p><strong>MCMXC, A.D.</strong></p>\n<p>歌手： Enigma<br>发行时间：2006-11-28<br>发行公司： Capitol Catalog</p>\n<a id=\"more\"></a>\n<hr>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"450\" src=\"http://music.163.com/outchain/player?type=1&id=1618355&auto=1&height=430\"></iframe>","excerpt":"<p><img src=\"http://p4.music.126.net/H3fov4Vxb2yDErM3z4HUlw==/738871813874129.jpg?param=177y177\" alt=\"MCMXC, A.D.\"></p>\n<p><strong>MCMXC, A.D.</strong></p>\n<p>歌手： Enigma<br>发行时间：2006-11-28<br>发行公司： Capitol Catalog</p>","more":"<hr>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=450 src=\"http://music.163.com/outchain/player?type=1&id=1618355&auto=1&height=430\"></iframe>"},{"title":"Calculating F-statistics from genotypic data","date":"2016-08-02T16:00:00.000Z","_content":"\n> CLI_tools source code on github: [pairwise.fst](https://github.com/genetics-potato/pairwise.fst)\n\n###### Genotype\n\n|Populations    | AA| Aa| aa|\n|---------------|---|---|---|\n|Subpopulation 1|125|250|125|\n|Subpopulation 2| 50| 30| 20|\n|Subpopulation 3|100|500|400|\n\n_N_ (number of individuals genotyped. The sum of each of the rows in the table above):\n\n```\nPopulation 1:   500\nPopulation 2:   100\nPopulation 3:   1,000\n```\n\nRemember that the number of alleles is **TWICE** the number of genotypes.\n\n<!--more-->\n\n**Step 1.  Calculate the gene (allele) frequencies**\n\nEach homozygote will have two alleles, each heterozygote will have one allele.  Note that the denominator will be twice ``Ni`` (twice as many alleles as individuals).\n\n> **Eqns FST.1**\n>\n> ![](https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/p1.png)\n>\n> ![](https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/p2.png)\n>\n> ![](https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/p3.png)\n>\n> * ``p1`` means the frequency of allele ``A`` in population 1.\n\n**Step 2.  Calculate the expected genotypic counts under Hardy-Weinberg Equilibrium**, and then calculate the **excess or deficiency of homozygotes in each subpopulation**:\n\n```\nPop. 1     Expected AA = 500*0.5^2      = 125     (= observed)\n           Expected Aa = 500*2*0.5*0.5  = 250     (= observed)\n           Expected aa = 500*0.5^2      = 125     (= observed)\n\nPop. 2     Expected AA = 100*0.65^2        = 42.25   (observed has excess of 7.75)\n           Expected Aa = 100*2*0.65*0.35   =  45.5   (observed has deficit of 15.5)\n           Expected aa = 100*0.352         = 12.25   (observed has excess of 7.75)\n```\n\nNote that sum of two types of homozygote excess = amount of heterozygote deficiency. These quantities have to balance (it's a mathematical necessity, given that ``p + q =1``.\n\n```\nPop. 3     Expected AA = 1,000*0.35^2      = 122.5  (observed has deficiency of 22.5)\n           Expected Aa = 1,000*2*0.65*0.35 =  455   (observed has excess of 45)\n           Expected aa = 1,000*0.352       = 422.5  (observed has deficiency of 22.5)\n```\n\nSummary of homozygote deficiency or excess relative to ``HWE``:\n\n+ Pop. 1.  Observed = Expected: perfect fit\n+ Pop. 2.  Excess of 15.5 homozygotes: some inbreeding\n+ Pop. 3.  Deficiency of 45 homozygotes: outbred or experiencing a Wahlund effect (isolate breaking).\n\n**Step 3.  Calculate the local _observed_ heterozygosities** of each subpopulation (we will call them Hobs s, where the s  subscript refers to the ``sth`` of ``n`` populations  -- 3 in this example).\nHere we count genotypes:\n\n```\nHobs 1 = 250/500  = 0.5\nHobs 2 =  30/100  = 0.3\nHobs 3 = 500/1000 = 0.5\n```\n\n**Step 4.  Calculate the local expected heterozygosity, or gene diversity, of each subpopulation** (modified version of Eqn 35.1):\n\n> **Eqns FST.2**\n>\n> ![](https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/H_exp1.png)\n> ![](https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/H_exp2.png)\n> ![](https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/H_exp3.png)\n>\n> (With two alleles it would actually be easier to use ``2pq`` than to use the summation format of Eqn 33.1)\n\n**Notation**: Note that I am using ``p1`` and ``q1`` here (where the subscripts refer to subpopulations 1 through 3). We would need to use multiple subscripts if we were using the notation of Eqn 35.1 where the alleles are ``pi`` (and the i refer to alleles 1 to k).  Indeed, with real multi-locus multipopulation data, we would have a triple summation and three subscripts; one for alleles (``i =1 to k``), one for the loci (l =1 tom), and one for subpopulations (s = 1 to n).\n\n**Step 5.  Calculate the local inbreeding coefficient of each subpopulation** (same as Eqn 35.4, except that we are subscripting for the subpopulations):\n\n> **Eqn FST.3**\n>\n> ![](https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/Fs.png)\n>\n> where _s_ (``s = 1 to 3``) refers to the subpopulation\n\n```\nF1 = (0.5 - 0.5) / 0.5     =  0\nF2 = (0.455 - 0.3) / 0.455 =  0.341 [positive F means fewer heterozygotes than expected indicates inbreeding]\nF3 = (0.455 — 0.5) / 0.455 = -0.099 [negative F means more heterozygotes than expected means excess outbreeding]\n```\n\n**Step 6. Calculate ``p`` (p-bar, the frequency of allele A) over the total population.**\n[Note that if we had more alleles we could put this and Step 7 all together as a single \"global gene frequencies\" step, or have one for each allele frequency].\n\n```\n(2*125+250+2*50+30+2*100+500)/(1000+200+2000)=0.4156  {genotype splitting method}\n```\nor (yields same answer)\n```\n(0.5*1000+0.65*200+0.35*2000)/(1000+200+2000)=0.4156  {using Eqn FST.1 values for ps}\n```\n\nNote that we weight by **population size**\n\n**Step 7.  Calculate ``q`` (q-bar, the frequency of allele a) over the total population**\n\n```\n(2*125+250+2*20+30+2*400+500)/(1000+200+2000)=0.5844\n```\nCheck: ``p-bar + q-bar = 0.4156 + 0.5844 = 1.0`` (as required by Eqn 31.1).\nThe check doesn't guarantee that our result is correct, but if they don't sum to one, we know we miscalculated.\n\n**Step 8.  Calculate the global heterozygosity indices (over *I*ndividuals, *S*ubpopulations and *T*otal population)**\nNote that the first two calculations employ a weighted average of the values in the whole set of subpopulations.\n\n``HI`` based on **observed** heterozygosities in **individuals** in subpopulations\n\n> **Eqn FST.4**\n>\n> ![](https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/HI.png)\n\n``HS`` based on **expected** heterozygosities in **subpopulations**\n\n> **Eqn FST.5**\n>\n> ![](https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/HS.png)\n\n``HT`` based on **expected** heterozygosities for overall total population (using global allele frequencies and a modified form of Eqn 35.1):\n\n> **Eqn FST.6**\n>\n> ![](https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/HT.png)\n\nor we could calculate it as ``2*p-bar *q-bar   = 2 * 0.4156 * 0.5844  = 0.4858``\n\n**Step 9.  CALCULATE THE GLOBAL ``F-STATISTICS``**\nCompare and contrast the global FISbelow with the **local inbreeding coefficient** ``Fs`` of Step 5.\nHere we are using a weighted average of the individual heterozygosities over all the subpopulations.\nBoth ``FIS`` and ``Fs`` are, however, based on the ``observed`` heterozygosities, whereas ``FST`` and ``FIT`` are based   on expected heterozygosities.\n\n> **Eqn FST.7**\n>\n> ![](https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/FIS.png)\n>\n> **Eqn FST.8**\n>\n> ![](https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/FST.png)\n>\n> **Eqn FST.9**\n>\n> ![](https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/FIT.png)\n\n**Notation note**: the subscripts ``I``, ``S``, and ``T`` are not summation subscripts. They simply indicate the level of our analysis.  Likewise, the ``s`` on ``Fs`` in Step 5 or on the ``ps`` in Step 1 (the ``s`` was implicit there) just tell us what we are referring to. In contrast, the subscripts for ``Eqn 35.1`` and ``35.2`` are used in summations and change as we work through the pieces of the calculation.\n\n**Step 10.  Finally, draw some conclusions about the genetic structure of the population and its subpopulations**.\n\n+ One of the possible HWE conclusions we could make:\n   + Pop. 1 is consistent with ``HWE`` (results of Step 2)\n+ Two of the possible \"local inbreeding\" conclusions we could make from Step 5:\n   + Pop. 2 is inbred (results of Step 5), and\n   + Pop. 3 may have disassortative mating or be experiencing a Wahlund effect (more heterozygotes than expected).\n+ Conclusion concerning overall degree of genetic differentiation (``FST``)\n   + Subdivision of populations, possibly due to genetic drift, accounts for approx. 3.4% of the total genetic variation (result of Eqn FST.8 FST calculation in Step 9),\n+ No excess or deficiency of heterozygotes over the total population (``FIT`` is nearly zero).\n\n\n> ![Population Ecology, ZOO 4400/5400, Spring 2013](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/qrcode/Calculating_F-statistics_from_genotypic_data.png)","source":"_posts/fst.md","raw":"---\ntitle: Calculating F-statistics from genotypic data\ntags: [genetics, algorithm, vb.net, github]\ndate: 2016-8-3\n---\n\n> CLI_tools source code on github: [pairwise.fst](https://github.com/genetics-potato/pairwise.fst)\n\n###### Genotype\n\n|Populations    | AA| Aa| aa|\n|---------------|---|---|---|\n|Subpopulation 1|125|250|125|\n|Subpopulation 2| 50| 30| 20|\n|Subpopulation 3|100|500|400|\n\n_N_ (number of individuals genotyped. The sum of each of the rows in the table above):\n\n```\nPopulation 1:   500\nPopulation 2:   100\nPopulation 3:   1,000\n```\n\nRemember that the number of alleles is **TWICE** the number of genotypes.\n\n<!--more-->\n\n**Step 1.  Calculate the gene (allele) frequencies**\n\nEach homozygote will have two alleles, each heterozygote will have one allele.  Note that the denominator will be twice ``Ni`` (twice as many alleles as individuals).\n\n> **Eqns FST.1**\n>\n> ![](https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/p1.png)\n>\n> ![](https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/p2.png)\n>\n> ![](https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/p3.png)\n>\n> * ``p1`` means the frequency of allele ``A`` in population 1.\n\n**Step 2.  Calculate the expected genotypic counts under Hardy-Weinberg Equilibrium**, and then calculate the **excess or deficiency of homozygotes in each subpopulation**:\n\n```\nPop. 1     Expected AA = 500*0.5^2      = 125     (= observed)\n           Expected Aa = 500*2*0.5*0.5  = 250     (= observed)\n           Expected aa = 500*0.5^2      = 125     (= observed)\n\nPop. 2     Expected AA = 100*0.65^2        = 42.25   (observed has excess of 7.75)\n           Expected Aa = 100*2*0.65*0.35   =  45.5   (observed has deficit of 15.5)\n           Expected aa = 100*0.352         = 12.25   (observed has excess of 7.75)\n```\n\nNote that sum of two types of homozygote excess = amount of heterozygote deficiency. These quantities have to balance (it's a mathematical necessity, given that ``p + q =1``.\n\n```\nPop. 3     Expected AA = 1,000*0.35^2      = 122.5  (observed has deficiency of 22.5)\n           Expected Aa = 1,000*2*0.65*0.35 =  455   (observed has excess of 45)\n           Expected aa = 1,000*0.352       = 422.5  (observed has deficiency of 22.5)\n```\n\nSummary of homozygote deficiency or excess relative to ``HWE``:\n\n+ Pop. 1.  Observed = Expected: perfect fit\n+ Pop. 2.  Excess of 15.5 homozygotes: some inbreeding\n+ Pop. 3.  Deficiency of 45 homozygotes: outbred or experiencing a Wahlund effect (isolate breaking).\n\n**Step 3.  Calculate the local _observed_ heterozygosities** of each subpopulation (we will call them Hobs s, where the s  subscript refers to the ``sth`` of ``n`` populations  -- 3 in this example).\nHere we count genotypes:\n\n```\nHobs 1 = 250/500  = 0.5\nHobs 2 =  30/100  = 0.3\nHobs 3 = 500/1000 = 0.5\n```\n\n**Step 4.  Calculate the local expected heterozygosity, or gene diversity, of each subpopulation** (modified version of Eqn 35.1):\n\n> **Eqns FST.2**\n>\n> ![](https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/H_exp1.png)\n> ![](https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/H_exp2.png)\n> ![](https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/H_exp3.png)\n>\n> (With two alleles it would actually be easier to use ``2pq`` than to use the summation format of Eqn 33.1)\n\n**Notation**: Note that I am using ``p1`` and ``q1`` here (where the subscripts refer to subpopulations 1 through 3). We would need to use multiple subscripts if we were using the notation of Eqn 35.1 where the alleles are ``pi`` (and the i refer to alleles 1 to k).  Indeed, with real multi-locus multipopulation data, we would have a triple summation and three subscripts; one for alleles (``i =1 to k``), one for the loci (l =1 tom), and one for subpopulations (s = 1 to n).\n\n**Step 5.  Calculate the local inbreeding coefficient of each subpopulation** (same as Eqn 35.4, except that we are subscripting for the subpopulations):\n\n> **Eqn FST.3**\n>\n> ![](https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/Fs.png)\n>\n> where _s_ (``s = 1 to 3``) refers to the subpopulation\n\n```\nF1 = (0.5 - 0.5) / 0.5     =  0\nF2 = (0.455 - 0.3) / 0.455 =  0.341 [positive F means fewer heterozygotes than expected indicates inbreeding]\nF3 = (0.455 — 0.5) / 0.455 = -0.099 [negative F means more heterozygotes than expected means excess outbreeding]\n```\n\n**Step 6. Calculate ``p`` (p-bar, the frequency of allele A) over the total population.**\n[Note that if we had more alleles we could put this and Step 7 all together as a single \"global gene frequencies\" step, or have one for each allele frequency].\n\n```\n(2*125+250+2*50+30+2*100+500)/(1000+200+2000)=0.4156  {genotype splitting method}\n```\nor (yields same answer)\n```\n(0.5*1000+0.65*200+0.35*2000)/(1000+200+2000)=0.4156  {using Eqn FST.1 values for ps}\n```\n\nNote that we weight by **population size**\n\n**Step 7.  Calculate ``q`` (q-bar, the frequency of allele a) over the total population**\n\n```\n(2*125+250+2*20+30+2*400+500)/(1000+200+2000)=0.5844\n```\nCheck: ``p-bar + q-bar = 0.4156 + 0.5844 = 1.0`` (as required by Eqn 31.1).\nThe check doesn't guarantee that our result is correct, but if they don't sum to one, we know we miscalculated.\n\n**Step 8.  Calculate the global heterozygosity indices (over *I*ndividuals, *S*ubpopulations and *T*otal population)**\nNote that the first two calculations employ a weighted average of the values in the whole set of subpopulations.\n\n``HI`` based on **observed** heterozygosities in **individuals** in subpopulations\n\n> **Eqn FST.4**\n>\n> ![](https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/HI.png)\n\n``HS`` based on **expected** heterozygosities in **subpopulations**\n\n> **Eqn FST.5**\n>\n> ![](https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/HS.png)\n\n``HT`` based on **expected** heterozygosities for overall total population (using global allele frequencies and a modified form of Eqn 35.1):\n\n> **Eqn FST.6**\n>\n> ![](https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/HT.png)\n\nor we could calculate it as ``2*p-bar *q-bar   = 2 * 0.4156 * 0.5844  = 0.4858``\n\n**Step 9.  CALCULATE THE GLOBAL ``F-STATISTICS``**\nCompare and contrast the global FISbelow with the **local inbreeding coefficient** ``Fs`` of Step 5.\nHere we are using a weighted average of the individual heterozygosities over all the subpopulations.\nBoth ``FIS`` and ``Fs`` are, however, based on the ``observed`` heterozygosities, whereas ``FST`` and ``FIT`` are based   on expected heterozygosities.\n\n> **Eqn FST.7**\n>\n> ![](https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/FIS.png)\n>\n> **Eqn FST.8**\n>\n> ![](https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/FST.png)\n>\n> **Eqn FST.9**\n>\n> ![](https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/FIT.png)\n\n**Notation note**: the subscripts ``I``, ``S``, and ``T`` are not summation subscripts. They simply indicate the level of our analysis.  Likewise, the ``s`` on ``Fs`` in Step 5 or on the ``ps`` in Step 1 (the ``s`` was implicit there) just tell us what we are referring to. In contrast, the subscripts for ``Eqn 35.1`` and ``35.2`` are used in summations and change as we work through the pieces of the calculation.\n\n**Step 10.  Finally, draw some conclusions about the genetic structure of the population and its subpopulations**.\n\n+ One of the possible HWE conclusions we could make:\n   + Pop. 1 is consistent with ``HWE`` (results of Step 2)\n+ Two of the possible \"local inbreeding\" conclusions we could make from Step 5:\n   + Pop. 2 is inbred (results of Step 5), and\n   + Pop. 3 may have disassortative mating or be experiencing a Wahlund effect (more heterozygotes than expected).\n+ Conclusion concerning overall degree of genetic differentiation (``FST``)\n   + Subdivision of populations, possibly due to genetic drift, accounts for approx. 3.4% of the total genetic variation (result of Eqn FST.8 FST calculation in Step 9),\n+ No excess or deficiency of heterozygotes over the total population (``FIT`` is nearly zero).\n\n\n> ![Population Ecology, ZOO 4400/5400, Spring 2013](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/qrcode/Calculating_F-statistics_from_genotypic_data.png)","slug":"fst","published":1,"updated":"2016-08-04T20:24:03.134Z","_id":"cire2riiv0001y8v46ro3pinw","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>CLI_tools source code on github: <a href=\"https://github.com/genetics-potato/pairwise.fst\" target=\"_blank\" rel=\"external\">pairwise.fst</a></p>\n</blockquote>\n<h6 id=\"Genotype\"><a href=\"#Genotype\" class=\"headerlink\" title=\"Genotype\"></a>Genotype</h6><table>\n<thead>\n<tr>\n<th>Populations</th>\n<th>AA</th>\n<th>Aa</th>\n<th>aa</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Subpopulation 1</td>\n<td>125</td>\n<td>250</td>\n<td>125</td>\n</tr>\n<tr>\n<td>Subpopulation 2</td>\n<td>50</td>\n<td>30</td>\n<td>20</td>\n</tr>\n<tr>\n<td>Subpopulation 3</td>\n<td>100</td>\n<td>500</td>\n<td>400</td>\n</tr>\n</tbody>\n</table>\n<p><em>N</em> (number of individuals genotyped. The sum of each of the rows in the table above):</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Population 1:   500</span><br><span class=\"line\">Population 2:   100</span><br><span class=\"line\">Population 3:   1,000</span><br></pre></td></tr></table></figure>\n<p>Remember that the number of alleles is <strong>TWICE</strong> the number of genotypes.</p>\n<a id=\"more\"></a>\n<p><strong>Step 1.  Calculate the gene (allele) frequencies</strong></p>\n<p>Each homozygote will have two alleles, each heterozygote will have one allele.  Note that the denominator will be twice <code>Ni</code> (twice as many alleles as individuals).</p>\n<blockquote>\n<p><strong>Eqns FST.1</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/p1.png\" alt=\"\"></p>\n<p><img src=\"https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/p2.png\" alt=\"\"></p>\n<p><img src=\"https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/p3.png\" alt=\"\"></p>\n<ul>\n<li><code>p1</code> means the frequency of allele <code>A</code> in population 1.</li>\n</ul>\n</blockquote>\n<p><strong>Step 2.  Calculate the expected genotypic counts under Hardy-Weinberg Equilibrium</strong>, and then calculate the <strong>excess or deficiency of homozygotes in each subpopulation</strong>:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Pop. 1     Expected AA = 500*0.5^2      = 125     (= observed)</span><br><span class=\"line\">           Expected Aa = 500*2*0.5*0.5  = 250     (= observed)</span><br><span class=\"line\">           Expected aa = 500*0.5^2      = 125     (= observed)</span><br><span class=\"line\"></span><br><span class=\"line\">Pop. 2     Expected AA = 100*0.65^2        = 42.25   (observed has excess of 7.75)</span><br><span class=\"line\">           Expected Aa = 100*2*0.65*0.35   =  45.5   (observed has deficit of 15.5)</span><br><span class=\"line\">           Expected aa = 100*0.352         = 12.25   (observed has excess of 7.75)</span><br></pre></td></tr></table></figure>\n<p>Note that sum of two types of homozygote excess = amount of heterozygote deficiency. These quantities have to balance (it’s a mathematical necessity, given that <code>p + q =1</code>.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Pop. 3     Expected AA = 1,000*0.35^2      = 122.5  (observed has deficiency of 22.5)</span><br><span class=\"line\">           Expected Aa = 1,000*2*0.65*0.35 =  455   (observed has excess of 45)</span><br><span class=\"line\">           Expected aa = 1,000*0.352       = 422.5  (observed has deficiency of 22.5)</span><br></pre></td></tr></table></figure>\n<p>Summary of homozygote deficiency or excess relative to <code>HWE</code>:</p>\n<ul>\n<li>Pop. 1.  Observed = Expected: perfect fit</li>\n<li>Pop. 2.  Excess of 15.5 homozygotes: some inbreeding</li>\n<li>Pop. 3.  Deficiency of 45 homozygotes: outbred or experiencing a Wahlund effect (isolate breaking).</li>\n</ul>\n<p><strong>Step 3.  Calculate the local <em>observed</em> heterozygosities</strong> of each subpopulation (we will call them Hobs s, where the s  subscript refers to the <code>sth</code> of <code>n</code> populations  – 3 in this example).<br>Here we count genotypes:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hobs 1 = 250/500  = 0.5</span><br><span class=\"line\">Hobs 2 =  30/100  = 0.3</span><br><span class=\"line\">Hobs 3 = 500/1000 = 0.5</span><br></pre></td></tr></table></figure>\n<p><strong>Step 4.  Calculate the local expected heterozygosity, or gene diversity, of each subpopulation</strong> (modified version of Eqn 35.1):</p>\n<blockquote>\n<p><strong>Eqns FST.2</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/H_exp1.png\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/H_exp2.png\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/H_exp3.png\" alt=\"\"></p>\n<p>(With two alleles it would actually be easier to use <code>2pq</code> than to use the summation format of Eqn 33.1)</p>\n</blockquote>\n<p><strong>Notation</strong>: Note that I am using <code>p1</code> and <code>q1</code> here (where the subscripts refer to subpopulations 1 through 3). We would need to use multiple subscripts if we were using the notation of Eqn 35.1 where the alleles are <code>pi</code> (and the i refer to alleles 1 to k).  Indeed, with real multi-locus multipopulation data, we would have a triple summation and three subscripts; one for alleles (<code>i =1 to k</code>), one for the loci (l =1 tom), and one for subpopulations (s = 1 to n).</p>\n<p><strong>Step 5.  Calculate the local inbreeding coefficient of each subpopulation</strong> (same as Eqn 35.4, except that we are subscripting for the subpopulations):</p>\n<blockquote>\n<p><strong>Eqn FST.3</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/Fs.png\" alt=\"\"></p>\n<p>where <em>s</em> (<code>s = 1 to 3</code>) refers to the subpopulation</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">F1 = (0.5 - 0.5) / 0.5     =  0</span><br><span class=\"line\">F2 = (0.455 - 0.3) / 0.455 =  0.341 [positive F means fewer heterozygotes than expected indicates inbreeding]</span><br><span class=\"line\">F3 = (0.455 — 0.5) / 0.455 = -0.099 [negative F means more heterozygotes than expected means excess outbreeding]</span><br></pre></td></tr></table></figure>\n<p><strong>Step 6. Calculate <code>p</code> (p-bar, the frequency of allele A) over the total population.</strong><br>[Note that if we had more alleles we could put this and Step 7 all together as a single “global gene frequencies” step, or have one for each allele frequency].</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(2*125+250+2*50+30+2*100+500)/(1000+200+2000)=0.4156  &#123;genotype splitting method&#125;</span><br></pre></td></tr></table></figure>\n<p>or (yields same answer)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(0.5*1000+0.65*200+0.35*2000)/(1000+200+2000)=0.4156  &#123;using Eqn FST.1 values for ps&#125;</span><br></pre></td></tr></table></figure></p>\n<p>Note that we weight by <strong>population size</strong></p>\n<p><strong>Step 7.  Calculate <code>q</code> (q-bar, the frequency of allele a) over the total population</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(2*125+250+2*20+30+2*400+500)/(1000+200+2000)=0.5844</span><br></pre></td></tr></table></figure>\n<p>Check: <code>p-bar + q-bar = 0.4156 + 0.5844 = 1.0</code> (as required by Eqn 31.1).<br>The check doesn’t guarantee that our result is correct, but if they don’t sum to one, we know we miscalculated.</p>\n<p><strong>Step 8.  Calculate the global heterozygosity indices (over <em>I</em>ndividuals, <em>S</em>ubpopulations and <em>T</em>otal population)</strong><br>Note that the first two calculations employ a weighted average of the values in the whole set of subpopulations.</p>\n<p><code>HI</code> based on <strong>observed</strong> heterozygosities in <strong>individuals</strong> in subpopulations</p>\n<blockquote>\n<p><strong>Eqn FST.4</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/HI.png\" alt=\"\"></p>\n</blockquote>\n<p><code>HS</code> based on <strong>expected</strong> heterozygosities in <strong>subpopulations</strong></p>\n<blockquote>\n<p><strong>Eqn FST.5</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/HS.png\" alt=\"\"></p>\n</blockquote>\n<p><code>HT</code> based on <strong>expected</strong> heterozygosities for overall total population (using global allele frequencies and a modified form of Eqn 35.1):</p>\n<blockquote>\n<p><strong>Eqn FST.6</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/HT.png\" alt=\"\"></p>\n</blockquote>\n<p>or we could calculate it as <code>2*p-bar *q-bar   = 2 * 0.4156 * 0.5844  = 0.4858</code></p>\n<p><strong>Step 9.  CALCULATE THE GLOBAL <code>F-STATISTICS</code></strong><br>Compare and contrast the global FISbelow with the <strong>local inbreeding coefficient</strong> <code>Fs</code> of Step 5.<br>Here we are using a weighted average of the individual heterozygosities over all the subpopulations.<br>Both <code>FIS</code> and <code>Fs</code> are, however, based on the <code>observed</code> heterozygosities, whereas <code>FST</code> and <code>FIT</code> are based   on expected heterozygosities.</p>\n<blockquote>\n<p><strong>Eqn FST.7</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/FIS.png\" alt=\"\"></p>\n<p><strong>Eqn FST.8</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/FST.png\" alt=\"\"></p>\n<p><strong>Eqn FST.9</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/FIT.png\" alt=\"\"></p>\n</blockquote>\n<p><strong>Notation note</strong>: the subscripts <code>I</code>, <code>S</code>, and <code>T</code> are not summation subscripts. They simply indicate the level of our analysis.  Likewise, the <code>s</code> on <code>Fs</code> in Step 5 or on the <code>ps</code> in Step 1 (the <code>s</code> was implicit there) just tell us what we are referring to. In contrast, the subscripts for <code>Eqn 35.1</code> and <code>35.2</code> are used in summations and change as we work through the pieces of the calculation.</p>\n<p><strong>Step 10.  Finally, draw some conclusions about the genetic structure of the population and its subpopulations</strong>.</p>\n<ul>\n<li>One of the possible HWE conclusions we could make:<ul>\n<li>Pop. 1 is consistent with <code>HWE</code> (results of Step 2)</li>\n</ul>\n</li>\n<li>Two of the possible “local inbreeding” conclusions we could make from Step 5:<ul>\n<li>Pop. 2 is inbred (results of Step 5), and</li>\n<li>Pop. 3 may have disassortative mating or be experiencing a Wahlund effect (more heterozygotes than expected).</li>\n</ul>\n</li>\n<li>Conclusion concerning overall degree of genetic differentiation (<code>FST</code>)<ul>\n<li>Subdivision of populations, possibly due to genetic drift, accounts for approx. 3.4% of the total genetic variation (result of Eqn FST.8 FST calculation in Step 9),</li>\n</ul>\n</li>\n<li>No excess or deficiency of heterozygotes over the total population (<code>FIT</code> is nearly zero).</li>\n</ul>\n<blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/qrcode/Calculating_F-statistics_from_genotypic_data.png\" alt=\"Population Ecology, ZOO 4400/5400, Spring 2013\"></p>\n</blockquote>\n","excerpt":"<blockquote>\n<p>CLI_tools source code on github: <a href=\"https://github.com/genetics-potato/pairwise.fst\">pairwise.fst</a></p>\n</blockquote>\n<h6 id=\"Genotype\"><a href=\"#Genotype\" class=\"headerlink\" title=\"Genotype\"></a>Genotype</h6><table>\n<thead>\n<tr>\n<th>Populations</th>\n<th>AA</th>\n<th>Aa</th>\n<th>aa</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Subpopulation 1</td>\n<td>125</td>\n<td>250</td>\n<td>125</td>\n</tr>\n<tr>\n<td>Subpopulation 2</td>\n<td>50</td>\n<td>30</td>\n<td>20</td>\n</tr>\n<tr>\n<td>Subpopulation 3</td>\n<td>100</td>\n<td>500</td>\n<td>400</td>\n</tr>\n</tbody>\n</table>\n<p><em>N</em> (number of individuals genotyped. The sum of each of the rows in the table above):</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Population 1:   500</span><br><span class=\"line\">Population 2:   100</span><br><span class=\"line\">Population 3:   1,000</span><br></pre></td></tr></table></figure>\n<p>Remember that the number of alleles is <strong>TWICE</strong> the number of genotypes.</p>","more":"<p><strong>Step 1.  Calculate the gene (allele) frequencies</strong></p>\n<p>Each homozygote will have two alleles, each heterozygote will have one allele.  Note that the denominator will be twice <code>Ni</code> (twice as many alleles as individuals).</p>\n<blockquote>\n<p><strong>Eqns FST.1</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/p1.png\" alt=\"\"></p>\n<p><img src=\"https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/p2.png\" alt=\"\"></p>\n<p><img src=\"https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/p3.png\" alt=\"\"></p>\n<ul>\n<li><code>p1</code> means the frequency of allele <code>A</code> in population 1.</li>\n</ul>\n</blockquote>\n<p><strong>Step 2.  Calculate the expected genotypic counts under Hardy-Weinberg Equilibrium</strong>, and then calculate the <strong>excess or deficiency of homozygotes in each subpopulation</strong>:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Pop. 1     Expected AA = 500*0.5^2      = 125     (= observed)</span><br><span class=\"line\">           Expected Aa = 500*2*0.5*0.5  = 250     (= observed)</span><br><span class=\"line\">           Expected aa = 500*0.5^2      = 125     (= observed)</span><br><span class=\"line\"></span><br><span class=\"line\">Pop. 2     Expected AA = 100*0.65^2        = 42.25   (observed has excess of 7.75)</span><br><span class=\"line\">           Expected Aa = 100*2*0.65*0.35   =  45.5   (observed has deficit of 15.5)</span><br><span class=\"line\">           Expected aa = 100*0.352         = 12.25   (observed has excess of 7.75)</span><br></pre></td></tr></table></figure>\n<p>Note that sum of two types of homozygote excess = amount of heterozygote deficiency. These quantities have to balance (it’s a mathematical necessity, given that <code>p + q =1</code>.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Pop. 3     Expected AA = 1,000*0.35^2      = 122.5  (observed has deficiency of 22.5)</span><br><span class=\"line\">           Expected Aa = 1,000*2*0.65*0.35 =  455   (observed has excess of 45)</span><br><span class=\"line\">           Expected aa = 1,000*0.352       = 422.5  (observed has deficiency of 22.5)</span><br></pre></td></tr></table></figure>\n<p>Summary of homozygote deficiency or excess relative to <code>HWE</code>:</p>\n<ul>\n<li>Pop. 1.  Observed = Expected: perfect fit</li>\n<li>Pop. 2.  Excess of 15.5 homozygotes: some inbreeding</li>\n<li>Pop. 3.  Deficiency of 45 homozygotes: outbred or experiencing a Wahlund effect (isolate breaking).</li>\n</ul>\n<p><strong>Step 3.  Calculate the local <em>observed</em> heterozygosities</strong> of each subpopulation (we will call them Hobs s, where the s  subscript refers to the <code>sth</code> of <code>n</code> populations  – 3 in this example).<br>Here we count genotypes:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hobs 1 = 250/500  = 0.5</span><br><span class=\"line\">Hobs 2 =  30/100  = 0.3</span><br><span class=\"line\">Hobs 3 = 500/1000 = 0.5</span><br></pre></td></tr></table></figure>\n<p><strong>Step 4.  Calculate the local expected heterozygosity, or gene diversity, of each subpopulation</strong> (modified version of Eqn 35.1):</p>\n<blockquote>\n<p><strong>Eqns FST.2</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/H_exp1.png\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/H_exp2.png\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/H_exp3.png\" alt=\"\"></p>\n<p>(With two alleles it would actually be easier to use <code>2pq</code> than to use the summation format of Eqn 33.1)</p>\n</blockquote>\n<p><strong>Notation</strong>: Note that I am using <code>p1</code> and <code>q1</code> here (where the subscripts refer to subpopulations 1 through 3). We would need to use multiple subscripts if we were using the notation of Eqn 35.1 where the alleles are <code>pi</code> (and the i refer to alleles 1 to k).  Indeed, with real multi-locus multipopulation data, we would have a triple summation and three subscripts; one for alleles (<code>i =1 to k</code>), one for the loci (l =1 tom), and one for subpopulations (s = 1 to n).</p>\n<p><strong>Step 5.  Calculate the local inbreeding coefficient of each subpopulation</strong> (same as Eqn 35.4, except that we are subscripting for the subpopulations):</p>\n<blockquote>\n<p><strong>Eqn FST.3</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/Fs.png\" alt=\"\"></p>\n<p>where <em>s</em> (<code>s = 1 to 3</code>) refers to the subpopulation</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">F1 = (0.5 - 0.5) / 0.5     =  0</span><br><span class=\"line\">F2 = (0.455 - 0.3) / 0.455 =  0.341 [positive F means fewer heterozygotes than expected indicates inbreeding]</span><br><span class=\"line\">F3 = (0.455 — 0.5) / 0.455 = -0.099 [negative F means more heterozygotes than expected means excess outbreeding]</span><br></pre></td></tr></table></figure>\n<p><strong>Step 6. Calculate <code>p</code> (p-bar, the frequency of allele A) over the total population.</strong><br>[Note that if we had more alleles we could put this and Step 7 all together as a single “global gene frequencies” step, or have one for each allele frequency].</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(2*125+250+2*50+30+2*100+500)/(1000+200+2000)=0.4156  &#123;genotype splitting method&#125;</span><br></pre></td></tr></table></figure>\n<p>or (yields same answer)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(0.5*1000+0.65*200+0.35*2000)/(1000+200+2000)=0.4156  &#123;using Eqn FST.1 values for ps&#125;</span><br></pre></td></tr></table></figure></p>\n<p>Note that we weight by <strong>population size</strong></p>\n<p><strong>Step 7.  Calculate <code>q</code> (q-bar, the frequency of allele a) over the total population</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(2*125+250+2*20+30+2*400+500)/(1000+200+2000)=0.5844</span><br></pre></td></tr></table></figure>\n<p>Check: <code>p-bar + q-bar = 0.4156 + 0.5844 = 1.0</code> (as required by Eqn 31.1).<br>The check doesn’t guarantee that our result is correct, but if they don’t sum to one, we know we miscalculated.</p>\n<p><strong>Step 8.  Calculate the global heterozygosity indices (over <em>I</em>ndividuals, <em>S</em>ubpopulations and <em>T</em>otal population)</strong><br>Note that the first two calculations employ a weighted average of the values in the whole set of subpopulations.</p>\n<p><code>HI</code> based on <strong>observed</strong> heterozygosities in <strong>individuals</strong> in subpopulations</p>\n<blockquote>\n<p><strong>Eqn FST.4</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/HI.png\" alt=\"\"></p>\n</blockquote>\n<p><code>HS</code> based on <strong>expected</strong> heterozygosities in <strong>subpopulations</strong></p>\n<blockquote>\n<p><strong>Eqn FST.5</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/HS.png\" alt=\"\"></p>\n</blockquote>\n<p><code>HT</code> based on <strong>expected</strong> heterozygosities for overall total population (using global allele frequencies and a modified form of Eqn 35.1):</p>\n<blockquote>\n<p><strong>Eqn FST.6</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/HT.png\" alt=\"\"></p>\n</blockquote>\n<p>or we could calculate it as <code>2*p-bar *q-bar   = 2 * 0.4156 * 0.5844  = 0.4858</code></p>\n<p><strong>Step 9.  CALCULATE THE GLOBAL <code>F-STATISTICS</code></strong><br>Compare and contrast the global FISbelow with the <strong>local inbreeding coefficient</strong> <code>Fs</code> of Step 5.<br>Here we are using a weighted average of the individual heterozygosities over all the subpopulations.<br>Both <code>FIS</code> and <code>Fs</code> are, however, based on the <code>observed</code> heterozygosities, whereas <code>FST</code> and <code>FIT</code> are based   on expected heterozygosities.</p>\n<blockquote>\n<p><strong>Eqn FST.7</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/FIS.png\" alt=\"\"></p>\n<p><strong>Eqn FST.8</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/FST.png\" alt=\"\"></p>\n<p><strong>Eqn FST.9</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/genetics-potato/pairwise.fst/master/images/FIT.png\" alt=\"\"></p>\n</blockquote>\n<p><strong>Notation note</strong>: the subscripts <code>I</code>, <code>S</code>, and <code>T</code> are not summation subscripts. They simply indicate the level of our analysis.  Likewise, the <code>s</code> on <code>Fs</code> in Step 5 or on the <code>ps</code> in Step 1 (the <code>s</code> was implicit there) just tell us what we are referring to. In contrast, the subscripts for <code>Eqn 35.1</code> and <code>35.2</code> are used in summations and change as we work through the pieces of the calculation.</p>\n<p><strong>Step 10.  Finally, draw some conclusions about the genetic structure of the population and its subpopulations</strong>.</p>\n<ul>\n<li>One of the possible HWE conclusions we could make:<ul>\n<li>Pop. 1 is consistent with <code>HWE</code> (results of Step 2)</li>\n</ul>\n</li>\n<li>Two of the possible “local inbreeding” conclusions we could make from Step 5:<ul>\n<li>Pop. 2 is inbred (results of Step 5), and</li>\n<li>Pop. 3 may have disassortative mating or be experiencing a Wahlund effect (more heterozygotes than expected).</li>\n</ul>\n</li>\n<li>Conclusion concerning overall degree of genetic differentiation (<code>FST</code>)<ul>\n<li>Subdivision of populations, possibly due to genetic drift, accounts for approx. 3.4% of the total genetic variation (result of Eqn FST.8 FST calculation in Step 9),</li>\n</ul>\n</li>\n<li>No excess or deficiency of heterozygotes over the total population (<code>FIT</code> is nearly zero).</li>\n</ul>\n<blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/qrcode/Calculating_F-statistics_from_genotypic_data.png\" alt=\"Population Ecology, ZOO 4400/5400, Spring 2013\"></p>\n</blockquote>"},{"title":"The Screen Behind The Mirror","date":"2016-08-03T16:00:00.000Z","_content":"\n![The Screen Behind The Mirror](http://p3.music.126.net/Mj0slt54KXyfpdVQn4FPdw==/2540971372169531.jpg?param=177y177)\n\n**The Screen Behind The Mirror**\n\n歌手： Enigma\n发行时间：2004-10-11\n发行公司： Virgin Germany\n\n<!--more-->\n\n------------------------------------------------------------------------------\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=450 src=\"http://music.163.com/outchain/player?type=1&id=1618354&auto=1&height=430\"></iframe>","source":"_posts/The_Screen_Behind_The_Mirror.md","raw":"---\ntitle: The Screen Behind The Mirror\ntags: [music, Enigma]\ndate: 2016-8-4\n---\n\n![The Screen Behind The Mirror](http://p3.music.126.net/Mj0slt54KXyfpdVQn4FPdw==/2540971372169531.jpg?param=177y177)\n\n**The Screen Behind The Mirror**\n\n歌手： Enigma\n发行时间：2004-10-11\n发行公司： Virgin Germany\n\n<!--more-->\n\n------------------------------------------------------------------------------\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=450 src=\"http://music.163.com/outchain/player?type=1&id=1618354&auto=1&height=430\"></iframe>","slug":"The_Screen_Behind_The_Mirror","published":1,"updated":"2016-08-04T19:51:59.702Z","_id":"cirfgfxfy0000mwv467iktamx","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"http://p3.music.126.net/Mj0slt54KXyfpdVQn4FPdw==/2540971372169531.jpg?param=177y177\" alt=\"The Screen Behind The Mirror\"></p>\n<p><strong>The Screen Behind The Mirror</strong></p>\n<p>歌手： Enigma<br>发行时间：2004-10-11<br>发行公司： Virgin Germany</p>\n<a id=\"more\"></a>\n<hr>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"450\" src=\"http://music.163.com/outchain/player?type=1&id=1618354&auto=1&height=430\"></iframe>","excerpt":"<p><img src=\"http://p3.music.126.net/Mj0slt54KXyfpdVQn4FPdw==/2540971372169531.jpg?param=177y177\" alt=\"The Screen Behind The Mirror\"></p>\n<p><strong>The Screen Behind The Mirror</strong></p>\n<p>歌手： Enigma<br>发行时间：2004-10-11<br>发行公司： Virgin Germany</p>","more":"<hr>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=450 src=\"http://music.163.com/outchain/player?type=1&id=1618354&auto=1&height=430\"></iframe>"},{"title":"Voyageur","date":"2016-08-04T16:00:00.000Z","_content":"\n![Voyageur](http://p3.music.126.net/-mwfAZdT_g0W_JM-Po40gg==/2540971372876558.jpg?param=177y177)\n\n**Voyageur**\n\n歌手： Enigma\n发行时间：2005-04-11\n发行公司： Virgin Germany\n<!--more-->\n\n-------------------------------------------------------------------------------------------\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=450 src=\"http://music.163.com/outchain/player?type=1&id=2064868&auto=1&height=430\"></iframe>","source":"_posts/Voyageur.md","raw":"---\ntitle: Voyageur\ntags: [music, Enigma]\ndate: 2016-8-5\n---\n\n![Voyageur](http://p3.music.126.net/-mwfAZdT_g0W_JM-Po40gg==/2540971372876558.jpg?param=177y177)\n\n**Voyageur**\n\n歌手： Enigma\n发行时间：2005-04-11\n发行公司： Virgin Germany\n<!--more-->\n\n-------------------------------------------------------------------------------------------\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=450 src=\"http://music.163.com/outchain/player?type=1&id=2064868&auto=1&height=430\"></iframe>","slug":"Voyageur","published":1,"updated":"2016-08-04T19:49:28.479Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirgqpn0p0000i0v4ddn1f7jd","content":"<p><img src=\"http://p3.music.126.net/-mwfAZdT_g0W_JM-Po40gg==/2540971372876558.jpg?param=177y177\" alt=\"Voyageur\"></p>\n<p><strong>Voyageur</strong></p>\n<p>歌手： Enigma<br>发行时间：2005-04-11<br>发行公司： Virgin Germany<br><a id=\"more\"></a></p>\n<hr>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"450\" src=\"http://music.163.com/outchain/player?type=1&id=2064868&auto=1&height=430\"></iframe>","excerpt":"<p><img src=\"http://p3.music.126.net/-mwfAZdT_g0W_JM-Po40gg==/2540971372876558.jpg?param=177y177\" alt=\"Voyageur\"></p>\n<p><strong>Voyageur</strong></p>\n<p>歌手： Enigma<br>发行时间：2005-04-11<br>发行公司： Virgin Germany<br>","more":"</p>\n<hr>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=450 src=\"http://music.163.com/outchain/player?type=1&id=2064868&auto=1&height=430\"></iframe>"},{"title":"为什么我们瞧不起土狗？","date":"2016-08-04T16:00:00.000Z","_content":"\n**不是狗土，是你土。**\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p1.jpg)\n\n中国的语言文字是美丽丰富的，但却没能给中国土狗取一个名字。\n不是已经说了叫**土狗**吗？柴狗、黄狗、草狗、中华田园犬，不都是名字？\n\n**不是。**\n<!--more-->\n柴狗、黄狗、草狗是部分地区的叫法，不是统称；**土狗**是贬义词，不是中性名词；``中华田园犬``是自欺欺人的_雅称_，正如我们把“妓女”称为“性工作从事者”；遛土狗很丢人，遛``中华田园犬``好像就没那么丢人了。\n\n**田园**二字表明我们不想在城市见到它们，家中就更不允许；这个词也是近几年才出现的。\n\n**于是，被驯化了1.6万年的中国土狗，没有名字。**\n\n姑且先叫它们土狗吧。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p2.jpg)\n\n### 中国土狗不是杂种\n\n中国有不少品种狗，藏獒、京巴、松狮、西施、冠毛、昆明犬（狼狗）等等，但提到“土狗”，就完全无血统可言了：杂种！\n所有的“串儿”、低等杂种狗，都可以统称为土狗。偏见。所谓的中国“土狗”其实是一种血统优秀的高级犬。\n土狗的祖先是东亚狼，早年，它们跟随汉民族从青藏高原以东、长城以南，经黄河流域分散到全国各地，如今大概分三个品系。\n\n#### 1. 北方品系\n\n主要生活于东北、黄河流域、长江中上游，多杂色，不吃外食，独死。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p3.jpg)\n\n#### 2. 两广品系\n\n主要生活于广东、广西、福建等地，抗病能力强，擅捕猎，战斗力强。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p4.jpg)\n\n#### 3. 江浙品系\n\n主要生活于浙江、江苏、安徽等地，对韩国、日本犬种影响极大，是日本柴犬的祖先。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p5.jpg)\n\n``土狗`` **是一种有独立血统，习性、栖息地明确的犬种，不是杂种。**\n\n70年代以来，伴随大量西方犬的引入和_城市优于农村_观念的形成：养狗就应该养西方狗；土狗不是宠物，是农村看家的，是杀了吃肉的；土狗是贱种，养土狗的都是穷人，已成为根深蒂固的观念。\n狗粮、狗衣、狗玩具、狗预防针都是给西方犬预备的，土狗只需要一条铁锁链和一碗剩饭。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p6.jpg)\n\n**果真 如此吗？**\n\n战国**韩卢**\n\n>施韩卢者，霸业可致也\n\n三国**黑龙**\n\n> 犬之报恩，甚于人，人不知恩，岂如犬乎！\n\n西晋**黄耳**\n\n> 陆机亲以棺木葬之，曰“黄耳冢”。\n\n李斯临刑哀叹：\n\n> 吾欲与若复牵黄犬俱出……岂可得乎？\n\n苏轼晚年感慨：\n\n> 老夫聊发少年狂，左牵黄，右擎苍。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p7.jpg)\n\n中国的人啊，你凭什么瞧不起中国的狗呢？中国的狗哪里配不上你呢？\n你可以认为自己不如西方人，但你不可以认为中国狗不如西方狗。谁给你的权利呢？\n\n### 中国土狗的血统是最优秀的\n\n中国土狗血统的优秀在于它既保留了东亚狼的优势又躲过了西方人对犬类血统的祸害。\n西方白人有很强的“血统观”，把人分为皇室、贵族、贱民，他们不仅重视人的血统，还重视狗的。\n\n**如何保持血统纯正？近亲繁殖。**\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p8.jpg)\n\n但近亲繁殖带来的负面影响众所周知。\n2008年，BBC推出了一部名为《**纯种狗的悲哀**》的纪录片，首次深入披露了纯种狗的健康和生存质量问题，在西方引起轰动，却未能引起国人的注意。\n不少国内专家还在用**“优者越优，劣者越劣”**来美化近亲繁殖，误导民众。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p9.jpg)\n\n犬的祖先是东亚狼，为何如今的“名种狗”连家都找不着？易走失、爱得病、撒手丢、人尽可主、各种不能吃，退化的主要原因便是近亲繁殖。\n躲过西方人祸害的中国土狗是幸运的。\n祖先的“放养”让土狗的血统虽然没有西方犬的“高纯度”，但也能在品系范围内繁殖，将东亚狼的血统优势得以保存。\n\n**繁殖是为了择优，而不是衰退。**\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p10.jpg)\n\n即便土狗有独立血统与优势，却依然没能得到**FCI （世界畜犬联盟）**的认证，换言之，国际上不认可有**土狗**这个品种。\n但台湾的``台湾犬（台湾原住民饲养的猎犬，南亚狩猎犬的后代）``却被认证了，为什么？\n\n![台湾犬](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p11.jpg)\n\n美国人在讨论``藏獒认证标准``，荷兰人在追溯``京巴``的血缘，英国人在研究``川东猎犬``的捕猎方法，中国人在干什么？过“狗肉节”？\n\n### 土狗的优点\n\n##### 1. 土狗的超高智商\n\n土狗在某国际组织的犬类智商排名中，位列倒数前10，原因是不听话，不能完成主人的指令。其实对于一个生物种类而言，“易驯度”不代表“智商”。\n\n**土狗的智商到底如何呢？**\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p12.jpg)\n\n> 有户农家总丢饭，婆婆以为是儿媳妇偷吃的就打了她，可饭还是天天丢。邻居说一个女人吃不了那么多，可能是村里的大黄狗偷吃的。\n> 婆婆不打媳妇了，饭也不丢了，婆婆认为是儿媳妇不敢偷吃了。邻居说或许是听不见儿媳妇的哭声，狗不敢来了。\n> 于是婆婆哪天打媳妇哪天就丢饭，因为大黄狗听见儿媳妇的哭声知道有“替罪羊”就不怕了。\n> 有天邻居沿河走，突然被大黄狗推进河里，等他回家发现门口摆着两样东西：剩饭和邻居打过它的扁担。**这是狗的挑衅：是你告密，我要报复。**\n\n相比之下，会作揖、打滚、捡球、舔手的是什么？\n\n> 听我话的就是聪明的，\n> 不听我话的就是愚蠢的。\n>\n> 让人无语且可悲的人类自尊心。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p13.jpg)\n\n##### 2. 土狗知人心\n\n有没有这样的经历，邻居家养的狗，你上下楼从他家门口经过三、四年，狗还是会听见动静就叫，因为它不会分辨人。\n土狗则不然，不仅可以分辨来人是否具有危险，还会通过叫声给主人传递信息：\n\n1. 有人来了。\n2. 走开！不许靠近！\n3. 主人，来人了，没有危险。\n4. 主人，快出来，有危险！\n5. 人走了，但我感觉不安。\n\n只要熟悉它们，主人听叫声就可以知道情况，提前做好准备。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p14.jpg)\n\n**主人在身边，土狗的反应则完全由主人决定。**\n主人舒适，它们安静地在主人身后；主人紧张，它们会不停地叫给主人壮胆，并站在主人身侧或身前。\n安静的生活和舒适的住宅让土狗的本领无用武之地，我们更需要一只会卖萌、能治愈的狗。\n\n**这没什么，你可以喜欢“蠢狗”的呆逼，但不可以鄙视土狗的“高冷”。**\n\n有过在乡村生活经历的朋友，你家的土狗是这样的吗？刚到家，它会一直冲你叫，但很快就熟悉了你；待你每次离家，它会追着车跑很远，让它回家，它却依然站在原地，直到再也看不见你……\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p15.jpg)\n\n##### 3. 土狗的坚强\n\n养西方犬都知道一个常识，不能给它们吃鸡骨头，会划伤肠道。千百年来，中国人吃了多少只鸡，骨头都哪儿去了？还不都是被狗吃了。\n老话说得好，“爱哭的孩子有奶吃”，越挑食的越有好饭，越好养活的越凑合，谁让你贱！\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p16.jpg)\n\n##### 4. 土狗的高颜值\n\n对于``土狗都很丑``的说法，我认为应该做一个对比。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p17.jpg)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p18.jpg)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p19.jpg)\n\n这每一只都丑得跟外星物种一般为什么却是名种？因为**时尚不是你能懂**？\n\n**再说，土狗到底哪里丑？**\n\n小时候走萌系▽\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p20.jpg)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p21.jpg)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p22.jpg)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p23.jpg)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p24.jpg)\n\n长大了走线条系▽\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/640.jpg)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p25.jpg)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p26.jpg)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p27.jpg)\n\n每当看到土狗的身姿，我都会有一个想法，虽然很不科学：**其它品种的是狗，这是``犬``。**\n\n会撒娇▽\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p28.jpg)\n\n会勾搭主人▽\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p29.jpg)\n\n会谜之微笑▽\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p30.jpg)\n\n会装可怜▽\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p31.jpg)\n\n会释放让你无法拒绝的小眼神▽\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p32.jpg)\n\n会犯贱被蜜蜂蛰成这个Ｂ样儿▽\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p33.jpg)\n\n爱和“中国土猫”搞基▽\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p34.jpg)\n\n其实，美与丑，好像跟狗并没多大关系。认为自己土，别人就很洋气；认为自己没那么土，别人也就没那么洋气了。\n金毛5个月左右会有一段外貌“尴尬期”，主人最怕听到的一句就是“呀！你这是养了条土狗吧。”\n星星还是那个星星，月亮还是那个月亮，狗还是那条狗。是什么变了呢？\n\n**土狗今天的尴尬，我们的祖先是有责任的。汉人对待狗的态度和其他民族不太一样。**\n\n藏人爱狗，布达拉宫前常有人把糌粑掰给狗吃；西藏没有“流浪狗”，只有``自由狗``。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p35.jpg)\n\n满人因祖先被狗救过而不许吃狗肉。白族把狗分成一、二、三等，打猎归来，内脏先给头狗，回家后头狗和人一样能分单独到一份猎物。\n汉人呢？《三字经》：\n\n> “马牛羊，鸡犬逐，此六畜，人所饲”。\n\n**会打猎的是田犬，会看家的是吠犬，啥也不会的是肉犬。** 汉人眼里，狗是畜生，是工具，不是伙伴。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p36.jpg)\n\n**人和狗，是平行于世的两个不同物种，人与狗之间，不应该有高低贵贱；狗与狗之间，也不该有。**\n人类的评判标准和思想观念，应该仅限于在人类范围内使用。\n给土狗起个名字吧，它们值得。\n\n> “柴门闻犬吠，风雨夜归人”，\n\n多好。\n\n### 画作尾 ▽\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a1.png)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a2.png)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a3.png)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a4.png)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a5.png)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a6.png)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a7.png)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a8.png)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a9.png)\n\n> [原文](http://mp.weixin.qq.com/s?__biz=MjM5MTA2NDY4MA==&mid=2653081188&idx=1&sn=8c844359f1c76cdf046911fc39190019&scene=23&srcid=0804cUAW15I6sWGuFLGHFmik#rd)\n> ![《为什么我们瞧不起土狗？》(http://mp.weixin.qq.com/s?__biz=MjM5MTA2NDY4MA==&mid=2653081188&idx=1&sn=8c844359f1c76cdf046911fc39190019&scene=23&srcid=0804cUAW15I6sWGuFLGHFmik#rd)](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/qrcode.bmp)","source":"_posts/chinese_rural_dog.md","raw":"---\ntitle: 为什么我们瞧不起土狗？\ntags: [Chinese rural dog, 中華田園犬]\ndate: 2016-8-5\n---\n\n**不是狗土，是你土。**\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p1.jpg)\n\n中国的语言文字是美丽丰富的，但却没能给中国土狗取一个名字。\n不是已经说了叫**土狗**吗？柴狗、黄狗、草狗、中华田园犬，不都是名字？\n\n**不是。**\n<!--more-->\n柴狗、黄狗、草狗是部分地区的叫法，不是统称；**土狗**是贬义词，不是中性名词；``中华田园犬``是自欺欺人的_雅称_，正如我们把“妓女”称为“性工作从事者”；遛土狗很丢人，遛``中华田园犬``好像就没那么丢人了。\n\n**田园**二字表明我们不想在城市见到它们，家中就更不允许；这个词也是近几年才出现的。\n\n**于是，被驯化了1.6万年的中国土狗，没有名字。**\n\n姑且先叫它们土狗吧。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p2.jpg)\n\n### 中国土狗不是杂种\n\n中国有不少品种狗，藏獒、京巴、松狮、西施、冠毛、昆明犬（狼狗）等等，但提到“土狗”，就完全无血统可言了：杂种！\n所有的“串儿”、低等杂种狗，都可以统称为土狗。偏见。所谓的中国“土狗”其实是一种血统优秀的高级犬。\n土狗的祖先是东亚狼，早年，它们跟随汉民族从青藏高原以东、长城以南，经黄河流域分散到全国各地，如今大概分三个品系。\n\n#### 1. 北方品系\n\n主要生活于东北、黄河流域、长江中上游，多杂色，不吃外食，独死。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p3.jpg)\n\n#### 2. 两广品系\n\n主要生活于广东、广西、福建等地，抗病能力强，擅捕猎，战斗力强。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p4.jpg)\n\n#### 3. 江浙品系\n\n主要生活于浙江、江苏、安徽等地，对韩国、日本犬种影响极大，是日本柴犬的祖先。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p5.jpg)\n\n``土狗`` **是一种有独立血统，习性、栖息地明确的犬种，不是杂种。**\n\n70年代以来，伴随大量西方犬的引入和_城市优于农村_观念的形成：养狗就应该养西方狗；土狗不是宠物，是农村看家的，是杀了吃肉的；土狗是贱种，养土狗的都是穷人，已成为根深蒂固的观念。\n狗粮、狗衣、狗玩具、狗预防针都是给西方犬预备的，土狗只需要一条铁锁链和一碗剩饭。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p6.jpg)\n\n**果真 如此吗？**\n\n战国**韩卢**\n\n>施韩卢者，霸业可致也\n\n三国**黑龙**\n\n> 犬之报恩，甚于人，人不知恩，岂如犬乎！\n\n西晋**黄耳**\n\n> 陆机亲以棺木葬之，曰“黄耳冢”。\n\n李斯临刑哀叹：\n\n> 吾欲与若复牵黄犬俱出……岂可得乎？\n\n苏轼晚年感慨：\n\n> 老夫聊发少年狂，左牵黄，右擎苍。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p7.jpg)\n\n中国的人啊，你凭什么瞧不起中国的狗呢？中国的狗哪里配不上你呢？\n你可以认为自己不如西方人，但你不可以认为中国狗不如西方狗。谁给你的权利呢？\n\n### 中国土狗的血统是最优秀的\n\n中国土狗血统的优秀在于它既保留了东亚狼的优势又躲过了西方人对犬类血统的祸害。\n西方白人有很强的“血统观”，把人分为皇室、贵族、贱民，他们不仅重视人的血统，还重视狗的。\n\n**如何保持血统纯正？近亲繁殖。**\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p8.jpg)\n\n但近亲繁殖带来的负面影响众所周知。\n2008年，BBC推出了一部名为《**纯种狗的悲哀**》的纪录片，首次深入披露了纯种狗的健康和生存质量问题，在西方引起轰动，却未能引起国人的注意。\n不少国内专家还在用**“优者越优，劣者越劣”**来美化近亲繁殖，误导民众。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p9.jpg)\n\n犬的祖先是东亚狼，为何如今的“名种狗”连家都找不着？易走失、爱得病、撒手丢、人尽可主、各种不能吃，退化的主要原因便是近亲繁殖。\n躲过西方人祸害的中国土狗是幸运的。\n祖先的“放养”让土狗的血统虽然没有西方犬的“高纯度”，但也能在品系范围内繁殖，将东亚狼的血统优势得以保存。\n\n**繁殖是为了择优，而不是衰退。**\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p10.jpg)\n\n即便土狗有独立血统与优势，却依然没能得到**FCI （世界畜犬联盟）**的认证，换言之，国际上不认可有**土狗**这个品种。\n但台湾的``台湾犬（台湾原住民饲养的猎犬，南亚狩猎犬的后代）``却被认证了，为什么？\n\n![台湾犬](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p11.jpg)\n\n美国人在讨论``藏獒认证标准``，荷兰人在追溯``京巴``的血缘，英国人在研究``川东猎犬``的捕猎方法，中国人在干什么？过“狗肉节”？\n\n### 土狗的优点\n\n##### 1. 土狗的超高智商\n\n土狗在某国际组织的犬类智商排名中，位列倒数前10，原因是不听话，不能完成主人的指令。其实对于一个生物种类而言，“易驯度”不代表“智商”。\n\n**土狗的智商到底如何呢？**\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p12.jpg)\n\n> 有户农家总丢饭，婆婆以为是儿媳妇偷吃的就打了她，可饭还是天天丢。邻居说一个女人吃不了那么多，可能是村里的大黄狗偷吃的。\n> 婆婆不打媳妇了，饭也不丢了，婆婆认为是儿媳妇不敢偷吃了。邻居说或许是听不见儿媳妇的哭声，狗不敢来了。\n> 于是婆婆哪天打媳妇哪天就丢饭，因为大黄狗听见儿媳妇的哭声知道有“替罪羊”就不怕了。\n> 有天邻居沿河走，突然被大黄狗推进河里，等他回家发现门口摆着两样东西：剩饭和邻居打过它的扁担。**这是狗的挑衅：是你告密，我要报复。**\n\n相比之下，会作揖、打滚、捡球、舔手的是什么？\n\n> 听我话的就是聪明的，\n> 不听我话的就是愚蠢的。\n>\n> 让人无语且可悲的人类自尊心。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p13.jpg)\n\n##### 2. 土狗知人心\n\n有没有这样的经历，邻居家养的狗，你上下楼从他家门口经过三、四年，狗还是会听见动静就叫，因为它不会分辨人。\n土狗则不然，不仅可以分辨来人是否具有危险，还会通过叫声给主人传递信息：\n\n1. 有人来了。\n2. 走开！不许靠近！\n3. 主人，来人了，没有危险。\n4. 主人，快出来，有危险！\n5. 人走了，但我感觉不安。\n\n只要熟悉它们，主人听叫声就可以知道情况，提前做好准备。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p14.jpg)\n\n**主人在身边，土狗的反应则完全由主人决定。**\n主人舒适，它们安静地在主人身后；主人紧张，它们会不停地叫给主人壮胆，并站在主人身侧或身前。\n安静的生活和舒适的住宅让土狗的本领无用武之地，我们更需要一只会卖萌、能治愈的狗。\n\n**这没什么，你可以喜欢“蠢狗”的呆逼，但不可以鄙视土狗的“高冷”。**\n\n有过在乡村生活经历的朋友，你家的土狗是这样的吗？刚到家，它会一直冲你叫，但很快就熟悉了你；待你每次离家，它会追着车跑很远，让它回家，它却依然站在原地，直到再也看不见你……\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p15.jpg)\n\n##### 3. 土狗的坚强\n\n养西方犬都知道一个常识，不能给它们吃鸡骨头，会划伤肠道。千百年来，中国人吃了多少只鸡，骨头都哪儿去了？还不都是被狗吃了。\n老话说得好，“爱哭的孩子有奶吃”，越挑食的越有好饭，越好养活的越凑合，谁让你贱！\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p16.jpg)\n\n##### 4. 土狗的高颜值\n\n对于``土狗都很丑``的说法，我认为应该做一个对比。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p17.jpg)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p18.jpg)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p19.jpg)\n\n这每一只都丑得跟外星物种一般为什么却是名种？因为**时尚不是你能懂**？\n\n**再说，土狗到底哪里丑？**\n\n小时候走萌系▽\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p20.jpg)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p21.jpg)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p22.jpg)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p23.jpg)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p24.jpg)\n\n长大了走线条系▽\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/640.jpg)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p25.jpg)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p26.jpg)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p27.jpg)\n\n每当看到土狗的身姿，我都会有一个想法，虽然很不科学：**其它品种的是狗，这是``犬``。**\n\n会撒娇▽\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p28.jpg)\n\n会勾搭主人▽\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p29.jpg)\n\n会谜之微笑▽\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p30.jpg)\n\n会装可怜▽\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p31.jpg)\n\n会释放让你无法拒绝的小眼神▽\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p32.jpg)\n\n会犯贱被蜜蜂蛰成这个Ｂ样儿▽\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p33.jpg)\n\n爱和“中国土猫”搞基▽\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p34.jpg)\n\n其实，美与丑，好像跟狗并没多大关系。认为自己土，别人就很洋气；认为自己没那么土，别人也就没那么洋气了。\n金毛5个月左右会有一段外貌“尴尬期”，主人最怕听到的一句就是“呀！你这是养了条土狗吧。”\n星星还是那个星星，月亮还是那个月亮，狗还是那条狗。是什么变了呢？\n\n**土狗今天的尴尬，我们的祖先是有责任的。汉人对待狗的态度和其他民族不太一样。**\n\n藏人爱狗，布达拉宫前常有人把糌粑掰给狗吃；西藏没有“流浪狗”，只有``自由狗``。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p35.jpg)\n\n满人因祖先被狗救过而不许吃狗肉。白族把狗分成一、二、三等，打猎归来，内脏先给头狗，回家后头狗和人一样能分单独到一份猎物。\n汉人呢？《三字经》：\n\n> “马牛羊，鸡犬逐，此六畜，人所饲”。\n\n**会打猎的是田犬，会看家的是吠犬，啥也不会的是肉犬。** 汉人眼里，狗是畜生，是工具，不是伙伴。\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p36.jpg)\n\n**人和狗，是平行于世的两个不同物种，人与狗之间，不应该有高低贵贱；狗与狗之间，也不该有。**\n人类的评判标准和思想观念，应该仅限于在人类范围内使用。\n给土狗起个名字吧，它们值得。\n\n> “柴门闻犬吠，风雨夜归人”，\n\n多好。\n\n### 画作尾 ▽\n\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a1.png)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a2.png)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a3.png)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a4.png)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a5.png)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a6.png)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a7.png)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a8.png)\n![](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a9.png)\n\n> [原文](http://mp.weixin.qq.com/s?__biz=MjM5MTA2NDY4MA==&mid=2653081188&idx=1&sn=8c844359f1c76cdf046911fc39190019&scene=23&srcid=0804cUAW15I6sWGuFLGHFmik#rd)\n> ![《为什么我们瞧不起土狗？》(http://mp.weixin.qq.com/s?__biz=MjM5MTA2NDY4MA==&mid=2653081188&idx=1&sn=8c844359f1c76cdf046911fc39190019&scene=23&srcid=0804cUAW15I6sWGuFLGHFmik#rd)](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/qrcode.bmp)","slug":"chinese_rural_dog","published":1,"updated":"2016-08-04T19:41:41.225Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirgqpn190001i0v4j9p07q8j","content":"<p><strong>不是狗土，是你土。</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p1.jpg\" alt=\"\"></p>\n<p>中国的语言文字是美丽丰富的，但却没能给中国土狗取一个名字。<br>不是已经说了叫<strong>土狗</strong>吗？柴狗、黄狗、草狗、中华田园犬，不都是名字？</p>\n<p><strong>不是。</strong><br><a id=\"more\"></a><br>柴狗、黄狗、草狗是部分地区的叫法，不是统称；<strong>土狗</strong>是贬义词，不是中性名词；<code>中华田园犬</code>是自欺欺人的<em>雅称</em>，正如我们把“妓女”称为“性工作从事者”；遛土狗很丢人，遛<code>中华田园犬</code>好像就没那么丢人了。</p>\n<p><strong>田园</strong>二字表明我们不想在城市见到它们，家中就更不允许；这个词也是近几年才出现的。</p>\n<p><strong>于是，被驯化了1.6万年的中国土狗，没有名字。</strong></p>\n<p>姑且先叫它们土狗吧。</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p2.jpg\" alt=\"\"></p>\n<h3 id=\"中国土狗不是杂种\"><a href=\"#中国土狗不是杂种\" class=\"headerlink\" title=\"中国土狗不是杂种\"></a>中国土狗不是杂种</h3><p>中国有不少品种狗，藏獒、京巴、松狮、西施、冠毛、昆明犬（狼狗）等等，但提到“土狗”，就完全无血统可言了：杂种！<br>所有的“串儿”、低等杂种狗，都可以统称为土狗。偏见。所谓的中国“土狗”其实是一种血统优秀的高级犬。<br>土狗的祖先是东亚狼，早年，它们跟随汉民族从青藏高原以东、长城以南，经黄河流域分散到全国各地，如今大概分三个品系。</p>\n<h4 id=\"1-北方品系\"><a href=\"#1-北方品系\" class=\"headerlink\" title=\"1. 北方品系\"></a>1. 北方品系</h4><p>主要生活于东北、黄河流域、长江中上游，多杂色，不吃外食，独死。</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p3.jpg\" alt=\"\"></p>\n<h4 id=\"2-两广品系\"><a href=\"#2-两广品系\" class=\"headerlink\" title=\"2. 两广品系\"></a>2. 两广品系</h4><p>主要生活于广东、广西、福建等地，抗病能力强，擅捕猎，战斗力强。</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p4.jpg\" alt=\"\"></p>\n<h4 id=\"3-江浙品系\"><a href=\"#3-江浙品系\" class=\"headerlink\" title=\"3. 江浙品系\"></a>3. 江浙品系</h4><p>主要生活于浙江、江苏、安徽等地，对韩国、日本犬种影响极大，是日本柴犬的祖先。</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p5.jpg\" alt=\"\"></p>\n<p><code>土狗</code> <strong>是一种有独立血统，习性、栖息地明确的犬种，不是杂种。</strong></p>\n<p>70年代以来，伴随大量西方犬的引入和<em>城市优于农村</em>观念的形成：养狗就应该养西方狗；土狗不是宠物，是农村看家的，是杀了吃肉的；土狗是贱种，养土狗的都是穷人，已成为根深蒂固的观念。<br>狗粮、狗衣、狗玩具、狗预防针都是给西方犬预备的，土狗只需要一条铁锁链和一碗剩饭。</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p6.jpg\" alt=\"\"></p>\n<p><strong>果真 如此吗？</strong></p>\n<p>战国<strong>韩卢</strong></p>\n<blockquote>\n<p>施韩卢者，霸业可致也</p>\n</blockquote>\n<p>三国<strong>黑龙</strong></p>\n<blockquote>\n<p>犬之报恩，甚于人，人不知恩，岂如犬乎！</p>\n</blockquote>\n<p>西晋<strong>黄耳</strong></p>\n<blockquote>\n<p>陆机亲以棺木葬之，曰“黄耳冢”。</p>\n</blockquote>\n<p>李斯临刑哀叹：</p>\n<blockquote>\n<p>吾欲与若复牵黄犬俱出……岂可得乎？</p>\n</blockquote>\n<p>苏轼晚年感慨：</p>\n<blockquote>\n<p>老夫聊发少年狂，左牵黄，右擎苍。</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p7.jpg\" alt=\"\"></p>\n<p>中国的人啊，你凭什么瞧不起中国的狗呢？中国的狗哪里配不上你呢？<br>你可以认为自己不如西方人，但你不可以认为中国狗不如西方狗。谁给你的权利呢？</p>\n<h3 id=\"中国土狗的血统是最优秀的\"><a href=\"#中国土狗的血统是最优秀的\" class=\"headerlink\" title=\"中国土狗的血统是最优秀的\"></a>中国土狗的血统是最优秀的</h3><p>中国土狗血统的优秀在于它既保留了东亚狼的优势又躲过了西方人对犬类血统的祸害。<br>西方白人有很强的“血统观”，把人分为皇室、贵族、贱民，他们不仅重视人的血统，还重视狗的。</p>\n<p><strong>如何保持血统纯正？近亲繁殖。</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p8.jpg\" alt=\"\"></p>\n<p>但近亲繁殖带来的负面影响众所周知。<br>2008年，BBC推出了一部名为《<strong>纯种狗的悲哀</strong>》的纪录片，首次深入披露了纯种狗的健康和生存质量问题，在西方引起轰动，却未能引起国人的注意。<br>不少国内专家还在用<strong>“优者越优，劣者越劣”</strong>来美化近亲繁殖，误导民众。</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p9.jpg\" alt=\"\"></p>\n<p>犬的祖先是东亚狼，为何如今的“名种狗”连家都找不着？易走失、爱得病、撒手丢、人尽可主、各种不能吃，退化的主要原因便是近亲繁殖。<br>躲过西方人祸害的中国土狗是幸运的。<br>祖先的“放养”让土狗的血统虽然没有西方犬的“高纯度”，但也能在品系范围内繁殖，将东亚狼的血统优势得以保存。</p>\n<p><strong>繁殖是为了择优，而不是衰退。</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p10.jpg\" alt=\"\"></p>\n<p>即便土狗有独立血统与优势，却依然没能得到<strong>FCI （世界畜犬联盟）</strong>的认证，换言之，国际上不认可有<strong>土狗</strong>这个品种。<br>但台湾的<code>台湾犬（台湾原住民饲养的猎犬，南亚狩猎犬的后代）</code>却被认证了，为什么？</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p11.jpg\" alt=\"台湾犬\"></p>\n<p>美国人在讨论<code>藏獒认证标准</code>，荷兰人在追溯<code>京巴</code>的血缘，英国人在研究<code>川东猎犬</code>的捕猎方法，中国人在干什么？过“狗肉节”？</p>\n<h3 id=\"土狗的优点\"><a href=\"#土狗的优点\" class=\"headerlink\" title=\"土狗的优点\"></a>土狗的优点</h3><h5 id=\"1-土狗的超高智商\"><a href=\"#1-土狗的超高智商\" class=\"headerlink\" title=\"1. 土狗的超高智商\"></a>1. 土狗的超高智商</h5><p>土狗在某国际组织的犬类智商排名中，位列倒数前10，原因是不听话，不能完成主人的指令。其实对于一个生物种类而言，“易驯度”不代表“智商”。</p>\n<p><strong>土狗的智商到底如何呢？</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p12.jpg\" alt=\"\"></p>\n<blockquote>\n<p>有户农家总丢饭，婆婆以为是儿媳妇偷吃的就打了她，可饭还是天天丢。邻居说一个女人吃不了那么多，可能是村里的大黄狗偷吃的。<br>婆婆不打媳妇了，饭也不丢了，婆婆认为是儿媳妇不敢偷吃了。邻居说或许是听不见儿媳妇的哭声，狗不敢来了。<br>于是婆婆哪天打媳妇哪天就丢饭，因为大黄狗听见儿媳妇的哭声知道有“替罪羊”就不怕了。<br>有天邻居沿河走，突然被大黄狗推进河里，等他回家发现门口摆着两样东西：剩饭和邻居打过它的扁担。<strong>这是狗的挑衅：是你告密，我要报复。</strong></p>\n</blockquote>\n<p>相比之下，会作揖、打滚、捡球、舔手的是什么？</p>\n<blockquote>\n<p>听我话的就是聪明的，<br>不听我话的就是愚蠢的。</p>\n<p>让人无语且可悲的人类自尊心。</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p13.jpg\" alt=\"\"></p>\n<h5 id=\"2-土狗知人心\"><a href=\"#2-土狗知人心\" class=\"headerlink\" title=\"2. 土狗知人心\"></a>2. 土狗知人心</h5><p>有没有这样的经历，邻居家养的狗，你上下楼从他家门口经过三、四年，狗还是会听见动静就叫，因为它不会分辨人。<br>土狗则不然，不仅可以分辨来人是否具有危险，还会通过叫声给主人传递信息：</p>\n<ol>\n<li>有人来了。</li>\n<li>走开！不许靠近！</li>\n<li>主人，来人了，没有危险。</li>\n<li>主人，快出来，有危险！</li>\n<li>人走了，但我感觉不安。</li>\n</ol>\n<p>只要熟悉它们，主人听叫声就可以知道情况，提前做好准备。</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p14.jpg\" alt=\"\"></p>\n<p><strong>主人在身边，土狗的反应则完全由主人决定。</strong><br>主人舒适，它们安静地在主人身后；主人紧张，它们会不停地叫给主人壮胆，并站在主人身侧或身前。<br>安静的生活和舒适的住宅让土狗的本领无用武之地，我们更需要一只会卖萌、能治愈的狗。</p>\n<p><strong>这没什么，你可以喜欢“蠢狗”的呆逼，但不可以鄙视土狗的“高冷”。</strong></p>\n<p>有过在乡村生活经历的朋友，你家的土狗是这样的吗？刚到家，它会一直冲你叫，但很快就熟悉了你；待你每次离家，它会追着车跑很远，让它回家，它却依然站在原地，直到再也看不见你……</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p15.jpg\" alt=\"\"></p>\n<h5 id=\"3-土狗的坚强\"><a href=\"#3-土狗的坚强\" class=\"headerlink\" title=\"3. 土狗的坚强\"></a>3. 土狗的坚强</h5><p>养西方犬都知道一个常识，不能给它们吃鸡骨头，会划伤肠道。千百年来，中国人吃了多少只鸡，骨头都哪儿去了？还不都是被狗吃了。<br>老话说得好，“爱哭的孩子有奶吃”，越挑食的越有好饭，越好养活的越凑合，谁让你贱！</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p16.jpg\" alt=\"\"></p>\n<h5 id=\"4-土狗的高颜值\"><a href=\"#4-土狗的高颜值\" class=\"headerlink\" title=\"4. 土狗的高颜值\"></a>4. 土狗的高颜值</h5><p>对于<code>土狗都很丑</code>的说法，我认为应该做一个对比。</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p17.jpg\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p18.jpg\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p19.jpg\" alt=\"\"></p>\n<p>这每一只都丑得跟外星物种一般为什么却是名种？因为<strong>时尚不是你能懂</strong>？</p>\n<p><strong>再说，土狗到底哪里丑？</strong></p>\n<p>小时候走萌系▽</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p20.jpg\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p21.jpg\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p22.jpg\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p23.jpg\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p24.jpg\" alt=\"\"></p>\n<p>长大了走线条系▽</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/640.jpg\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p25.jpg\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p26.jpg\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p27.jpg\" alt=\"\"></p>\n<p>每当看到土狗的身姿，我都会有一个想法，虽然很不科学：<strong>其它品种的是狗，这是<code>犬</code>。</strong></p>\n<p>会撒娇▽<br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p28.jpg\" alt=\"\"></p>\n<p>会勾搭主人▽<br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p29.jpg\" alt=\"\"></p>\n<p>会谜之微笑▽<br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p30.jpg\" alt=\"\"></p>\n<p>会装可怜▽<br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p31.jpg\" alt=\"\"></p>\n<p>会释放让你无法拒绝的小眼神▽<br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p32.jpg\" alt=\"\"></p>\n<p>会犯贱被蜜蜂蛰成这个Ｂ样儿▽<br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p33.jpg\" alt=\"\"></p>\n<p>爱和“中国土猫”搞基▽<br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p34.jpg\" alt=\"\"></p>\n<p>其实，美与丑，好像跟狗并没多大关系。认为自己土，别人就很洋气；认为自己没那么土，别人也就没那么洋气了。<br>金毛5个月左右会有一段外貌“尴尬期”，主人最怕听到的一句就是“呀！你这是养了条土狗吧。”<br>星星还是那个星星，月亮还是那个月亮，狗还是那条狗。是什么变了呢？</p>\n<p><strong>土狗今天的尴尬，我们的祖先是有责任的。汉人对待狗的态度和其他民族不太一样。</strong></p>\n<p>藏人爱狗，布达拉宫前常有人把糌粑掰给狗吃；西藏没有“流浪狗”，只有<code>自由狗</code>。</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p35.jpg\" alt=\"\"></p>\n<p>满人因祖先被狗救过而不许吃狗肉。白族把狗分成一、二、三等，打猎归来，内脏先给头狗，回家后头狗和人一样能分单独到一份猎物。<br>汉人呢？《三字经》：</p>\n<blockquote>\n<p>“马牛羊，鸡犬逐，此六畜，人所饲”。</p>\n</blockquote>\n<p><strong>会打猎的是田犬，会看家的是吠犬，啥也不会的是肉犬。</strong> 汉人眼里，狗是畜生，是工具，不是伙伴。</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p36.jpg\" alt=\"\"></p>\n<p><strong>人和狗，是平行于世的两个不同物种，人与狗之间，不应该有高低贵贱；狗与狗之间，也不该有。</strong><br>人类的评判标准和思想观念，应该仅限于在人类范围内使用。<br>给土狗起个名字吧，它们值得。</p>\n<blockquote>\n<p>“柴门闻犬吠，风雨夜归人”，</p>\n</blockquote>\n<p>多好。</p>\n<h3 id=\"画作尾-▽\"><a href=\"#画作尾-▽\" class=\"headerlink\" title=\"画作尾 ▽\"></a>画作尾 ▽</h3><p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a1.png\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a2.png\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a3.png\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a4.png\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a5.png\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a6.png\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a7.png\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a8.png\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a9.png\" alt=\"\"></p>\n<blockquote>\n<p><a href=\"http://mp.weixin.qq.com/s?__biz=MjM5MTA2NDY4MA==&amp;mid=2653081188&amp;idx=1&amp;sn=8c844359f1c76cdf046911fc39190019&amp;scene=23&amp;srcid=0804cUAW15I6sWGuFLGHFmik#rd\" target=\"_blank\" rel=\"external\">原文</a><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/qrcode.bmp\" alt=\"《为什么我们瞧不起土狗？》(http://mp.weixin.qq.com/s?__biz=MjM5MTA2NDY4MA==&amp;mid=2653081188&amp;idx=1&amp;sn=8c844359f1c76cdf046911fc39190019&amp;scene=23&amp;srcid=0804cUAW15I6sWGuFLGHFmik#rd)\"></p>\n</blockquote>\n","excerpt":"<p><strong>不是狗土，是你土。</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p1.jpg\" alt=\"\"></p>\n<p>中国的语言文字是美丽丰富的，但却没能给中国土狗取一个名字。<br>不是已经说了叫<strong>土狗</strong>吗？柴狗、黄狗、草狗、中华田园犬，不都是名字？</p>\n<p><strong>不是。</strong><br>","more":"<br>柴狗、黄狗、草狗是部分地区的叫法，不是统称；<strong>土狗</strong>是贬义词，不是中性名词；<code>中华田园犬</code>是自欺欺人的<em>雅称</em>，正如我们把“妓女”称为“性工作从事者”；遛土狗很丢人，遛<code>中华田园犬</code>好像就没那么丢人了。</p>\n<p><strong>田园</strong>二字表明我们不想在城市见到它们，家中就更不允许；这个词也是近几年才出现的。</p>\n<p><strong>于是，被驯化了1.6万年的中国土狗，没有名字。</strong></p>\n<p>姑且先叫它们土狗吧。</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p2.jpg\" alt=\"\"></p>\n<h3 id=\"中国土狗不是杂种\"><a href=\"#中国土狗不是杂种\" class=\"headerlink\" title=\"中国土狗不是杂种\"></a>中国土狗不是杂种</h3><p>中国有不少品种狗，藏獒、京巴、松狮、西施、冠毛、昆明犬（狼狗）等等，但提到“土狗”，就完全无血统可言了：杂种！<br>所有的“串儿”、低等杂种狗，都可以统称为土狗。偏见。所谓的中国“土狗”其实是一种血统优秀的高级犬。<br>土狗的祖先是东亚狼，早年，它们跟随汉民族从青藏高原以东、长城以南，经黄河流域分散到全国各地，如今大概分三个品系。</p>\n<h4 id=\"1-北方品系\"><a href=\"#1-北方品系\" class=\"headerlink\" title=\"1. 北方品系\"></a>1. 北方品系</h4><p>主要生活于东北、黄河流域、长江中上游，多杂色，不吃外食，独死。</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p3.jpg\" alt=\"\"></p>\n<h4 id=\"2-两广品系\"><a href=\"#2-两广品系\" class=\"headerlink\" title=\"2. 两广品系\"></a>2. 两广品系</h4><p>主要生活于广东、广西、福建等地，抗病能力强，擅捕猎，战斗力强。</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p4.jpg\" alt=\"\"></p>\n<h4 id=\"3-江浙品系\"><a href=\"#3-江浙品系\" class=\"headerlink\" title=\"3. 江浙品系\"></a>3. 江浙品系</h4><p>主要生活于浙江、江苏、安徽等地，对韩国、日本犬种影响极大，是日本柴犬的祖先。</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p5.jpg\" alt=\"\"></p>\n<p><code>土狗</code> <strong>是一种有独立血统，习性、栖息地明确的犬种，不是杂种。</strong></p>\n<p>70年代以来，伴随大量西方犬的引入和<em>城市优于农村</em>观念的形成：养狗就应该养西方狗；土狗不是宠物，是农村看家的，是杀了吃肉的；土狗是贱种，养土狗的都是穷人，已成为根深蒂固的观念。<br>狗粮、狗衣、狗玩具、狗预防针都是给西方犬预备的，土狗只需要一条铁锁链和一碗剩饭。</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p6.jpg\" alt=\"\"></p>\n<p><strong>果真 如此吗？</strong></p>\n<p>战国<strong>韩卢</strong></p>\n<blockquote>\n<p>施韩卢者，霸业可致也</p>\n</blockquote>\n<p>三国<strong>黑龙</strong></p>\n<blockquote>\n<p>犬之报恩，甚于人，人不知恩，岂如犬乎！</p>\n</blockquote>\n<p>西晋<strong>黄耳</strong></p>\n<blockquote>\n<p>陆机亲以棺木葬之，曰“黄耳冢”。</p>\n</blockquote>\n<p>李斯临刑哀叹：</p>\n<blockquote>\n<p>吾欲与若复牵黄犬俱出……岂可得乎？</p>\n</blockquote>\n<p>苏轼晚年感慨：</p>\n<blockquote>\n<p>老夫聊发少年狂，左牵黄，右擎苍。</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p7.jpg\" alt=\"\"></p>\n<p>中国的人啊，你凭什么瞧不起中国的狗呢？中国的狗哪里配不上你呢？<br>你可以认为自己不如西方人，但你不可以认为中国狗不如西方狗。谁给你的权利呢？</p>\n<h3 id=\"中国土狗的血统是最优秀的\"><a href=\"#中国土狗的血统是最优秀的\" class=\"headerlink\" title=\"中国土狗的血统是最优秀的\"></a>中国土狗的血统是最优秀的</h3><p>中国土狗血统的优秀在于它既保留了东亚狼的优势又躲过了西方人对犬类血统的祸害。<br>西方白人有很强的“血统观”，把人分为皇室、贵族、贱民，他们不仅重视人的血统，还重视狗的。</p>\n<p><strong>如何保持血统纯正？近亲繁殖。</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p8.jpg\" alt=\"\"></p>\n<p>但近亲繁殖带来的负面影响众所周知。<br>2008年，BBC推出了一部名为《<strong>纯种狗的悲哀</strong>》的纪录片，首次深入披露了纯种狗的健康和生存质量问题，在西方引起轰动，却未能引起国人的注意。<br>不少国内专家还在用<strong>“优者越优，劣者越劣”</strong>来美化近亲繁殖，误导民众。</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p9.jpg\" alt=\"\"></p>\n<p>犬的祖先是东亚狼，为何如今的“名种狗”连家都找不着？易走失、爱得病、撒手丢、人尽可主、各种不能吃，退化的主要原因便是近亲繁殖。<br>躲过西方人祸害的中国土狗是幸运的。<br>祖先的“放养”让土狗的血统虽然没有西方犬的“高纯度”，但也能在品系范围内繁殖，将东亚狼的血统优势得以保存。</p>\n<p><strong>繁殖是为了择优，而不是衰退。</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p10.jpg\" alt=\"\"></p>\n<p>即便土狗有独立血统与优势，却依然没能得到<strong>FCI （世界畜犬联盟）</strong>的认证，换言之，国际上不认可有<strong>土狗</strong>这个品种。<br>但台湾的<code>台湾犬（台湾原住民饲养的猎犬，南亚狩猎犬的后代）</code>却被认证了，为什么？</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p11.jpg\" alt=\"台湾犬\"></p>\n<p>美国人在讨论<code>藏獒认证标准</code>，荷兰人在追溯<code>京巴</code>的血缘，英国人在研究<code>川东猎犬</code>的捕猎方法，中国人在干什么？过“狗肉节”？</p>\n<h3 id=\"土狗的优点\"><a href=\"#土狗的优点\" class=\"headerlink\" title=\"土狗的优点\"></a>土狗的优点</h3><h5 id=\"1-土狗的超高智商\"><a href=\"#1-土狗的超高智商\" class=\"headerlink\" title=\"1. 土狗的超高智商\"></a>1. 土狗的超高智商</h5><p>土狗在某国际组织的犬类智商排名中，位列倒数前10，原因是不听话，不能完成主人的指令。其实对于一个生物种类而言，“易驯度”不代表“智商”。</p>\n<p><strong>土狗的智商到底如何呢？</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p12.jpg\" alt=\"\"></p>\n<blockquote>\n<p>有户农家总丢饭，婆婆以为是儿媳妇偷吃的就打了她，可饭还是天天丢。邻居说一个女人吃不了那么多，可能是村里的大黄狗偷吃的。<br>婆婆不打媳妇了，饭也不丢了，婆婆认为是儿媳妇不敢偷吃了。邻居说或许是听不见儿媳妇的哭声，狗不敢来了。<br>于是婆婆哪天打媳妇哪天就丢饭，因为大黄狗听见儿媳妇的哭声知道有“替罪羊”就不怕了。<br>有天邻居沿河走，突然被大黄狗推进河里，等他回家发现门口摆着两样东西：剩饭和邻居打过它的扁担。<strong>这是狗的挑衅：是你告密，我要报复。</strong></p>\n</blockquote>\n<p>相比之下，会作揖、打滚、捡球、舔手的是什么？</p>\n<blockquote>\n<p>听我话的就是聪明的，<br>不听我话的就是愚蠢的。</p>\n<p>让人无语且可悲的人类自尊心。</p>\n</blockquote>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p13.jpg\" alt=\"\"></p>\n<h5 id=\"2-土狗知人心\"><a href=\"#2-土狗知人心\" class=\"headerlink\" title=\"2. 土狗知人心\"></a>2. 土狗知人心</h5><p>有没有这样的经历，邻居家养的狗，你上下楼从他家门口经过三、四年，狗还是会听见动静就叫，因为它不会分辨人。<br>土狗则不然，不仅可以分辨来人是否具有危险，还会通过叫声给主人传递信息：</p>\n<ol>\n<li>有人来了。</li>\n<li>走开！不许靠近！</li>\n<li>主人，来人了，没有危险。</li>\n<li>主人，快出来，有危险！</li>\n<li>人走了，但我感觉不安。</li>\n</ol>\n<p>只要熟悉它们，主人听叫声就可以知道情况，提前做好准备。</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p14.jpg\" alt=\"\"></p>\n<p><strong>主人在身边，土狗的反应则完全由主人决定。</strong><br>主人舒适，它们安静地在主人身后；主人紧张，它们会不停地叫给主人壮胆，并站在主人身侧或身前。<br>安静的生活和舒适的住宅让土狗的本领无用武之地，我们更需要一只会卖萌、能治愈的狗。</p>\n<p><strong>这没什么，你可以喜欢“蠢狗”的呆逼，但不可以鄙视土狗的“高冷”。</strong></p>\n<p>有过在乡村生活经历的朋友，你家的土狗是这样的吗？刚到家，它会一直冲你叫，但很快就熟悉了你；待你每次离家，它会追着车跑很远，让它回家，它却依然站在原地，直到再也看不见你……</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p15.jpg\" alt=\"\"></p>\n<h5 id=\"3-土狗的坚强\"><a href=\"#3-土狗的坚强\" class=\"headerlink\" title=\"3. 土狗的坚强\"></a>3. 土狗的坚强</h5><p>养西方犬都知道一个常识，不能给它们吃鸡骨头，会划伤肠道。千百年来，中国人吃了多少只鸡，骨头都哪儿去了？还不都是被狗吃了。<br>老话说得好，“爱哭的孩子有奶吃”，越挑食的越有好饭，越好养活的越凑合，谁让你贱！</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p16.jpg\" alt=\"\"></p>\n<h5 id=\"4-土狗的高颜值\"><a href=\"#4-土狗的高颜值\" class=\"headerlink\" title=\"4. 土狗的高颜值\"></a>4. 土狗的高颜值</h5><p>对于<code>土狗都很丑</code>的说法，我认为应该做一个对比。</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p17.jpg\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p18.jpg\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p19.jpg\" alt=\"\"></p>\n<p>这每一只都丑得跟外星物种一般为什么却是名种？因为<strong>时尚不是你能懂</strong>？</p>\n<p><strong>再说，土狗到底哪里丑？</strong></p>\n<p>小时候走萌系▽</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p20.jpg\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p21.jpg\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p22.jpg\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p23.jpg\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p24.jpg\" alt=\"\"></p>\n<p>长大了走线条系▽</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/640.jpg\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p25.jpg\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p26.jpg\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p27.jpg\" alt=\"\"></p>\n<p>每当看到土狗的身姿，我都会有一个想法，虽然很不科学：<strong>其它品种的是狗，这是<code>犬</code>。</strong></p>\n<p>会撒娇▽<br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p28.jpg\" alt=\"\"></p>\n<p>会勾搭主人▽<br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p29.jpg\" alt=\"\"></p>\n<p>会谜之微笑▽<br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p30.jpg\" alt=\"\"></p>\n<p>会装可怜▽<br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p31.jpg\" alt=\"\"></p>\n<p>会释放让你无法拒绝的小眼神▽<br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p32.jpg\" alt=\"\"></p>\n<p>会犯贱被蜜蜂蛰成这个Ｂ样儿▽<br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p33.jpg\" alt=\"\"></p>\n<p>爱和“中国土猫”搞基▽<br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p34.jpg\" alt=\"\"></p>\n<p>其实，美与丑，好像跟狗并没多大关系。认为自己土，别人就很洋气；认为自己没那么土，别人也就没那么洋气了。<br>金毛5个月左右会有一段外貌“尴尬期”，主人最怕听到的一句就是“呀！你这是养了条土狗吧。”<br>星星还是那个星星，月亮还是那个月亮，狗还是那条狗。是什么变了呢？</p>\n<p><strong>土狗今天的尴尬，我们的祖先是有责任的。汉人对待狗的态度和其他民族不太一样。</strong></p>\n<p>藏人爱狗，布达拉宫前常有人把糌粑掰给狗吃；西藏没有“流浪狗”，只有<code>自由狗</code>。</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p35.jpg\" alt=\"\"></p>\n<p>满人因祖先被狗救过而不许吃狗肉。白族把狗分成一、二、三等，打猎归来，内脏先给头狗，回家后头狗和人一样能分单独到一份猎物。<br>汉人呢？《三字经》：</p>\n<blockquote>\n<p>“马牛羊，鸡犬逐，此六畜，人所饲”。</p>\n</blockquote>\n<p><strong>会打猎的是田犬，会看家的是吠犬，啥也不会的是肉犬。</strong> 汉人眼里，狗是畜生，是工具，不是伙伴。</p>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/photo/p36.jpg\" alt=\"\"></p>\n<p><strong>人和狗，是平行于世的两个不同物种，人与狗之间，不应该有高低贵贱；狗与狗之间，也不该有。</strong><br>人类的评判标准和思想观念，应该仅限于在人类范围内使用。<br>给土狗起个名字吧，它们值得。</p>\n<blockquote>\n<p>“柴门闻犬吠，风雨夜归人”，</p>\n</blockquote>\n<p>多好。</p>\n<h3 id=\"画作尾-▽\"><a href=\"#画作尾-▽\" class=\"headerlink\" title=\"画作尾 ▽\"></a>画作尾 ▽</h3><p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a1.png\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a2.png\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a3.png\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a4.png\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a5.png\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a6.png\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a7.png\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a8.png\" alt=\"\"><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/paints/a9.png\" alt=\"\"></p>\n<blockquote>\n<p><a href=\"http://mp.weixin.qq.com/s?__biz=MjM5MTA2NDY4MA==&amp;mid=2653081188&amp;idx=1&amp;sn=8c844359f1c76cdf046911fc39190019&amp;scene=23&amp;srcid=0804cUAW15I6sWGuFLGHFmik#rd\">原文</a><br><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/dogs/qrcode.bmp\" alt=\"《为什么我们瞧不起土狗？》(http://mp.weixin.qq.com/s?__biz=MjM5MTA2NDY4MA==&amp;mid=2653081188&amp;idx=1&amp;sn=8c844359f1c76cdf046911fc39190019&amp;scene=23&amp;srcid=0804cUAW15I6sWGuFLGHFmik#rd)\"></p>\n</blockquote>"},{"title":"Network canvas in 3D","date":"2016-08-06T16:00:00.000Z","_content":"\n![3D network in movie '007 Skyfall (2012)'](https://github.com/xieguigang/xieguigang.github.io-hexo/raw/master/images/3D_rotation/daa-skayfoll-1080p.mkv_005301660.jpg)\n\nIn this , there are two problem:\n\n+ 3D rotation\n+ 3D Projection\n\n### Background: 3D rotation\n\n> [3D graphics tutorial - Rotating objects](https://petercollingridge.appspot.com/3D-tutorial/rotating-objects)\n\nRotating things in three dimensions sounds complicated and it can be, but there are some simple rotations. For example, if we imagine rotating our cube around the z-axis (which points out of the screen), we are actually just rotating a square in two dimensions.\n\n![A cube rotating about its z-axis.](https://github.com/xieguigang/xieguigang.github.io-hexo/raw/master/images/3D_rotation/rotating_square.gif)\n\nWe can simplify things further, by just looking at a single node at position ``(x, 0)``. Using simple trigonometry we can find that the position of the point after rotating it by ``θ`` around the origin is ``(x', y')``, where,\n\n```\nx' = x × cos(θ)\ny' = x × sin(θ)\n```\n\n![Rotating a point (x, 0) around the origin by θ.](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/3D_rotation/rotate_a_point.png)\n\n##### Rotating a point about the origin\nThe example above allows us to rotate a point that starts on the x-axis about the origin, but what if it isn't on the x-axis? This requires some slightly more advanced trigonometry. If we call the distance between the point ``(x, y)`` and the origin ``r``, and the angle between the line to ``(x, y)`` and x-axis, ``α`` then,\n\n```\nx = r × cos(α)\ny = r × sin(α)\n```\n\nIf we rotate by β to point ``(x', y')``, then,\n\n```\nx' = r × cos(α + β)\ny' = r × sin(α + β)\n```\n\nUsing the trigonometric addition equations (derived here and here), we get,\n\n```\nx' = r × cos(α) cos(β) - r × sin(α) sin(β)\ny' = r × sin(α) cos(β) + r × cos(α) sin(β)\n```\n\nSubstituting in the values for x and y above, we get an equation for the new coordinates as a function of the old coordinates and the angle of rotation:\n\n```\nx' = x × cos(β) - y × sin(β)\ny' = y × cos(β) + x × sin(β)\n```\n\n![Rotating a point (x, y) around the origin by β.](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/3D_rotation/rotate_a_point2.png)\n\nHere is a list of articles that you can found more detail information about the 3D rotation mathematics:\n\n+ https://en.wikipedia.org/wiki/Rotation_matrix\n+ http://www.fastgraph.com/makegames/3drotation/\n+ http://codentronix.com/2011/05/25/rotating-solid-cube-using-vb-net-and-gdi/\n+ http://blog.xieguigang.me/2016/06/10/3d_rotation/\n\n### The Point3D object\nThe theory is much more complicated than you think, but \n\nAssume that we have a 3D Point object like this:\n\n```vbnet\n''' <summary>\n''' Defines the Point3D class that represents points in 3D space.\n''' Developed by leonelmachava &lt;leonelmachava@gmail.com>\n''' http://codentronix.com\n'''\n''' Copyright (c) 2011 Leonel Machava\n''' </summary>\nPublic Structure Point3D\n    Public Property X As Double\n    Public Property Y As Double\n    Public Property Z As Double\nEnd Structure\n```\n\nthen we can write to rotation function for the x,y,z axis separately based on the mathematics theory of the 3D rotation:\n\n```vbnet\nPublic Function RotateX(angle As Double) As Point3D\n    Dim rad As Double, cosa As Double, sina As Double, yn As Double, zn As Double\n\n    rad = angle * Math.PI / 180\n    cosa = Math.Cos(rad)\n    sina = Math.Sin(rad)\n    yn = Me.Y * cosa - Me.Z * sina\n    zn = Me.Y * sina + Me.Z * cosa\n    Return New Point3D(Me.X, yn, zn)\nEnd Function\n\nPublic Function RotateY(angle As Double) As Point3D\n    Dim rad As Double, cosa As Double, sina As Double, Xn As Double, Zn As Double\n\n    rad = angle * Math.PI / 180\n    cosa = Math.Cos(rad)\n    sina = Math.Sin(rad)\n    Zn = Me.Z * cosa - Me.X * sina\n    Xn = Me.Z * sina + Me.X * cosa\n\n    Return New Point3D(Xn, Me.Y, Zn)\nEnd Function\n\nPublic Function RotateZ(angle As Double) As Point3D\n    Dim rad As Double, cosa As Double, sina As Double, Xn As Double, Yn As Double\n\n    rad = angle * Math.PI / 180\n    cosa = Math.Cos(rad)\n    sina = Math.Sin(rad)\n    Xn = Me.X * cosa - Me.Y * sina\n    Yn = Me.X * sina + Me.Y * cosa\n    Return New Point3D(Xn, Yn, Me.Z)\nEnd Function\n```\n\nThen we can creates a very basic cube model in 3D and makes rotation:\n\n```vbnet\n\n```\n\n![A rotated 3D cube](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/3D_rotation/an_actual_cube.bmp)\n\n### Background: 3D Projection\n\n### Project Point3D to Drawing.Point\n\n```vbnet\n''' <summary>\n''' Project the 3D point to the 2D screen. By using the projection result,\n''' just read the property <see cref=\"PointXY\"/>.\n''' (将3D投影为2D，所以只需要取结果之中的<see cref=\"X\"/>和<see cref=\"Y\"/>就行了)\n''' </summary>\n''' <param name=\"viewWidth\"></param>\n''' <param name=\"viewHeight\"></param>\n''' <param name=\"fov\">256默认值</param>\n''' <param name=\"viewDistance\"></param>\n''' <returns></returns>\nPublic Function Project(viewWidth As Integer,\n                        viewHeight As Integer,\n                        fov As Integer,\n                        viewDistance As Integer) As Point3D\n\n    Dim factor As Double, Xn As Double, Yn As Double\n    factor = fov / (viewDistance + Me.Z)\n    Xn = Me.X * factor + viewWidth / 2\n    Yn = Me.Y * factor + viewHeight / 2\n    Return New Point3D(Xn, Yn, Me.Z)\nEnd Function\n```\n\n### Network canvas in 3D\n\n![Network canvas in 3D](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/3D_rotation/network_canvas_3D.bmp)\n\n### Additional: Export SVG\n\n","source":"_posts/network_canvas_3d.md","raw":"---\ntitle: Network canvas in 3D\ntags: [vb.net, SVG, gdi+, 3D]\ndate: 2016-8-7\n---\n\n![3D network in movie '007 Skyfall (2012)'](https://github.com/xieguigang/xieguigang.github.io-hexo/raw/master/images/3D_rotation/daa-skayfoll-1080p.mkv_005301660.jpg)\n\nIn this , there are two problem:\n\n+ 3D rotation\n+ 3D Projection\n\n### Background: 3D rotation\n\n> [3D graphics tutorial - Rotating objects](https://petercollingridge.appspot.com/3D-tutorial/rotating-objects)\n\nRotating things in three dimensions sounds complicated and it can be, but there are some simple rotations. For example, if we imagine rotating our cube around the z-axis (which points out of the screen), we are actually just rotating a square in two dimensions.\n\n![A cube rotating about its z-axis.](https://github.com/xieguigang/xieguigang.github.io-hexo/raw/master/images/3D_rotation/rotating_square.gif)\n\nWe can simplify things further, by just looking at a single node at position ``(x, 0)``. Using simple trigonometry we can find that the position of the point after rotating it by ``θ`` around the origin is ``(x', y')``, where,\n\n```\nx' = x × cos(θ)\ny' = x × sin(θ)\n```\n\n![Rotating a point (x, 0) around the origin by θ.](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/3D_rotation/rotate_a_point.png)\n\n##### Rotating a point about the origin\nThe example above allows us to rotate a point that starts on the x-axis about the origin, but what if it isn't on the x-axis? This requires some slightly more advanced trigonometry. If we call the distance between the point ``(x, y)`` and the origin ``r``, and the angle between the line to ``(x, y)`` and x-axis, ``α`` then,\n\n```\nx = r × cos(α)\ny = r × sin(α)\n```\n\nIf we rotate by β to point ``(x', y')``, then,\n\n```\nx' = r × cos(α + β)\ny' = r × sin(α + β)\n```\n\nUsing the trigonometric addition equations (derived here and here), we get,\n\n```\nx' = r × cos(α) cos(β) - r × sin(α) sin(β)\ny' = r × sin(α) cos(β) + r × cos(α) sin(β)\n```\n\nSubstituting in the values for x and y above, we get an equation for the new coordinates as a function of the old coordinates and the angle of rotation:\n\n```\nx' = x × cos(β) - y × sin(β)\ny' = y × cos(β) + x × sin(β)\n```\n\n![Rotating a point (x, y) around the origin by β.](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/3D_rotation/rotate_a_point2.png)\n\nHere is a list of articles that you can found more detail information about the 3D rotation mathematics:\n\n+ https://en.wikipedia.org/wiki/Rotation_matrix\n+ http://www.fastgraph.com/makegames/3drotation/\n+ http://codentronix.com/2011/05/25/rotating-solid-cube-using-vb-net-and-gdi/\n+ http://blog.xieguigang.me/2016/06/10/3d_rotation/\n\n### The Point3D object\nThe theory is much more complicated than you think, but \n\nAssume that we have a 3D Point object like this:\n\n```vbnet\n''' <summary>\n''' Defines the Point3D class that represents points in 3D space.\n''' Developed by leonelmachava &lt;leonelmachava@gmail.com>\n''' http://codentronix.com\n'''\n''' Copyright (c) 2011 Leonel Machava\n''' </summary>\nPublic Structure Point3D\n    Public Property X As Double\n    Public Property Y As Double\n    Public Property Z As Double\nEnd Structure\n```\n\nthen we can write to rotation function for the x,y,z axis separately based on the mathematics theory of the 3D rotation:\n\n```vbnet\nPublic Function RotateX(angle As Double) As Point3D\n    Dim rad As Double, cosa As Double, sina As Double, yn As Double, zn As Double\n\n    rad = angle * Math.PI / 180\n    cosa = Math.Cos(rad)\n    sina = Math.Sin(rad)\n    yn = Me.Y * cosa - Me.Z * sina\n    zn = Me.Y * sina + Me.Z * cosa\n    Return New Point3D(Me.X, yn, zn)\nEnd Function\n\nPublic Function RotateY(angle As Double) As Point3D\n    Dim rad As Double, cosa As Double, sina As Double, Xn As Double, Zn As Double\n\n    rad = angle * Math.PI / 180\n    cosa = Math.Cos(rad)\n    sina = Math.Sin(rad)\n    Zn = Me.Z * cosa - Me.X * sina\n    Xn = Me.Z * sina + Me.X * cosa\n\n    Return New Point3D(Xn, Me.Y, Zn)\nEnd Function\n\nPublic Function RotateZ(angle As Double) As Point3D\n    Dim rad As Double, cosa As Double, sina As Double, Xn As Double, Yn As Double\n\n    rad = angle * Math.PI / 180\n    cosa = Math.Cos(rad)\n    sina = Math.Sin(rad)\n    Xn = Me.X * cosa - Me.Y * sina\n    Yn = Me.X * sina + Me.Y * cosa\n    Return New Point3D(Xn, Yn, Me.Z)\nEnd Function\n```\n\nThen we can creates a very basic cube model in 3D and makes rotation:\n\n```vbnet\n\n```\n\n![A rotated 3D cube](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/3D_rotation/an_actual_cube.bmp)\n\n### Background: 3D Projection\n\n### Project Point3D to Drawing.Point\n\n```vbnet\n''' <summary>\n''' Project the 3D point to the 2D screen. By using the projection result,\n''' just read the property <see cref=\"PointXY\"/>.\n''' (将3D投影为2D，所以只需要取结果之中的<see cref=\"X\"/>和<see cref=\"Y\"/>就行了)\n''' </summary>\n''' <param name=\"viewWidth\"></param>\n''' <param name=\"viewHeight\"></param>\n''' <param name=\"fov\">256默认值</param>\n''' <param name=\"viewDistance\"></param>\n''' <returns></returns>\nPublic Function Project(viewWidth As Integer,\n                        viewHeight As Integer,\n                        fov As Integer,\n                        viewDistance As Integer) As Point3D\n\n    Dim factor As Double, Xn As Double, Yn As Double\n    factor = fov / (viewDistance + Me.Z)\n    Xn = Me.X * factor + viewWidth / 2\n    Yn = Me.Y * factor + viewHeight / 2\n    Return New Point3D(Xn, Yn, Me.Z)\nEnd Function\n```\n\n### Network canvas in 3D\n\n![Network canvas in 3D](https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/3D_rotation/network_canvas_3D.bmp)\n\n### Additional: Export SVG\n\n","slug":"network_canvas_3d","published":1,"updated":"2016-08-07T09:13:00.678Z","_id":"cirkaum120000psv4yemq3azu","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"https://github.com/xieguigang/xieguigang.github.io-hexo/raw/master/images/3D_rotation/daa-skayfoll-1080p.mkv_005301660.jpg\" alt=\"3D network in movie &#39;007 Skyfall (2012)&#39;\"></p>\n<p>In this , there are two problem:</p>\n<ul>\n<li>3D rotation</li>\n<li>3D Projection</li>\n</ul>\n<h3 id=\"Background-3D-rotation\"><a href=\"#Background-3D-rotation\" class=\"headerlink\" title=\"Background: 3D rotation\"></a>Background: 3D rotation</h3><blockquote>\n<p><a href=\"https://petercollingridge.appspot.com/3D-tutorial/rotating-objects\" target=\"_blank\" rel=\"external\">3D graphics tutorial - Rotating objects</a></p>\n</blockquote>\n<p>Rotating things in three dimensions sounds complicated and it can be, but there are some simple rotations. For example, if we imagine rotating our cube around the z-axis (which points out of the screen), we are actually just rotating a square in two dimensions.</p>\n<p><img src=\"https://github.com/xieguigang/xieguigang.github.io-hexo/raw/master/images/3D_rotation/rotating_square.gif\" alt=\"A cube rotating about its z-axis.\"></p>\n<p>We can simplify things further, by just looking at a single node at position <code>(x, 0)</code>. Using simple trigonometry we can find that the position of the point after rotating it by <code>θ</code> around the origin is <code>(x&#39;, y&#39;)</code>, where,</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x&apos; = x × cos(θ)</span><br><span class=\"line\">y&apos; = x × sin(θ)</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/3D_rotation/rotate_a_point.png\" alt=\"Rotating a point (x, 0) around the origin by θ.\"></p>\n<h5 id=\"Rotating-a-point-about-the-origin\"><a href=\"#Rotating-a-point-about-the-origin\" class=\"headerlink\" title=\"Rotating a point about the origin\"></a>Rotating a point about the origin</h5><p>The example above allows us to rotate a point that starts on the x-axis about the origin, but what if it isn’t on the x-axis? This requires some slightly more advanced trigonometry. If we call the distance between the point <code>(x, y)</code> and the origin <code>r</code>, and the angle between the line to <code>(x, y)</code> and x-axis, <code>α</code> then,</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = r × cos(α)</span><br><span class=\"line\">y = r × sin(α)</span><br></pre></td></tr></table></figure>\n<p>If we rotate by β to point <code>(x&#39;, y&#39;)</code>, then,</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x&apos; = r × cos(α + β)</span><br><span class=\"line\">y&apos; = r × sin(α + β)</span><br></pre></td></tr></table></figure>\n<p>Using the trigonometric addition equations (derived here and here), we get,</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x&apos; = r × cos(α) cos(β) - r × sin(α) sin(β)</span><br><span class=\"line\">y&apos; = r × sin(α) cos(β) + r × cos(α) sin(β)</span><br></pre></td></tr></table></figure>\n<p>Substituting in the values for x and y above, we get an equation for the new coordinates as a function of the old coordinates and the angle of rotation:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x&apos; = x × cos(β) - y × sin(β)</span><br><span class=\"line\">y&apos; = y × cos(β) + x × sin(β)</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/3D_rotation/rotate_a_point2.png\" alt=\"Rotating a point (x, y) around the origin by β.\"></p>\n<p>Here is a list of articles that you can found more detail information about the 3D rotation mathematics:</p>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Rotation_matrix\" target=\"_blank\" rel=\"external\">https://en.wikipedia.org/wiki/Rotation_matrix</a></li>\n<li><a href=\"http://www.fastgraph.com/makegames/3drotation/\" target=\"_blank\" rel=\"external\">http://www.fastgraph.com/makegames/3drotation/</a></li>\n<li><a href=\"http://codentronix.com/2011/05/25/rotating-solid-cube-using-vb-net-and-gdi/\" target=\"_blank\" rel=\"external\">http://codentronix.com/2011/05/25/rotating-solid-cube-using-vb-net-and-gdi/</a></li>\n<li><a href=\"http://blog.xieguigang.me/2016/06/10/3d_rotation/\">http://blog.xieguigang.me/2016/06/10/3d_rotation/</a></li>\n</ul>\n<h3 id=\"The-Point3D-object\"><a href=\"#The-Point3D-object\" class=\"headerlink\" title=\"The Point3D object\"></a>The Point3D object</h3><p>The theory is much more complicated than you think, but </p>\n<p>Assume that we have a 3D Point object like this:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Defines the Point3D class that represents points in 3D space.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Developed by leonelmachava &amp;lt;leonelmachava@gmail.com&gt;</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> http://codentronix.com</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Copyright (c) 2011 Leonel Machava</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Structure</span> Point3D</span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> X <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> Y <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> Z <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Structure</span></span><br></pre></td></tr></table></figure>\n<p>then we can write to rotation function for the x,y,z axis separately based on the mathematics theory of the 3D rotation:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> RotateX(angle <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>) <span class=\"keyword\">As</span> Point3D</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> rad <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>, cosa <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>, sina <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>, yn <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>, zn <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\"></span><br><span class=\"line\">    rad = angle * Math.PI / <span class=\"number\">180</span></span><br><span class=\"line\">    cosa = Math.Cos(rad)</span><br><span class=\"line\">    sina = Math.Sin(rad)</span><br><span class=\"line\">    yn = <span class=\"keyword\">Me</span>.Y * cosa - <span class=\"keyword\">Me</span>.Z * sina</span><br><span class=\"line\">    zn = <span class=\"keyword\">Me</span>.Y * sina + <span class=\"keyword\">Me</span>.Z * cosa</span><br><span class=\"line\">    <span class=\"keyword\">Return</span> <span class=\"keyword\">New</span> Point3D(<span class=\"keyword\">Me</span>.X, yn, zn)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> RotateY(angle <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>) <span class=\"keyword\">As</span> Point3D</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> rad <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>, cosa <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>, sina <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>, Xn <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>, Zn <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\"></span><br><span class=\"line\">    rad = angle * Math.PI / <span class=\"number\">180</span></span><br><span class=\"line\">    cosa = Math.Cos(rad)</span><br><span class=\"line\">    sina = Math.Sin(rad)</span><br><span class=\"line\">    Zn = <span class=\"keyword\">Me</span>.Z * cosa - <span class=\"keyword\">Me</span>.X * sina</span><br><span class=\"line\">    Xn = <span class=\"keyword\">Me</span>.Z * sina + <span class=\"keyword\">Me</span>.X * cosa</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Return</span> <span class=\"keyword\">New</span> Point3D(Xn, <span class=\"keyword\">Me</span>.Y, Zn)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> RotateZ(angle <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>) <span class=\"keyword\">As</span> Point3D</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> rad <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>, cosa <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>, sina <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>, Xn <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>, Yn <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\"></span><br><span class=\"line\">    rad = angle * Math.PI / <span class=\"number\">180</span></span><br><span class=\"line\">    cosa = Math.Cos(rad)</span><br><span class=\"line\">    sina = Math.Sin(rad)</span><br><span class=\"line\">    Xn = <span class=\"keyword\">Me</span>.X * cosa - <span class=\"keyword\">Me</span>.Y * sina</span><br><span class=\"line\">    Yn = <span class=\"keyword\">Me</span>.X * sina + <span class=\"keyword\">Me</span>.Y * cosa</span><br><span class=\"line\">    <span class=\"keyword\">Return</span> <span class=\"keyword\">New</span> Point3D(Xn, Yn, <span class=\"keyword\">Me</span>.Z)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure>\n<p>Then we can creates a very basic cube model in 3D and makes rotation:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/3D_rotation/an_actual_cube.bmp\" alt=\"A rotated 3D cube\"></p>\n<h3 id=\"Background-3D-Projection\"><a href=\"#Background-3D-Projection\" class=\"headerlink\" title=\"Background: 3D Projection\"></a>Background: 3D Projection</h3><h3 id=\"Project-Point3D-to-Drawing-Point\"><a href=\"#Project-Point3D-to-Drawing-Point\" class=\"headerlink\" title=\"Project Point3D to Drawing.Point\"></a>Project Point3D to Drawing.Point</h3><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Project the 3D point to the 2D screen. By using the projection result,</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> just read the property <span class=\"doctag\">&lt;see cref=\"PointXY\"/&gt;</span>.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> (将3D投影为2D，所以只需要取结果之中的<span class=\"doctag\">&lt;see cref=\"X\"/&gt;</span>和<span class=\"doctag\">&lt;see cref=\"Y\"/&gt;</span>就行了)</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"viewWidth\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"viewHeight\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"fov\"&gt;</span>256默认值<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"viewDistance\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> Project(viewWidth <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span>,</span><br><span class=\"line\">                        viewHeight <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span>,</span><br><span class=\"line\">                        fov <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span>,</span><br><span class=\"line\">                        viewDistance <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span>) <span class=\"keyword\">As</span> Point3D</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> factor <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>, Xn <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>, Yn <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\">    factor = fov / (viewDistance + <span class=\"keyword\">Me</span>.Z)</span><br><span class=\"line\">    Xn = <span class=\"keyword\">Me</span>.X * factor + viewWidth / <span class=\"number\">2</span></span><br><span class=\"line\">    Yn = <span class=\"keyword\">Me</span>.Y * factor + viewHeight / <span class=\"number\">2</span></span><br><span class=\"line\">    <span class=\"keyword\">Return</span> <span class=\"keyword\">New</span> Point3D(Xn, Yn, <span class=\"keyword\">Me</span>.Z)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Network-canvas-in-3D\"><a href=\"#Network-canvas-in-3D\" class=\"headerlink\" title=\"Network canvas in 3D\"></a>Network canvas in 3D</h3><p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/3D_rotation/network_canvas_3D.bmp\" alt=\"Network canvas in 3D\"></p>\n<h3 id=\"Additional-Export-SVG\"><a href=\"#Additional-Export-SVG\" class=\"headerlink\" title=\"Additional: Export SVG\"></a>Additional: Export SVG</h3>","excerpt":"","more":"<p><img src=\"https://github.com/xieguigang/xieguigang.github.io-hexo/raw/master/images/3D_rotation/daa-skayfoll-1080p.mkv_005301660.jpg\" alt=\"3D network in movie &#39;007 Skyfall (2012)&#39;\"></p>\n<p>In this , there are two problem:</p>\n<ul>\n<li>3D rotation</li>\n<li>3D Projection</li>\n</ul>\n<h3 id=\"Background-3D-rotation\"><a href=\"#Background-3D-rotation\" class=\"headerlink\" title=\"Background: 3D rotation\"></a>Background: 3D rotation</h3><blockquote>\n<p><a href=\"https://petercollingridge.appspot.com/3D-tutorial/rotating-objects\">3D graphics tutorial - Rotating objects</a></p>\n</blockquote>\n<p>Rotating things in three dimensions sounds complicated and it can be, but there are some simple rotations. For example, if we imagine rotating our cube around the z-axis (which points out of the screen), we are actually just rotating a square in two dimensions.</p>\n<p><img src=\"https://github.com/xieguigang/xieguigang.github.io-hexo/raw/master/images/3D_rotation/rotating_square.gif\" alt=\"A cube rotating about its z-axis.\"></p>\n<p>We can simplify things further, by just looking at a single node at position <code>(x, 0)</code>. Using simple trigonometry we can find that the position of the point after rotating it by <code>θ</code> around the origin is <code>(x&#39;, y&#39;)</code>, where,</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x&apos; = x × cos(θ)</span><br><span class=\"line\">y&apos; = x × sin(θ)</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/3D_rotation/rotate_a_point.png\" alt=\"Rotating a point (x, 0) around the origin by θ.\"></p>\n<h5 id=\"Rotating-a-point-about-the-origin\"><a href=\"#Rotating-a-point-about-the-origin\" class=\"headerlink\" title=\"Rotating a point about the origin\"></a>Rotating a point about the origin</h5><p>The example above allows us to rotate a point that starts on the x-axis about the origin, but what if it isn’t on the x-axis? This requires some slightly more advanced trigonometry. If we call the distance between the point <code>(x, y)</code> and the origin <code>r</code>, and the angle between the line to <code>(x, y)</code> and x-axis, <code>α</code> then,</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = r × cos(α)</span><br><span class=\"line\">y = r × sin(α)</span><br></pre></td></tr></table></figure>\n<p>If we rotate by β to point <code>(x&#39;, y&#39;)</code>, then,</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x&apos; = r × cos(α + β)</span><br><span class=\"line\">y&apos; = r × sin(α + β)</span><br></pre></td></tr></table></figure>\n<p>Using the trigonometric addition equations (derived here and here), we get,</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x&apos; = r × cos(α) cos(β) - r × sin(α) sin(β)</span><br><span class=\"line\">y&apos; = r × sin(α) cos(β) + r × cos(α) sin(β)</span><br></pre></td></tr></table></figure>\n<p>Substituting in the values for x and y above, we get an equation for the new coordinates as a function of the old coordinates and the angle of rotation:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x&apos; = x × cos(β) - y × sin(β)</span><br><span class=\"line\">y&apos; = y × cos(β) + x × sin(β)</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/3D_rotation/rotate_a_point2.png\" alt=\"Rotating a point (x, y) around the origin by β.\"></p>\n<p>Here is a list of articles that you can found more detail information about the 3D rotation mathematics:</p>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Rotation_matrix\">https://en.wikipedia.org/wiki/Rotation_matrix</a></li>\n<li><a href=\"http://www.fastgraph.com/makegames/3drotation/\">http://www.fastgraph.com/makegames/3drotation/</a></li>\n<li><a href=\"http://codentronix.com/2011/05/25/rotating-solid-cube-using-vb-net-and-gdi/\">http://codentronix.com/2011/05/25/rotating-solid-cube-using-vb-net-and-gdi/</a></li>\n<li><a href=\"http://blog.xieguigang.me/2016/06/10/3d_rotation/\">http://blog.xieguigang.me/2016/06/10/3d_rotation/</a></li>\n</ul>\n<h3 id=\"The-Point3D-object\"><a href=\"#The-Point3D-object\" class=\"headerlink\" title=\"The Point3D object\"></a>The Point3D object</h3><p>The theory is much more complicated than you think, but </p>\n<p>Assume that we have a 3D Point object like this:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Defines the Point3D class that represents points in 3D space.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Developed by leonelmachava &amp;lt;leonelmachava@gmail.com&gt;</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> http://codentronix.com</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Copyright (c) 2011 Leonel Machava</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Structure</span> Point3D</span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> X <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> Y <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\">    <span class=\"keyword\">Public</span> <span class=\"keyword\">Property</span> Z <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Structure</span></span><br></pre></td></tr></table></figure>\n<p>then we can write to rotation function for the x,y,z axis separately based on the mathematics theory of the 3D rotation:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> RotateX(angle <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>) <span class=\"keyword\">As</span> Point3D</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> rad <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>, cosa <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>, sina <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>, yn <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>, zn <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\"></span><br><span class=\"line\">    rad = angle * Math.PI / <span class=\"number\">180</span></span><br><span class=\"line\">    cosa = Math.Cos(rad)</span><br><span class=\"line\">    sina = Math.Sin(rad)</span><br><span class=\"line\">    yn = <span class=\"keyword\">Me</span>.Y * cosa - <span class=\"keyword\">Me</span>.Z * sina</span><br><span class=\"line\">    zn = <span class=\"keyword\">Me</span>.Y * sina + <span class=\"keyword\">Me</span>.Z * cosa</span><br><span class=\"line\">    <span class=\"keyword\">Return</span> <span class=\"keyword\">New</span> Point3D(<span class=\"keyword\">Me</span>.X, yn, zn)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> RotateY(angle <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>) <span class=\"keyword\">As</span> Point3D</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> rad <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>, cosa <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>, sina <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>, Xn <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>, Zn <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\"></span><br><span class=\"line\">    rad = angle * Math.PI / <span class=\"number\">180</span></span><br><span class=\"line\">    cosa = Math.Cos(rad)</span><br><span class=\"line\">    sina = Math.Sin(rad)</span><br><span class=\"line\">    Zn = <span class=\"keyword\">Me</span>.Z * cosa - <span class=\"keyword\">Me</span>.X * sina</span><br><span class=\"line\">    Xn = <span class=\"keyword\">Me</span>.Z * sina + <span class=\"keyword\">Me</span>.X * cosa</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Return</span> <span class=\"keyword\">New</span> Point3D(Xn, <span class=\"keyword\">Me</span>.Y, Zn)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> RotateZ(angle <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>) <span class=\"keyword\">As</span> Point3D</span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> rad <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>, cosa <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>, sina <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>, Xn <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>, Yn <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\"></span><br><span class=\"line\">    rad = angle * Math.PI / <span class=\"number\">180</span></span><br><span class=\"line\">    cosa = Math.Cos(rad)</span><br><span class=\"line\">    sina = Math.Sin(rad)</span><br><span class=\"line\">    Xn = <span class=\"keyword\">Me</span>.X * cosa - <span class=\"keyword\">Me</span>.Y * sina</span><br><span class=\"line\">    Yn = <span class=\"keyword\">Me</span>.X * sina + <span class=\"keyword\">Me</span>.Y * cosa</span><br><span class=\"line\">    <span class=\"keyword\">Return</span> <span class=\"keyword\">New</span> Point3D(Xn, Yn, <span class=\"keyword\">Me</span>.Z)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure>\n<p>Then we can creates a very basic cube model in 3D and makes rotation:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/3D_rotation/an_actual_cube.bmp\" alt=\"A rotated 3D cube\"></p>\n<h3 id=\"Background-3D-Projection\"><a href=\"#Background-3D-Projection\" class=\"headerlink\" title=\"Background: 3D Projection\"></a>Background: 3D Projection</h3><h3 id=\"Project-Point3D-to-Drawing-Point\"><a href=\"#Project-Point3D-to-Drawing-Point\" class=\"headerlink\" title=\"Project Point3D to Drawing.Point\"></a>Project Point3D to Drawing.Point</h3><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> Project the 3D point to the 2D screen. By using the projection result,</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> just read the property <span class=\"doctag\">&lt;see cref=\"PointXY\"/&gt;</span>.</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> (将3D投影为2D，所以只需要取结果之中的<span class=\"doctag\">&lt;see cref=\"X\"/&gt;</span>和<span class=\"doctag\">&lt;see cref=\"Y\"/&gt;</span>就行了)</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"viewWidth\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"viewHeight\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"fov\"&gt;</span>256默认值<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;param name=\"viewDistance\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">'''</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">Public</span> <span class=\"keyword\">Function</span> Project(viewWidth <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span>,</span><br><span class=\"line\">                        viewHeight <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span>,</span><br><span class=\"line\">                        fov <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span>,</span><br><span class=\"line\">                        viewDistance <span class=\"keyword\">As</span> <span class=\"built_in\">Integer</span>) <span class=\"keyword\">As</span> Point3D</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">Dim</span> factor <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>, Xn <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span>, Yn <span class=\"keyword\">As</span> <span class=\"built_in\">Double</span></span><br><span class=\"line\">    factor = fov / (viewDistance + <span class=\"keyword\">Me</span>.Z)</span><br><span class=\"line\">    Xn = <span class=\"keyword\">Me</span>.X * factor + viewWidth / <span class=\"number\">2</span></span><br><span class=\"line\">    Yn = <span class=\"keyword\">Me</span>.Y * factor + viewHeight / <span class=\"number\">2</span></span><br><span class=\"line\">    <span class=\"keyword\">Return</span> <span class=\"keyword\">New</span> Point3D(Xn, Yn, <span class=\"keyword\">Me</span>.Z)</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Function</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Network-canvas-in-3D\"><a href=\"#Network-canvas-in-3D\" class=\"headerlink\" title=\"Network canvas in 3D\"></a>Network canvas in 3D</h3><p><img src=\"https://raw.githubusercontent.com/xieguigang/xieguigang.github.io-hexo/master/images/3D_rotation/network_canvas_3D.bmp\" alt=\"Network canvas in 3D\"></p>\n<h3 id=\"Additional-Export-SVG\"><a href=\"#Additional-Export-SVG\" class=\"headerlink\" title=\"Additional: Export SVG\"></a>Additional: Export SVG</h3>"},{"title":"PDB molecular viewer","date":"2016-08-05T16:00:00.000Z","_content":"\n\nReading the pdb model file:\n\n```vbnet\nImports SMRUCC.genomics.Data.RCSB.PDB\n\nDim pdb As PDB = PDB.Load(path)\n```","source":"_posts/pdb_mol_viewer.md","raw":"---\ntitle: PDB molecular viewer\ntags: [PDB, GCModeller, 3d, gdi+]\ndate: 2016-8-6\n---\n\n\nReading the pdb model file:\n\n```vbnet\nImports SMRUCC.genomics.Data.RCSB.PDB\n\nDim pdb As PDB = PDB.Load(path)\n```","slug":"pdb_mol_viewer","published":1,"updated":"2016-08-06T06:18:58.445Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirkaum1y0001psv4of8lpynd","content":"<p>Reading the pdb model file:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Imports</span> SMRUCC.genomics.Data.RCSB.PDB</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> pdb <span class=\"keyword\">As</span> PDB = PDB.Load(path)</span><br></pre></td></tr></table></figure>","excerpt":"","more":"<p>Reading the pdb model file:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Imports</span> SMRUCC.genomics.Data.RCSB.PDB</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Dim</span> pdb <span class=\"keyword\">As</span> PDB = PDB.Load(path)</span><br></pre></td></tr></table></figure>"},{"title":"Javascript 异步加载详解","date":"2016-08-07T16:00:00.000Z","_content":"\n本文总结一下浏览器在 ``javascript`` 的加载方式。\n\n**关键词**：异步加载 ``async loading``, 延迟加载 ``lazy loading``, 延迟执行 ``lazy execution``, ``async`` 属性, ``defer`` 属性\n\n<!--more-->\n\n## 一、同步加载与异步加载的形式\n### 1. 同步加载\n我们平时最常使用的就是这种同步加载形式：\n\n```html\n<script src=\"http://yourdomain.com/script.js\"></script>\n```\n\n同步模式，又称阻塞模式，会阻止浏览器的后续处理，停止了后续的解析，因此停止了后续的文件加载（如图像）、渲染、代码执行。\n``js``之所以要同步执行，是因为``js``中可能有输出``document``内容、修改``dom``、重定向等行为，所以默认同步执行才是安全的。\n以前的一般建议是把``<script>``放在页面末尾``</body>``之前，这样尽可能减少这种阻塞行为，而先让页面展示出来。\n简单说：加载的网络``timeline``是瀑布模型，而异步加载的``timeline``是并发模型。\n\n### 2. 常见异步加载（Script DOM Element）\n\n```javascript\n(function() {\n    var s = document.createElement('script');\n    s.type = 'text/javascript';\n    s.async = true;\n    s.src = 'http://yourdomain.com/script.js';\n    var x = document.getElementsByTagName('script')[0];\n    x.parentNode.insertBefore(s, x);\n})();\n```\n\n异步加载又叫非阻塞，浏览器在下载执行 js 同时，还会继续进行后续页面的处理。\n这种方法是在页面中``<script>``标签内，用 js 创建一个``script``元素并插入到``document``中。这样就做到了非阻塞的下载 js 代码。\nasync属性是HTML5中新增的异步支持，见后文解释，加上好（不加也不影响）。\n此方法被称为 Script DOM Element 法，不要求 js 同源。\n将js代码包裹在匿名函数中并立即执行的方式是为了保护变量名泄露到外部可见，这是很常见的方式，尤其是在 js 库中被普遍使用。\n例如 Google Analytics 和 Google+ Badge 都使用了这种异步加载代码：\n\n```javascript\n(function() {\n     var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\n     ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n     var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\n})();\n\n(function()\n    {var po = document.createElement(\"script\");\n    po.type = \"text/javascript\"; po.async = true;po.src = \"https://apis.google.com/js/plusone.js\";\n    var s = document.getElementsByTagName(\"script\")[0];\n    s.parentNode.insertBefore(po, s);\n})();\n```\n\n但是，这种加载方式在加载执行完之前会阻止 onload 事件的触发，而现在很多页面的代码都在 onload 时还要执行额外的渲染工作等，所以还是会阻塞部分页面的初始化处理。\n\n### 3. onload 时的异步加载\n\n```javascript\n(function() {\n     function async_load(){\n         var s = document.createElement('script');\n         s.type = 'text/javascript';\n         s.async = true;\n         s.src = 'http://yourdomain.com/script.js';\n         var x = document.getElementsByTagName('script')[0];\n         x.parentNode.insertBefore(s, x);\n     }\n     if (window.attachEvent)\n         window.attachEvent('onload', async_load);\n     else\n         window.addEventListener('load', async_load, false);\n})();\n```\n这和前面的方式差不多，但关键是它不是立即开始异步加载 js ，而是在 onload 时才开始异步加载。这样就解决了阻塞 onload 事件触发的问题。\n补充：DOMContentLoaded 与 OnLoad 事件\nDOMContentLoaded : 页面(document)已经解析完成，页面中的dom元素已经可用。但是页面中引用的图片、subframe可能还没有加载完。\nOnLoad：页面的所有资源都加载完毕（包括图片）。浏览器的载入进度在这时才停止。\n这两个时间点将页面加载的timeline分成了三个阶段。\n\n### 4.异步加载的其它方法\n\n由于Javascript的动态特性，还有很多异步加载方法：\n\n+ XHR Eval\n+ XHR Injection\n+ Script in Iframe\n+ Script Defer\n+ document.write Script Tag\n\n还有一种方法是用 setTimeout 延迟0秒 与 其它方法组合。\nXHR Eval ：通过 ajax 获取js的内容，然后 eval 执行。\n\n```javascript\nvar xhrObj = getXHRObject(); \n xhrObj.onreadystatechange =  \n   function() {  \n     if ( xhrObj.readyState != 4 ) return; \n     eval(xhrObj.responseText); \n   }; \n xhrObj.open('GET', 'A.js', true); \n xhrObj.send('');\n```\n\nScript in Iframe：创建并插入一个iframe元素，让其异步执行 js 。\n\n```javascript\nvar iframe = document.createElement('iframe'); \n document.body.appendChild(iframe); \n var doc = iframe.contentWindow.document; \n doc.open().write('<body onload=\"insertJS()\">'); \n doc.close();\n```\n\nGMail Mobile：页内 js 的内容被注释，所以不会执行，然后在需要的时候，获取script元素中 text 内容，去掉注释后 eval 执行。\n\n```javascript\n<script type=\"text/javascript\"> \n /* \n var ...  \n */ \n </script>\n```\n\n详见参考资料中2010年的Velocity 大会 Steve Souders 和淘宝的那两个讲义。\n\n## 二、async 和 defer 属性\n### 1. defer 属性\n\n```html\n<script src=\"file.js\" defer></script> \n```\n\ndefer属性声明这个脚本中将不会有 document.write 或 dom 修改。\n浏览器将会并行下载 file.js 和其它有 defer 属性的script，而不会阻塞页面后续处理。\ndefer属性在IE 4.0中就实现了，超过13年了！Firefox 从 3.5 开始支持defer属性 。\n\n注：**所有的``defer``脚本保证是按顺序依次执行的。**\n\n### 2. async 属性\n\n```html\n<script src=\"file.js\" async></script>\n```\n\nasync属性是HTML5新增的。作用和defer类似，但是它将在下载后尽快执行，不能保证脚本会按顺序执行。它们将在onload 事件之前完成。\nFirefox 3.6、Opera 10.5、IE 9 和 最新的Chrome 和 Safari 都支持 async 属性。可以同时使用 async 和 defer，这样IE 4之后的所有 IE 都支持异步加载。\n\n### 3. 详细解释\n``<script>``标签在 HTML 4.01 与 HTML5 的区别：\ntype 属性在HTML 4中是必须的，在HTML5中是可选的。\nasync 属性是HTML5中新增的。\n个别属性（xml:space）在HTML5中不支持。\n\n**说明**：\n没有 async 属性，script 将立即获取（下载）并执行，然后才继续后面的处理，这期间阻塞了浏览器的后续处理。\n如果有 async 属性，那么 script 将被异步下载并执行，同时浏览器继续后续的处理。\nHTML4中就有了defer属性，它提示浏览器这个 script 不会产生任何文档元素（没有document.write），因此浏览器会继续后续处理和渲染。\n如果没有 async 属性 但是有 defer 属性，那么script 将在页面parse之后执行。\n如果同时设置了二者，那么 defer 属性主要是为了让不支持 async 属性的老浏览器按照原来的 defer 方式处理，而不是同步方式。\n另参见官方说明：script async\n\n> 个人补充：\n> 既然 HTML5 中已经支持异步加载，为什么还要使用前面推荐的那种麻烦（动态创建 script 元素）的方式？\n> 答：为了兼容尚不支持``async``老浏览器。如果将来所有浏览器都支持了，那么直接在script中加上async 属性是最简单的方式。\n\n## 三、延迟加载（lazy loading）\n\n前面解决了异步加载（async loading）问题，再谈谈什么是延迟加载。\n延迟加载：有些 js 代码并不是页面初始化的时候就立刻需要的，而稍后的某些情况才需要的。延迟加载就是一开始并不加载这些暂时不用的js，而是在需要的时候或稍后再通过js 的控制来异步加载。\n也就是将 js 切分成许多模块，页面初始化时只加载需要立即执行的 js ，然后其它 js 的加载延迟到第一次需要用到的时候再加载。\n特别是页面有大量不同的模块组成，很多可能暂时不用或根本就没用到。\n就像图片的延迟加载，在图片出现在可视区域内时（在滚动条下拉）才加载显示图片。\n\n### 四、script 的两阶段加载 与 延迟执行（lazy execution）\n\nJS的加载其实是由两阶段组成：下载内容（download bytes）和执行（parse and execute）。\n浏览器在下载完 js 的内容后就会立即对其解析和执行，不管是同步加载还是异步加载。\n前面说的异步加载，解决的只是下载阶段的问题，但代码在下载后会立即执行。\n而浏览器在解析执行 JS 阶段是阻塞任何操作的，这时的浏览器处于无响应状态。\n我 们都知道通过网络下载 script 需要明显的时间，但容易忽略了第二阶段，解析和执行也是需要时间的。script的解析和执行所花的时间比我们想象的要多，尤其是script 很多很大的时候。有些是需要立刻执行，而有些则不需要（比如只是在展示某个界面或执行某个操作时才需要）。\n这些script 可以延迟执行，先异步下载缓存起来，但不立即执行，而是在第一次需要的时候执行一次。\n利用特殊的技巧可以做到 下载 与 执行的分离 (再次感谢 javascript 的动态特性)。比如将 JS 的内容作为 Image或 object 对象加载缓存起来，所以就不会立即执行了，然后在第一次需要的时候再执行。\n此部分的更多解释 请查看末尾参考资料中 ControlJS 的相关链接。\n小技巧：\n\n### 1. 模拟较长的下载时间：\n写个后端脚本，让其 sleep 一定时间。如在 jsp 中 Thread.sleep(5000); ，这样5秒后才能收到内容。\n### 2. 模拟较长的 js 代码执行时间（因为这步一般比较快不容易观察到）：\n\n```javascript\nvar t_start = Number(new Date());\nwhile ( t_start + 5000 > Number(new Date()) ) {}\n```\n\n这个代码将使 js 执行5秒才能完成！\n\n## 五、script 标签使用的历史\n\n### 1. script 放在 HEAD 中\n\n```html\n<head>\n    <script src=“…”></script>\n</head>\n```\n\n阻止了后续的下载；\n在IE 6-7 中 script 是顺序下载的，而不是现在的 “并行下载、顺序执行” 的方式；\n在下载和解析执行阶段阻止渲染（rendering）；\n\n### 2. script 放在页面底部（2007）\n\n```html\n<script src=“…”></script>\n</body>\n```\n\n不阻止其它下载；\n在IE 6-7 中 script 是顺序下载的；\n在下载和解析执行阶段阻止渲染（rendering）；\n\n### 3. 异步加载script（2009）\n\n```javascript\nvar se = document.createElement('script');\nse.src = 'http://anydomain.com/A.js';\ndocument.getElementsByTagName('head')[0].appendChild(se);\n```\n\n这就是本文主要说的方式。\n不阻止其它下载；\n在所有浏览器中，script都是并行下载；\n只在解析执行阶段阻止渲染（rendering）；\n\n### 4. 异步下载 + 按需执行 (2010)\n\n```javascript\nvar se = new Image();\nse.onload = registerScript();\nse.src = 'http://anydomain.com/A.js';\n```\n\n 把下载 js 与 解析执行 js 分离出来\n不阻止其它下载；\n在所有浏览器中，script都是并行下载；\n不阻止渲染（rendering）直到真正需要时；\n\n## 六、异步加载的问题\n\n在异步加载的时候，无法使用 document.write 输出文档内容。\n在同步模式下，document.write 是在当前 script 所在的位置输 出文档的。而在异步模式下，浏览器继续处理后续页面内容，根本无法确定 document.write 应该输出到什么位置，所以异步模式下 document.write 不可行。而到了页面已经 onload 之后，再执行 document.write 将导致当前页面的内容被清空，因为它会自动触发 document.open 方法。\n实际上document.write的名声并不好，最好少用。\n替代方法：\n\n1. 虽然异步加载不能用 document.write，但还是可以onload之后执行操作dom（创建dom或修改dom）的，这样可以实现一些自己的动态输出。比如要在页面异步创建一个浮动元素，这和它在页面中的位置就没关系了，只要创建出该dom元素添加到 document 中即可。\n2. 如果需要在固定位置异步生成元素的内容，那么可以在该固定位置设置一个dom元素作为目标，这样就知道位置了，异步加载之后就可以对这个元素进行修改。\n\n## 六、JS 模块化管理\n\n异步加载，需要将所有 js 内容按模块化的方式来切分组织，其中就存在依赖关系，而异步加载不保证执行顺序。\n另外，namespace 如何管理 等相关问题。这部分已超出本文内容，可参考：\nRequireJS 、 CommonJS 以及 王保平(淘宝)的 SeaJS 及其博客 。\n\n## 七、JS最佳实践\n\n1. 最小化 js 文件，利用压缩工具将其最小化，同时开启http gzip压缩。工具：\n2. 尽量不要放在 <head> 中，尽量放在页面底部，最好是``</body>``之前的位置\n3. 避免使用 document.write 方法\n4. 异步加载 js ，使用非阻塞方式，就是此文内容。\n5. 尽量不直接在页面元素上使用 Inline Javascript，如onClick 。有利于统一维护和缓存处理。\n\n## 参考资料\n\n+ [Lazy Loading Asyncronous Javascript](http://friendlybit.com/js/lazy-loading-asyncronous-javascript/)\n+ [Load Non-blocking JavaScript with HTML5 Async and Defer](http://www.sitepoint.com/non-blocking-async-defer/)\n+ 2010年 Velocity China 上的两个讲义：\n\t+ Steve Souders(Google)的 [Even Faster Web Sites](http://velocity.oreilly.com.cn/2010/ppts/velocity-efws-20101208SteveSoudersEvenFaster.pdf) (pdf)\n\t+ 李穆(淘宝)的 [第三方广告代码稳定性和性能优化实战](http://velocity.oreilly.com.cn/2010/ppts/limufromTaobao.pdf) (pdf)]","source":"_posts/javascript_async_loading.md","raw":"---\ntitle: Javascript 异步加载详解\ntags: [javascript, async]\ndate: 2016-8-8\n---\n\n本文总结一下浏览器在 ``javascript`` 的加载方式。\n\n**关键词**：异步加载 ``async loading``, 延迟加载 ``lazy loading``, 延迟执行 ``lazy execution``, ``async`` 属性, ``defer`` 属性\n\n<!--more-->\n\n## 一、同步加载与异步加载的形式\n### 1. 同步加载\n我们平时最常使用的就是这种同步加载形式：\n\n```html\n<script src=\"http://yourdomain.com/script.js\"></script>\n```\n\n同步模式，又称阻塞模式，会阻止浏览器的后续处理，停止了后续的解析，因此停止了后续的文件加载（如图像）、渲染、代码执行。\n``js``之所以要同步执行，是因为``js``中可能有输出``document``内容、修改``dom``、重定向等行为，所以默认同步执行才是安全的。\n以前的一般建议是把``<script>``放在页面末尾``</body>``之前，这样尽可能减少这种阻塞行为，而先让页面展示出来。\n简单说：加载的网络``timeline``是瀑布模型，而异步加载的``timeline``是并发模型。\n\n### 2. 常见异步加载（Script DOM Element）\n\n```javascript\n(function() {\n    var s = document.createElement('script');\n    s.type = 'text/javascript';\n    s.async = true;\n    s.src = 'http://yourdomain.com/script.js';\n    var x = document.getElementsByTagName('script')[0];\n    x.parentNode.insertBefore(s, x);\n})();\n```\n\n异步加载又叫非阻塞，浏览器在下载执行 js 同时，还会继续进行后续页面的处理。\n这种方法是在页面中``<script>``标签内，用 js 创建一个``script``元素并插入到``document``中。这样就做到了非阻塞的下载 js 代码。\nasync属性是HTML5中新增的异步支持，见后文解释，加上好（不加也不影响）。\n此方法被称为 Script DOM Element 法，不要求 js 同源。\n将js代码包裹在匿名函数中并立即执行的方式是为了保护变量名泄露到外部可见，这是很常见的方式，尤其是在 js 库中被普遍使用。\n例如 Google Analytics 和 Google+ Badge 都使用了这种异步加载代码：\n\n```javascript\n(function() {\n     var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\n     ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n     var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\n})();\n\n(function()\n    {var po = document.createElement(\"script\");\n    po.type = \"text/javascript\"; po.async = true;po.src = \"https://apis.google.com/js/plusone.js\";\n    var s = document.getElementsByTagName(\"script\")[0];\n    s.parentNode.insertBefore(po, s);\n})();\n```\n\n但是，这种加载方式在加载执行完之前会阻止 onload 事件的触发，而现在很多页面的代码都在 onload 时还要执行额外的渲染工作等，所以还是会阻塞部分页面的初始化处理。\n\n### 3. onload 时的异步加载\n\n```javascript\n(function() {\n     function async_load(){\n         var s = document.createElement('script');\n         s.type = 'text/javascript';\n         s.async = true;\n         s.src = 'http://yourdomain.com/script.js';\n         var x = document.getElementsByTagName('script')[0];\n         x.parentNode.insertBefore(s, x);\n     }\n     if (window.attachEvent)\n         window.attachEvent('onload', async_load);\n     else\n         window.addEventListener('load', async_load, false);\n})();\n```\n这和前面的方式差不多，但关键是它不是立即开始异步加载 js ，而是在 onload 时才开始异步加载。这样就解决了阻塞 onload 事件触发的问题。\n补充：DOMContentLoaded 与 OnLoad 事件\nDOMContentLoaded : 页面(document)已经解析完成，页面中的dom元素已经可用。但是页面中引用的图片、subframe可能还没有加载完。\nOnLoad：页面的所有资源都加载完毕（包括图片）。浏览器的载入进度在这时才停止。\n这两个时间点将页面加载的timeline分成了三个阶段。\n\n### 4.异步加载的其它方法\n\n由于Javascript的动态特性，还有很多异步加载方法：\n\n+ XHR Eval\n+ XHR Injection\n+ Script in Iframe\n+ Script Defer\n+ document.write Script Tag\n\n还有一种方法是用 setTimeout 延迟0秒 与 其它方法组合。\nXHR Eval ：通过 ajax 获取js的内容，然后 eval 执行。\n\n```javascript\nvar xhrObj = getXHRObject(); \n xhrObj.onreadystatechange =  \n   function() {  \n     if ( xhrObj.readyState != 4 ) return; \n     eval(xhrObj.responseText); \n   }; \n xhrObj.open('GET', 'A.js', true); \n xhrObj.send('');\n```\n\nScript in Iframe：创建并插入一个iframe元素，让其异步执行 js 。\n\n```javascript\nvar iframe = document.createElement('iframe'); \n document.body.appendChild(iframe); \n var doc = iframe.contentWindow.document; \n doc.open().write('<body onload=\"insertJS()\">'); \n doc.close();\n```\n\nGMail Mobile：页内 js 的内容被注释，所以不会执行，然后在需要的时候，获取script元素中 text 内容，去掉注释后 eval 执行。\n\n```javascript\n<script type=\"text/javascript\"> \n /* \n var ...  \n */ \n </script>\n```\n\n详见参考资料中2010年的Velocity 大会 Steve Souders 和淘宝的那两个讲义。\n\n## 二、async 和 defer 属性\n### 1. defer 属性\n\n```html\n<script src=\"file.js\" defer></script> \n```\n\ndefer属性声明这个脚本中将不会有 document.write 或 dom 修改。\n浏览器将会并行下载 file.js 和其它有 defer 属性的script，而不会阻塞页面后续处理。\ndefer属性在IE 4.0中就实现了，超过13年了！Firefox 从 3.5 开始支持defer属性 。\n\n注：**所有的``defer``脚本保证是按顺序依次执行的。**\n\n### 2. async 属性\n\n```html\n<script src=\"file.js\" async></script>\n```\n\nasync属性是HTML5新增的。作用和defer类似，但是它将在下载后尽快执行，不能保证脚本会按顺序执行。它们将在onload 事件之前完成。\nFirefox 3.6、Opera 10.5、IE 9 和 最新的Chrome 和 Safari 都支持 async 属性。可以同时使用 async 和 defer，这样IE 4之后的所有 IE 都支持异步加载。\n\n### 3. 详细解释\n``<script>``标签在 HTML 4.01 与 HTML5 的区别：\ntype 属性在HTML 4中是必须的，在HTML5中是可选的。\nasync 属性是HTML5中新增的。\n个别属性（xml:space）在HTML5中不支持。\n\n**说明**：\n没有 async 属性，script 将立即获取（下载）并执行，然后才继续后面的处理，这期间阻塞了浏览器的后续处理。\n如果有 async 属性，那么 script 将被异步下载并执行，同时浏览器继续后续的处理。\nHTML4中就有了defer属性，它提示浏览器这个 script 不会产生任何文档元素（没有document.write），因此浏览器会继续后续处理和渲染。\n如果没有 async 属性 但是有 defer 属性，那么script 将在页面parse之后执行。\n如果同时设置了二者，那么 defer 属性主要是为了让不支持 async 属性的老浏览器按照原来的 defer 方式处理，而不是同步方式。\n另参见官方说明：script async\n\n> 个人补充：\n> 既然 HTML5 中已经支持异步加载，为什么还要使用前面推荐的那种麻烦（动态创建 script 元素）的方式？\n> 答：为了兼容尚不支持``async``老浏览器。如果将来所有浏览器都支持了，那么直接在script中加上async 属性是最简单的方式。\n\n## 三、延迟加载（lazy loading）\n\n前面解决了异步加载（async loading）问题，再谈谈什么是延迟加载。\n延迟加载：有些 js 代码并不是页面初始化的时候就立刻需要的，而稍后的某些情况才需要的。延迟加载就是一开始并不加载这些暂时不用的js，而是在需要的时候或稍后再通过js 的控制来异步加载。\n也就是将 js 切分成许多模块，页面初始化时只加载需要立即执行的 js ，然后其它 js 的加载延迟到第一次需要用到的时候再加载。\n特别是页面有大量不同的模块组成，很多可能暂时不用或根本就没用到。\n就像图片的延迟加载，在图片出现在可视区域内时（在滚动条下拉）才加载显示图片。\n\n### 四、script 的两阶段加载 与 延迟执行（lazy execution）\n\nJS的加载其实是由两阶段组成：下载内容（download bytes）和执行（parse and execute）。\n浏览器在下载完 js 的内容后就会立即对其解析和执行，不管是同步加载还是异步加载。\n前面说的异步加载，解决的只是下载阶段的问题，但代码在下载后会立即执行。\n而浏览器在解析执行 JS 阶段是阻塞任何操作的，这时的浏览器处于无响应状态。\n我 们都知道通过网络下载 script 需要明显的时间，但容易忽略了第二阶段，解析和执行也是需要时间的。script的解析和执行所花的时间比我们想象的要多，尤其是script 很多很大的时候。有些是需要立刻执行，而有些则不需要（比如只是在展示某个界面或执行某个操作时才需要）。\n这些script 可以延迟执行，先异步下载缓存起来，但不立即执行，而是在第一次需要的时候执行一次。\n利用特殊的技巧可以做到 下载 与 执行的分离 (再次感谢 javascript 的动态特性)。比如将 JS 的内容作为 Image或 object 对象加载缓存起来，所以就不会立即执行了，然后在第一次需要的时候再执行。\n此部分的更多解释 请查看末尾参考资料中 ControlJS 的相关链接。\n小技巧：\n\n### 1. 模拟较长的下载时间：\n写个后端脚本，让其 sleep 一定时间。如在 jsp 中 Thread.sleep(5000); ，这样5秒后才能收到内容。\n### 2. 模拟较长的 js 代码执行时间（因为这步一般比较快不容易观察到）：\n\n```javascript\nvar t_start = Number(new Date());\nwhile ( t_start + 5000 > Number(new Date()) ) {}\n```\n\n这个代码将使 js 执行5秒才能完成！\n\n## 五、script 标签使用的历史\n\n### 1. script 放在 HEAD 中\n\n```html\n<head>\n    <script src=“…”></script>\n</head>\n```\n\n阻止了后续的下载；\n在IE 6-7 中 script 是顺序下载的，而不是现在的 “并行下载、顺序执行” 的方式；\n在下载和解析执行阶段阻止渲染（rendering）；\n\n### 2. script 放在页面底部（2007）\n\n```html\n<script src=“…”></script>\n</body>\n```\n\n不阻止其它下载；\n在IE 6-7 中 script 是顺序下载的；\n在下载和解析执行阶段阻止渲染（rendering）；\n\n### 3. 异步加载script（2009）\n\n```javascript\nvar se = document.createElement('script');\nse.src = 'http://anydomain.com/A.js';\ndocument.getElementsByTagName('head')[0].appendChild(se);\n```\n\n这就是本文主要说的方式。\n不阻止其它下载；\n在所有浏览器中，script都是并行下载；\n只在解析执行阶段阻止渲染（rendering）；\n\n### 4. 异步下载 + 按需执行 (2010)\n\n```javascript\nvar se = new Image();\nse.onload = registerScript();\nse.src = 'http://anydomain.com/A.js';\n```\n\n 把下载 js 与 解析执行 js 分离出来\n不阻止其它下载；\n在所有浏览器中，script都是并行下载；\n不阻止渲染（rendering）直到真正需要时；\n\n## 六、异步加载的问题\n\n在异步加载的时候，无法使用 document.write 输出文档内容。\n在同步模式下，document.write 是在当前 script 所在的位置输 出文档的。而在异步模式下，浏览器继续处理后续页面内容，根本无法确定 document.write 应该输出到什么位置，所以异步模式下 document.write 不可行。而到了页面已经 onload 之后，再执行 document.write 将导致当前页面的内容被清空，因为它会自动触发 document.open 方法。\n实际上document.write的名声并不好，最好少用。\n替代方法：\n\n1. 虽然异步加载不能用 document.write，但还是可以onload之后执行操作dom（创建dom或修改dom）的，这样可以实现一些自己的动态输出。比如要在页面异步创建一个浮动元素，这和它在页面中的位置就没关系了，只要创建出该dom元素添加到 document 中即可。\n2. 如果需要在固定位置异步生成元素的内容，那么可以在该固定位置设置一个dom元素作为目标，这样就知道位置了，异步加载之后就可以对这个元素进行修改。\n\n## 六、JS 模块化管理\n\n异步加载，需要将所有 js 内容按模块化的方式来切分组织，其中就存在依赖关系，而异步加载不保证执行顺序。\n另外，namespace 如何管理 等相关问题。这部分已超出本文内容，可参考：\nRequireJS 、 CommonJS 以及 王保平(淘宝)的 SeaJS 及其博客 。\n\n## 七、JS最佳实践\n\n1. 最小化 js 文件，利用压缩工具将其最小化，同时开启http gzip压缩。工具：\n2. 尽量不要放在 <head> 中，尽量放在页面底部，最好是``</body>``之前的位置\n3. 避免使用 document.write 方法\n4. 异步加载 js ，使用非阻塞方式，就是此文内容。\n5. 尽量不直接在页面元素上使用 Inline Javascript，如onClick 。有利于统一维护和缓存处理。\n\n## 参考资料\n\n+ [Lazy Loading Asyncronous Javascript](http://friendlybit.com/js/lazy-loading-asyncronous-javascript/)\n+ [Load Non-blocking JavaScript with HTML5 Async and Defer](http://www.sitepoint.com/non-blocking-async-defer/)\n+ 2010年 Velocity China 上的两个讲义：\n\t+ Steve Souders(Google)的 [Even Faster Web Sites](http://velocity.oreilly.com.cn/2010/ppts/velocity-efws-20101208SteveSoudersEvenFaster.pdf) (pdf)\n\t+ 李穆(淘宝)的 [第三方广告代码稳定性和性能优化实战](http://velocity.oreilly.com.cn/2010/ppts/limufromTaobao.pdf) (pdf)]","slug":"javascript_async_loading","published":1,"updated":"2016-08-08T15:58:14.736Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirm86gfo000050v4jq698oe2","content":"<p>本文总结一下浏览器在 <code>javascript</code> 的加载方式。</p>\n<p><strong>关键词</strong>：异步加载 <code>async loading</code>, 延迟加载 <code>lazy loading</code>, 延迟执行 <code>lazy execution</code>, <code>async</code> 属性, <code>defer</code> 属性</p>\n<a id=\"more\"></a>\n<h2 id=\"一、同步加载与异步加载的形式\"><a href=\"#一、同步加载与异步加载的形式\" class=\"headerlink\" title=\"一、同步加载与异步加载的形式\"></a>一、同步加载与异步加载的形式</h2><h3 id=\"1-同步加载\"><a href=\"#1-同步加载\" class=\"headerlink\" title=\"1. 同步加载\"></a>1. 同步加载</h3><p>我们平时最常使用的就是这种同步加载形式：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://yourdomain.com/script.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>同步模式，又称阻塞模式，会阻止浏览器的后续处理，停止了后续的解析，因此停止了后续的文件加载（如图像）、渲染、代码执行。<br><code>js</code>之所以要同步执行，是因为<code>js</code>中可能有输出<code>document</code>内容、修改<code>dom</code>、重定向等行为，所以默认同步执行才是安全的。<br>以前的一般建议是把<code>&lt;script&gt;</code>放在页面末尾<code>&lt;/body&gt;</code>之前，这样尽可能减少这种阻塞行为，而先让页面展示出来。<br>简单说：加载的网络<code>timeline</code>是瀑布模型，而异步加载的<code>timeline</code>是并发模型。</p>\n<h3 id=\"2-常见异步加载（Script-DOM-Element）\"><a href=\"#2-常见异步加载（Script-DOM-Element）\" class=\"headerlink\" title=\"2. 常见异步加载（Script DOM Element）\"></a>2. 常见异步加载（Script DOM Element）</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> s = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'script'</span>);</span><br><span class=\"line\">    s.type = <span class=\"string\">'text/javascript'</span>;</span><br><span class=\"line\">    s.async = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    s.src = <span class=\"string\">'http://yourdomain.com/script.js'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> x = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">'script'</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">    x.parentNode.insertBefore(s, x);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n<p>异步加载又叫非阻塞，浏览器在下载执行 js 同时，还会继续进行后续页面的处理。<br>这种方法是在页面中<code>&lt;script&gt;</code>标签内，用 js 创建一个<code>script</code>元素并插入到<code>document</code>中。这样就做到了非阻塞的下载 js 代码。<br>async属性是HTML5中新增的异步支持，见后文解释，加上好（不加也不影响）。<br>此方法被称为 Script DOM Element 法，不要求 js 同源。<br>将js代码包裹在匿名函数中并立即执行的方式是为了保护变量名泄露到外部可见，这是很常见的方式，尤其是在 js 库中被普遍使用。<br>例如 Google Analytics 和 Google+ Badge 都使用了这种异步加载代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">var</span> ga = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'script'</span>); ga.type = <span class=\"string\">'text/javascript'</span>; ga.async = <span class=\"literal\">true</span>;</span><br><span class=\"line\">     ga.src = (<span class=\"string\">'https:'</span> == <span class=\"built_in\">document</span>.location.protocol ? <span class=\"string\">'https://ssl'</span> : <span class=\"string\">'http://www'</span>) + <span class=\"string\">'.google-analytics.com/ga.js'</span>;</span><br><span class=\"line\">     <span class=\"keyword\">var</span> s = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">'script'</span>)[<span class=\"number\">0</span>]; s.parentNode.insertBefore(ga, s);</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\"></span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span><br><span class=\"line\">    </span>&#123;<span class=\"keyword\">var</span> po = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"script\"</span>);</span><br><span class=\"line\">    po.type = <span class=\"string\">\"text/javascript\"</span>; po.async = <span class=\"literal\">true</span>;po.src = <span class=\"string\">\"https://apis.google.com/js/plusone.js\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> s = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">\"script\"</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">    s.parentNode.insertBefore(po, s);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n<p>但是，这种加载方式在加载执行完之前会阻止 onload 事件的触发，而现在很多页面的代码都在 onload 时还要执行额外的渲染工作等，所以还是会阻塞部分页面的初始化处理。</p>\n<h3 id=\"3-onload-时的异步加载\"><a href=\"#3-onload-时的异步加载\" class=\"headerlink\" title=\"3. onload 时的异步加载\"></a>3. onload 时的异步加载</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">     <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">async_load</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">         <span class=\"keyword\">var</span> s = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'script'</span>);</span><br><span class=\"line\">         s.type = <span class=\"string\">'text/javascript'</span>;</span><br><span class=\"line\">         s.async = <span class=\"literal\">true</span>;</span><br><span class=\"line\">         s.src = <span class=\"string\">'http://yourdomain.com/script.js'</span>;</span><br><span class=\"line\">         <span class=\"keyword\">var</span> x = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">'script'</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">         x.parentNode.insertBefore(s, x);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (<span class=\"built_in\">window</span>.attachEvent)</span><br><span class=\"line\">         <span class=\"built_in\">window</span>.attachEvent(<span class=\"string\">'onload'</span>, async_load);</span><br><span class=\"line\">     <span class=\"keyword\">else</span></span><br><span class=\"line\">         <span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'load'</span>, async_load, <span class=\"literal\">false</span>);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n<p>这和前面的方式差不多，但关键是它不是立即开始异步加载 js ，而是在 onload 时才开始异步加载。这样就解决了阻塞 onload 事件触发的问题。<br>补充：DOMContentLoaded 与 OnLoad 事件<br>DOMContentLoaded : 页面(document)已经解析完成，页面中的dom元素已经可用。但是页面中引用的图片、subframe可能还没有加载完。<br>OnLoad：页面的所有资源都加载完毕（包括图片）。浏览器的载入进度在这时才停止。<br>这两个时间点将页面加载的timeline分成了三个阶段。</p>\n<h3 id=\"4-异步加载的其它方法\"><a href=\"#4-异步加载的其它方法\" class=\"headerlink\" title=\"4.异步加载的其它方法\"></a>4.异步加载的其它方法</h3><p>由于Javascript的动态特性，还有很多异步加载方法：</p>\n<ul>\n<li>XHR Eval</li>\n<li>XHR Injection</li>\n<li>Script in Iframe</li>\n<li>Script Defer</li>\n<li>document.write Script Tag</li>\n</ul>\n<p>还有一种方法是用 setTimeout 延迟0秒 与 其它方法组合。<br>XHR Eval ：通过 ajax 获取js的内容，然后 eval 执行。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> xhrObj = getXHRObject(); </span><br><span class=\"line\"> xhrObj.onreadystatechange =  </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;  </span><br><span class=\"line\">     <span class=\"keyword\">if</span> ( xhrObj.readyState != <span class=\"number\">4</span> ) <span class=\"keyword\">return</span>; </span><br><span class=\"line\">     <span class=\"built_in\">eval</span>(xhrObj.responseText); </span><br><span class=\"line\">   &#125;; </span><br><span class=\"line\"> xhrObj.open(<span class=\"string\">'GET'</span>, <span class=\"string\">'A.js'</span>, <span class=\"literal\">true</span>); </span><br><span class=\"line\"> xhrObj.send(<span class=\"string\">''</span>);</span><br></pre></td></tr></table></figure>\n<p>Script in Iframe：创建并插入一个iframe元素，让其异步执行 js 。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'iframe'</span>); </span><br><span class=\"line\"> <span class=\"built_in\">document</span>.body.appendChild(iframe); </span><br><span class=\"line\"> <span class=\"keyword\">var</span> doc = iframe.contentWindow.document; </span><br><span class=\"line\"> doc.open().write(<span class=\"string\">'&lt;body onload=\"insertJS()\"&gt;'</span>); </span><br><span class=\"line\"> doc.close();</span><br></pre></td></tr></table></figure>\n<p>GMail Mobile：页内 js 的内容被注释，所以不会执行，然后在需要的时候，获取script元素中 text 内容，去掉注释后 eval 执行。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt; </span><br><span class=\"line\"> <span class=\"comment\">/* </span><br><span class=\"line\"> var ...  </span><br><span class=\"line\"> */</span> </span><br><span class=\"line\"> &lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<p>详见参考资料中2010年的Velocity 大会 Steve Souders 和淘宝的那两个讲义。</p>\n<h2 id=\"二、async-和-defer-属性\"><a href=\"#二、async-和-defer-属性\" class=\"headerlink\" title=\"二、async 和 defer 属性\"></a>二、async 和 defer 属性</h2><h3 id=\"1-defer-属性\"><a href=\"#1-defer-属性\" class=\"headerlink\" title=\"1. defer 属性\"></a>1. defer 属性</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"file.js\"</span> <span class=\"attr\">defer</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>defer属性声明这个脚本中将不会有 document.write 或 dom 修改。<br>浏览器将会并行下载 file.js 和其它有 defer 属性的script，而不会阻塞页面后续处理。<br>defer属性在IE 4.0中就实现了，超过13年了！Firefox 从 3.5 开始支持defer属性 。</p>\n<p>注：<strong>所有的<code>defer</code>脚本保证是按顺序依次执行的。</strong></p>\n<h3 id=\"2-async-属性\"><a href=\"#2-async-属性\" class=\"headerlink\" title=\"2. async 属性\"></a>2. async 属性</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"file.js\"</span> <span class=\"attr\">async</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>async属性是HTML5新增的。作用和defer类似，但是它将在下载后尽快执行，不能保证脚本会按顺序执行。它们将在onload 事件之前完成。<br>Firefox 3.6、Opera 10.5、IE 9 和 最新的Chrome 和 Safari 都支持 async 属性。可以同时使用 async 和 defer，这样IE 4之后的所有 IE 都支持异步加载。</p>\n<h3 id=\"3-详细解释\"><a href=\"#3-详细解释\" class=\"headerlink\" title=\"3. 详细解释\"></a>3. 详细解释</h3><p><code>&lt;script&gt;</code>标签在 HTML 4.01 与 HTML5 的区别：<br>type 属性在HTML 4中是必须的，在HTML5中是可选的。<br>async 属性是HTML5中新增的。<br>个别属性（xml:space）在HTML5中不支持。</p>\n<p><strong>说明</strong>：<br>没有 async 属性，script 将立即获取（下载）并执行，然后才继续后面的处理，这期间阻塞了浏览器的后续处理。<br>如果有 async 属性，那么 script 将被异步下载并执行，同时浏览器继续后续的处理。<br>HTML4中就有了defer属性，它提示浏览器这个 script 不会产生任何文档元素（没有document.write），因此浏览器会继续后续处理和渲染。<br>如果没有 async 属性 但是有 defer 属性，那么script 将在页面parse之后执行。<br>如果同时设置了二者，那么 defer 属性主要是为了让不支持 async 属性的老浏览器按照原来的 defer 方式处理，而不是同步方式。<br>另参见官方说明：script async</p>\n<blockquote>\n<p>个人补充：<br>既然 HTML5 中已经支持异步加载，为什么还要使用前面推荐的那种麻烦（动态创建 script 元素）的方式？<br>答：为了兼容尚不支持<code>async</code>老浏览器。如果将来所有浏览器都支持了，那么直接在script中加上async 属性是最简单的方式。</p>\n</blockquote>\n<h2 id=\"三、延迟加载（lazy-loading）\"><a href=\"#三、延迟加载（lazy-loading）\" class=\"headerlink\" title=\"三、延迟加载（lazy loading）\"></a>三、延迟加载（lazy loading）</h2><p>前面解决了异步加载（async loading）问题，再谈谈什么是延迟加载。<br>延迟加载：有些 js 代码并不是页面初始化的时候就立刻需要的，而稍后的某些情况才需要的。延迟加载就是一开始并不加载这些暂时不用的js，而是在需要的时候或稍后再通过js 的控制来异步加载。<br>也就是将 js 切分成许多模块，页面初始化时只加载需要立即执行的 js ，然后其它 js 的加载延迟到第一次需要用到的时候再加载。<br>特别是页面有大量不同的模块组成，很多可能暂时不用或根本就没用到。<br>就像图片的延迟加载，在图片出现在可视区域内时（在滚动条下拉）才加载显示图片。</p>\n<h3 id=\"四、script-的两阶段加载-与-延迟执行（lazy-execution）\"><a href=\"#四、script-的两阶段加载-与-延迟执行（lazy-execution）\" class=\"headerlink\" title=\"四、script 的两阶段加载 与 延迟执行（lazy execution）\"></a>四、script 的两阶段加载 与 延迟执行（lazy execution）</h3><p>JS的加载其实是由两阶段组成：下载内容（download bytes）和执行（parse and execute）。<br>浏览器在下载完 js 的内容后就会立即对其解析和执行，不管是同步加载还是异步加载。<br>前面说的异步加载，解决的只是下载阶段的问题，但代码在下载后会立即执行。<br>而浏览器在解析执行 JS 阶段是阻塞任何操作的，这时的浏览器处于无响应状态。<br>我 们都知道通过网络下载 script 需要明显的时间，但容易忽略了第二阶段，解析和执行也是需要时间的。script的解析和执行所花的时间比我们想象的要多，尤其是script 很多很大的时候。有些是需要立刻执行，而有些则不需要（比如只是在展示某个界面或执行某个操作时才需要）。<br>这些script 可以延迟执行，先异步下载缓存起来，但不立即执行，而是在第一次需要的时候执行一次。<br>利用特殊的技巧可以做到 下载 与 执行的分离 (再次感谢 javascript 的动态特性)。比如将 JS 的内容作为 Image或 object 对象加载缓存起来，所以就不会立即执行了，然后在第一次需要的时候再执行。<br>此部分的更多解释 请查看末尾参考资料中 ControlJS 的相关链接。<br>小技巧：</p>\n<h3 id=\"1-模拟较长的下载时间：\"><a href=\"#1-模拟较长的下载时间：\" class=\"headerlink\" title=\"1. 模拟较长的下载时间：\"></a>1. 模拟较长的下载时间：</h3><p>写个后端脚本，让其 sleep 一定时间。如在 jsp 中 Thread.sleep(5000); ，这样5秒后才能收到内容。</p>\n<h3 id=\"2-模拟较长的-js-代码执行时间（因为这步一般比较快不容易观察到）：\"><a href=\"#2-模拟较长的-js-代码执行时间（因为这步一般比较快不容易观察到）：\" class=\"headerlink\" title=\"2. 模拟较长的 js 代码执行时间（因为这步一般比较快不容易观察到）：\"></a>2. 模拟较长的 js 代码执行时间（因为这步一般比较快不容易观察到）：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> t_start = <span class=\"built_in\">Number</span>(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>());</span><br><span class=\"line\"><span class=\"keyword\">while</span> ( t_start + <span class=\"number\">5000</span> &gt; <span class=\"built_in\">Number</span>(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()) ) &#123;&#125;</span><br></pre></td></tr></table></figure>\n<p>这个代码将使 js 执行5秒才能完成！</p>\n<h2 id=\"五、script-标签使用的历史\"><a href=\"#五、script-标签使用的历史\" class=\"headerlink\" title=\"五、script 标签使用的历史\"></a>五、script 标签使用的历史</h2><h3 id=\"1-script-放在-HEAD-中\"><a href=\"#1-script-放在-HEAD-中\" class=\"headerlink\" title=\"1. script 放在 HEAD 中\"></a>1. script 放在 HEAD 中</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">“…”</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>阻止了后续的下载；<br>在IE 6-7 中 script 是顺序下载的，而不是现在的 “并行下载、顺序执行” 的方式；<br>在下载和解析执行阶段阻止渲染（rendering）；</p>\n<h3 id=\"2-script-放在页面底部（2007）\"><a href=\"#2-script-放在页面底部（2007）\" class=\"headerlink\" title=\"2. script 放在页面底部（2007）\"></a>2. script 放在页面底部（2007）</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">“…”</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>不阻止其它下载；<br>在IE 6-7 中 script 是顺序下载的；<br>在下载和解析执行阶段阻止渲染（rendering）；</p>\n<h3 id=\"3-异步加载script（2009）\"><a href=\"#3-异步加载script（2009）\" class=\"headerlink\" title=\"3. 异步加载script（2009）\"></a>3. 异步加载script（2009）</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> se = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'script'</span>);</span><br><span class=\"line\">se.src = <span class=\"string\">'http://anydomain.com/A.js'</span>;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">'head'</span>)[<span class=\"number\">0</span>].appendChild(se);</span><br></pre></td></tr></table></figure>\n<p>这就是本文主要说的方式。<br>不阻止其它下载；<br>在所有浏览器中，script都是并行下载；<br>只在解析执行阶段阻止渲染（rendering）；</p>\n<h3 id=\"4-异步下载-按需执行-2010\"><a href=\"#4-异步下载-按需执行-2010\" class=\"headerlink\" title=\"4. 异步下载 + 按需执行 (2010)\"></a>4. 异步下载 + 按需执行 (2010)</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> se = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\">se.onload = registerScript();</span><br><span class=\"line\">se.src = <span class=\"string\">'http://anydomain.com/A.js'</span>;</span><br></pre></td></tr></table></figure>\n<p> 把下载 js 与 解析执行 js 分离出来<br>不阻止其它下载；<br>在所有浏览器中，script都是并行下载；<br>不阻止渲染（rendering）直到真正需要时；</p>\n<h2 id=\"六、异步加载的问题\"><a href=\"#六、异步加载的问题\" class=\"headerlink\" title=\"六、异步加载的问题\"></a>六、异步加载的问题</h2><p>在异步加载的时候，无法使用 document.write 输出文档内容。<br>在同步模式下，document.write 是在当前 script 所在的位置输 出文档的。而在异步模式下，浏览器继续处理后续页面内容，根本无法确定 document.write 应该输出到什么位置，所以异步模式下 document.write 不可行。而到了页面已经 onload 之后，再执行 document.write 将导致当前页面的内容被清空，因为它会自动触发 document.open 方法。<br>实际上document.write的名声并不好，最好少用。<br>替代方法：</p>\n<ol>\n<li>虽然异步加载不能用 document.write，但还是可以onload之后执行操作dom（创建dom或修改dom）的，这样可以实现一些自己的动态输出。比如要在页面异步创建一个浮动元素，这和它在页面中的位置就没关系了，只要创建出该dom元素添加到 document 中即可。</li>\n<li>如果需要在固定位置异步生成元素的内容，那么可以在该固定位置设置一个dom元素作为目标，这样就知道位置了，异步加载之后就可以对这个元素进行修改。</li>\n</ol>\n<h2 id=\"六、JS-模块化管理\"><a href=\"#六、JS-模块化管理\" class=\"headerlink\" title=\"六、JS 模块化管理\"></a>六、JS 模块化管理</h2><p>异步加载，需要将所有 js 内容按模块化的方式来切分组织，其中就存在依赖关系，而异步加载不保证执行顺序。<br>另外，namespace 如何管理 等相关问题。这部分已超出本文内容，可参考：<br>RequireJS 、 CommonJS 以及 王保平(淘宝)的 SeaJS 及其博客 。</p>\n<h2 id=\"七、JS最佳实践\"><a href=\"#七、JS最佳实践\" class=\"headerlink\" title=\"七、JS最佳实践\"></a>七、JS最佳实践</h2><ol>\n<li>最小化 js 文件，利用压缩工具将其最小化，同时开启http gzip压缩。工具：</li>\n<li>尽量不要放在 <head> 中，尽量放在页面底部，最好是<code>&lt;/body&gt;</code>之前的位置</head></li>\n<li>避免使用 document.write 方法</li>\n<li>异步加载 js ，使用非阻塞方式，就是此文内容。</li>\n<li>尽量不直接在页面元素上使用 Inline Javascript，如onClick 。有利于统一维护和缓存处理。</li>\n</ol>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"http://friendlybit.com/js/lazy-loading-asyncronous-javascript/\" target=\"_blank\" rel=\"external\">Lazy Loading Asyncronous Javascript</a></li>\n<li><a href=\"http://www.sitepoint.com/non-blocking-async-defer/\" target=\"_blank\" rel=\"external\">Load Non-blocking JavaScript with HTML5 Async and Defer</a></li>\n<li>2010年 Velocity China 上的两个讲义：<ul>\n<li>Steve Souders(Google)的 <a href=\"http://velocity.oreilly.com.cn/2010/ppts/velocity-efws-20101208SteveSoudersEvenFaster.pdf\" target=\"_blank\" rel=\"external\">Even Faster Web Sites</a> (pdf)</li>\n<li>李穆(淘宝)的 <a href=\"http://velocity.oreilly.com.cn/2010/ppts/limufromTaobao.pdf\" target=\"_blank\" rel=\"external\">第三方广告代码稳定性和性能优化实战</a> (pdf)]</li>\n</ul>\n</li>\n</ul>\n","excerpt":"<p>本文总结一下浏览器在 <code>javascript</code> 的加载方式。</p>\n<p><strong>关键词</strong>：异步加载 <code>async loading</code>, 延迟加载 <code>lazy loading</code>, 延迟执行 <code>lazy execution</code>, <code>async</code> 属性, <code>defer</code> 属性</p>","more":"<h2 id=\"一、同步加载与异步加载的形式\"><a href=\"#一、同步加载与异步加载的形式\" class=\"headerlink\" title=\"一、同步加载与异步加载的形式\"></a>一、同步加载与异步加载的形式</h2><h3 id=\"1-同步加载\"><a href=\"#1-同步加载\" class=\"headerlink\" title=\"1. 同步加载\"></a>1. 同步加载</h3><p>我们平时最常使用的就是这种同步加载形式：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://yourdomain.com/script.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>同步模式，又称阻塞模式，会阻止浏览器的后续处理，停止了后续的解析，因此停止了后续的文件加载（如图像）、渲染、代码执行。<br><code>js</code>之所以要同步执行，是因为<code>js</code>中可能有输出<code>document</code>内容、修改<code>dom</code>、重定向等行为，所以默认同步执行才是安全的。<br>以前的一般建议是把<code>&lt;script&gt;</code>放在页面末尾<code>&lt;/body&gt;</code>之前，这样尽可能减少这种阻塞行为，而先让页面展示出来。<br>简单说：加载的网络<code>timeline</code>是瀑布模型，而异步加载的<code>timeline</code>是并发模型。</p>\n<h3 id=\"2-常见异步加载（Script-DOM-Element）\"><a href=\"#2-常见异步加载（Script-DOM-Element）\" class=\"headerlink\" title=\"2. 常见异步加载（Script DOM Element）\"></a>2. 常见异步加载（Script DOM Element）</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> s = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'script'</span>);</span><br><span class=\"line\">    s.type = <span class=\"string\">'text/javascript'</span>;</span><br><span class=\"line\">    s.async = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    s.src = <span class=\"string\">'http://yourdomain.com/script.js'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> x = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">'script'</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">    x.parentNode.insertBefore(s, x);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n<p>异步加载又叫非阻塞，浏览器在下载执行 js 同时，还会继续进行后续页面的处理。<br>这种方法是在页面中<code>&lt;script&gt;</code>标签内，用 js 创建一个<code>script</code>元素并插入到<code>document</code>中。这样就做到了非阻塞的下载 js 代码。<br>async属性是HTML5中新增的异步支持，见后文解释，加上好（不加也不影响）。<br>此方法被称为 Script DOM Element 法，不要求 js 同源。<br>将js代码包裹在匿名函数中并立即执行的方式是为了保护变量名泄露到外部可见，这是很常见的方式，尤其是在 js 库中被普遍使用。<br>例如 Google Analytics 和 Google+ Badge 都使用了这种异步加载代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">var</span> ga = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'script'</span>); ga.type = <span class=\"string\">'text/javascript'</span>; ga.async = <span class=\"literal\">true</span>;</span><br><span class=\"line\">     ga.src = (<span class=\"string\">'https:'</span> == <span class=\"built_in\">document</span>.location.protocol ? <span class=\"string\">'https://ssl'</span> : <span class=\"string\">'http://www'</span>) + <span class=\"string\">'.google-analytics.com/ga.js'</span>;</span><br><span class=\"line\">     <span class=\"keyword\">var</span> s = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">'script'</span>)[<span class=\"number\">0</span>]; s.parentNode.insertBefore(ga, s);</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\"></span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span><br><span class=\"line\">    </span>&#123;<span class=\"keyword\">var</span> po = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"script\"</span>);</span><br><span class=\"line\">    po.type = <span class=\"string\">\"text/javascript\"</span>; po.async = <span class=\"literal\">true</span>;po.src = <span class=\"string\">\"https://apis.google.com/js/plusone.js\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> s = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">\"script\"</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">    s.parentNode.insertBefore(po, s);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n<p>但是，这种加载方式在加载执行完之前会阻止 onload 事件的触发，而现在很多页面的代码都在 onload 时还要执行额外的渲染工作等，所以还是会阻塞部分页面的初始化处理。</p>\n<h3 id=\"3-onload-时的异步加载\"><a href=\"#3-onload-时的异步加载\" class=\"headerlink\" title=\"3. onload 时的异步加载\"></a>3. onload 时的异步加载</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">     <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">async_load</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">         <span class=\"keyword\">var</span> s = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'script'</span>);</span><br><span class=\"line\">         s.type = <span class=\"string\">'text/javascript'</span>;</span><br><span class=\"line\">         s.async = <span class=\"literal\">true</span>;</span><br><span class=\"line\">         s.src = <span class=\"string\">'http://yourdomain.com/script.js'</span>;</span><br><span class=\"line\">         <span class=\"keyword\">var</span> x = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">'script'</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">         x.parentNode.insertBefore(s, x);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (<span class=\"built_in\">window</span>.attachEvent)</span><br><span class=\"line\">         <span class=\"built_in\">window</span>.attachEvent(<span class=\"string\">'onload'</span>, async_load);</span><br><span class=\"line\">     <span class=\"keyword\">else</span></span><br><span class=\"line\">         <span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'load'</span>, async_load, <span class=\"literal\">false</span>);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n<p>这和前面的方式差不多，但关键是它不是立即开始异步加载 js ，而是在 onload 时才开始异步加载。这样就解决了阻塞 onload 事件触发的问题。<br>补充：DOMContentLoaded 与 OnLoad 事件<br>DOMContentLoaded : 页面(document)已经解析完成，页面中的dom元素已经可用。但是页面中引用的图片、subframe可能还没有加载完。<br>OnLoad：页面的所有资源都加载完毕（包括图片）。浏览器的载入进度在这时才停止。<br>这两个时间点将页面加载的timeline分成了三个阶段。</p>\n<h3 id=\"4-异步加载的其它方法\"><a href=\"#4-异步加载的其它方法\" class=\"headerlink\" title=\"4.异步加载的其它方法\"></a>4.异步加载的其它方法</h3><p>由于Javascript的动态特性，还有很多异步加载方法：</p>\n<ul>\n<li>XHR Eval</li>\n<li>XHR Injection</li>\n<li>Script in Iframe</li>\n<li>Script Defer</li>\n<li>document.write Script Tag</li>\n</ul>\n<p>还有一种方法是用 setTimeout 延迟0秒 与 其它方法组合。<br>XHR Eval ：通过 ajax 获取js的内容，然后 eval 执行。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> xhrObj = getXHRObject(); </span><br><span class=\"line\"> xhrObj.onreadystatechange =  </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;  </span><br><span class=\"line\">     <span class=\"keyword\">if</span> ( xhrObj.readyState != <span class=\"number\">4</span> ) <span class=\"keyword\">return</span>; </span><br><span class=\"line\">     <span class=\"built_in\">eval</span>(xhrObj.responseText); </span><br><span class=\"line\">   &#125;; </span><br><span class=\"line\"> xhrObj.open(<span class=\"string\">'GET'</span>, <span class=\"string\">'A.js'</span>, <span class=\"literal\">true</span>); </span><br><span class=\"line\"> xhrObj.send(<span class=\"string\">''</span>);</span><br></pre></td></tr></table></figure>\n<p>Script in Iframe：创建并插入一个iframe元素，让其异步执行 js 。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'iframe'</span>); </span><br><span class=\"line\"> <span class=\"built_in\">document</span>.body.appendChild(iframe); </span><br><span class=\"line\"> <span class=\"keyword\">var</span> doc = iframe.contentWindow.document; </span><br><span class=\"line\"> doc.open().write(<span class=\"string\">'&lt;body onload=\"insertJS()\"&gt;'</span>); </span><br><span class=\"line\"> doc.close();</span><br></pre></td></tr></table></figure>\n<p>GMail Mobile：页内 js 的内容被注释，所以不会执行，然后在需要的时候，获取script元素中 text 内容，去掉注释后 eval 执行。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt; </span><br><span class=\"line\"> <span class=\"comment\">/* </span><br><span class=\"line\"> var ...  </span><br><span class=\"line\"> */</span> </span><br><span class=\"line\"> &lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<p>详见参考资料中2010年的Velocity 大会 Steve Souders 和淘宝的那两个讲义。</p>\n<h2 id=\"二、async-和-defer-属性\"><a href=\"#二、async-和-defer-属性\" class=\"headerlink\" title=\"二、async 和 defer 属性\"></a>二、async 和 defer 属性</h2><h3 id=\"1-defer-属性\"><a href=\"#1-defer-属性\" class=\"headerlink\" title=\"1. defer 属性\"></a>1. defer 属性</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"file.js\"</span> <span class=\"attr\">defer</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>defer属性声明这个脚本中将不会有 document.write 或 dom 修改。<br>浏览器将会并行下载 file.js 和其它有 defer 属性的script，而不会阻塞页面后续处理。<br>defer属性在IE 4.0中就实现了，超过13年了！Firefox 从 3.5 开始支持defer属性 。</p>\n<p>注：<strong>所有的<code>defer</code>脚本保证是按顺序依次执行的。</strong></p>\n<h3 id=\"2-async-属性\"><a href=\"#2-async-属性\" class=\"headerlink\" title=\"2. async 属性\"></a>2. async 属性</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"file.js\"</span> <span class=\"attr\">async</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>async属性是HTML5新增的。作用和defer类似，但是它将在下载后尽快执行，不能保证脚本会按顺序执行。它们将在onload 事件之前完成。<br>Firefox 3.6、Opera 10.5、IE 9 和 最新的Chrome 和 Safari 都支持 async 属性。可以同时使用 async 和 defer，这样IE 4之后的所有 IE 都支持异步加载。</p>\n<h3 id=\"3-详细解释\"><a href=\"#3-详细解释\" class=\"headerlink\" title=\"3. 详细解释\"></a>3. 详细解释</h3><p><code>&lt;script&gt;</code>标签在 HTML 4.01 与 HTML5 的区别：<br>type 属性在HTML 4中是必须的，在HTML5中是可选的。<br>async 属性是HTML5中新增的。<br>个别属性（xml:space）在HTML5中不支持。</p>\n<p><strong>说明</strong>：<br>没有 async 属性，script 将立即获取（下载）并执行，然后才继续后面的处理，这期间阻塞了浏览器的后续处理。<br>如果有 async 属性，那么 script 将被异步下载并执行，同时浏览器继续后续的处理。<br>HTML4中就有了defer属性，它提示浏览器这个 script 不会产生任何文档元素（没有document.write），因此浏览器会继续后续处理和渲染。<br>如果没有 async 属性 但是有 defer 属性，那么script 将在页面parse之后执行。<br>如果同时设置了二者，那么 defer 属性主要是为了让不支持 async 属性的老浏览器按照原来的 defer 方式处理，而不是同步方式。<br>另参见官方说明：script async</p>\n<blockquote>\n<p>个人补充：<br>既然 HTML5 中已经支持异步加载，为什么还要使用前面推荐的那种麻烦（动态创建 script 元素）的方式？<br>答：为了兼容尚不支持<code>async</code>老浏览器。如果将来所有浏览器都支持了，那么直接在script中加上async 属性是最简单的方式。</p>\n</blockquote>\n<h2 id=\"三、延迟加载（lazy-loading）\"><a href=\"#三、延迟加载（lazy-loading）\" class=\"headerlink\" title=\"三、延迟加载（lazy loading）\"></a>三、延迟加载（lazy loading）</h2><p>前面解决了异步加载（async loading）问题，再谈谈什么是延迟加载。<br>延迟加载：有些 js 代码并不是页面初始化的时候就立刻需要的，而稍后的某些情况才需要的。延迟加载就是一开始并不加载这些暂时不用的js，而是在需要的时候或稍后再通过js 的控制来异步加载。<br>也就是将 js 切分成许多模块，页面初始化时只加载需要立即执行的 js ，然后其它 js 的加载延迟到第一次需要用到的时候再加载。<br>特别是页面有大量不同的模块组成，很多可能暂时不用或根本就没用到。<br>就像图片的延迟加载，在图片出现在可视区域内时（在滚动条下拉）才加载显示图片。</p>\n<h3 id=\"四、script-的两阶段加载-与-延迟执行（lazy-execution）\"><a href=\"#四、script-的两阶段加载-与-延迟执行（lazy-execution）\" class=\"headerlink\" title=\"四、script 的两阶段加载 与 延迟执行（lazy execution）\"></a>四、script 的两阶段加载 与 延迟执行（lazy execution）</h3><p>JS的加载其实是由两阶段组成：下载内容（download bytes）和执行（parse and execute）。<br>浏览器在下载完 js 的内容后就会立即对其解析和执行，不管是同步加载还是异步加载。<br>前面说的异步加载，解决的只是下载阶段的问题，但代码在下载后会立即执行。<br>而浏览器在解析执行 JS 阶段是阻塞任何操作的，这时的浏览器处于无响应状态。<br>我 们都知道通过网络下载 script 需要明显的时间，但容易忽略了第二阶段，解析和执行也是需要时间的。script的解析和执行所花的时间比我们想象的要多，尤其是script 很多很大的时候。有些是需要立刻执行，而有些则不需要（比如只是在展示某个界面或执行某个操作时才需要）。<br>这些script 可以延迟执行，先异步下载缓存起来，但不立即执行，而是在第一次需要的时候执行一次。<br>利用特殊的技巧可以做到 下载 与 执行的分离 (再次感谢 javascript 的动态特性)。比如将 JS 的内容作为 Image或 object 对象加载缓存起来，所以就不会立即执行了，然后在第一次需要的时候再执行。<br>此部分的更多解释 请查看末尾参考资料中 ControlJS 的相关链接。<br>小技巧：</p>\n<h3 id=\"1-模拟较长的下载时间：\"><a href=\"#1-模拟较长的下载时间：\" class=\"headerlink\" title=\"1. 模拟较长的下载时间：\"></a>1. 模拟较长的下载时间：</h3><p>写个后端脚本，让其 sleep 一定时间。如在 jsp 中 Thread.sleep(5000); ，这样5秒后才能收到内容。</p>\n<h3 id=\"2-模拟较长的-js-代码执行时间（因为这步一般比较快不容易观察到）：\"><a href=\"#2-模拟较长的-js-代码执行时间（因为这步一般比较快不容易观察到）：\" class=\"headerlink\" title=\"2. 模拟较长的 js 代码执行时间（因为这步一般比较快不容易观察到）：\"></a>2. 模拟较长的 js 代码执行时间（因为这步一般比较快不容易观察到）：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> t_start = <span class=\"built_in\">Number</span>(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>());</span><br><span class=\"line\"><span class=\"keyword\">while</span> ( t_start + <span class=\"number\">5000</span> &gt; <span class=\"built_in\">Number</span>(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()) ) &#123;&#125;</span><br></pre></td></tr></table></figure>\n<p>这个代码将使 js 执行5秒才能完成！</p>\n<h2 id=\"五、script-标签使用的历史\"><a href=\"#五、script-标签使用的历史\" class=\"headerlink\" title=\"五、script 标签使用的历史\"></a>五、script 标签使用的历史</h2><h3 id=\"1-script-放在-HEAD-中\"><a href=\"#1-script-放在-HEAD-中\" class=\"headerlink\" title=\"1. script 放在 HEAD 中\"></a>1. script 放在 HEAD 中</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">“…”</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>阻止了后续的下载；<br>在IE 6-7 中 script 是顺序下载的，而不是现在的 “并行下载、顺序执行” 的方式；<br>在下载和解析执行阶段阻止渲染（rendering）；</p>\n<h3 id=\"2-script-放在页面底部（2007）\"><a href=\"#2-script-放在页面底部（2007）\" class=\"headerlink\" title=\"2. script 放在页面底部（2007）\"></a>2. script 放在页面底部（2007）</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">“…”</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>不阻止其它下载；<br>在IE 6-7 中 script 是顺序下载的；<br>在下载和解析执行阶段阻止渲染（rendering）；</p>\n<h3 id=\"3-异步加载script（2009）\"><a href=\"#3-异步加载script（2009）\" class=\"headerlink\" title=\"3. 异步加载script（2009）\"></a>3. 异步加载script（2009）</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> se = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'script'</span>);</span><br><span class=\"line\">se.src = <span class=\"string\">'http://anydomain.com/A.js'</span>;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">'head'</span>)[<span class=\"number\">0</span>].appendChild(se);</span><br></pre></td></tr></table></figure>\n<p>这就是本文主要说的方式。<br>不阻止其它下载；<br>在所有浏览器中，script都是并行下载；<br>只在解析执行阶段阻止渲染（rendering）；</p>\n<h3 id=\"4-异步下载-按需执行-2010\"><a href=\"#4-异步下载-按需执行-2010\" class=\"headerlink\" title=\"4. 异步下载 + 按需执行 (2010)\"></a>4. 异步下载 + 按需执行 (2010)</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> se = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\">se.onload = registerScript();</span><br><span class=\"line\">se.src = <span class=\"string\">'http://anydomain.com/A.js'</span>;</span><br></pre></td></tr></table></figure>\n<p> 把下载 js 与 解析执行 js 分离出来<br>不阻止其它下载；<br>在所有浏览器中，script都是并行下载；<br>不阻止渲染（rendering）直到真正需要时；</p>\n<h2 id=\"六、异步加载的问题\"><a href=\"#六、异步加载的问题\" class=\"headerlink\" title=\"六、异步加载的问题\"></a>六、异步加载的问题</h2><p>在异步加载的时候，无法使用 document.write 输出文档内容。<br>在同步模式下，document.write 是在当前 script 所在的位置输 出文档的。而在异步模式下，浏览器继续处理后续页面内容，根本无法确定 document.write 应该输出到什么位置，所以异步模式下 document.write 不可行。而到了页面已经 onload 之后，再执行 document.write 将导致当前页面的内容被清空，因为它会自动触发 document.open 方法。<br>实际上document.write的名声并不好，最好少用。<br>替代方法：</p>\n<ol>\n<li>虽然异步加载不能用 document.write，但还是可以onload之后执行操作dom（创建dom或修改dom）的，这样可以实现一些自己的动态输出。比如要在页面异步创建一个浮动元素，这和它在页面中的位置就没关系了，只要创建出该dom元素添加到 document 中即可。</li>\n<li>如果需要在固定位置异步生成元素的内容，那么可以在该固定位置设置一个dom元素作为目标，这样就知道位置了，异步加载之后就可以对这个元素进行修改。</li>\n</ol>\n<h2 id=\"六、JS-模块化管理\"><a href=\"#六、JS-模块化管理\" class=\"headerlink\" title=\"六、JS 模块化管理\"></a>六、JS 模块化管理</h2><p>异步加载，需要将所有 js 内容按模块化的方式来切分组织，其中就存在依赖关系，而异步加载不保证执行顺序。<br>另外，namespace 如何管理 等相关问题。这部分已超出本文内容，可参考：<br>RequireJS 、 CommonJS 以及 王保平(淘宝)的 SeaJS 及其博客 。</p>\n<h2 id=\"七、JS最佳实践\"><a href=\"#七、JS最佳实践\" class=\"headerlink\" title=\"七、JS最佳实践\"></a>七、JS最佳实践</h2><ol>\n<li>最小化 js 文件，利用压缩工具将其最小化，同时开启http gzip压缩。工具：</li>\n<li>尽量不要放在 <head> 中，尽量放在页面底部，最好是<code>&lt;/body&gt;</code>之前的位置</li>\n<li>避免使用 document.write 方法</li>\n<li>异步加载 js ，使用非阻塞方式，就是此文内容。</li>\n<li>尽量不直接在页面元素上使用 Inline Javascript，如onClick 。有利于统一维护和缓存处理。</li>\n</ol>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"http://friendlybit.com/js/lazy-loading-asyncronous-javascript/\">Lazy Loading Asyncronous Javascript</a></li>\n<li><a href=\"http://www.sitepoint.com/non-blocking-async-defer/\">Load Non-blocking JavaScript with HTML5 Async and Defer</a></li>\n<li>2010年 Velocity China 上的两个讲义：<ul>\n<li>Steve Souders(Google)的 <a href=\"http://velocity.oreilly.com.cn/2010/ppts/velocity-efws-20101208SteveSoudersEvenFaster.pdf\">Even Faster Web Sites</a> (pdf)</li>\n<li>李穆(淘宝)的 <a href=\"http://velocity.oreilly.com.cn/2010/ppts/limufromTaobao.pdf\">第三方广告代码稳定性和性能优化实战</a> (pdf)]</li>\n</ul>\n</li>\n</ul>"},{"title":"MySql data analysis notes","date":"2016-08-07T16:00:00.000Z","_content":"\n## Statics by day\n\n```sql\nSELECT date_format(time, \"%Y-%m-%d\"), COUNT(*) FROM zika_news.news_entry GROUP BY date_format(time, \"%Y-%m-%d\");\n```\n\nWhere ``time`` is the field in your data table, which its data type is ``DateTime``. ``%Y-%m-%d`` means **Year-Month-Day**.\n\n###### View Output\n|date_format(time, \"\"%Y-%m-%d\"\")|count(*)|\n|-------------------------------|--------|\n|2016-08-05|352|\n|2016-08-06|179|\n|2016-08-08|61|\n","source":"_posts/mysql_analysis.md","raw":"---\ntitle: MySql data analysis notes\ntags: [mysql, BI, data analysis]\ndate: 2016-8-8\n---\n\n## Statics by day\n\n```sql\nSELECT date_format(time, \"%Y-%m-%d\"), COUNT(*) FROM zika_news.news_entry GROUP BY date_format(time, \"%Y-%m-%d\");\n```\n\nWhere ``time`` is the field in your data table, which its data type is ``DateTime``. ``%Y-%m-%d`` means **Year-Month-Day**.\n\n###### View Output\n|date_format(time, \"\"%Y-%m-%d\"\")|count(*)|\n|-------------------------------|--------|\n|2016-08-05|352|\n|2016-08-06|179|\n|2016-08-08|61|\n","slug":"mysql_analysis","published":1,"updated":"2016-08-07T20:00:38.662Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirm86ggb000150v432dpsmq2","content":"<h2 id=\"Statics-by-day\"><a href=\"#Statics-by-day\" class=\"headerlink\" title=\"Statics by day\"></a>Statics by day</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">date_format</span>(<span class=\"keyword\">time</span>, <span class=\"string\">\"%Y-%m-%d\"</span>), <span class=\"keyword\">COUNT</span>(*) <span class=\"keyword\">FROM</span> zika_news.news_entry <span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">date_format</span>(<span class=\"keyword\">time</span>, <span class=\"string\">\"%Y-%m-%d\"</span>);</span><br></pre></td></tr></table></figure>\n<p>Where <code>time</code> is the field in your data table, which its data type is <code>DateTime</code>. <code>%Y-%m-%d</code> means <strong>Year-Month-Day</strong>.</p>\n<h6 id=\"View-Output\"><a href=\"#View-Output\" class=\"headerlink\" title=\"View Output\"></a>View Output</h6><table>\n<thead>\n<tr>\n<th>date_format(time, “”%Y-%m-%d””)</th>\n<th>count(*)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2016-08-05</td>\n<td>352</td>\n</tr>\n<tr>\n<td>2016-08-06</td>\n<td>179</td>\n</tr>\n<tr>\n<td>2016-08-08</td>\n<td>61</td>\n</tr>\n</tbody>\n</table>\n","excerpt":"","more":"<h2 id=\"Statics-by-day\"><a href=\"#Statics-by-day\" class=\"headerlink\" title=\"Statics by day\"></a>Statics by day</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">date_format</span>(<span class=\"keyword\">time</span>, <span class=\"string\">\"%Y-%m-%d\"</span>), <span class=\"keyword\">COUNT</span>(*) <span class=\"keyword\">FROM</span> zika_news.news_entry <span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">date_format</span>(<span class=\"keyword\">time</span>, <span class=\"string\">\"%Y-%m-%d\"</span>);</span><br></pre></td></tr></table></figure>\n<p>Where <code>time</code> is the field in your data table, which its data type is <code>DateTime</code>. <code>%Y-%m-%d</code> means <strong>Year-Month-Day</strong>.</p>\n<h6 id=\"View-Output\"><a href=\"#View-Output\" class=\"headerlink\" title=\"View Output\"></a>View Output</h6><table>\n<thead>\n<tr>\n<th>date_format(time, “”%Y-%m-%d””)</th>\n<th>count(*)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2016-08-05</td>\n<td>352</td>\n</tr>\n<tr>\n<td>2016-08-06</td>\n<td>179</td>\n</tr>\n<tr>\n<td>2016-08-08</td>\n<td>61</td>\n</tr>\n</tbody>\n</table>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cipnbu3by00008gv4gunzlro5","tag_id":"cipnbu3cq00048gv4fy83k5ar","_id":"cipnbu3ec000g8gv4a5b5wb6y"},{"post_id":"cipnbu3by00008gv4gunzlro5","tag_id":"cipnbu3d500078gv4a3pow2o2","_id":"cipnbu3ei000i8gv49hqwvjqn"},{"post_id":"cipnbu3by00008gv4gunzlro5","tag_id":"cipnbu3dt000b8gv4wvw87veo","_id":"cipnbu3en000l8gv4ksjnekq3"},{"post_id":"cipnbu3cf00028gv4mlva8zez","tag_id":"cipnbu3e7000e8gv4sldy9x9i","_id":"cipnbu3ey000q8gv48lb8de9q"},{"post_id":"cipnbu3cf00028gv4mlva8zez","tag_id":"cipnbu3ej000j8gv4yww8jd0s","_id":"cipnbu3ez000r8gv4hm2qdnow"},{"post_id":"cipnbu3cf00028gv4mlva8zez","tag_id":"cipnbu3er000n8gv4kx03xj2k","_id":"cipnbu3f1000t8gv4supmqp92"},{"post_id":"cipnbu3cw00058gv4bxacdl1j","tag_id":"cipnbu3ew000p8gv4xipb3d41","_id":"cipnbu3f4000v8gv40wt8zkdg"},{"post_id":"cipnbu3cw00058gv4bxacdl1j","tag_id":"cipnbu3dt000b8gv4wvw87veo","_id":"cipnbu3f5000w8gv44z4drf5r"},{"post_id":"cipnbu3d200068gv4ie1t6l9n","tag_id":"cipnbu3ej000j8gv4yww8jd0s","_id":"cipnbu3f8000z8gv4jrunhpxh"},{"post_id":"cipnbu3d200068gv4ie1t6l9n","tag_id":"cipnbu3f5000x8gv4tvoawt1v","_id":"cipnbu3f800108gv4azdgddbz"},{"post_id":"cipnbu3d700088gv4hp9ms8c0","tag_id":"cipnbu3f7000y8gv4ywyjhxfm","_id":"cipnbu3fh00168gv4myk0q8tw"},{"post_id":"cipnbu3d700088gv4hp9ms8c0","tag_id":"cipnbu3ej000j8gv4yww8jd0s","_id":"cipnbu3fi00178gv4oul3akqb"},{"post_id":"cipnbu3d700088gv4hp9ms8c0","tag_id":"cipnbu3er000n8gv4kx03xj2k","_id":"cipnbu3fj00198gv41g39rmb0"},{"post_id":"cipnbu3d700088gv4hp9ms8c0","tag_id":"cipnbu3fe00148gv4u6b9kscf","_id":"cipnbu3fm001c8gv4pgfwjwmx"},{"post_id":"cipnbu3da00098gv43vo9i545","tag_id":"cipnbu3ff00158gv4ys4vdovx","_id":"cipnbu3fr001g8gv4sftppmi0"},{"post_id":"cipnbu3da00098gv43vo9i545","tag_id":"cipnbu3dt000b8gv4wvw87veo","_id":"cipnbu3fs001h8gv4imb2npja"},{"post_id":"cipnbu3da00098gv43vo9i545","tag_id":"cipnbu3f5000x8gv4tvoawt1v","_id":"cipnbu3fu001j8gv4e3c8cj1a"},{"post_id":"cipnbu3da00098gv43vo9i545","tag_id":"cipnbu3fn001d8gv42x9u8tnr","_id":"cipnbu3fu001k8gv4melcxhj9"},{"post_id":"cipnbu3da00098gv43vo9i545","tag_id":"cipnbu3ej000j8gv4yww8jd0s","_id":"cipnbu3fv001m8gv49w0vtrea"},{"post_id":"cipnbu3dl000a8gv4817wf7pf","tag_id":"cipnbu3ej000j8gv4yww8jd0s","_id":"cipnbu3gc001r8gv49vf6f6r6"},{"post_id":"cipnbu3dl000a8gv4817wf7pf","tag_id":"cipnbu3ff00158gv4ys4vdovx","_id":"cipnbu3gc001s8gv4pnlgpqra"},{"post_id":"cipnbu3dl000a8gv4817wf7pf","tag_id":"cipnbu3fu001l8gv4xu73v37y","_id":"cipnbu3ge001u8gv438p68mkj"},{"post_id":"cipnbu3dl000a8gv4817wf7pf","tag_id":"cipnbu3g0001n8gv4v01011zh","_id":"cipnbu3gf001v8gv4am9hcoce"},{"post_id":"cipnbu3dl000a8gv4817wf7pf","tag_id":"cipnbu3g2001o8gv4xgcwik7b","_id":"cipnbu3gh001x8gv4m0rnjxo6"},{"post_id":"cipnbu3dl000a8gv4817wf7pf","tag_id":"cipnbu3g7001p8gv4y3pk2pjq","_id":"cipnbu3gi001y8gv48icy16u1"},{"post_id":"cipnbu3dy000c8gv4amwly6jw","tag_id":"cipnbu3ga001q8gv43triidh1","_id":"cipnbu3gk00208gv45u8ns3av"},{"post_id":"cipnbu3dy000c8gv4amwly6jw","tag_id":"cipnbu3gd001t8gv48r24yc25","_id":"cipnbu3gk00218gv4oocojfkd"},{"post_id":"cipnbu3dy000c8gv4amwly6jw","tag_id":"cipnbu3f5000x8gv4tvoawt1v","_id":"cipnbu3gm00238gv4g01qvn7b"},{"post_id":"cipnbu3e3000d8gv4kfmc7qv3","tag_id":"cipnbu3gi001z8gv432bp825b","_id":"cipnbu3gu00278gv4mk6ws9v5"},{"post_id":"cipnbu3e3000d8gv4kfmc7qv3","tag_id":"cipnbu3ej000j8gv4yww8jd0s","_id":"cipnbu3gu00288gv4sy1tzqtt"},{"post_id":"cipnbu3e3000d8gv4kfmc7qv3","tag_id":"cipnbu3gn00248gv4z4bqmvra","_id":"cipnbu3gw002a8gv4ga98epij"},{"post_id":"cipnbu3e3000d8gv4kfmc7qv3","tag_id":"cipnbu3gp00258gv4ymaf8ssi","_id":"cipnbu3gx002b8gv4ygc4zfuu"},{"post_id":"cipnbu3ea000f8gv4mv2zzqv1","tag_id":"cipnbu3gq00268gv4kdtueb39","_id":"cipnbu3h4002d8gv4dvdrie5o"},{"post_id":"cipnbu3ea000f8gv4mv2zzqv1","tag_id":"cipnbu3f5000x8gv4tvoawt1v","_id":"cipnbu3h5002e8gv4k75g57u3"},{"post_id":"cipnbu3eg000h8gv4oob3mwty","tag_id":"cipnbu3ej000j8gv4yww8jd0s","_id":"cipnbu3hb002j8gv4fgqf5u5i"},{"post_id":"cipnbu3eg000h8gv4oob3mwty","tag_id":"cipnbu3dt000b8gv4wvw87veo","_id":"cipnbu3hc002k8gv4tywb1h40"},{"post_id":"cipnbu3eg000h8gv4oob3mwty","tag_id":"cipnbu3h6002f8gv4u7n6rpub","_id":"cipnbu3hd002m8gv4xlmec65w"},{"post_id":"cipnbu3eg000h8gv4oob3mwty","tag_id":"cipnbu3h7002g8gv4lh1u6ien","_id":"cipnbu3he002n8gv4cek635yp"},{"post_id":"cipnbu3eg000h8gv4oob3mwty","tag_id":"cipnbu3gi001z8gv432bp825b","_id":"cipnbu3hg002p8gv44gqrfltw"},{"post_id":"cipnbu3ek000k8gv48bqdyz4p","tag_id":"cipnbu3ej000j8gv4yww8jd0s","_id":"cipnbu3hi002r8gv4vihis11q"},{"post_id":"cipnbu3ek000k8gv48bqdyz4p","tag_id":"cipnbu3hc002l8gv4984xk4cq","_id":"cipnbu3hi002s8gv4mfp8qr0g"},{"post_id":"cipnbu3ek000k8gv48bqdyz4p","tag_id":"cipnbu3dt000b8gv4wvw87veo","_id":"cipnbu3hk002u8gv4muu2tp50"},{"post_id":"cipnbu3ek000k8gv48bqdyz4p","tag_id":"cipnbu3hf002o8gv4r6ig5omf","_id":"cipnbu3hl002v8gv4p58hsh5s"},{"post_id":"cipnbu3eo000m8gv4t6bbf15s","tag_id":"cipnbu3ej000j8gv4yww8jd0s","_id":"cipnbu3hn002x8gv4rm9sy4nb"},{"post_id":"cipnbu3eo000m8gv4t6bbf15s","tag_id":"cipnbu3ff00158gv4ys4vdovx","_id":"cipnbu3ho002y8gv4beqcbr5f"},{"post_id":"cipnbu3eo000m8gv4t6bbf15s","tag_id":"cipnbu3hj002t8gv4h8jlpx9w","_id":"cipnbu3ho002z8gv49y2s1ybe"},{"post_id":"cipnbu3es000o8gv47rlpfgyn","tag_id":"cipnbu3hl002w8gv4hwxhxx1z","_id":"cipnbu3hp00308gv4felggmiv"},{"post_id":"cipnbu3es000o8gv47rlpfgyn","tag_id":"cipnbu3cq00048gv4fy83k5ar","_id":"cipnbu3hq00318gv4qicw6eix"},{"post_id":"cipnjencz0000sgv4k11rnh9a","tag_id":"cipnjene20001sgv4ucznvtbg","_id":"cipnjenfo0003sgv4afnucb74"},{"post_id":"cipnjencz0000sgv4k11rnh9a","tag_id":"cipnjenfi0002sgv4wml7noxk","_id":"cipnjenfq0004sgv4xo7fnj2b"},{"post_id":"cipo6c9fr0000usv42x817bmz","tag_id":"cipo6c9gq0001usv44f8edd96","_id":"cipo6c9ha0003usv41vievjhl"},{"post_id":"cipo6c9fr0000usv42x817bmz","tag_id":"cipo6c9h70002usv4ftfz8hic","_id":"cipo6c9hb0004usv4ena8vf4g"},{"post_id":"cipo6c9fr0000usv42x817bmz","tag_id":"cipnbu3ej000j8gv4yww8jd0s","_id":"cipo6c9hd0005usv41sfa4ckt"},{"post_id":"cipo6c9fr0000usv42x817bmz","tag_id":"cipnbu3er000n8gv4kx03xj2k","_id":"cipo6c9he0006usv4hs91u9n7"},{"post_id":"cipo6c9fr0000usv42x817bmz","tag_id":"cipo8yokm00006ov4o7gjerxy","_id":"cipo8yol200016ov4jba6myua"},{"post_id":"cippgdo580000asv4dml6m6yz","tag_id":"cippgdo6w0001asv427a157da","_id":"cippgdo7u0002asv4c1qkpqgx"},{"post_id":"cipnbu3d700088gv4hp9ms8c0","tag_id":"cippgdo6w0001asv427a157da","_id":"cippgdo990003asv4454l89f7"},{"post_id":"cips22v7q0000owv4xy8uxgcx","tag_id":"cipnbu3ej000j8gv4yww8jd0s","_id":"cips22vaw0003owv4utktyn4u"},{"post_id":"cips22v7q0000owv4xy8uxgcx","tag_id":"cipnbu3fn001d8gv42x9u8tnr","_id":"cips22vax0004owv41gqel3r7"},{"post_id":"cips22v7q0000owv4xy8uxgcx","tag_id":"cips22v9k0001owv4qqsdy7np","_id":"cips22vaz0005owv4qqmp0kli"},{"post_id":"cips22v7q0000owv4xy8uxgcx","tag_id":"cipnbu3fu001l8gv4xu73v37y","_id":"cips22vb00006owv4g9x1etq6"},{"post_id":"cips22v7q0000owv4xy8uxgcx","tag_id":"cips22vaq0002owv4a617y3dk","_id":"cips22vb30007owv4y6fbks08"},{"post_id":"cipsiqnq500006gv4kbq7u9zb","tag_id":"cipsiqnqr00016gv4w25xfq5s","_id":"cipsiqns700036gv48idaq07j"},{"post_id":"cipsiqnq500006gv4kbq7u9zb","tag_id":"cipsiqns000026gv4euokzips","_id":"cipsiqns900046gv4ekdlaji4"},{"post_id":"cipted0f10000hcv413nrj5vp","tag_id":"cipted0gj0001hcv4ndin1b4l","_id":"cipted0hc0003hcv4e1g3mrzs"},{"post_id":"cipted0f10000hcv413nrj5vp","tag_id":"cipted0h80002hcv4td3jdht1","_id":"cipted0hd0004hcv429cnllaw"},{"post_id":"cipv59q5q0000dsv4730n3aef","tag_id":"cipnbu3ej000j8gv4yww8jd0s","_id":"cipv59qbe0002dsv4r1b8q57l"},{"post_id":"cipv59q5q0000dsv4730n3aef","tag_id":"cipv59q8j0001dsv456jsedgd","_id":"cipv59qbi0003dsv4z8coiemb"},{"post_id":"cipv59q5q0000dsv4730n3aef","tag_id":"cipnbu3ff00158gv4ys4vdovx","_id":"cipv5opts00002sv4xunwcwdw"},{"post_id":"cipw1vb240000a4v42cmbx3r2","tag_id":"cipnbu3dt000b8gv4wvw87veo","_id":"cipw1vb430003a4v46midwhjd"},{"post_id":"cipw1vb240000a4v42cmbx3r2","tag_id":"cipw1vb3a0001a4v4dk8ph5p3","_id":"cipw1vb440004a4v4pozc28jy"},{"post_id":"cipw1vb240000a4v42cmbx3r2","tag_id":"cipw1vb3y0002a4v4vitqe7kg","_id":"cipw1vb450005a4v41jbkkxne"},{"post_id":"cir3jql4z0000jkv4kp9zk67v","tag_id":"cir3jql6l0001jkv4870qce4v","_id":"cir3jql7m0004jkv4qc61slq6"},{"post_id":"cir3jql4z0000jkv4kp9zk67v","tag_id":"cir3jql7d0002jkv4x3jwg7jt","_id":"cir3jql7o0005jkv4wco8y6se"},{"post_id":"cir3jql4z0000jkv4kp9zk67v","tag_id":"cir3jql7i0003jkv4cssatcvd","_id":"cir3jql7o0006jkv4zvzkb96f"},{"post_id":"cir9j70jz0000dwv4u851lrv2","tag_id":"cipnbu3ew000p8gv4xipb3d41","_id":"cir9j70mn0002dwv4uogk05zn"},{"post_id":"cir9j70jz0000dwv4u851lrv2","tag_id":"cir9j70ln0001dwv4lp0p0jwb","_id":"cir9j70mp0003dwv4ktswsfuj"},{"post_id":"cirat70p20000pcv44kxd9hso","tag_id":"cirat70q30001pcv4wixu4wjp","_id":"cirat70rz0003pcv4hhg4k6vc"},{"post_id":"cirat70p20000pcv44kxd9hso","tag_id":"cirat70rv0002pcv4e97outl3","_id":"cirat70s10004pcv4hwx0fv1w"},{"post_id":"cirat70p20000pcv44kxd9hso","tag_id":"cipnbu3dt000b8gv4wvw87veo","_id":"cirat70s20005pcv4zbenll3s"},{"post_id":"cirat70p20000pcv44kxd9hso","tag_id":"ciravzxky0000yov4azcz62ho","_id":"ciravzxln0001yov4zk4plaqa"},{"post_id":"cire2rihe0000y8v4oja7laby","tag_id":"cippgdo6w0001asv427a157da","_id":"cire2rij80002y8v42dgox7pw"},{"post_id":"cire2riiv0001y8v46ro3pinw","tag_id":"cire2rija0003y8v4fdxzhkvp","_id":"cire2rikl0005y8v4dbg8phzs"},{"post_id":"cire2riiv0001y8v46ro3pinw","tag_id":"cire2rikf0004y8v4a3tzemer","_id":"cire2rikl0006y8v4c8akhzw3"},{"post_id":"cipnbu3by00008gv4gunzlro5","tag_id":"cirexg8k00000q0v4cogq8d4c","_id":"cirexg8mk0002q0v4r4wvvikm"},{"post_id":"cipnbu3da00098gv43vo9i545","tag_id":"cipv59q8j0001dsv456jsedgd","_id":"cirexg8mu0003q0v4sk8gej4g"},{"post_id":"cir9hv5ye00007sv427d02qla","tag_id":"cipnbu3f5000x8gv4tvoawt1v","_id":"cirexg8n70005q0v4osipttd2"},{"post_id":"cir9hv5ye00007sv427d02qla","tag_id":"cirexg8m40001q0v4zkv5wps1","_id":"cirexg8nj0006q0v4ux3z5uoo"},{"post_id":"cire2riiv0001y8v46ro3pinw","tag_id":"cipnbu3ej000j8gv4yww8jd0s","_id":"cirexg8nz0008q0v4eh0v2hds"},{"post_id":"cire2riiv0001y8v46ro3pinw","tag_id":"cipnbu3ew000p8gv4xipb3d41","_id":"cirexg8oa0009q0v4u47c643q"},{"post_id":"cipnbu3dy000c8gv4amwly6jw","tag_id":"cipnbu3cq00048gv4fy83k5ar","_id":"cirexg8on000bq0v41iiryz44"},{"post_id":"cipw1vb240000a4v42cmbx3r2","tag_id":"cirexg8n30004q0v4hxm8k39j","_id":"cirexg8p1000cq0v4n0aa3a8r"},{"post_id":"cipv59q5q0000dsv4730n3aef","tag_id":"cirexg8nu0007q0v4kvn0yoj2","_id":"cirexg8pk000eq0v4ej3a6s4z"},{"post_id":"cipnjencz0000sgv4k11rnh9a","tag_id":"cipnbu3dt000b8gv4wvw87veo","_id":"cirexg8pl000fq0v49pkv9v39"},{"post_id":"cir3jql4z0000jkv4kp9zk67v","tag_id":"cipnbu3cq00048gv4fy83k5ar","_id":"cirexg8po000hq0v4ghufc73d"},{"post_id":"ciqc9c1d70000c0v4x402iu0j","tag_id":"cirexg8oi000aq0v4eh6twyhj","_id":"cirexg8pp000iq0v4co1brc4k"},{"post_id":"ciqc9c1d70000c0v4x402iu0j","tag_id":"cipnbu3cq00048gv4fy83k5ar","_id":"cirexg8pz000kq0v4wq5km6v0"},{"post_id":"cipnbu3e3000d8gv4kfmc7qv3","tag_id":"cirexg8pc000dq0v4fa5trq9p","_id":"cirexg8q0000lq0v4xmhxb5y0"},{"post_id":"cipnbu3e3000d8gv4kfmc7qv3","tag_id":"cirexg8pm000gq0v4j0zxtmsv","_id":"cirexg8q5000nq0v4ksa51ywq"},{"post_id":"cipnbu3ea000f8gv4mv2zzqv1","tag_id":"cirexg8pc000dq0v4fa5trq9p","_id":"cirexg8q6000oq0v4x8cyifgd"},{"post_id":"cipted0f10000hcv413nrj5vp","tag_id":"cirexg8q0000mq0v4uu376inr","_id":"cirexg8qe000rq0v4ye2fa0cr"},{"post_id":"cipted0f10000hcv413nrj5vp","tag_id":"cirexg8q7000pq0v4wrhg65bb","_id":"cirexg8qf000sq0v48y4z6cji"},{"post_id":"cipted0f10000hcv413nrj5vp","tag_id":"cirexg8q9000qq0v475dz9mb5","_id":"cirexg8qg000tq0v4bfts4p5h"},{"post_id":"cipnbu3eo000m8gv4t6bbf15s","tag_id":"cipnbu3dt000b8gv4wvw87veo","_id":"cirexg8s2000uq0v4yh1r6eb8"},{"post_id":"cirfgfxfy0000mwv467iktamx","tag_id":"cirfgfxiu0002mwv4dzeqrktr","_id":"cirfgfxj30004mwv4qns2q9kx"},{"post_id":"cirfgfxfy0000mwv467iktamx","tag_id":"cippgdo6w0001asv427a157da","_id":"cirfglor70000tkv4yasn2tqs"},{"post_id":"cire2rihe0000y8v4oja7laby","tag_id":"cirfgfxiu0002mwv4dzeqrktr","_id":"cirfglord0001tkv4kjhyti2j"},{"post_id":"cirgqpn0p0000i0v4ddn1f7jd","tag_id":"cippgdo6w0001asv427a157da","_id":"cirgqpn1n0002i0v452j1g06n"},{"post_id":"cirgqpn0p0000i0v4ddn1f7jd","tag_id":"cirfgfxiu0002mwv4dzeqrktr","_id":"cirgqpn2t0004i0v47k4kk8yw"},{"post_id":"cirgqpn190001i0v4j9p07q8j","tag_id":"cirgqpn1q0003i0v4n01cg9xx","_id":"cirgqpn2z0006i0v4ttai71g8"},{"post_id":"cirgqpn190001i0v4j9p07q8j","tag_id":"cirgqpn2w0005i0v489zmp11g","_id":"cirgqpn300007i0v4oc4u75hz"},{"post_id":"cippgdo580000asv4dml6m6yz","tag_id":"cirgqpn6n0008i0v4ar449tmm","_id":"cirgqpn6r0009i0v4riap0yic"},{"post_id":"cirkaum120000psv4yemq3azu","tag_id":"cipnbu3ej000j8gv4yww8jd0s","_id":"cirkaum600006psv4vbqu4rfd"},{"post_id":"cirkaum120000psv4yemq3azu","tag_id":"cirkaum2p0002psv4bcfdlgls","_id":"cirkaum610007psv47xpt4zzn"},{"post_id":"cirkaum120000psv4yemq3azu","tag_id":"cirkaum570003psv4jfpdgogf","_id":"cirkaum650009psv41ychym5f"},{"post_id":"cirkaum120000psv4yemq3azu","tag_id":"cirkaum5i0004psv46q0spjlo","_id":"cirkaum65000apsv4h2wgz7el"},{"post_id":"cirkaum1y0001psv4of8lpynd","tag_id":"cirkaum5n0005psv4epxd46ne","_id":"cirkaum6n000cpsv4vfxuuuv4"},{"post_id":"cirkaum1y0001psv4of8lpynd","tag_id":"cipnbu3g2001o8gv4xgcwik7b","_id":"cirkaum6n000dpsv4d1l1hcuq"},{"post_id":"cirkaum1y0001psv4of8lpynd","tag_id":"cirkaum620008psv4htz6db3c","_id":"cirkaum6p000epsv4758st8ov"},{"post_id":"cirkaum1y0001psv4of8lpynd","tag_id":"cirkaum570003psv4jfpdgogf","_id":"cirkaum6s000fpsv4dlghepzh"},{"post_id":"cirm86gfo000050v4jq698oe2","tag_id":"cirexg8pc000dq0v4fa5trq9p","_id":"cirm86gia000450v43ffg72rj"},{"post_id":"cirm86gfo000050v4jq698oe2","tag_id":"cirm86ggp000250v405bazfd4","_id":"cirm86gib000550v4ipyk9mq4"},{"post_id":"cirm86ggb000150v432dpsmq2","tag_id":"cirm86gi5000350v400oxlp2o","_id":"cirm86gik000850v4c2vljdgb"},{"post_id":"cirm86ggb000150v432dpsmq2","tag_id":"cirm86gic000650v4neoqpr6w","_id":"cirm86gil000950v45zk2hsig"},{"post_id":"cirm86ggb000150v432dpsmq2","tag_id":"cirm86gif000750v47mg29ork","_id":"cirm86gim000a50v44943lqno"}],"Tag":[{"name":"repost","_id":"cipnbu3cq00048gv4fy83k5ar"},{"name":"3d graphics","_id":"cipnbu3d500078gv4a3pow2o2"},{"name":"note","_id":"cipnbu3dt000b8gv4wvw87veo"},{"name":"Desktop","_id":"cipnbu3e7000e8gv4sldy9x9i"},{"name":"vb.net","_id":"cipnbu3ej000j8gv4yww8jd0s"},{"name":"前端设计","_id":"cipnbu3er000n8gv4kx03xj2k"},{"name":"github","_id":"cipnbu3ew000p8gv4xipb3d41"},{"name":"转载搬运","_id":"cipnbu3f5000x8gv4tvoawt1v"},{"name":"libzplay","_id":"cipnbu3f7000y8gv4ywyjhxfm"},{"name":"多媒体","_id":"cipnbu3fd00138gv4i8ufh4wf"},{"name":"works","_id":"cipnbu3fe00148gv4u6b9kscf"},{"name":"CodeProject","_id":"cipnbu3ff00158gv4ys4vdovx"},{"name":"architecture","_id":"cipnbu3fn001d8gv42x9u8tnr"},{"name":"circos","_id":"cipnbu3fu001l8gv4xu73v37y"},{"name":"data visualization","_id":"cipnbu3g0001n8gv4v01011zh"},{"name":"GCModeller","_id":"cipnbu3g2001o8gv4xgcwik7b"},{"name":"perl","_id":"cipnbu3g7001p8gv4y3pk2pjq"},{"name":"Markdown","_id":"cipnbu3ga001q8gv43triidh1"},{"name":"Syntax","_id":"cipnbu3gd001t8gv48r24yc25"},{"name":"d3js","_id":"cipnbu3gi001z8gv432bp825b"},{"name":"my works","_id":"cipnbu3gn00248gv4z4bqmvra"},{"name":"前端","_id":"cipnbu3gp00258gv4ymaf8ssi"},{"name":"nodejs","_id":"cipnbu3gq00268gv4kdtueb39"},{"name":"svg","_id":"cipnbu3h6002f8gv4u7n6rpub"},{"name":"document","_id":"cipnbu3h7002g8gv4lh1u6ien"},{"name":"tricks","_id":"cipnbu3hc002l8gv4984xk4cq"},{"name":"Linq","_id":"cipnbu3hf002o8gv4r6ig5omf"},{"name":"SDK document","_id":"cipnbu3hj002t8gv4h8jlpx9w"},{"name":"YAML","_id":"cipnbu3hl002w8gv4hwxhxx1z"},{"name":"re","_id":"cipnitg3n000150v42abjbqnz"},{"name":"re0","_id":"cipnjene20001sgv4ucznvtbg"},{"name":"rem","_id":"cipnjenfi0002sgv4wml7noxk"},{"name":"XAML","_id":"cipo6c9gq0001usv44f8edd96"},{"name":"WPF","_id":"cipo6c9h70002usv4ftfz8hic"},{"name":"UI","_id":"cipo8yokm00006ov4o7gjerxy"},{"name":"music","_id":"cippgdo6w0001asv427a157da"},{"name":"language","_id":"cips22v9k0001owv4qqsdy7np"},{"name":"架构设计","_id":"cips22vaq0002owv4a617y3dk"},{"name":"win10","_id":"cipsiqnqr00016gv4w25xfq5s"},{"name":"desktop","_id":"cipsiqns000026gv4euokzips"},{"name":"web","_id":"cipted0gj0001hcv4ndin1b4l"},{"name":"user-agent","_id":"cipted0h80002hcv4td3jdht1"},{"name":"架构","_id":"cipv59q8j0001dsv456jsedgd"},{"name":"VisualStudio","_id":"cipw1vb3a0001a4v4dk8ph5p3"},{"name":"Compiler","_id":"cipw1vb3y0002a4v4vitqe7kg"},{"name":"bash","_id":"cir3jql6l0001jkv4870qce4v"},{"name":"ubuntu","_id":"cir3jql7d0002jkv4x3jwg7jt"},{"name":"elementary os","_id":"cir3jql7i0003jkv4cssatcvd"},{"name":"搬运转载","_id":"cir9hv5zk00017sv401lg8t80"},{"name":"check-point","_id":"cir9j70ln0001dwv4lp0p0jwb"},{"name":"R","_id":"cirat70q30001pcv4wixu4wjp"},{"name":"statics","_id":"cirat70rv0002pcv4e97outl3"},{"name":"转载","_id":"ciravzxky0000yov4azcz62ho"},{"name":"genetics","_id":"cire2rija0003y8v4fdxzhkvp"},{"name":"algorithm","_id":"cire2rikf0004y8v4a3tzemer"},{"name":"math","_id":"cirexg8k00000q0v4cogq8d4c"},{"name":"open-source","_id":"cirexg8m40001q0v4zkv5wps1"},{"name":"MSDN","_id":"cirexg8n30004q0v4hxm8k39j"},{"name":"interface","_id":"cirexg8nu0007q0v4kvn0yoj2"},{"name":"art work","_id":"cirexg8oi000aq0v4eh6twyhj"},{"name":"javascript","_id":"cirexg8pc000dq0v4fa5trq9p"},{"name":"force directed","_id":"cirexg8pm000gq0v4j0zxtmsv"},{"name":"chrome","_id":"cirexg8q0000mq0v4uu376inr"},{"name":"firefox","_id":"cirexg8q7000pq0v4wrhg65bb"},{"name":"IE","_id":"cirexg8q9000qq0v475dz9mb5"},{"name":"Music","_id":"cirfgfxhb0001mwv4r6avm5i3"},{"name":"Enigma","_id":"cirfgfxiu0002mwv4dzeqrktr"},{"name":"Chinese rural dog","_id":"cirgqpn1q0003i0v4n01cg9xx"},{"name":"中華田園犬","_id":"cirgqpn2w0005i0v489zmp11g"},{"name":"鹿乃","_id":"cirgqpn6n0008i0v4ar449tmm"},{"name":"SVG","_id":"cirkaum2p0002psv4bcfdlgls"},{"name":"gdi+","_id":"cirkaum570003psv4jfpdgogf"},{"name":"3D","_id":"cirkaum5i0004psv46q0spjlo"},{"name":"PDB","_id":"cirkaum5n0005psv4epxd46ne"},{"name":"3d","_id":"cirkaum620008psv4htz6db3c"},{"name":"async","_id":"cirm86ggp000250v405bazfd4"},{"name":"mysql","_id":"cirm86gi5000350v400oxlp2o"},{"name":"BI","_id":"cirm86gic000650v4neoqpr6w"},{"name":"data analysis","_id":"cirm86gif000750v47mg29ork"}]}}